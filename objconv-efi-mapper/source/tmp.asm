; Disassembly of file: 
; Tue Aug  2 02:30:27 2016
; Mode: 64 bits
; Syntax: MASM/ML64
; Instruction set: Pentium Pro, x64, privileged instructions
option dotname


_text   SEGMENT BYTE 'CODE'                             ; section number 1

Unnamed_1_0 LABEL NEAR
        mov     qword ptr [?_577], rdx                  ; 0240 _ 48: 89. 15, 0000AA59(rel)
        mov     rax, qword ptr [rdx+60H]                ; 0247 _ 48: 8B. 42, 60
        mov     qword ptr [?_578], rax                  ; 024B _ 48: 89. 05, 0000AA56(rel)
        mov     rax, qword ptr [rdx+58H]                ; 0252 _ 48: 8B. 42, 58
        mov     qword ptr [?_579], rax                  ; 0256 _ 48: 89. 05, 0000AA53(rel)
        xor     eax, eax                                ; 025D _ 31. C0
        ret                                             ; 025F _ C3

Unnamed_1_20 LABEL NEAR
        push    rbp                                     ; 0260 _ 55
        mov     rbp, rsp                                ; 0261 _ 48: 89. E5
        sub     rsp, 32                                 ; 0264 _ 48: 83. EC, 20
        call    Unnamed_1_0                             ; 0268 _ E8, FFFFFFD3
        test    rax, rax                                ; 026D _ 48: 85. C0
        jns     ?_001                                   ; 0270 _ 79, 06
        add     rsp, 32                                 ; 0272 _ 48: 83. C4, 20
        pop     rbp                                     ; 0276 _ 5D
        ret                                             ; 0277 _ C3

?_001   LABEL NEAR
        lea     rcx, ptr [?_505]                        ; 0278 _ 48: 8D. 0D, 0000A12D(rel)
        lea     rdx, ptr [?_580]                        ; 027F _ 48: 8D. 15, 0000AA32(rel)
        add     rsp, 32                                 ; 0286 _ 48: 83. C4, 20
        pop     rbp                                     ; 028A _ 5D
; Note: Immediate operand could be made smaller by sign extension
        jmp     Unnamed_1_50                            ; 028B _ E9, 00000000

Unnamed_1_50 LABEL NEAR
        push    rbp                                     ; 0290 _ 55
        mov     rbp, rsp                                ; 0291 _ 48: 89. E5
        push    r15                                     ; 0294 _ 41: 57
        push    r14                                     ; 0296 _ 41: 56
        push    rsi                                     ; 0298 _ 56
        push    rdi                                     ; 0299 _ 57
        push    rbx                                     ; 029A _ 53
        sub     rsp, 40                                 ; 029B _ 48: 83. EC, 28
        mov     r14, rdx                                ; 029F _ 49: 89. D6
        mov     r15, rcx                                ; 02A2 _ 49: 89. CF
        mov     qword ptr [r14], 0                      ; 02A5 _ 49: C7. 06, 00000000
        xor     edi, edi                                ; 02AC _ 31. FF
        mov     rbx, -1                                 ; 02AE _ 48: C7. C3, FFFFFFFF
?_002:  mov     rsi, rdi                                ; 02B5 _ 48: 89. FE
        inc     rbx                                     ; 02B8 _ 48: FF. C3
        mov     rax, 800000000000000EH                  ; 02BB _ 48: B8, 800000000000000E
        mov     rcx, qword ptr [?_577]                  ; 02C5 _ 48: 8B. 0D, 0000A9D4(rel)
        cmp     rbx, qword ptr [rcx+68H]                ; 02CC _ 48: 3B. 59, 68
        jnc     ?_003                                   ; 02D0 _ 73, 2C
        lea     rdi, ptr [rsi+18H]                      ; 02D2 _ 48: 8D. 7E, 18
        mov     rdx, qword ptr [rcx+70H]                ; 02D6 _ 48: 8B. 51, 70
        add     rdx, rsi                                ; 02DA _ 48: 01. F2
        mov     rcx, r15                                ; 02DD _ 4C: 89. F9
        call    Unnamed_1_1FD                           ; 02E0 _ E8, 00000158
        test    al, al                                  ; 02E5 _ 84. C0
        jz      ?_002                                   ; 02E7 _ 74, CC
        mov     rax, qword ptr [?_577]                  ; 02E9 _ 48: 8B. 05, 0000A9B0(rel)
        mov     rax, qword ptr [rax+70H]                ; 02F0 _ 48: 8B. 40, 70
        mov     rax, qword ptr [rax+rsi+10H]            ; 02F4 _ 48: 8B. 44 30, 10
        mov     qword ptr [r14], rax                    ; 02F9 _ 49: 89. 06
        xor     eax, eax                                ; 02FC _ 31. C0
?_003:  add     rsp, 40                                 ; 02FE _ 48: 83. C4, 28
        pop     rbx                                     ; 0302 _ 5B
        pop     rdi                                     ; 0303 _ 5F
        pop     rsi                                     ; 0304 _ 5E
        pop     r14                                     ; 0305 _ 41: 5E
        pop     r15                                     ; 0307 _ 41: 5F
        pop     rbp                                     ; 0309 _ 5D
        ret                                             ; 030A _ C3

Unnamed_1_CB LABEL NEAR
        push    rbp                                     ; 030B _ 55
        mov     rbp, rsp                                ; 030C _ 48: 89. E5
        sub     rsp, 48                                 ; 030F _ 48: 83. EC, 30
        mov     rax, rcx                                ; 0313 _ 48: 89. C8
        mov     qword ptr [rbp-8H], 0                   ; 0316 _ 48: C7. 45, F8, 00000000
        mov     r9, qword ptr [?_578]                   ; 031E _ 4C: 8B. 0D, 0000A983(rel)
        lea     r8, ptr [rbp-8H]                        ; 0325 _ 4C: 8D. 45, F8
        mov     ecx, 4                                  ; 0329 _ B9, 00000004
        mov     rdx, rax                                ; 032E _ 48: 89. C2
        call    qword ptr [r9+40H]                      ; 0331 _ 41: FF. 51, 40
        mov     rax, qword ptr [rbp-8H]                 ; 0335 _ 48: 8B. 45, F8
        add     rsp, 48                                 ; 0339 _ 48: 83. C4, 30
        pop     rbp                                     ; 033D _ 5D
        ret                                             ; 033E _ C3

Unnamed_1_FF LABEL NEAR
        push    rbp                                     ; 033F _ 55
        mov     rbp, rsp                                ; 0340 _ 48: 89. E5
        push    rsi                                     ; 0343 _ 56
        push    rdi                                     ; 0344 _ 57
        sub     rsp, 48                                 ; 0345 _ 48: 83. EC, 30
        mov     rsi, rcx                                ; 0349 _ 48: 89. CE
        mov     qword ptr [rbp-18H], 0                  ; 034C _ 48: C7. 45, E8, 00000000
        mov     rax, qword ptr [?_578]                  ; 0354 _ 48: 8B. 05, 0000A94D(rel)
        lea     r8, ptr [rbp-18H]                       ; 035B _ 4C: 8D. 45, E8
        mov     ecx, 4                                  ; 035F _ B9, 00000004
        mov     rdx, rsi                                ; 0364 _ 48: 89. F2
        call    qword ptr [rax+40H]                     ; 0367 _ FF. 50, 40
        mov     rdi, qword ptr [rbp-18H]                ; 036A _ 48: 8B. 7D, E8
        test    rdi, rdi                                ; 036E _ 48: 85. FF
        jz      ?_004                                   ; 0371 _ 74, 16
        mov     rax, qword ptr [?_578]                  ; 0373 _ 48: 8B. 05, 0000A92E(rel)
        mov     rcx, rdi                                ; 037A _ 48: 89. F9
        mov     rdx, rsi                                ; 037D _ 48: 89. F2
        xor     r8d, r8d                                ; 0380 _ 45: 31. C0
        call    qword ptr [rax+168H]                    ; 0383 _ FF. 90, 00000168
?_004:  mov     rax, rdi                                ; 0389 _ 48: 89. F8
        add     rsp, 48                                 ; 038C _ 48: 83. C4, 30
        pop     rdi                                     ; 0390 _ 5F
        pop     rsi                                     ; 0391 _ 5E
        pop     rbp                                     ; 0392 _ 5D
        ret                                             ; 0393 _ C3

Unnamed_1_154 LABEL NEAR
        push    rbp                                     ; 0394 _ 55
        mov     rbp, rsp                                ; 0395 _ 48: 89. E5
        push    rsi                                     ; 0398 _ 56
        push    rdi                                     ; 0399 _ 57
        sub     rsp, 48                                 ; 039A _ 48: 83. EC, 30
        mov     rsi, rdx                                ; 039E _ 48: 89. D6
        mov     rdi, rcx                                ; 03A1 _ 48: 89. CF
        mov     qword ptr [rbp-18H], 0                  ; 03A4 _ 48: C7. 45, E8, 00000000
        mov     rax, qword ptr [?_578]                  ; 03AC _ 48: 8B. 05, 0000A8F5(rel)
        lea     r8, ptr [rbp-18H]                       ; 03B3 _ 4C: 8D. 45, E8
        mov     ecx, 4                                  ; 03B7 _ B9, 00000004
        mov     rdx, rdi                                ; 03BC _ 48: 89. FA
        call    qword ptr [rax+40H]                     ; 03BF _ FF. 50, 40
        mov     rcx, qword ptr [rbp-18H]                ; 03C2 _ 48: 8B. 4D, E8
        test    rcx, rcx                                ; 03C6 _ 48: 85. C9
        jnz     ?_005                                   ; 03C9 _ 75, 04
        xor     eax, eax                                ; 03CB _ 31. C0
        jmp     ?_006                                   ; 03CD _ EB, 17

?_005:  mov     rax, qword ptr [?_578]                  ; 03CF _ 48: 8B. 05, 0000A8D2(rel)
        mov     rdx, rsi                                ; 03D6 _ 48: 89. F2
        mov     r8, rdi                                 ; 03D9 _ 49: 89. F8
        call    qword ptr [rax+160H]                    ; 03DC _ FF. 90, 00000160
        mov     rax, qword ptr [rbp-18H]                ; 03E2 _ 48: 8B. 45, E8
?_006:  add     rsp, 48                                 ; 03E6 _ 48: 83. C4, 30
        pop     rdi                                     ; 03EA _ 5F
        pop     rsi                                     ; 03EB _ 5E
        pop     rbp                                     ; 03EC _ 5D
        ret                                             ; 03ED _ C3

Unnamed_1_1AE LABEL NEAR
        wbinvd                                          ; 03EE _ 0F 09
        ret                                             ; 03F0 _ C3

Unnamed_1_1B1 LABEL NEAR
        push    rbp                                     ; 03F1 _ 55
        mov     rbp, rsp                                ; 03F2 _ 48: 89. E5
        push    rsi                                     ; 03F5 _ 56
        push    rdi                                     ; 03F6 _ 57
        sub     rsp, 32                                 ; 03F7 _ 48: 83. EC, 20
        mov     rsi, rdx                                ; 03FB _ 48: 89. D6
        mov     rdi, rcx                                ; 03FE _ 48: 89. CF
        jmp     ?_007                                   ; 0401 _ EB, 07

Unnamed_1_1C3:
        movzx   eax, word ptr [rsi+2H]                  ; 0403 _ 0F B7. 46, 02
        add     rsi, rax                                ; 0407 _ 48: 01. C6
?_007:  mov     cx, word ptr [rsi]                      ; 040A _ 66: 8B. 0E
        xor     eax, eax                                ; 040D _ 31. C0
        cmp     cx, -1                                  ; 040F _ 66: 83. F9, FF
        jz      Unnamed_1_1F5                           ; 0413 _ 74, 20
        cmp     cx, 4                                   ; 0415 _ 66: 83. F9, 04
        jnz     Unnamed_1_1C3                           ; 0419 _ 75, E8
        xor     eax, eax                                ; 041B _ 31. C0
        test    rsi, rsi                                ; 041D _ 48: 85. F6
        jz      Unnamed_1_1F5                           ; 0420 _ 74, 13
        lea     rdx, ptr [rsi+8H]                       ; 0422 _ 48: 8D. 56, 08
        mov     rcx, rdi                                ; 0426 _ 48: 89. F9
        call    Unnamed_1_1FD                           ; 0429 _ E8, 0000000F
        test    al, al                                  ; 042E _ 84. C0
        jz      Unnamed_1_1C3                           ; 0430 _ 74, D1
        mov     rax, rsi                                ; 0432 _ 48: 89. F0
Unnamed_1_1F5:
        add     rsp, 32                                 ; 0435 _ 48: 83. C4, 20
        pop     rdi                                     ; 0439 _ 5F
        pop     rsi                                     ; 043A _ 5E
        pop     rbp                                     ; 043B _ 5D
        ret                                             ; 043C _ C3

Unnamed_1_1FD LABEL NEAR
        mov     r8, rdx                                 ; 043D _ 49: 89. D0
        xor     edx, edx                                ; 0440 _ 31. D2
        xor     r9d, r9d                                ; 0442 _ 45: 31. C9
?_008:  mov     eax, dword ptr [rcx+rdx*4]              ; 0445 _ 8B. 04 91
        sub     eax, dword ptr [r8+rdx*4]               ; 0448 _ 41: 2B. 04 90
        or      r9d, eax                                ; 044C _ 41: 09. C1
        inc     rdx                                     ; 044F _ 48: FF. C2
        cmp     rdx, 4                                  ; 0452 _ 48: 83. FA, 04
        jnz     ?_008                                   ; 0456 _ 75, ED
        test    r9d, r9d                                ; 0458 _ 45: 85. C9
        sete    al                                      ; 045B _ 0F 94. C0
        movzx   eax, al                                 ; 045E _ 0F B6. C0
        ret                                             ; 0461 _ C3

Unnamed_1_222 LABEL NEAR
        mov     r9, rdx                                 ; 0462 _ 49: 89. D1
        mov     r10, rcx                                ; 0465 _ 49: 89. CA
        test    r10b, 07H                               ; 0468 _ 41: F6. C2, 07
        jz      ?_009                                   ; 046C _ 74, 05
Unnamed_1_22E:
        mov     rdx, r8                                 ; 046E _ 4C: 89. C2
        jmp     ?_011                                   ; 0471 _ EB, 29

?_009:  test    r9b, 07H                                ; 0473 _ 41: F6. C1, 07
        jnz     Unnamed_1_22E                           ; 0477 _ 75, F5
        test    r8b, 07H                                ; 0479 _ 41: F6. C0, 07
        jnz     Unnamed_1_22E                           ; 047D _ 75, EF
        test    r8, r8                                  ; 047F _ 4D: 85. C0
        jz      Unnamed_1_22E                           ; 0482 _ 74, EA
        xor     edx, edx                                ; 0484 _ 31. D2
?_010:  mov     rax, qword ptr [r10]                    ; 0486 _ 49: 8B. 02
        cmp     rax, qword ptr [r9]                     ; 0489 _ 49: 3B. 01
        jnz     Unnamed_1_22E                           ; 048C _ 75, E0
        add     r9, 8                                   ; 048E _ 49: 83. C1, 08
        add     r10, 8                                  ; 0492 _ 49: 83. C2, 08
        add     r8, -8                                  ; 0496 _ 49: 83. C0, F8
        jnz     ?_010                                   ; 049A _ 75, EA
?_011:  inc     rdx                                     ; 049C _ 48: FF. C2
        jmp     ?_012                                   ; 049F _ EB, 06

Unnamed_1_261:
        inc     r9                                      ; 04A1 _ 49: FF. C1
        inc     r10                                     ; 04A4 _ 49: FF. C2
?_012:  xor     eax, eax                                ; 04A7 _ 31. C0
        dec     rdx                                     ; 04A9 _ 48: FF. CA
        jz      ?_013                                   ; 04AC _ 74, 0F
        movsx   rcx, byte ptr [r9]                      ; 04AE _ 49: 0F BE. 09
        movsx   rax, byte ptr [r10]                     ; 04B2 _ 49: 0F BE. 02
        cmp     al, cl                                  ; 04B6 _ 38. C8
        jz      Unnamed_1_261                           ; 04B8 _ 74, E7
        sub     rax, rcx                                ; 04BA _ 48: 29. C8
?_013:  ret                                             ; 04BD _ C3

Unnamed_1_27E LABEL NEAR
        mov     rax, rcx                                ; 04BE _ 48: 89. C8
        mov     cl, byte ptr [rdx]                      ; 04C1 _ 8A. 0A
        test    cl, cl                                  ; 04C3 _ 84. C9
        jz      ?_015                                   ; 04C5 _ 74, 11
        inc     rdx                                     ; 04C7 _ 48: FF. C2
?_014:  mov     byte ptr [rax], cl                      ; 04CA _ 88. 08
        inc     rax                                     ; 04CC _ 48: FF. C0
        mov     cl, byte ptr [rdx]                      ; 04CF _ 8A. 0A
        inc     rdx                                     ; 04D1 _ 48: FF. C2
        test    cl, cl                                  ; 04D4 _ 84. C9
        jnz     ?_014                                   ; 04D6 _ 75, F2
?_015:  mov     byte ptr [rax], 0                       ; 04D8 _ C6. 00, 00
        inc     rax                                     ; 04DB _ 48: FF. C0
        ret                                             ; 04DE _ C3

Unnamed_1_29F LABEL NEAR
        mov     r8, rcx                                 ; 04DF _ 49: 89. C8
        mov     ax, word ptr [r8]                       ; 04E2 _ 66 41: 8B. 00
        test    ax, ax                                  ; 04E6 _ 66: 85. C0
        je      Unnamed_1_38D                           ; 04E9 _ 0F 84, 000000DE
        cmp     ax, dx                                  ; 04EF _ 66: 39. D0
        mov     r10, r8                                 ; 04F2 _ 4D: 89. C2
        jnz     ?_018                                   ; 04F5 _ 75, 27
        xor     ecx, ecx                                ; 04F7 _ 31. C9
?_016:  mov     r9w, word ptr [r8+rcx+2H]               ; 04F9 _ 66 45: 8B. 4C 08, 02
        add     rcx, 2                                  ; 04FF _ 48: 83. C1, 02
        test    r9w, r9w                                ; 0503 _ 66 45: 85. C9
        jz      ?_017                                   ; 0507 _ 74, 06
        cmp     r9w, dx                                 ; 0509 _ 66 41: 39. D1
        jz      ?_016                                   ; 050D _ 74, EA
?_017:  lea     r10, ptr [r8+rcx]                       ; 050F _ 4D: 8D. 14 08
        test    rcx, rcx                                ; 0513 _ 48: 85. C9
        jnz     ?_020                                   ; 0516 _ 75, 17
        test    r9w, r9w                                ; 0518 _ 66 45: 85. C9
        jz      Unnamed_1_320                           ; 051C _ 74, 42
?_018:  add     r10, 2                                  ; 051E _ 49: 83. C2, 02
?_019:  cmp     word ptr [r10], 0                       ; 0522 _ 66 41: 83. 3A, 00
        lea     r10, ptr [r10+2H]                       ; 0527 _ 4D: 8D. 52, 02
        jnz     ?_019                                   ; 052B _ 75, F5
        jmp     Unnamed_1_320                           ; 052D _ EB, 31

?_020:  test    r9w, r9w                                ; 052F _ 66 45: 85. C9
        mov     rax, r8                                 ; 0533 _ 4C: 89. C0
        jz      ?_022                                   ; 0536 _ 74, 1F
        mov     ecx, 2                                  ; 0538 _ B9, 00000002
        mov     rax, r8                                 ; 053D _ 4C: 89. C0
?_021:  mov     word ptr [rax], r9w                     ; 0540 _ 66 44: 89. 08
        mov     r9w, word ptr [r10+rcx]                 ; 0544 _ 66 45: 8B. 0C 0A
        add     rax, 2                                  ; 0549 _ 48: 83. C0, 02
        add     rcx, 2                                  ; 054D _ 48: 83. C1, 02
        test    r9w, r9w                                ; 0551 _ 66 45: 85. C9
        jnz     ?_021                                   ; 0555 _ 75, E9
?_022:
; Note: Length-changing prefix causes delay on Intel processors
        mov     word ptr [rax], 0                       ; 0557 _ 66: C7. 00, 0000
        movzx   eax, word ptr [r8]                      ; 055C _ 41: 0F B7. 00
Unnamed_1_320:
        mov     r9, -1                                  ; 0560 _ 49: C7. C1, FFFFFFFF
        test    ax, ax                                  ; 0567 _ 66: 85. C0
        jz      ?_024                                   ; 056A _ 74, 17
        mov     rcx, -1                                 ; 056C _ 48: C7. C1, FFFFFFFF
?_023:  lea     r9, ptr [rcx+1H]                        ; 0573 _ 4C: 8D. 49, 01
        cmp     word ptr [r8+rcx*2+4H], 0               ; 0577 _ 66 41: 83. 7C 48, 04, 00
        mov     rcx, r9                                 ; 057E _ 4C: 89. C9
        jnz     ?_023                                   ; 0581 _ 75, F0
?_024:  add     r9, r9                                  ; 0583 _ 4D: 01. C9
        jmp     ?_025                                   ; 0586 _ EB, 04

Unnamed_1_348:
        add     r9, -2                                  ; 0588 _ 49: 83. C1, FE
?_025:  lea     rcx, ptr [r8+r9]                        ; 058C _ 4B: 8D. 0C 08
        cmp     rcx, r8                                 ; 0590 _ 4C: 39. C1
        jc      ?_026                                   ; 0593 _ 72, 05
        cmp     word ptr [rcx], dx                      ; 0595 _ 66: 39. 11
        jz      Unnamed_1_348                           ; 0598 _ 74, EE
?_026:  mov     rdx, -1                                 ; 059A _ 48: C7. C2, FFFFFFFF
        test    ax, ax                                  ; 05A1 _ 66: 85. C0
        jz      ?_028                                   ; 05A4 _ 74, 17
        mov     rax, -1                                 ; 05A6 _ 48: C7. C0, FFFFFFFF
?_027:  lea     rdx, ptr [rax+1H]                       ; 05AD _ 48: 8D. 50, 01
        cmp     word ptr [r8+rax*2+4H], 0               ; 05B1 _ 66 41: 83. 7C 40, 04, 00
        mov     rax, rdx                                ; 05B8 _ 48: 89. D0
        jnz     ?_027                                   ; 05BB _ 75, F0
?_028:  add     rdx, rdx                                ; 05BD _ 48: 01. D2
        cmp     rdx, r9                                 ; 05C0 _ 4C: 39. CA
        jz      Unnamed_1_38D                           ; 05C3 _ 74, 08
; Note: Length-changing prefix causes delay on Intel processors
        mov     word ptr [r8+r9+2H], 0                  ; 05C5 _ 66 43: C7. 44 08, 02, 0000
Unnamed_1_38D:
        ret                                             ; 05CD _ C3

Unnamed_1_38E LABEL NEAR
        imul    rcx, rdx                                ; 05CE _ 48: 0F AF. CA
        mov     rax, rcx                                ; 05D2 _ 48: 89. C8
        ret                                             ; 05D5 _ C3

Unnamed_1_396 LABEL NEAR
        mov     r9, r8                                  ; 05D6 _ 4D: 89. C1
        mov     r8, rdx                                 ; 05D9 _ 49: 89. D0
        test    r9, r9                                  ; 05DC _ 4D: 85. C9
        jz      ?_029                                   ; 05DF _ 74, 0B
        mov     rax, rcx                                ; 05E1 _ 48: 89. C8
        xor     edx, edx                                ; 05E4 _ 31. D2
        div     r8                                      ; 05E6 _ 49: F7. F0
        mov     qword ptr [r9], rdx                     ; 05E9 _ 49: 89. 11
?_029:  mov     rax, rcx                                ; 05EC _ 48: 89. C8
        xor     edx, edx                                ; 05EF _ 31. D2
        div     r8                                      ; 05F1 _ 49: F7. F0
        ret                                             ; 05F4 _ C3

Unnamed_1_3B5 LABEL NEAR
        push    rbp                                     ; 05F5 _ 55
        mov     rbp, rsp                                ; 05F6 _ 48: 89. E5
        push    r15                                     ; 05F9 _ 41: 57
        push    r14                                     ; 05FB _ 41: 56
        push    r13                                     ; 05FD _ 41: 55
        push    r12                                     ; 05FF _ 41: 54
        push    rsi                                     ; 0601 _ 56
        push    rdi                                     ; 0602 _ 57
        push    rbx                                     ; 0603 _ 53
        sub     rsp, 72                                 ; 0604 _ 48: 83. EC, 48
        mov     r12, r9                                 ; 0608 _ 4D: 89. CC
        mov     r13, r8                                 ; 060B _ 4D: 89. C5
        mov     qword ptr [rbp-50H], rdx                ; 060E _ 48: 89. 55, B0
        mov     esi, ecx                                ; 0612 _ 89. CE
        mov     qword ptr [rbp-48H], 65535              ; 0614 _ 48: C7. 45, B8, 0000FFFF
        mov     rax, qword ptr [?_578]                  ; 061C _ 48: 8B. 05, 0000A685(rel)
        lea     rcx, ptr [?_514]                        ; 0623 _ 48: 8D. 0D, 00009E12(rel)
        lea     r8, ptr [rbp-40H]                       ; 062A _ 4C: 8D. 45, C0
        xor     edx, edx                                ; 062E _ 31. D2
        call    qword ptr [rax+140H]                    ; 0630 _ FF. 90, 00000140
        test    rax, rax                                ; 0636 _ 48: 85. C0
        js      Unnamed_1_5E4                           ; 0639 _ 0F 88, 000001E5
        mov     rcx, qword ptr [rbp-48H]                ; 063F _ 48: 8B. 4D, B8
        call    Unnamed_1_FF                            ; 0643 _ E8, FFFFFCF7
        mov     r15, rax                                ; 0648 _ 49: 89. C7
        mov     rax, 8000000000000009H                  ; 064B _ 48: B8, 8000000000000009
        test    r15, r15                                ; 0655 _ 4D: 85. FF
        je      Unnamed_1_5E4                           ; 0658 _ 0F 84, 000001C6
        mov     rax, qword ptr [rbp-40H]                ; 065E _ 48: 8B. 45, C0
        mov     qword ptr [rsp+20H], r15                ; 0662 _ 4C: 89. 7C 24, 20
        movzx   esi, si                                 ; 0667 _ 0F B7. F6
        lea     r9, ptr [rbp-48H]                       ; 066A _ 4C: 8D. 4D, B8
        mov     rcx, rax                                ; 066E _ 48: 89. C1
        mov     edx, esi                                ; 0671 _ 89. F2
        xor     r8d, r8d                                ; 0673 _ 45: 31. C0
        call    qword ptr [rax+68H]                     ; 0676 _ FF. 50, 68
        test    rax, rax                                ; 0679 _ 48: 85. C0
        jns     ?_030                                   ; 067C _ 79, 44
        mov     rax, qword ptr [?_578]                  ; 067E _ 48: 8B. 05, 0000A623(rel)
        mov     rcx, r15                                ; 0685 _ 4C: 89. F9
        call    qword ptr [rax+48H]                     ; 0688 _ FF. 50, 48
        mov     rcx, qword ptr [rbp-48H]                ; 068B _ 48: 8B. 4D, B8
        call    Unnamed_1_FF                            ; 068F _ E8, FFFFFCAB
        mov     r15, rax                                ; 0694 _ 49: 89. C7
        mov     rax, 8000000000000009H                  ; 0697 _ 48: B8, 8000000000000009
        test    r15, r15                                ; 06A1 _ 4D: 85. FF
        je      Unnamed_1_5E4                           ; 06A4 _ 0F 84, 0000017A
        mov     rax, qword ptr [rbp-40H]                ; 06AA _ 48: 8B. 45, C0
        mov     qword ptr [rsp+20H], r15                ; 06AE _ 4C: 89. 7C 24, 20
        lea     r9, ptr [rbp-48H]                       ; 06B3 _ 4C: 8D. 4D, B8
        mov     rcx, rax                                ; 06B7 _ 48: 89. C1
        mov     edx, esi                                ; 06BA _ 89. F2
        xor     r8d, r8d                                ; 06BC _ 45: 31. C0
        call    qword ptr [rax+68H]                     ; 06BF _ FF. 50, 68
?_030:  mov     al, byte ptr [r15+6H]                   ; 06C2 _ 41: 8A. 47, 06
        lea     rbx, ptr [r15+6H]                       ; 06C6 _ 49: 8D. 5F, 06
        xor     esi, esi                                ; 06CA _ 31. F6
        cmp     al, 13                                  ; 06CC _ 3C, 0D
        jnz     ?_033                                   ; 06CE _ 75, 47
        mov     rax, qword ptr [?_578]                  ; 06D0 _ 48: 8B. 05, 0000A5D1(rel)
?_031:  mov     rcx, r13                                ; 06D7 _ 4C: 89. E9
        mov     rdx, rsi                                ; 06DA _ 48: 89. F2
        xor     r8d, r8d                                ; 06DD _ 45: 31. C0
        call    qword ptr [rax+168H]                    ; 06E0 _ FF. 90, 00000168
        mov     al, byte ptr [rbx]                      ; 06E6 _ 8A. 03
        cmp     al, 13                                  ; 06E8 _ 3C, 0D
        je      ?_041                                   ; 06EA _ 0F 84, 0000011E
        xor     edi, edi                                ; 06F0 _ 31. FF
        lea     r12, ptr [?_042]                        ; 06F2 _ 4C: 8D. 25, 0000013F(rel)
        mov     rcx, rdi                                ; 06F9 _ 48: 89. F9
?_032:  mov     r14, rcx                                ; 06FC _ 49: 89. CE
        movzx   eax, al                                 ; 06FF _ 0F B6. C0
        add     eax, -5                                 ; 0702 _ 83. C0, FB
        cmp     eax, 4                                  ; 0705 _ 83. F8, 04
        ja      Unnamed_1_5BA                           ; 0708 _ 0F 87, 000000EC
        movsxd  rax, dword ptr [r12+rax*4]              ; 070E _ 49: 63. 04 84
        add     rax, r12                                ; 0712 _ 4C: 01. E0
        jmp     rax                                     ; 0715 _ FF. E0

?_033:  mov     r14d, 469762528                         ; 0717 _ 41: BE, 1C0001E0
        mov     rcx, rsi                                ; 071D _ 48: 89. F1
?_034:  mov     rdi, rcx                                ; 0720 _ 48: 89. CF
        cmp     al, 28                                  ; 0723 _ 3C, 1C
        ja      Unnamed_1_52C                           ; 0725 _ 77, 45
        movzx   eax, al                                 ; 0727 _ 0F B6. C0
        bt      r14d, eax                               ; 072A _ 41: 0F A3. C6
        jc      ?_035                                   ; 072E _ 72, 22
        cmp     eax, 14                                 ; 0730 _ 83. F8, 0E
        jnz     Unnamed_1_52C                           ; 0733 _ 75, 37
        lea     rdx, ptr [rdi+rbx+2H]                   ; 0735 _ 48: 8D. 54 1F, 02
        mov     rax, qword ptr [?_578]                  ; 073A _ 48: 8B. 05, 0000A567(rel)
        mov     rcx, r12                                ; 0741 _ 4C: 89. E1
        mov     r8d, 16                                 ; 0744 _ 41: B8, 00000010
        call    qword ptr [rax+160H]                    ; 074A _ FF. 90, 00000160
        jmp     Unnamed_1_52C                           ; 0750 _ EB, 1A

?_035:  movzx   ecx, byte ptr [rdi+rbx+4H]              ; 0752 _ 0F B6. 4C 1F, 04
        test    rcx, rcx                                ; 0757 _ 48: 85. C9
        jz      Unnamed_1_52C                           ; 075A _ 74, 10
        movzx   eax, word ptr [rdi+rbx+2H]              ; 075C _ 0F B7. 44 1F, 02
        add     rax, rcx                                ; 0761 _ 48: 01. C8
        cmp     rsi, rax                                ; 0764 _ 48: 39. C6
        jnc     Unnamed_1_52C                           ; 0767 _ 73, 03
        mov     rsi, rax                                ; 0769 _ 48: 89. C6
Unnamed_1_52C:
        movzx   ecx, byte ptr [rdi+rbx+1H]              ; 076C _ 0F B6. 4C 1F, 01
        add     rcx, rdi                                ; 0771 _ 48: 01. F9
        mov     al, byte ptr [rbx+rcx]                  ; 0774 _ 8A. 04 0B
        cmp     al, 13                                  ; 0777 _ 3C, 0D
        jnz     ?_034                                   ; 0779 _ 75, A5
        mov     rax, qword ptr [rbp-50H]                ; 077B _ 48: 8B. 45, B0
        movzx   ecx, word ptr [rax]                     ; 077F _ 0F B7. 08
        mov     rax, qword ptr [?_578]                  ; 0782 _ 48: 8B. 05, 0000A51F(rel)
        cmp     rsi, rcx                                ; 0789 _ 48: 39. CE
        jbe     ?_031                                   ; 078C _ 0F 86, FFFFFF45
        mov     rcx, r15                                ; 0792 _ 4C: 89. F9
        call    qword ptr [rax+48H]                     ; 0795 _ FF. 50, 48
        mov     rax, qword ptr [rbp-50H]                ; 0798 _ 48: 8B. 45, B0
        mov     word ptr [rax], si                      ; 079C _ 66: 89. 30
        mov     rax, 8000000000000005H                  ; 079F _ 48: B8, 8000000000000005
        jmp     Unnamed_1_5E4                           ; 07A9 _ EB, 79

?_036   LABEL NEAR
        movzx   edi, word ptr [r14+rbx+2H]              ; 07AB _ 41: 0F B7. 7C 1E, 02
        jmp     Unnamed_1_5BA                           ; 07B1 _ EB, 47

?_037   LABEL NEAR
        test    byte ptr [r14+rbx+6H], 01H              ; 07B3 _ 41: F6. 44 1E, 06, 01
        jz      Unnamed_1_5BA                           ; 07B9 _ 74, 3F
        lea     rcx, ptr [r13+rdi]                      ; 07BB _ 49: 8D. 4C 3D, 00
        lea     rdx, ptr [r14+rbx+4H]                   ; 07C0 _ 49: 8D. 54 1E, 04
        jmp     ?_040                                   ; 07C5 _ EB, 20

?_038   LABEL NEAR
        movzx   eax, word ptr [r14+rbx+2H]              ; 07C7 _ 41: 0F B7. 44 1E, 02
        mov     cl, byte ptr [r14+rbx+9H]               ; 07CD _ 41: 8A. 4C 1E, 09
        mov     byte ptr [r13+rax], cl                  ; 07D2 _ 41: 88. 4C 05, 00
        jmp     Unnamed_1_5BA                           ; 07D7 _ EB, 21

?_039   LABEL NEAR
        lea     rdx, ptr [r14+rbx+12H]                  ; 07D9 _ 49: 8D. 54 1E, 12
        movzx   ecx, word ptr [r14+rbx+2H]              ; 07DE _ 41: 0F B7. 4C 1E, 02
        add     rcx, r13                                ; 07E4 _ 4C: 01. E9
?_040:  mov     rax, qword ptr [?_578]                  ; 07E7 _ 48: 8B. 05, 0000A4BA(rel)
        mov     r8d, 2                                  ; 07EE _ 41: B8, 00000002
        call    qword ptr [rax+160H]                    ; 07F4 _ FF. 90, 00000160

Unnamed_1_5BA LABEL NEAR
        movzx   ecx, byte ptr [r14+rbx+1H]              ; 07FA _ 41: 0F B6. 4C 1E, 01
        add     rcx, r14                                ; 0800 _ 4C: 01. F1
        mov     al, byte ptr [rbx+rcx]                  ; 0803 _ 8A. 04 0B
        cmp     al, 13                                  ; 0806 _ 3C, 0D
        jne     ?_032                                   ; 0808 _ 0F 85, FFFFFEEE
?_041:  mov     rax, qword ptr [rbp-50H]                ; 080E _ 48: 8B. 45, B0
        mov     word ptr [rax], si                      ; 0812 _ 66: 89. 30
        mov     rax, qword ptr [?_578]                  ; 0815 _ 48: 8B. 05, 0000A48C(rel)
        mov     rcx, r15                                ; 081C _ 4C: 89. F9
        call    qword ptr [rax+48H]                     ; 081F _ FF. 50, 48
        xor     eax, eax                                ; 0822 _ 31. C0
Unnamed_1_5E4:
        add     rsp, 72                                 ; 0824 _ 48: 83. C4, 48
        pop     rbx                                     ; 0828 _ 5B
        pop     rdi                                     ; 0829 _ 5F
        pop     rsi                                     ; 082A _ 5E
        pop     r12                                     ; 082B _ 41: 5C
        pop     r13                                     ; 082D _ 41: 5D
        pop     r14                                     ; 082F _ 41: 5E
        pop     r15                                     ; 0831 _ 41: 5F
        pop     rbp                                     ; 0833 _ 5D
        ret                                             ; 0834 _ C3

; Filling space: 3H
; Filler type: Multi-byte NOP
;       db 0FH, 1FH, 00H

ALIGN   8

?_042   label dword                                     ; switch/case jump table
        dd ?_036-?_042                                  ; 0838 _ FFFFFF73 (refpoint)
        dd ?_038-?_042                                  ; 083C _ FFFFFF8F (refpoint)
        dd ?_039-?_042                                  ; 0840 _ FFFFFFA1 (refpoint)
        dd Unnamed_1_5BA-?_042                          ; 0844 _ FFFFFFC2 (refpoint)
        dd ?_037-?_042                                  ; 0848 _ FFFFFF7B (refpoint)

Unnamed_1_60C LABEL NEAR
        push    rbp                                     ; 084C _ 55
        mov     rbp, rsp                                ; 084D _ 48: 89. E5
        push    r15                                     ; 0850 _ 41: 57
        push    r14                                     ; 0852 _ 41: 56
        push    r13                                     ; 0854 _ 41: 55
        push    r12                                     ; 0856 _ 41: 54
        push    rsi                                     ; 0858 _ 56
        push    rdi                                     ; 0859 _ 57
        push    rbx                                     ; 085A _ 53
        sub     rsp, 72                                 ; 085B _ 48: 83. EC, 48
        mov     r14, rdx                                ; 085F _ 49: 89. D6
        mov     rsi, rcx                                ; 0862 _ 48: 89. CE
        test    rsi, rsi                                ; 0865 _ 48: 85. F6
        jz      Unnamed_1_638                           ; 0868 _ 74, 0E
        mov     rax, qword ptr [rsi]                    ; 086A _ 48: 8B. 06
        test    rax, rax                                ; 086D _ 48: 85. C0
        jz      Unnamed_1_638                           ; 0870 _ 74, 06
        mov     qword ptr [rbp-58H], rax                ; 0872 _ 48: 89. 45, A8
        jmp     Unnamed_1_66A                           ; 0876 _ EB, 32

Unnamed_1_638:
        mov     rax, qword ptr [?_578]                  ; 0878 _ 48: 8B. 05, 0000A429(rel)
        lea     rcx, ptr [?_514]                        ; 087F _ 48: 8D. 0D, 00009BB6(rel)
        lea     r8, ptr [rbp-58H]                       ; 0886 _ 4C: 8D. 45, A8
        xor     edx, edx                                ; 088A _ 31. D2
        call    qword ptr [rax+140H]                    ; 088C _ FF. 90, 00000140
        xor     r13d, r13d                              ; 0892 _ 45: 31. ED
        mov     rax, qword ptr [rbp-58H]                ; 0895 _ 48: 8B. 45, A8
        test    rax, rax                                ; 0899 _ 48: 85. C0
        je      ?_045                                   ; 089C _ 0F 84, 000000C5
        test    rsi, rsi                                ; 08A2 _ 48: 85. F6
        jz      Unnamed_1_66A                           ; 08A5 _ 74, 03
        mov     qword ptr [rsi], rax                    ; 08A7 _ 48: 89. 06
Unnamed_1_66A:
; Note: Length-changing prefix causes delay on Intel processors
        mov     word ptr [rbp-3AH], 10                  ; 08AA _ 66: C7. 45, C6, 000A
        mov     ecx, 10                                 ; 08B0 _ B9, 0000000A
        call    Unnamed_1_CB                            ; 08B5 _ E8, FFFFFA51
        mov     rdi, rax                                ; 08BA _ 48: 89. C7
        mov     rax, qword ptr [rbp-58H]                ; 08BD _ 48: 8B. 45, A8
        lea     rdx, ptr [rbp-3AH]                      ; 08C1 _ 48: 8D. 55, C6
        mov     rcx, rax                                ; 08C5 _ 48: 89. C1
        mov     r8, rdi                                 ; 08C8 _ 49: 89. F8
        call    qword ptr [rax+10H]                     ; 08CB _ FF. 50, 10
        mov     rcx, 8000000000000005H                  ; 08CE _ 48: B9, 8000000000000005
        cmp     rax, rcx                                ; 08D8 _ 48: 39. C8
        jnz     ?_043                                   ; 08DB _ 75, 2A
        mov     rax, qword ptr [?_578]                  ; 08DD _ 48: 8B. 05, 0000A3C4(rel)
        mov     rcx, rdi                                ; 08E4 _ 48: 89. F9
        call    qword ptr [rax+48H]                     ; 08E7 _ FF. 50, 48
        movzx   ecx, word ptr [rbp-3AH]                 ; 08EA _ 0F B7. 4D, C6
        call    Unnamed_1_CB                            ; 08EE _ E8, FFFFFA18
        mov     rdi, rax                                ; 08F3 _ 48: 89. C7
        lea     rdx, ptr [rbp-3AH]                      ; 08F6 _ 48: 8D. 55, C6
        mov     rax, qword ptr [rbp-58H]                ; 08FA _ 48: 8B. 45, A8
        mov     rcx, rax                                ; 08FE _ 48: 89. C1
        mov     r8, rdi                                 ; 0901 _ 49: 89. F8
        call    qword ptr [rax+10H]                     ; 0904 _ FF. 50, 10
?_043:  xor     r13d, r13d                              ; 0907 _ 45: 31. ED
        test    rax, rax                                ; 090A _ 48: 85. C0
        js      Unnamed_1_71A                           ; 090D _ 78, 4B
        movzx   r15d, word ptr [rbp-3AH]                ; 090F _ 44: 0F B7. 7D, C6
        shr     r15d, 1                                 ; 0914 _ 41: D1. EF
        xor     ebx, ebx                                ; 0917 _ 31. DB
        lea     r12, ptr [rbp-5AH]                      ; 0919 _ 4C: 8D. 65, A6
        lea     rsi, ptr [rbp-50H]                      ; 091D _ 48: 8D. 75, B0
        jmp     ?_044                                   ; 0921 _ EB, 03

Unnamed_1_6E3:
        inc     rbx                                     ; 0923 _ 48: FF. C3
?_044:  xor     r13d, r13d                              ; 0926 _ 45: 31. ED
        cmp     ebx, r15d                               ; 0929 _ 44: 39. FB
        jnc     Unnamed_1_71A                           ; 092C _ 73, 2C
; Note: Length-changing prefix causes delay on Intel processors
        mov     word ptr [rbp-5AH], 0                   ; 092E _ 66: C7. 45, A6, 0000
        movzx   ecx, word ptr [rdi+rbx*2]               ; 0934 _ 0F B7. 0C 5F
        mov     rdx, r12                                ; 0938 _ 4C: 89. E2
        xor     r8d, r8d                                ; 093B _ 45: 31. C0
        mov     r9, rsi                                 ; 093E _ 49: 89. F1
        call    Unnamed_1_3B5                           ; 0941 _ E8, FFFFFCAF
        mov     rcx, rsi                                ; 0946 _ 48: 89. F1
        mov     rdx, r14                                ; 0949 _ 4C: 89. F2
        call    Unnamed_1_1FD                           ; 094C _ E8, FFFFFAEC
        test    al, al                                  ; 0951 _ 84. C0
        jz      Unnamed_1_6E3                           ; 0953 _ 74, CE
        movzx   r13d, word ptr [rdi+rbx*2]              ; 0955 _ 44: 0F B7. 2C 5F
Unnamed_1_71A:
        mov     rax, qword ptr [?_578]                  ; 095A _ 48: 8B. 05, 0000A347(rel)
        mov     rcx, rdi                                ; 0961 _ 48: 89. F9
        call    qword ptr [rax+48H]                     ; 0964 _ FF. 50, 48
?_045:  movzx   eax, r13w                               ; 0967 _ 41: 0F B7. C5
        add     rsp, 72                                 ; 096B _ 48: 83. C4, 48
        pop     rbx                                     ; 096F _ 5B
        pop     rdi                                     ; 0970 _ 5F
        pop     rsi                                     ; 0971 _ 5E
        pop     r12                                     ; 0972 _ 41: 5C
        pop     r13                                     ; 0974 _ 41: 5D
        pop     r14                                     ; 0976 _ 41: 5E
        pop     r15                                     ; 0978 _ 41: 5F
        pop     rbp                                     ; 097A _ 5D
        ret                                             ; 097B _ C3

Unnamed_1_73C LABEL NEAR
        push    rbp                                     ; 097C _ 55
        mov     rbp, rsp                                ; 097D _ 48: 89. E5
        sub     rsp, 48                                 ; 0980 _ 48: 83. EC, 30
        cmp     qword ptr [?_554], 0                    ; 0984 _ 48: 83. 3D, 0000A274(rel), 00
        jnz     ?_046                                   ; 098C _ 75, 22
        mov     rax, qword ptr [?_578]                  ; 098E _ 48: 8B. 05, 0000A313(rel)
        lea     rcx, ptr [?_537]                        ; 0995 _ 48: 8D. 0D, 00009C04(rel)
        lea     r8, ptr [?_554]                         ; 099C _ 4C: 8D. 05, 0000A25D(rel)
        xor     edx, edx                                ; 09A3 _ 31. D2
        call    qword ptr [rax+140H]                    ; 09A5 _ FF. 90, 00000140
        test    rax, rax                                ; 09AB _ 48: 85. C0
        jnz     Unnamed_1_7DD                           ; 09AE _ 75, 6D
?_046:  mov     rax, qword ptr [?_579]                  ; 09B0 _ 48: 8B. 05, 0000A2F9(rel)
        lea     rcx, ptr [rbp-10H]                      ; 09B7 _ 48: 8D. 4D, F0
        xor     edx, edx                                ; 09BB _ 31. D2
        call    qword ptr [rax+18H]                     ; 09BD _ FF. 50, 18
        test    rax, rax                                ; 09C0 _ 48: 85. C0
        jnz     Unnamed_1_7DD                           ; 09C3 _ 75, 58
        lea     rax, ptr [?_555]                        ; 09C5 _ 48: 8D. 05, 0000A23C(rel)
        movzx   ecx, byte ptr [rbp-0AH]                 ; 09CC _ 0F B6. 4D, F6
        add     rcx, rax                                ; 09D0 _ 48: 01. C1
        movzx   eax, byte ptr [rbp-0BH]                 ; 09D3 _ 0F B6. 45, F5
        imul    rax, rax, 60                            ; 09D7 _ 48: 6B. C0, 3C
        add     rax, rcx                                ; 09DB _ 48: 01. C8
        movzx   ecx, byte ptr [rbp-0CH]                 ; 09DE _ 0F B6. 4D, F4
        imul    rcx, rcx, 3600                          ; 09E2 _ 48: 69. C9, 00000E10
        add     rcx, rax                                ; 09E9 _ 48: 01. C1
        mov     qword ptr [?_555], rcx                  ; 09EC _ 48: 89. 0D, 0000A215(rel)
        lea     rax, ptr [Unnamed_1_73C]                ; 09F3 _ 48: 8D. 05, FFFFFF82(rel)
        mov     edx, eax                                ; 09FA _ 89. C2
        call    Unnamed_1_38E                           ; 09FC _ E8, FFFFFBCD
        lea     rdx, ptr [?_556]                        ; 0A01 _ 48: 8D. 15, 0000A208(rel)
        mov     qword ptr [?_555], rax                  ; 0A08 _ 48: 89. 05, 0000A1F9(rel)
        mov     r8, qword ptr [?_554]                   ; 0A0F _ 4C: 8B. 05, 0000A1EA(rel)
        mov     rcx, rax                                ; 0A16 _ 48: 89. C1
        call    qword ptr [r8+8H]                       ; 0A19 _ 41: FF. 50, 08
Unnamed_1_7DD:
        add     rsp, 48                                 ; 0A1D _ 48: 83. C4, 30
        pop     rbp                                     ; 0A21 _ 5D
        ret                                             ; 0A22 _ C3

Unnamed_1_7E3 LABEL NEAR
        mov     r8, rcx                                 ; 0A23 _ 49: 89. C8
        mov     rcx, 8000000000000013H                  ; 0A26 _ 48: B9, 8000000000000013
        mov     rax, qword ptr [?_554]                  ; 0A30 _ 48: 8B. 05, 0000A1C9(rel)
        test    rax, rax                                ; 0A37 _ 48: 85. C0
        jz      Unnamed_1_821                           ; 0A3A _ 74, 25
        mov     rcx, 8000000000000013H                  ; 0A3C _ 48: B9, 8000000000000013
        mov     rdx, qword ptr [?_556]                  ; 0A46 _ 48: 8B. 15, 0000A1C3(rel)
        test    rdx, rdx                                ; 0A4D _ 48: 85. D2
        jz      Unnamed_1_821                           ; 0A50 _ 74, 0F
        mov     rcx, 8000000000000002H                  ; 0A52 _ 48: B9, 8000000000000002
        test    r8, r8                                  ; 0A5C _ 4D: 85. C0
        jnz     ?_047                                   ; 0A5F _ 75, 04
Unnamed_1_821:
        mov     rax, rcx                                ; 0A61 _ 48: 89. C8
        ret                                             ; 0A64 _ C3

?_047   LABEL NEAR
        mov     rax, qword ptr [rax+20H]                ; 0A65 _ 48: 8B. 40, 20
        mov     rcx, rdx                                ; 0A69 _ 48: 89. D1
        mov     rdx, r8                                 ; 0A6C _ 4C: 89. C2
        jmp     rax                                     ; 0A6F _ FF. E0

Unnamed_1_831 LABEL NEAR
        mov     rax, qword ptr [?_554]                  ; 0A71 _ 48: 8B. 05, 0000A188(rel)
        test    rax, rax                                ; 0A78 _ 48: 85. C0
        jnz     ?_048                                   ; 0A7B _ 75, 0B
        mov     rax, 8000000000000013H                  ; 0A7D _ 48: B8, 8000000000000013
        ret                                             ; 0A87 _ C3

?_048   LABEL NEAR
        mov     rax, qword ptr [rax+28H]                ; 0A88 _ 48: 8B. 40, 28
        mov     rax, qword ptr [rax+8H]                 ; 0A8C _ 48: 8B. 40, 08
        jmp     rax                                     ; 0A90 _ FF. E0

Unnamed_1_852 LABEL NEAR
        mov     r9, r8                                  ; 0A92 _ 4D: 89. C1
        mov     r8, rdx                                 ; 0A95 _ 49: 89. D0
        mov     rdx, rcx                                ; 0A98 _ 48: 89. CA
        mov     rax, qword ptr [?_554]                  ; 0A9B _ 48: 8B. 05, 0000A15E(rel)
        test    rax, rax                                ; 0AA2 _ 48: 85. C0
        jz      ?_049                                   ; 0AA5 _ 74, 0C
        mov     rcx, qword ptr [?_556]                  ; 0AA7 _ 48: 8B. 0D, 0000A162(rel)
        test    rcx, rcx                                ; 0AAE _ 48: 85. C9
        jnz     ?_050                                   ; 0AB1 _ 75, 0B
?_049:  mov     rax, 8000000000000013H                  ; 0AB3 _ 48: B8, 8000000000000013
        ret                                             ; 0ABD _ C3

?_050   LABEL NEAR
        mov     rax, qword ptr [rax+28H]                ; 0ABE _ 48: 8B. 40, 28
        mov     rax, qword ptr [rax+10H]                ; 0AC2 _ 48: 8B. 40, 10
        jmp     rax                                     ; 0AC6 _ FF. E0

Unnamed_1_888 LABEL NEAR
        mov     rax, qword ptr [?_554]                  ; 0AC8 _ 48: 8B. 05, 0000A131(rel)
        test    rax, rax                                ; 0ACF _ 48: 85. C0
        jnz     ?_051                                   ; 0AD2 _ 75, 0B
        mov     rax, 8000000000000013H                  ; 0AD4 _ 48: B8, 8000000000000013
        ret                                             ; 0ADE _ C3

?_051   LABEL NEAR
        mov     rax, qword ptr [rax+28H]                ; 0ADF _ 48: 8B. 40, 28
        jmp     qword ptr [rax+30H]                     ; 0AE3 _ FF. 60, 30

Unnamed_1_8A6 LABEL NEAR
        mov     rax, qword ptr [?_554]                  ; 0AE6 _ 48: 8B. 05, 0000A113(rel)
        test    rax, rax                                ; 0AED _ 48: 85. C0
        jnz     ?_052                                   ; 0AF0 _ 75, 0B
        mov     rax, 8000000000000013H                  ; 0AF2 _ 48: B8, 8000000000000013
        ret                                             ; 0AFC _ C3

?_052   LABEL NEAR
        mov     rax, qword ptr [rax+28H]                ; 0AFD _ 48: 8B. 40, 28
        mov     rax, qword ptr [rax+60H]                ; 0B01 _ 48: 8B. 40, 60
        jmp     rax                                     ; 0B05 _ FF. E0

Unnamed_1_8C7 LABEL NEAR
        mov     rax, qword ptr [?_554]                  ; 0B07 _ 48: 8B. 05, 0000A0F2(rel)
        test    rax, rax                                ; 0B0E _ 48: 85. C0
        jnz     ?_053                                   ; 0B11 _ 75, 0B
        mov     rax, 8000000000000013H                  ; 0B13 _ 48: B8, 8000000000000013
        ret                                             ; 0B1D _ C3

?_053   LABEL NEAR
        mov     rax, qword ptr [rax+28H]                ; 0B1E _ 48: 8B. 40, 28
        jmp     qword ptr [rax+90H]                     ; 0B22 _ FF. A0, 00000090

Unnamed_1_8E8 LABEL NEAR
        mov     rax, qword ptr [?_554]                  ; 0B28 _ 48: 8B. 05, 0000A0D1(rel)
        test    rax, rax                                ; 0B2F _ 48: 85. C0
        jnz     ?_054                                   ; 0B32 _ 75, 0B
        mov     rax, 8000000000000013H                  ; 0B34 _ 48: B8, 8000000000000013
        ret                                             ; 0B3E _ C3

?_054   LABEL NEAR
        mov     rax, qword ptr [rax+28H]                ; 0B3F _ 48: 8B. 40, 28
        mov     rax, qword ptr [rax+98H]                ; 0B43 _ 48: 8B. 80, 00000098
        jmp     rax                                     ; 0B4A _ FF. E0

Unnamed_1_90C LABEL NEAR
        mov     rax, qword ptr [?_554]                  ; 0B4C _ 48: 8B. 05, 0000A0AD(rel)
        test    rax, rax                                ; 0B53 _ 48: 85. C0
        jnz     ?_055                                   ; 0B56 _ 75, 0B
        mov     rax, 8000000000000013H                  ; 0B58 _ 48: B8, 8000000000000013
        ret                                             ; 0B62 _ C3

?_055   LABEL NEAR
        mov     rax, qword ptr [rax+28H]                ; 0B63 _ 48: 8B. 40, 28
        mov     rax, qword ptr [rax+0E0H]               ; 0B67 _ 48: 8B. 80, 000000E0
        jmp     rax                                     ; 0B6E _ FF. E0

Unnamed_1_930 LABEL NEAR
        mov     rax, qword ptr [?_554]                  ; 0B70 _ 48: 8B. 05, 0000A089(rel)
        test    rax, rax                                ; 0B77 _ 48: 85. C0
        jnz     ?_056                                   ; 0B7A _ 75, 0B
        mov     rax, 8000000000000013H                  ; 0B7C _ 48: B8, 8000000000000013
        ret                                             ; 0B86 _ C3

?_056   LABEL NEAR
        mov     rax, qword ptr [rax+30H]                ; 0B87 _ 48: 8B. 40, 30
        mov     rax, qword ptr [rax+8H]                 ; 0B8B _ 48: 8B. 40, 08
        jmp     rax                                     ; 0B8F _ FF. E0

Unnamed_1_951 LABEL NEAR
        mov     rax, qword ptr [?_554]                  ; 0B91 _ 48: 8B. 05, 0000A068(rel)
        test    rax, rax                                ; 0B98 _ 48: 85. C0
        jnz     ?_057                                   ; 0B9B _ 75, 0B
        mov     rax, 8000000000000013H                  ; 0B9D _ 48: B8, 8000000000000013
        ret                                             ; 0BA7 _ C3

?_057   LABEL NEAR
        mov     rax, qword ptr [rax+30H]                ; 0BA8 _ 48: 8B. 40, 30
        jmp     qword ptr [rax+10H]                     ; 0BAC _ FF. 60, 10

Unnamed_1_96F LABEL NEAR
        mov     rax, qword ptr [?_554]                  ; 0BAF _ 48: 8B. 05, 0000A04A(rel)
        test    rax, rax                                ; 0BB6 _ 48: 85. C0
        jnz     ?_058                                   ; 0BB9 _ 75, 0B
        mov     rax, 8000000000000013H                  ; 0BBB _ 48: B8, 8000000000000013
        ret                                             ; 0BC5 _ C3

?_058   LABEL NEAR
        mov     rax, qword ptr [rax+30H]                ; 0BC6 _ 48: 8B. 40, 30
        mov     rax, qword ptr [rax+18H]                ; 0BCA _ 48: 8B. 40, 18
        jmp     rax                                     ; 0BCE _ FF. E0

Unnamed_1_990 LABEL NEAR
        mov     rax, qword ptr [?_554]                  ; 0BD0 _ 48: 8B. 05, 0000A029(rel)
        test    rax, rax                                ; 0BD7 _ 48: 85. C0
        jnz     ?_059                                   ; 0BDA _ 75, 0B
        mov     rax, 8000000000000013H                  ; 0BDC _ 48: B8, 8000000000000013
        ret                                             ; 0BE6 _ C3

?_059   LABEL NEAR
        mov     rax, qword ptr [rax+30H]                ; 0BE7 _ 48: 8B. 40, 30
        jmp     qword ptr [rax+48H]                     ; 0BEB _ FF. 60, 48

Unnamed_1_9AE LABEL NEAR
        push    rbp                                     ; 0BEE _ 55
        mov     rbp, rsp                                ; 0BEF _ 48: 89. E5
        sub     rsp, 48                                 ; 0BF2 _ 48: 83. EC, 30
        mov     r10, r9                                 ; 0BF6 _ 4D: 89. CA
        mov     r9, r8                                  ; 0BF9 _ 4D: 89. C1
        mov     r8, rdx                                 ; 0BFC _ 49: 89. D0
        mov     rdx, rcx                                ; 0BFF _ 48: 89. CA
        mov     rax, qword ptr [?_554]                  ; 0C02 _ 48: 8B. 05, 00009FF7(rel)
        test    rax, rax                                ; 0C09 _ 48: 85. C0
        jz      Unnamed_1_9E8                           ; 0C0C _ 74, 1A
        mov     rcx, qword ptr [?_556]                  ; 0C0E _ 48: 8B. 0D, 00009FFB(rel)
        test    rcx, rcx                                ; 0C15 _ 48: 85. C9
        jz      Unnamed_1_9E8                           ; 0C18 _ 74, 0E
        mov     rax, qword ptr [rax+48H]                ; 0C1A _ 48: 8B. 40, 48
        mov     qword ptr [rsp+20H], r10                ; 0C1E _ 4C: 89. 54 24, 20
        call    qword ptr [rax+8H]                      ; 0C23 _ FF. 50, 08
        jmp     ?_060                                   ; 0C26 _ EB, 0A

Unnamed_1_9E8:
        mov     rax, 8000000000000013H                  ; 0C28 _ 48: B8, 8000000000000013
?_060:  add     rsp, 48                                 ; 0C32 _ 48: 83. C4, 30
        pop     rbp                                     ; 0C36 _ 5D
        ret                                             ; 0C37 _ C3

Unnamed_1_9F8 LABEL NEAR
        mov     r8, rdx                                 ; 0C38 _ 49: 89. D0
        mov     rdx, rcx                                ; 0C3B _ 48: 89. CA
        mov     rax, qword ptr [?_554]                  ; 0C3E _ 48: 8B. 05, 00009FBB(rel)
        test    rax, rax                                ; 0C45 _ 48: 85. C0
        jz      ?_061                                   ; 0C48 _ 74, 0C
        mov     rcx, qword ptr [?_556]                  ; 0C4A _ 48: 8B. 0D, 00009FBF(rel)
        test    rcx, rcx                                ; 0C51 _ 48: 85. C9
        jnz     ?_062                                   ; 0C54 _ 75, 0B
?_061:  mov     rax, 8000000000000013H                  ; 0C56 _ 48: B8, 8000000000000013
        ret                                             ; 0C60 _ C3

?_062   LABEL NEAR
        mov     rax, qword ptr [rax+48H]                ; 0C61 _ 48: 8B. 40, 48
        mov     rax, qword ptr [rax+40H]                ; 0C65 _ 48: 8B. 40, 40
        jmp     rax                                     ; 0C69 _ FF. E0

Unnamed_1_A2B LABEL NEAR
        push    rbp                                     ; 0C6B _ 55
        mov     rbp, rsp                                ; 0C6C _ 48: 89. E5
        push    rsi                                     ; 0C6F _ 56
        push    rdi                                     ; 0C70 _ 57
        push    rbx                                     ; 0C71 _ 53
        sub     rsp, 40                                 ; 0C72 _ 48: 83. EC, 28
        mov     rsi, r8                                 ; 0C76 _ 4C: 89. C6
        mov     rdi, rdx                                ; 0C79 _ 48: 89. D7
        mov     rbx, rcx                                ; 0C7C _ 48: 89. CB
        mov     rax, qword ptr [?_554]                  ; 0C7F _ 48: 8B. 05, 00009F7A(rel)
        test    rax, rax                                ; 0C86 _ 48: 85. C0
        jnz     ?_063                                   ; 0C89 _ 75, 29
        mov     rax, qword ptr [?_578]                  ; 0C8B _ 48: 8B. 05, 0000A016(rel)
        lea     rcx, ptr [?_537]                        ; 0C92 _ 48: 8D. 0D, 00009907(rel)
        lea     r8, ptr [?_554]                         ; 0C99 _ 4C: 8D. 05, 00009F60(rel)
        xor     edx, edx                                ; 0CA0 _ 31. D2
        call    qword ptr [rax+140H]                    ; 0CA2 _ FF. 90, 00000140
        test    rax, rax                                ; 0CA8 _ 48: 85. C0
        jnz     ?_064                                   ; 0CAB _ 75, 22
        mov     rax, qword ptr [?_554]                  ; 0CAD _ 48: 8B. 05, 00009F4C(rel)
?_063:  mov     rax, qword ptr [rax+50H]                ; 0CB4 _ 48: 8B. 40, 50
        mov     rax, qword ptr [rax+48H]                ; 0CB8 _ 48: 8B. 40, 48
        mov     rcx, rbx                                ; 0CBC _ 48: 89. D9
        mov     rdx, rdi                                ; 0CBF _ 48: 89. FA
        mov     r8, rsi                                 ; 0CC2 _ 49: 89. F0
        add     rsp, 40                                 ; 0CC5 _ 48: 83. C4, 28
        pop     rbx                                     ; 0CC9 _ 5B
        pop     rdi                                     ; 0CCA _ 5F
        pop     rsi                                     ; 0CCB _ 5E
        pop     rbp                                     ; 0CCC _ 5D
        jmp     rax                                     ; 0CCD _ FF. E0

?_064   LABEL NEAR
        add     rsp, 40                                 ; 0CCF _ 48: 83. C4, 28
        pop     rbx                                     ; 0CD3 _ 5B
        pop     rdi                                     ; 0CD4 _ 5F
        pop     rsi                                     ; 0CD5 _ 5E
        pop     rbp                                     ; 0CD6 _ 5D
        ret                                             ; 0CD7 _ C3

Unnamed_1_A98 LABEL NEAR
        push    rbp                                     ; 0CD8 _ 55
        mov     rbp, rsp                                ; 0CD9 _ 48: 89. E5
        push    r14                                     ; 0CDC _ 41: 56
        push    rsi                                     ; 0CDE _ 56
        push    rdi                                     ; 0CDF _ 57
        push    rbx                                     ; 0CE0 _ 53
        sub     rsp, 32                                 ; 0CE1 _ 48: 83. EC, 20
        mov     r14d, r9d                               ; 0CE5 _ 45: 89. CE
        mov     edi, r8d                                ; 0CE8 _ 44: 89. C7
        mov     esi, edx                                ; 0CEB _ 89. D6
        mov     rbx, rcx                                ; 0CED _ 48: 89. CB
        mov     rax, qword ptr [?_554]                  ; 0CF0 _ 48: 8B. 05, 00009F09(rel)
        test    rax, rax                                ; 0CF7 _ 48: 85. C0
        jnz     ?_065                                   ; 0CFA _ 75, 29
        mov     rax, qword ptr [?_578]                  ; 0CFC _ 48: 8B. 05, 00009FA5(rel)
        lea     rcx, ptr [?_537]                        ; 0D03 _ 48: 8D. 0D, 00009896(rel)
        lea     r8, ptr [?_554]                         ; 0D0A _ 4C: 8D. 05, 00009EEF(rel)
        xor     edx, edx                                ; 0D11 _ 31. D2
        call    qword ptr [rax+140H]                    ; 0D13 _ FF. 90, 00000140
        test    rax, rax                                ; 0D19 _ 48: 85. C0
        jnz     ?_066                                   ; 0D1C _ 75, 2A
        mov     rax, qword ptr [?_554]                  ; 0D1E _ 48: 8B. 05, 00009EDB(rel)
?_065:  mov     rax, qword ptr [rax+50H]                ; 0D25 _ 48: 8B. 40, 50
        mov     rax, qword ptr [rax+70H]                ; 0D29 _ 48: 8B. 40, 70
        movzx   edx, sil                                ; 0D2D _ 40: 0F B6. D6
        movzx   r8d, dil                                ; 0D31 _ 44: 0F B6. C7
        movzx   r9d, r14b                               ; 0D35 _ 45: 0F B6. CE
        mov     rcx, rbx                                ; 0D39 _ 48: 89. D9
        add     rsp, 32                                 ; 0D3C _ 48: 83. C4, 20
        pop     rbx                                     ; 0D40 _ 5B
        pop     rdi                                     ; 0D41 _ 5F
        pop     rsi                                     ; 0D42 _ 5E
        pop     r14                                     ; 0D43 _ 41: 5E
        pop     rbp                                     ; 0D45 _ 5D
        jmp     rax                                     ; 0D46 _ FF. E0

?_066   LABEL NEAR
        add     rsp, 32                                 ; 0D48 _ 48: 83. C4, 20
        pop     rbx                                     ; 0D4C _ 5B
        pop     rdi                                     ; 0D4D _ 5F
        pop     rsi                                     ; 0D4E _ 5E
        pop     r14                                     ; 0D4F _ 41: 5E
        pop     rbp                                     ; 0D51 _ 5D
        ret                                             ; 0D52 _ C3

Unnamed_1_B13 LABEL NEAR
        mov     rax, qword ptr [?_554]                  ; 0D53 _ 48: 8B. 05, 00009EA6(rel)
        test    rax, rax                                ; 0D5A _ 48: 85. C0
        jnz     ?_067                                   ; 0D5D _ 75, 0B
        mov     rax, 8000000000000013H                  ; 0D5F _ 48: B8, 8000000000000013
        ret                                             ; 0D69 _ C3

?_067   LABEL NEAR
        mov     rax, qword ptr [rax+58H]                ; 0D6A _ 48: 8B. 40, 58
        mov     rax, qword ptr [rax+18H]                ; 0D6E _ 48: 8B. 40, 18
        jmp     rax                                     ; 0D72 _ FF. E0

Unnamed_1_B34 LABEL NEAR
        push    rbp                                     ; 0D74 _ 55
        mov     rbp, rsp                                ; 0D75 _ 48: 89. E5
        push    r15                                     ; 0D78 _ 41: 57
        push    r14                                     ; 0D7A _ 41: 56
        push    rsi                                     ; 0D7C _ 56
        push    rdi                                     ; 0D7D _ 57
        push    rbx                                     ; 0D7E _ 53
        sub     rsp, 40                                 ; 0D7F _ 48: 83. EC, 28
        mov     r14, r9                                 ; 0D83 _ 4D: 89. CE
        mov     r15, r8                                 ; 0D86 _ 4D: 89. C7
        mov     rbx, rdx                                ; 0D89 _ 48: 89. D3
        mov     rsi, rcx                                ; 0D8C _ 48: 89. CE
        mov     rax, qword ptr [?_578]                  ; 0D8F _ 48: 8B. 05, 00009F12(rel)
        lea     rcx, ptr [?_508]                        ; 0D96 _ 48: 8D. 0D, 0000963F(rel)
        xor     edi, edi                                ; 0D9D _ 31. FF
        lea     r8, ptr [rbp-30H]                       ; 0D9F _ 4C: 8D. 45, D0
        xor     edx, edx                                ; 0DA3 _ 31. D2
        call    qword ptr [rax+140H]                    ; 0DA5 _ FF. 90, 00000140
        test    rax, rax                                ; 0DAB _ 48: 85. C0
        js      ?_068                                   ; 0DAE _ 78, 15
        mov     rax, qword ptr [rbp-30H]                ; 0DB0 _ 48: 8B. 45, D0
        mov     rcx, rsi                                ; 0DB4 _ 48: 89. F1
        mov     rdx, rbx                                ; 0DB7 _ 48: 89. DA
        mov     r8, r15                                 ; 0DBA _ 4D: 89. F8
        mov     r9, r14                                 ; 0DBD _ 4D: 89. F1
        call    qword ptr [rax]                         ; 0DC0 _ FF. 10
        mov     rdi, rax                                ; 0DC2 _ 48: 89. C7
?_068:  mov     rax, rdi                                ; 0DC5 _ 48: 89. F8
        add     rsp, 40                                 ; 0DC8 _ 48: 83. C4, 28
        pop     rbx                                     ; 0DCC _ 5B
        pop     rdi                                     ; 0DCD _ 5F
        pop     rsi                                     ; 0DCE _ 5E
        pop     r14                                     ; 0DCF _ 41: 5E
        pop     r15                                     ; 0DD1 _ 41: 5F
        pop     rbp                                     ; 0DD3 _ 5D
        ret                                             ; 0DD4 _ C3

Unnamed_1_B95 LABEL NEAR
        push    rbp                                     ; 0DD5 _ 55
        mov     rbp, rsp                                ; 0DD6 _ 48: 89. E5
        push    rsi                                     ; 0DD9 _ 56
        sub     rsp, 696                                ; 0DDA _ 48: 81. EC, 000002B8
        mov     rax, rcx                                ; 0DE1 _ 48: 89. C8
        mov     qword ptr [rbp+28H], r9                 ; 0DE4 _ 4C: 89. 4D, 28
        mov     qword ptr [rbp+20H], r8                 ; 0DE8 _ 4C: 89. 45, 20
        mov     qword ptr [rbp+18H], rdx                ; 0DEC _ 48: 89. 55, 18
        lea     rcx, ptr [rbp+18H]                      ; 0DF0 _ 48: 8D. 4D, 18
        mov     qword ptr [rbp-20H], rcx                ; 0DF4 _ 48: 89. 4D, E0
        lea     rcx, ptr [rbp-2A0H]                     ; 0DF8 _ 48: 8D. 8D, FFFFFD60
        lea     r9, ptr [rbp-20H]                       ; 0DFF _ 4C: 8D. 4D, E0
        mov     edx, 640                                ; 0E03 _ BA, 00000280
        mov     r8, rax                                 ; 0E08 _ 49: 89. C0
        call    Unnamed_1_B34                           ; 0E0B _ E8, FFFFFF64
        mov     rsi, rax                                ; 0E10 _ 48: 89. C6
        mov     rax, qword ptr [?_577]                  ; 0E13 _ 48: 8B. 05, 00009E86(rel)
        mov     rax, qword ptr [rax+40H]                ; 0E1A _ 48: 8B. 40, 40
        test    rax, rax                                ; 0E1E _ 48: 85. C0
        jz      ?_069                                   ; 0E21 _ 74, 0D
        lea     rdx, ptr [rbp-2A0H]                     ; 0E23 _ 48: 8D. 95, FFFFFD60
        mov     rcx, rax                                ; 0E2A _ 48: 89. C1
        call    qword ptr [rax+8H]                      ; 0E2D _ FF. 50, 08
?_069:  mov     rax, rsi                                ; 0E30 _ 48: 89. F0
        add     rsp, 696                                ; 0E33 _ 48: 81. C4, 000002B8
        pop     rsi                                     ; 0E3A _ 5E
        pop     rbp                                     ; 0E3B _ 5D
        ret                                             ; 0E3C _ C3

        nop                                             ; 0E3D _ 90
        nop                                             ; 0E3E _ 90
        nop                                             ; 0E3F _ 90

?_070   LABEL NEAR
        push    rbp                                     ; 0E40 _ 55
        mov     rbp, rsp                                ; 0E41 _ 48: 89. E5
        sub     rsp, 144                                ; 0E44 _ 48: 81. EC, 00000090
        mov     rax, qword ptr [rbp+30H]                ; 0E4B _ 48: 8B. 45, 30
        mov     qword ptr [rbp-8H], rcx                 ; 0E4F _ 48: 89. 4D, F8
        mov     dword ptr [rbp-0CH], edx                ; 0E53 _ 89. 55, F4
        mov     qword ptr [rbp-18H], r8                 ; 0E56 _ 4C: 89. 45, E8
        mov     qword ptr [rbp-20H], r9                 ; 0E5A _ 4C: 89. 4D, E0
        mov     qword ptr [rbp-28H], rax                ; 0E5E _ 48: 89. 45, D8
        mov     qword ptr [rbp-38H], 0                  ; 0E62 _ 48: C7. 45, C8, 00000000
        mov     qword ptr [rbp-40H], 0                  ; 0E6A _ 48: C7. 45, C0, 00000000
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-8H], 0                   ; 0E72 _ 48: 81. 7D, F8, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_071                                   ; 0E7A _ 0F 85, 00000013
        mov     rax, 8000000000000002H                  ; 0E80 _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-30H], rax                ; 0E8A _ 48: 89. 45, D0
        jmp     Unnamed_1_E2E                           ; 0E8E _ E9, 000001DB

?_071:
; Note: Immediate operand could be made smaller by sign extension
        cmp     dword ptr [rbp-0CH], 18                 ; 0E93 _ 81. 7D, F4, 00000012
; Note: Immediate operand could be made smaller by sign extension
        jge     ?_072                                   ; 0E9A _ 0F 8D, 00000013
        mov     rax, 8000000000000002H                  ; 0EA0 _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-30H], rax                ; 0EAA _ 48: 89. 45, D0
        jmp     Unnamed_1_E2E                           ; 0EAE _ E9, 000001BB

?_072:  mov     rax, qword ptr [rbp-28H]                ; 0EB3 _ 48: 8B. 45, D8
        cmp     rax, qword ptr [rbp-20H]                ; 0EB7 _ 48: 3B. 45, E0
; Note: Immediate operand could be made smaller by sign extension
        jle     ?_073                                   ; 0EBB _ 0F 8E, 00000013
        mov     rax, 8000000000000002H                  ; 0EC1 _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-30H], rax                ; 0ECB _ 48: 89. 45, D0
        jmp     Unnamed_1_E2E                           ; 0ECF _ E9, 0000019A

?_073:  mov     rax, qword ptr [rbp-28H]                ; 0ED4 _ 48: 8B. 45, D8
        cmp     rax, qword ptr [rbp-18H]                ; 0ED8 _ 48: 3B. 45, E8
; Note: Immediate operand could be made smaller by sign extension
        jge     ?_074                                   ; 0EDC _ 0F 8D, 00000013
        mov     rax, 8000000000000002H                  ; 0EE2 _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-30H], rax                ; 0EEC _ 48: 89. 45, D0
        jmp     Unnamed_1_E2E                           ; 0EF0 _ E9, 00000179

?_074:  mov     rax, qword ptr [rbp-18H]                ; 0EF5 _ 48: 8B. 45, E8
        cmp     rax, qword ptr [rbp-20H]                ; 0EF9 _ 48: 3B. 45, E0
; Note: Immediate operand could be made smaller by sign extension
        jl      ?_075                                   ; 0EFD _ 0F 8C, 00000013
        mov     rax, 8000000000000002H                  ; 0F03 _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-30H], rax                ; 0F0D _ 48: 89. 45, D0
        jmp     Unnamed_1_E2E                           ; 0F11 _ E9, 00000158

?_075:  lea     rcx, ptr [?_536]                        ; 0F16 _ 48: 8D. 0D, 0000967F(rel)
        call    Unnamed_1_7E3                           ; 0F1D _ E8, FFFFFB01
        mov     qword ptr [rbp-30H], rax                ; 0F22 _ 48: 89. 45, D0
; Note: Immediate operand could be made smaller by zero extension
        mov     rax, 0                                  ; 0F26 _ 48: B8, 0000000000000000
        cmp     rax, qword ptr [rbp-30H]                ; 0F30 _ 48: 3B. 45, D0
; Note: Immediate operand could be made smaller by sign extension
        je      ?_076                                   ; 0F34 _ 0F 84, 00000005
        jmp     Unnamed_1_E2E                           ; 0F3A _ E9, 0000012F

?_076:  lea     rcx, ptr [rbp-40H]                      ; 0F3F _ 48: 8D. 4D, C0
        lea     rax, ptr [rbp-50H]                      ; 0F43 _ 48: 8D. 45, B0
        mov     dword ptr [rbp-50H], 0                  ; 0F47 _ C7. 45, B0, 00000000
        mov     dword ptr [rbp-4CH], 0                  ; 0F4E _ C7. 45, B4, 00000000
        mov     edx, dword ptr [rbp-0CH]                ; 0F55 _ 8B. 55, F4
        mov     r8, qword ptr [rbp-18H]                 ; 0F58 _ 4C: 8B. 45, E8
        mov     r9, qword ptr [rbp-20H]                 ; 0F5C _ 4C: 8B. 4D, E0
        mov     r10, qword ptr [rbp-28H]                ; 0F60 _ 4C: 8B. 55, D8
; Note: Immediate operand could be made smaller by sign extension
        add     rax, 8                                  ; 0F64 _ 48: 05, 00000008
        mov     qword ptr [rsp+20H], r10                ; 0F6A _ 4C: 89. 54 24, 20
        mov     qword ptr [rsp+28H], rax                ; 0F6F _ 48: 89. 44 24, 28
        call    ?_084                                   ; 0F74 _ E8, 00000147
        mov     qword ptr [rbp-30H], rax                ; 0F79 _ 48: 89. 45, D0
; Note: Immediate operand could be made smaller by zero extension
        mov     rax, 0                                  ; 0F7D _ 48: B8, 0000000000000000
        cmp     rax, qword ptr [rbp-30H]                ; 0F87 _ 48: 3B. 45, D0
; Note: Immediate operand could be made smaller by sign extension
        je      ?_077                                   ; 0F8B _ 0F 84, 00000005
        jmp     Unnamed_1_E2E                           ; 0F91 _ E9, 000000D8

?_077:  lea     rcx, ptr [rbp-38H]                      ; 0F96 _ 48: 8D. 4D, C8
        lea     rdx, ptr [rbp-50H]                      ; 0F9A _ 48: 8D. 55, B0
        call    Unnamed_1_831                           ; 0F9E _ E8, FFFFFACE
        mov     qword ptr [rbp-30H], rax                ; 0FA3 _ 48: 89. 45, D0
; Note: Immediate operand could be made smaller by zero extension
        mov     rax, 0                                  ; 0FA7 _ 48: B8, 0000000000000000
        cmp     rax, qword ptr [rbp-30H]                ; 0FB1 _ 48: 3B. 45, D0
; Note: Immediate operand could be made smaller by sign extension
        je      ?_078                                   ; 0FB5 _ 0F 84, 00000005
        jmp     Unnamed_1_E2E                           ; 0FBB _ E9, 000000AE

?_078:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-38H], 0                  ; 0FC0 _ 48: 81. 7D, C8, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_079                                   ; 0FC8 _ 0F 85, 00000013
        mov     rax, 8000000000000009H                  ; 0FCE _ 48: B8, 8000000000000009
        mov     qword ptr [rbp-30H], rax                ; 0FD8 _ 48: 89. 45, D0
        jmp     Unnamed_1_E2E                           ; 0FDC _ E9, 0000008D

?_079:  mov     edx, 7                                  ; 0FE1 _ BA, 00000007
        mov     rcx, qword ptr [rbp-38H]                ; 0FE6 _ 48: 8B. 4D, C8
        call    Unnamed_1_8E8                           ; 0FEA _ E8, FFFFFB39
        mov     qword ptr [rbp-30H], rax                ; 0FEF _ 48: 89. 45, D0
; Note: Immediate operand could be made smaller by zero extension
        mov     rax, 0                                  ; 0FF3 _ 48: B8, 0000000000000000
        cmp     rax, qword ptr [rbp-30H]                ; 0FFD _ 48: 3B. 45, D0
; Note: Immediate operand could be made smaller by sign extension
        je      ?_080                                   ; 1001 _ 0F 84, 00000005
; Note: Immediate operand could be made smaller by sign extension
        jmp     Unnamed_1_E2E                           ; 1007 _ E9, 00000062

?_080:  lea     rdx, ptr [?_125]                        ; 100C _ 48: 8D. 15, 000008DD(rel)
        lea     r8, ptr [?_134]                         ; 1013 _ 4C: 8D. 05, 00000CE6(rel)
; Note: Immediate operand could be made smaller by zero extension
        mov     r9, 0                                   ; 101A _ 49: B9, 0000000000000000
        mov     rcx, qword ptr [rbp-38H]                ; 1024 _ 48: 8B. 4D, C8
        mov     rax, qword ptr [rbp-40H]                ; 1028 _ 48: 8B. 45, C0
        mov     qword ptr [rsp+20H], rax                ; 102C _ 48: 89. 44 24, 20
        call    Unnamed_1_90C                           ; 1031 _ E8, FFFFFB16
        mov     qword ptr [rbp-30H], rax                ; 1036 _ 48: 89. 45, D0
; Note: Immediate operand could be made smaller by zero extension
        mov     rax, 0                                  ; 103A _ 48: B8, 0000000000000000
        cmp     rax, qword ptr [rbp-30H]                ; 1044 _ 48: 3B. 45, D0
; Note: Immediate operand could be made smaller by sign extension
        je      ?_081                                   ; 1048 _ 0F 84, 00000005
; Note: Immediate operand could be made smaller by sign extension
        jmp     Unnamed_1_E2E                           ; 104E _ E9, 0000001B

?_081:  mov     qword ptr [rbp-40H], 0                  ; 1053 _ 48: C7. 45, C0, 00000000
        mov     rax, qword ptr [rbp-38H]                ; 105B _ 48: 8B. 45, C8
        mov     rcx, qword ptr [rbp-8H]                 ; 105F _ 48: 8B. 4D, F8
        mov     qword ptr [rcx], rax                    ; 1063 _ 48: 89. 01
        mov     qword ptr [rbp-38H], 0                  ; 1066 _ 48: C7. 45, C8, 00000000
Unnamed_1_E2E:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-38H], 0                  ; 106E _ 48: 81. 7D, C8, 00000000
; Note: Immediate operand could be made smaller by sign extension
        je      ?_082                                   ; 1076 _ 0F 84, 0000000D
        mov     rcx, qword ptr [rbp-38H]                ; 107C _ 48: 8B. 4D, C8
        call    Unnamed_1_888                           ; 1080 _ E8, FFFFFA43
        mov     qword ptr [rbp-58H], rax                ; 1085 _ 48: 89. 45, A8
?_082:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-40H], 0                  ; 1089 _ 48: 81. 7D, C0, 00000000
; Note: Immediate operand could be made smaller by sign extension
        je      ?_083                                   ; 1091 _ 0F 84, 0000000D
        mov     rcx, qword ptr [rbp-40H]                ; 1097 _ 48: 8B. 4D, C0
        call    Unnamed_1_1B50                          ; 109B _ E8, 00000CF0
        mov     qword ptr [rbp-60H], rax                ; 10A0 _ 48: 89. 45, A0
?_083:  mov     rax, qword ptr [rbp-30H]                ; 10A4 _ 48: 8B. 45, D0
        add     rsp, 144                                ; 10A8 _ 48: 81. C4, 00000090
        pop     rbp                                     ; 10AF _ 5D
        ret                                             ; 10B0 _ C3

; Filling space: 0FH
; Filler type: Multi-byte NOP
;       db 66H, 66H, 66H, 66H, 66H, 66H, 2EH, 0FH
;       db 1FH, 84H, 00H, 00H, 00H, 00H, 00H

ALIGN   16

?_084   LABEL NEAR
        push    rbp                                     ; 10C0 _ 55
        mov     rbp, rsp                                ; 10C1 _ 48: 89. E5
        sub     rsp, 240                                ; 10C4 _ 48: 81. EC, 000000F0
        mov     rax, qword ptr [rbp+38H]                ; 10CB _ 48: 8B. 45, 38
        mov     r10, qword ptr [rbp+30H]                ; 10CF _ 4C: 8B. 55, 30
        mov     qword ptr [rbp-8H], rcx                 ; 10D3 _ 48: 89. 4D, F8
        mov     dword ptr [rbp-0CH], edx                ; 10D7 _ 89. 55, F4
        mov     qword ptr [rbp-18H], r8                 ; 10DA _ 4C: 89. 45, E8
        mov     qword ptr [rbp-20H], r9                 ; 10DE _ 4C: 89. 4D, E0
        mov     qword ptr [rbp-28H], r10                ; 10E2 _ 4C: 89. 55, D8
        mov     qword ptr [rbp-30H], rax                ; 10E6 _ 48: 89. 45, D0
        mov     qword ptr [rbp-48H], 0                  ; 10EA _ 48: C7. 45, B8, 00000000
        mov     qword ptr [rbp-50H], 0                  ; 10F2 _ 48: C7. 45, B0, 00000000
        mov     qword ptr [rbp-58H], 0                  ; 10FA _ 48: C7. 45, A8, 00000000
        mov     qword ptr [rbp-60H], 0                  ; 1102 _ 48: C7. 45, A0, 00000000
        mov     qword ptr [rbp-68H], 0                  ; 110A _ 48: C7. 45, 98, 00000000
        mov     qword ptr [rbp-70H], 0                  ; 1112 _ 48: C7. 45, 90, 00000000
        mov     qword ptr [rbp-40H], 0                  ; 111A _ 48: C7. 45, C0, 00000000
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-8H], 0                   ; 1122 _ 48: 81. 7D, F8, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_085                                   ; 112A _ 0F 85, 00000013
        mov     rax, 8000000000000002H                  ; 1130 _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-38H], rax                ; 113A _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 113E _ E9, 00000693

?_085:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-30H], 0                  ; 1143 _ 48: 81. 7D, D0, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_086                                   ; 114B _ 0F 85, 00000013
        mov     rax, 8000000000000002H                  ; 1151 _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-38H], rax                ; 115B _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 115F _ E9, 00000672

?_086:
; Note: Immediate operand could be made smaller by sign extension
        cmp     dword ptr [rbp-0CH], 18                 ; 1164 _ 81. 7D, F4, 00000012
; Note: Immediate operand could be made smaller by sign extension
        jge     ?_087                                   ; 116B _ 0F 8D, 00000013
        mov     rax, 8000000000000002H                  ; 1171 _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-38H], rax                ; 117B _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 117F _ E9, 00000652

?_087:  mov     rax, qword ptr [rbp-28H]                ; 1184 _ 48: 8B. 45, D8
        cmp     rax, qword ptr [rbp-20H]                ; 1188 _ 48: 3B. 45, E0
; Note: Immediate operand could be made smaller by sign extension
        jle     ?_088                                   ; 118C _ 0F 8E, 00000013
        mov     rax, 8000000000000002H                  ; 1192 _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-38H], rax                ; 119C _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 11A0 _ E9, 00000631

?_088:  mov     rax, qword ptr [rbp-28H]                ; 11A5 _ 48: 8B. 45, D8
        cmp     rax, qword ptr [rbp-18H]                ; 11A9 _ 48: 3B. 45, E8
; Note: Immediate operand could be made smaller by sign extension
        jge     ?_089                                   ; 11AD _ 0F 8D, 00000013
        mov     rax, 8000000000000002H                  ; 11B3 _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-38H], rax                ; 11BD _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 11C1 _ E9, 00000610

?_089:  mov     rax, qword ptr [rbp-18H]                ; 11C6 _ 48: 8B. 45, E8
        cmp     rax, qword ptr [rbp-20H]                ; 11CA _ 48: 3B. 45, E0
; Note: Immediate operand could be made smaller by sign extension
        jl      ?_090                                   ; 11CE _ 0F 8C, 00000013
        mov     rax, 8000000000000002H                  ; 11D4 _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-38H], rax                ; 11DE _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 11E2 _ E9, 000005EF

?_090:  lea     rcx, ptr [rbp-48H]                      ; 11E7 _ 48: 8D. 4D, B8
        lea     rdx, ptr [rbp-90H]                      ; 11EB _ 48: 8D. 95, FFFFFF70
        lea     r8, ptr [rbp-78H]                       ; 11F2 _ 4C: 8D. 45, 88
        lea     r9, ptr [?_529]                         ; 11F6 _ 4C: 8D. 0D, 0000932F(rel)
        call    Unnamed_1_9AE                           ; 11FD _ E8, FFFFF9EC
        mov     qword ptr [rbp-38H], rax                ; 1202 _ 48: 89. 45, C8
; Note: Immediate operand could be made smaller by zero extension
        mov     rax, 0                                  ; 1206 _ 48: B8, 0000000000000000
        cmp     rax, qword ptr [rbp-38H]                ; 1210 _ 48: 3B. 45, C8
; Note: Immediate operand could be made smaller by sign extension
        je      ?_091                                   ; 1214 _ 0F 84, 00000005
        jmp     Unnamed_1_1596                          ; 121A _ E9, 000005B7

?_091:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-48H], 0                  ; 121F _ 48: 81. 7D, B8, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_092                                   ; 1227 _ 0F 85, 00000013
        mov     rax, 8000000000000009H                  ; 122D _ 48: B8, 8000000000000009
        mov     qword ptr [rbp-38H], rax                ; 1237 _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 123B _ E9, 00000596

?_092:  lea     rcx, ptr [rbp-50H]                      ; 1240 _ 48: 8D. 4D, B0
        lea     rdx, ptr [rbp-90H]                      ; 1244 _ 48: 8D. 95, FFFFFF70
        lea     r8, ptr [rbp-80H]                       ; 124B _ 4C: 8D. 45, 80
        lea     r9, ptr [?_530]                         ; 124F _ 4C: 8D. 0D, 000092E6(rel)
        mov     eax, dword ptr [rbp-78H]                ; 1256 _ 8B. 45, 88
        mov     dword ptr [rbp-84H], eax                ; 1259 _ 89. 85, FFFFFF7C
        call    Unnamed_1_9AE                           ; 125F _ E8, FFFFF98A
        mov     qword ptr [rbp-38H], rax                ; 1264 _ 48: 89. 45, C8
; Note: Immediate operand could be made smaller by zero extension
        mov     rax, 0                                  ; 1268 _ 48: B8, 0000000000000000
        cmp     rax, qword ptr [rbp-38H]                ; 1272 _ 48: 3B. 45, C8
; Note: Immediate operand could be made smaller by sign extension
        je      ?_093                                   ; 1276 _ 0F 84, 00000005
        jmp     Unnamed_1_1596                          ; 127C _ E9, 00000555

?_093:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-50H], 0                  ; 1281 _ 48: 81. 7D, B0, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_094                                   ; 1289 _ 0F 85, 00000013
        mov     rax, 8000000000000009H                  ; 128F _ 48: B8, 8000000000000009
        mov     qword ptr [rbp-38H], rax                ; 1299 _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 129D _ E9, 00000534

?_094:  mov     eax, dword ptr [rbp-80H]                ; 12A2 _ 8B. 45, 80
        cmp     eax, dword ptr [rbp-84H]                ; 12A5 _ 3B. 85, FFFFFF7C
; Note: Immediate operand could be made smaller by sign extension
        je      ?_095                                   ; 12AB _ 0F 84, 00000013
        mov     rax, 8000000000000003H                  ; 12B1 _ 48: B8, 8000000000000003
        mov     qword ptr [rbp-38H], rax                ; 12BB _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 12BF _ E9, 00000512

?_095:  lea     rcx, ptr [rbp-58H]                      ; 12C4 _ 48: 8D. 4D, A8
        lea     rdx, ptr [rbp-90H]                      ; 12C8 _ 48: 8D. 95, FFFFFF70
        lea     r8, ptr [rbp-78H]                       ; 12CF _ 4C: 8D. 45, 88
        lea     r9, ptr [?_531]                         ; 12D3 _ 4C: 8D. 0D, 00009272(rel)
        call    Unnamed_1_9AE                           ; 12DA _ E8, FFFFF90F
        mov     qword ptr [rbp-38H], rax                ; 12DF _ 48: 89. 45, C8
; Note: Immediate operand could be made smaller by zero extension
        mov     rax, 0                                  ; 12E3 _ 48: B8, 0000000000000000
        cmp     rax, qword ptr [rbp-38H]                ; 12ED _ 48: 3B. 45, C8
; Note: Immediate operand could be made smaller by sign extension
        je      ?_096                                   ; 12F1 _ 0F 84, 00000005
        jmp     Unnamed_1_1596                          ; 12F7 _ E9, 000004DA

?_096:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-58H], 0                  ; 12FC _ 48: 81. 7D, A8, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_097                                   ; 1304 _ 0F 85, 00000013
        mov     rax, 8000000000000009H                  ; 130A _ 48: B8, 8000000000000009
        mov     qword ptr [rbp-38H], rax                ; 1314 _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 1318 _ E9, 000004B9

?_097:  mov     eax, dword ptr [rbp-78H]                ; 131D _ 8B. 45, 88
        cmp     eax, dword ptr [rbp-84H]                ; 1320 _ 3B. 85, FFFFFF7C
; Note: Immediate operand could be made smaller by sign extension
        je      ?_098                                   ; 1326 _ 0F 84, 00000013
        mov     rax, 8000000000000003H                  ; 132C _ 48: B8, 8000000000000003
        mov     qword ptr [rbp-38H], rax                ; 1336 _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 133A _ E9, 00000497

?_098:  lea     rcx, ptr [rbp-60H]                      ; 133F _ 48: 8D. 4D, A0
        lea     rdx, ptr [rbp-90H]                      ; 1343 _ 48: 8D. 95, FFFFFF70
        lea     r8, ptr [rbp-78H]                       ; 134A _ 4C: 8D. 45, 88
        lea     r9, ptr [?_532]                         ; 134E _ 4C: 8D. 0D, 00009207(rel)
        call    Unnamed_1_9AE                           ; 1355 _ E8, FFFFF894
        mov     qword ptr [rbp-38H], rax                ; 135A _ 48: 89. 45, C8
; Note: Immediate operand could be made smaller by zero extension
        mov     rax, 0                                  ; 135E _ 48: B8, 0000000000000000
        cmp     rax, qword ptr [rbp-38H]                ; 1368 _ 48: 3B. 45, C8
; Note: Immediate operand could be made smaller by sign extension
        je      ?_099                                   ; 136C _ 0F 84, 00000005
        jmp     Unnamed_1_1596                          ; 1372 _ E9, 0000045F

?_099:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-60H], 0                  ; 1377 _ 48: 81. 7D, A0, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_100                                   ; 137F _ 0F 85, 00000013
        mov     rax, 8000000000000009H                  ; 1385 _ 48: B8, 8000000000000009
        mov     qword ptr [rbp-38H], rax                ; 138F _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 1393 _ E9, 0000043E

?_100:  mov     eax, dword ptr [rbp-78H]                ; 1398 _ 8B. 45, 88
        cmp     eax, dword ptr [rbp-84H]                ; 139B _ 3B. 85, FFFFFF7C
; Note: Immediate operand could be made smaller by sign extension
        je      ?_101                                   ; 13A1 _ 0F 84, 00000013
        mov     rax, 8000000000000003H                  ; 13A7 _ 48: B8, 8000000000000003
        mov     qword ptr [rbp-38H], rax                ; 13B1 _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 13B5 _ E9, 0000041C

?_101:  lea     rcx, ptr [rbp-68H]                      ; 13BA _ 48: 8D. 4D, 98
        lea     rdx, ptr [rbp-90H]                      ; 13BE _ 48: 8D. 95, FFFFFF70
        lea     r8, ptr [rbp-80H]                       ; 13C5 _ 4C: 8D. 45, 80
        lea     r9, ptr [?_533]                         ; 13C9 _ 4C: 8D. 0D, 0000919C(rel)
        call    Unnamed_1_9AE                           ; 13D0 _ E8, FFFFF819
        mov     qword ptr [rbp-38H], rax                ; 13D5 _ 48: 89. 45, C8
; Note: Immediate operand could be made smaller by zero extension
        mov     rax, 0                                  ; 13D9 _ 48: B8, 0000000000000000
        cmp     rax, qword ptr [rbp-38H]                ; 13E3 _ 48: 3B. 45, C8
; Note: Immediate operand could be made smaller by sign extension
        je      ?_102                                   ; 13E7 _ 0F 84, 00000005
        jmp     Unnamed_1_1596                          ; 13ED _ E9, 000003E4

?_102:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-68H], 0                  ; 13F2 _ 48: 81. 7D, 98, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_103                                   ; 13FA _ 0F 85, 00000013
        mov     rax, 8000000000000009H                  ; 1400 _ 48: B8, 8000000000000009
        mov     qword ptr [rbp-38H], rax                ; 140A _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 140E _ E9, 000003C3

?_103:  mov     eax, dword ptr [rbp-80H]                ; 1413 _ 8B. 45, 80
        cmp     eax, dword ptr [rbp-84H]                ; 1416 _ 3B. 85, FFFFFF7C
; Note: Immediate operand could be made smaller by sign extension
        je      ?_104                                   ; 141C _ 0F 84, 00000013
        mov     rax, 8000000000000003H                  ; 1422 _ 48: B8, 8000000000000003
        mov     qword ptr [rbp-38H], rax                ; 142C _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 1430 _ E9, 000003A1

?_104:  lea     rcx, ptr [rbp-70H]                      ; 1435 _ 48: 8D. 4D, 90
        lea     rdx, ptr [rbp-90H]                      ; 1439 _ 48: 8D. 95, FFFFFF70
        lea     r8, ptr [rbp-78H]                       ; 1440 _ 4C: 8D. 45, 88
        lea     r9, ptr [?_534]                         ; 1444 _ 4C: 8D. 0D, 00009131(rel)
        call    Unnamed_1_9AE                           ; 144B _ E8, FFFFF79E
        mov     qword ptr [rbp-38H], rax                ; 1450 _ 48: 89. 45, C8
; Note: Immediate operand could be made smaller by zero extension
        mov     rax, 0                                  ; 1454 _ 48: B8, 0000000000000000
        cmp     rax, qword ptr [rbp-38H]                ; 145E _ 48: 3B. 45, C8
; Note: Immediate operand could be made smaller by sign extension
        je      ?_105                                   ; 1462 _ 0F 84, 00000005
        jmp     Unnamed_1_1596                          ; 1468 _ E9, 00000369

?_105:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-70H], 0                  ; 146D _ 48: 81. 7D, 90, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_106                                   ; 1475 _ 0F 85, 00000013
        mov     rax, 8000000000000009H                  ; 147B _ 48: B8, 8000000000000009
        mov     qword ptr [rbp-38H], rax                ; 1485 _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 1489 _ E9, 00000348

?_106:  mov     eax, dword ptr [rbp-78H]                ; 148E _ 8B. 45, 88
        cmp     eax, dword ptr [rbp-84H]                ; 1491 _ 3B. 85, FFFFFF7C
; Note: Immediate operand could be made smaller by sign extension
        je      ?_107                                   ; 1497 _ 0F 84, 00000013
        mov     rax, 8000000000000003H                  ; 149D _ 48: B8, 8000000000000003
        mov     qword ptr [rbp-38H], rax                ; 14A7 _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 14AB _ E9, 00000326

?_107:
; Note: Immediate operand could be made smaller by zero extension
        mov     rcx, 40                                 ; 14B0 _ 48: B9, 0000000000000028
        call    Unnamed_1_FF                            ; 14BA _ E8, FFFFEE80
        mov     qword ptr [rbp-40H], rax                ; 14BF _ 48: 89. 45, C0
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-40H], 0                  ; 14C3 _ 48: 81. 7D, C0, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_108                                   ; 14CB _ 0F 85, 00000013
        mov     rax, 8000000000000009H                  ; 14D1 _ 48: B8, 8000000000000009
        mov     qword ptr [rbp-38H], rax                ; 14DB _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 14DF _ E9, 000002F2

?_108:  mov     rax, qword ptr [rbp-18H]                ; 14E4 _ 48: 8B. 45, E8
        mov     rcx, qword ptr [rbp-40H]                ; 14E8 _ 48: 8B. 4D, C0
        mov     qword ptr [rcx+10H], rax                ; 14EC _ 48: 89. 41, 10
        mov     rax, qword ptr [rbp-20H]                ; 14F0 _ 48: 8B. 45, E0
        mov     rcx, qword ptr [rbp-40H]                ; 14F4 _ 48: 8B. 4D, C0
        mov     qword ptr [rcx+18H], rax                ; 14F8 _ 48: 89. 41, 18
        mov     rax, qword ptr [rbp-28H]                ; 14FC _ 48: 8B. 45, D8
        mov     rcx, qword ptr [rbp-40H]                ; 1500 _ 48: 8B. 4D, C0
        mov     qword ptr [rcx+20H], rax                ; 1504 _ 48: 89. 41, 20
        mov     edx, dword ptr [rbp-0CH]                ; 1508 _ 8B. 55, F4
        imul    edx, dword ptr [rbp-84H]                ; 150B _ 0F AF. 95, FFFFFF7C
        movsxd  rax, edx                                ; 1512 _ 48: 63. C2
        shl     rax, 2                                  ; 1515 _ 48: C1. E0, 02
        mov     rcx, rax                                ; 1519 _ 48: 89. C1
        call    Unnamed_1_FF                            ; 151C _ E8, FFFFEE1E
        mov     rcx, qword ptr [rbp-40H]                ; 1521 _ 48: 8B. 4D, C0
        mov     qword ptr [rcx], rax                    ; 1525 _ 48: 89. 01
        mov     rax, qword ptr [rbp-40H]                ; 1528 _ 48: 8B. 45, C0
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rax], 0                      ; 152C _ 48: 81. 38, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_109                                   ; 1533 _ 0F 85, 00000013
        mov     rax, 8000000000000009H                  ; 1539 _ 48: B8, 8000000000000009
        mov     qword ptr [rbp-38H], rax                ; 1543 _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 1547 _ E9, 0000028A

?_109:  mov     eax, dword ptr [rbp-0CH]                ; 154C _ 8B. 45, F4
        imul    eax, dword ptr [rbp-84H]                ; 154F _ 0F AF. 85, FFFFFF7C
        movsxd  rcx, eax                                ; 1556 _ 48: 63. C8
        shl     rcx, 2                                  ; 1559 _ 48: C1. E1, 02
        call    Unnamed_1_FF                            ; 155D _ E8, FFFFEDDD
        mov     rcx, qword ptr [rbp-40H]                ; 1562 _ 48: 8B. 4D, C0
        mov     qword ptr [rcx+8H], rax                 ; 1566 _ 48: 89. 41, 08
        mov     rax, qword ptr [rbp-40H]                ; 156A _ 48: 8B. 45, C0
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rax+8H], 0                   ; 156E _ 48: 81. 78, 08, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_110                                   ; 1576 _ 0F 85, 00000013
        mov     rax, 8000000000000009H                  ; 157C _ 48: B8, 8000000000000009
        mov     qword ptr [rbp-38H], rax                ; 1586 _ 48: 89. 45, C8
        jmp     Unnamed_1_1596                          ; 158A _ E9, 00000247

?_110:  mov     dword ptr [rbp-98H], 0                  ; 158F _ C7. 85, FFFFFF68, 00000000
?_111:  mov     eax, dword ptr [rbp-98H]                ; 1599 _ 8B. 85, FFFFFF68
        cmp     eax, dword ptr [rbp-84H]                ; 159F _ 3B. 85, FFFFFF7C
        jge     ?_114                                   ; 15A5 _ 0F 8D, 00000133
        mov     dword ptr [rbp-94H], 0                  ; 15AB _ C7. 85, FFFFFF6C, 00000000
?_112:  mov     eax, dword ptr [rbp-94H]                ; 15B5 _ 8B. 85, FFFFFF6C
        cmp     eax, dword ptr [rbp-74H]                ; 15BB _ 3B. 45, 8C
        jge     ?_113                                   ; 15BE _ 0F 8D, 00000104
        mov     eax, dword ptr [rbp-98H]                ; 15C4 _ 8B. 85, FFFFFF68
        imul    eax, dword ptr [rbp-0CH]                ; 15CA _ 0F AF. 45, F4
        add     eax, dword ptr [rbp-94H]                ; 15CE _ 03. 85, FFFFFF6C
        movsxd  rcx, eax                                ; 15D4 _ 48: 63. C8
        mov     rdx, qword ptr [rbp-40H]                ; 15D7 _ 48: 8B. 55, C0
        mov     rdx, qword ptr [rdx]                    ; 15DB _ 48: 8B. 12
        mov     eax, dword ptr [rbp-98H]                ; 15DE _ 8B. 85, FFFFFF68
        imul    eax, dword ptr [rbp-74H]                ; 15E4 _ 0F AF. 45, 8C
        add     eax, dword ptr [rbp-94H]                ; 15E8 _ 03. 85, FFFFFF6C
        movsxd  r8, eax                                 ; 15EE _ 4C: 63. C0
        mov     r9, qword ptr [rbp-48H]                 ; 15F1 _ 4C: 8B. 4D, B8
        mov     eax, dword ptr [r9+r8*4]                ; 15F5 _ 43: 8B. 04 81
        mov     dword ptr [rdx+rcx*4], eax              ; 15F9 _ 89. 04 8A
        mov     eax, dword ptr [rbp-98H]                ; 15FC _ 8B. 85, FFFFFF68
        imul    eax, dword ptr [rbp-0CH]                ; 1602 _ 0F AF. 45, F4
        add     eax, dword ptr [rbp-94H]                ; 1606 _ 03. 85, FFFFFF6C
        movsxd  rcx, eax                                ; 160C _ 48: 63. C8
        mov     rdx, qword ptr [rbp-40H]                ; 160F _ 48: 8B. 55, C0
        mov     rdx, qword ptr [rdx+8H]                 ; 1613 _ 48: 8B. 52, 08
        mov     eax, dword ptr [rbp-98H]                ; 1617 _ 8B. 85, FFFFFF68
        imul    eax, dword ptr [rbp-74H]                ; 161D _ 0F AF. 45, 8C
        add     eax, dword ptr [rbp-94H]                ; 1621 _ 03. 85, FFFFFF6C
        movsxd  r8, eax                                 ; 1627 _ 4C: 63. C0
        mov     r9, qword ptr [rbp-60H]                 ; 162A _ 4C: 8B. 4D, A0
        mov     eax, dword ptr [r9+r8*4]                ; 162E _ 43: 8B. 04 81
        mov     dword ptr [rdx+rcx*4], eax              ; 1632 _ 89. 04 8A
        mov     eax, dword ptr [rbp-98H]                ; 1635 _ 8B. 85, FFFFFF68
        imul    eax, dword ptr [rbp-0CH]                ; 163B _ 0F AF. 45, F4
        add     eax, dword ptr [rbp-0CH]                ; 163F _ 03. 45, F4
        sub     eax, dword ptr [rbp-74H]                ; 1642 _ 2B. 45, 8C
        add     eax, dword ptr [rbp-94H]                ; 1645 _ 03. 85, FFFFFF6C
        movsxd  rcx, eax                                ; 164B _ 48: 63. C8
        mov     rdx, qword ptr [rbp-40H]                ; 164E _ 48: 8B. 55, C0
        mov     rdx, qword ptr [rdx]                    ; 1652 _ 48: 8B. 12
        mov     eax, dword ptr [rbp-98H]                ; 1655 _ 8B. 85, FFFFFF68
        imul    eax, dword ptr [rbp-74H]                ; 165B _ 0F AF. 45, 8C
        add     eax, dword ptr [rbp-94H]                ; 165F _ 03. 85, FFFFFF6C
        movsxd  r8, eax                                 ; 1665 _ 4C: 63. C0
        mov     r9, qword ptr [rbp-58H]                 ; 1668 _ 4C: 8B. 4D, A8
        mov     eax, dword ptr [r9+r8*4]                ; 166C _ 43: 8B. 04 81
        mov     dword ptr [rdx+rcx*4], eax              ; 1670 _ 89. 04 8A
        mov     eax, dword ptr [rbp-98H]                ; 1673 _ 8B. 85, FFFFFF68
        imul    eax, dword ptr [rbp-0CH]                ; 1679 _ 0F AF. 45, F4
        add     eax, dword ptr [rbp-0CH]                ; 167D _ 03. 45, F4
        sub     eax, dword ptr [rbp-74H]                ; 1680 _ 2B. 45, 8C
        add     eax, dword ptr [rbp-94H]                ; 1683 _ 03. 85, FFFFFF6C
        movsxd  rcx, eax                                ; 1689 _ 48: 63. C8
        mov     rdx, qword ptr [rbp-40H]                ; 168C _ 48: 8B. 55, C0
        mov     rdx, qword ptr [rdx+8H]                 ; 1690 _ 48: 8B. 52, 08
        mov     eax, dword ptr [rbp-98H]                ; 1694 _ 8B. 85, FFFFFF68
        imul    eax, dword ptr [rbp-74H]                ; 169A _ 0F AF. 45, 8C
        add     eax, dword ptr [rbp-94H]                ; 169E _ 03. 85, FFFFFF6C
        movsxd  r8, eax                                 ; 16A4 _ 4C: 63. C0
        mov     r9, qword ptr [rbp-70H]                 ; 16A7 _ 4C: 8B. 4D, 90
        mov     eax, dword ptr [r9+r8*4]                ; 16AB _ 43: 8B. 04 81
        mov     dword ptr [rdx+rcx*4], eax              ; 16AF _ 89. 04 8A
        mov     eax, dword ptr [rbp-94H]                ; 16B2 _ 8B. 85, FFFFFF6C
; Note: Immediate operand could be made smaller by sign extension
        add     eax, 1                                  ; 16B8 _ 05, 00000001
        mov     dword ptr [rbp-94H], eax                ; 16BD _ 89. 85, FFFFFF6C
        jmp     ?_112                                   ; 16C3 _ E9, FFFFFEED

?_113:  mov     eax, dword ptr [rbp-98H]                ; 16C8 _ 8B. 85, FFFFFF68
; Note: Immediate operand could be made smaller by sign extension
        add     eax, 1                                  ; 16CE _ 05, 00000001
        mov     dword ptr [rbp-98H], eax                ; 16D3 _ 89. 85, FFFFFF68
        jmp     ?_111                                   ; 16D9 _ E9, FFFFFEBB

?_114:  mov     eax, dword ptr [rbp-0CH]                ; 16DE _ 8B. 45, F4
        mov     ecx, dword ptr [rbp-74H]                ; 16E1 _ 8B. 4D, 8C
        shl     ecx, 1                                  ; 16E4 _ C1. E1, 01
        cmp     eax, ecx                                ; 16E7 _ 39. C8
        jle     Unnamed_1_156D                          ; 16E9 _ 0F 8E, 000000BE
        mov     dword ptr [rbp-98H], 0                  ; 16EF _ C7. 85, FFFFFF68, 00000000
?_115:  mov     eax, dword ptr [rbp-98H]                ; 16F9 _ 8B. 85, FFFFFF68
        cmp     eax, dword ptr [rbp-84H]                ; 16FF _ 3B. 85, FFFFFF7C
        jge     Unnamed_1_156D                          ; 1705 _ 0F 8D, 000000A2
        mov     eax, dword ptr [rbp-74H]                ; 170B _ 8B. 45, 8C
        mov     dword ptr [rbp-94H], eax                ; 170E _ 89. 85, FFFFFF6C
?_116:  mov     eax, dword ptr [rbp-94H]                ; 1714 _ 8B. 85, FFFFFF6C
        mov     ecx, dword ptr [rbp-0CH]                ; 171A _ 8B. 4D, F4
        sub     ecx, dword ptr [rbp-74H]                ; 171D _ 2B. 4D, 8C
        cmp     eax, ecx                                ; 1720 _ 39. C8
; Note: Immediate operand could be made smaller by sign extension
        jge     ?_117                                   ; 1722 _ 0F 8D, 0000006F
        mov     eax, dword ptr [rbp-98H]                ; 1728 _ 8B. 85, FFFFFF68
        imul    eax, dword ptr [rbp-0CH]                ; 172E _ 0F AF. 45, F4
        add     eax, dword ptr [rbp-94H]                ; 1732 _ 03. 85, FFFFFF6C
        movsxd  rcx, eax                                ; 1738 _ 48: 63. C8
        mov     rdx, qword ptr [rbp-40H]                ; 173B _ 48: 8B. 55, C0
        mov     rdx, qword ptr [rdx]                    ; 173F _ 48: 8B. 12
        movsxd  r8, dword ptr [rbp-98H]                 ; 1742 _ 4C: 63. 85, FFFFFF68
        mov     r9, qword ptr [rbp-50H]                 ; 1749 _ 4C: 8B. 4D, B0
        mov     eax, dword ptr [r9+r8*4]                ; 174D _ 43: 8B. 04 81
        mov     dword ptr [rdx+rcx*4], eax              ; 1751 _ 89. 04 8A
        mov     eax, dword ptr [rbp-98H]                ; 1754 _ 8B. 85, FFFFFF68
        imul    eax, dword ptr [rbp-0CH]                ; 175A _ 0F AF. 45, F4
        add     eax, dword ptr [rbp-94H]                ; 175E _ 03. 85, FFFFFF6C
        movsxd  rcx, eax                                ; 1764 _ 48: 63. C8
        mov     rdx, qword ptr [rbp-40H]                ; 1767 _ 48: 8B. 55, C0
        mov     rdx, qword ptr [rdx+8H]                 ; 176B _ 48: 8B. 52, 08
        movsxd  r8, dword ptr [rbp-98H]                 ; 176F _ 4C: 63. 85, FFFFFF68
        mov     r9, qword ptr [rbp-68H]                 ; 1776 _ 4C: 8B. 4D, 98
        mov     eax, dword ptr [r9+r8*4]                ; 177A _ 43: 8B. 04 81
        mov     dword ptr [rdx+rcx*4], eax              ; 177E _ 89. 04 8A
        mov     eax, dword ptr [rbp-94H]                ; 1781 _ 8B. 85, FFFFFF6C
; Note: Immediate operand could be made smaller by sign extension
        add     eax, 1                                  ; 1787 _ 05, 00000001
        mov     dword ptr [rbp-94H], eax                ; 178C _ 89. 85, FFFFFF6C
        jmp     ?_116                                   ; 1792 _ E9, FFFFFF7D

?_117:  mov     eax, dword ptr [rbp-98H]                ; 1797 _ 8B. 85, FFFFFF68
; Note: Immediate operand could be made smaller by sign extension
        add     eax, 1                                  ; 179D _ 05, 00000001
        mov     dword ptr [rbp-98H], eax                ; 17A2 _ 89. 85, FFFFFF68
        jmp     ?_115                                   ; 17A8 _ E9, FFFFFF4C

Unnamed_1_156D:
        mov     eax, dword ptr [rbp-0CH]                ; 17AD _ 8B. 45, F4
        mov     rcx, qword ptr [rbp-30H]                ; 17B0 _ 48: 8B. 4D, D0
        mov     dword ptr [rcx+4H], eax                 ; 17B4 _ 89. 41, 04
        mov     eax, dword ptr [rbp-84H]                ; 17B7 _ 8B. 85, FFFFFF7C
        mov     rcx, qword ptr [rbp-30H]                ; 17BD _ 48: 8B. 4D, D0
        mov     dword ptr [rcx], eax                    ; 17C1 _ 89. 01
        mov     rcx, qword ptr [rbp-40H]                ; 17C3 _ 48: 8B. 4D, C0
        mov     rdx, qword ptr [rbp-8H]                 ; 17C7 _ 48: 8B. 55, F8
        mov     qword ptr [rdx], rcx                    ; 17CB _ 48: 89. 0A
        mov     qword ptr [rbp-40H], 0                  ; 17CE _ 48: C7. 45, C0, 00000000
Unnamed_1_1596:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-48H], 0                  ; 17D6 _ 48: 81. 7D, B8, 00000000
; Note: Immediate operand could be made smaller by sign extension
        je      ?_118                                   ; 17DE _ 0F 84, 00000018
        mov     rax, qword ptr [?_578]                  ; 17E4 _ 48: 8B. 05, 000094BD(rel)
        mov     rax, qword ptr [rax+48H]                ; 17EB _ 48: 8B. 40, 48
        mov     rcx, qword ptr [rbp-48H]                ; 17EF _ 48: 8B. 4D, B8
        call    rax                                     ; 17F3 _ FF. D0
        mov     qword ptr [rbp-0A0H], rax               ; 17F5 _ 48: 89. 85, FFFFFF60
?_118:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-50H], 0                  ; 17FC _ 48: 81. 7D, B0, 00000000
; Note: Immediate operand could be made smaller by sign extension
        je      ?_119                                   ; 1804 _ 0F 84, 00000018
        mov     rax, qword ptr [?_578]                  ; 180A _ 48: 8B. 05, 00009497(rel)
        mov     rax, qword ptr [rax+48H]                ; 1811 _ 48: 8B. 40, 48
        mov     rcx, qword ptr [rbp-50H]                ; 1815 _ 48: 8B. 4D, B0
        call    rax                                     ; 1819 _ FF. D0
        mov     qword ptr [rbp-0A8H], rax               ; 181B _ 48: 89. 85, FFFFFF58
?_119:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-58H], 0                  ; 1822 _ 48: 81. 7D, A8, 00000000
; Note: Immediate operand could be made smaller by sign extension
        je      ?_120                                   ; 182A _ 0F 84, 00000018
        mov     rax, qword ptr [?_578]                  ; 1830 _ 48: 8B. 05, 00009471(rel)
        mov     rax, qword ptr [rax+48H]                ; 1837 _ 48: 8B. 40, 48
        mov     rcx, qword ptr [rbp-58H]                ; 183B _ 48: 8B. 4D, A8
        call    rax                                     ; 183F _ FF. D0
        mov     qword ptr [rbp-0B0H], rax               ; 1841 _ 48: 89. 85, FFFFFF50
?_120:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-60H], 0                  ; 1848 _ 48: 81. 7D, A0, 00000000
; Note: Immediate operand could be made smaller by sign extension
        je      ?_121                                   ; 1850 _ 0F 84, 00000018
        mov     rax, qword ptr [?_578]                  ; 1856 _ 48: 8B. 05, 0000944B(rel)
        mov     rax, qword ptr [rax+48H]                ; 185D _ 48: 8B. 40, 48
        mov     rcx, qword ptr [rbp-60H]                ; 1861 _ 48: 8B. 4D, A0
        call    rax                                     ; 1865 _ FF. D0
        mov     qword ptr [rbp-0B8H], rax               ; 1867 _ 48: 89. 85, FFFFFF48
?_121:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-68H], 0                  ; 186E _ 48: 81. 7D, 98, 00000000
; Note: Immediate operand could be made smaller by sign extension
        je      ?_122                                   ; 1876 _ 0F 84, 00000018
        mov     rax, qword ptr [?_578]                  ; 187C _ 48: 8B. 05, 00009425(rel)
        mov     rax, qword ptr [rax+48H]                ; 1883 _ 48: 8B. 40, 48
        mov     rcx, qword ptr [rbp-68H]                ; 1887 _ 48: 8B. 4D, 98
        call    rax                                     ; 188B _ FF. D0
        mov     qword ptr [rbp-0C0H], rax               ; 188D _ 48: 89. 85, FFFFFF40
?_122:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-70H], 0                  ; 1894 _ 48: 81. 7D, 90, 00000000
; Note: Immediate operand could be made smaller by sign extension
        je      ?_123                                   ; 189C _ 0F 84, 00000018
        mov     rax, qword ptr [?_578]                  ; 18A2 _ 48: 8B. 05, 000093FF(rel)
        mov     rax, qword ptr [rax+48H]                ; 18A9 _ 48: 8B. 40, 48
        mov     rcx, qword ptr [rbp-70H]                ; 18AD _ 48: 8B. 4D, 90
        call    rax                                     ; 18B1 _ FF. D0
        mov     qword ptr [rbp-0C8H], rax               ; 18B3 _ 48: 89. 85, FFFFFF38
?_123:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-40H], 0                  ; 18BA _ 48: 81. 7D, C0, 00000000
; Note: Immediate operand could be made smaller by sign extension
        je      ?_124                                   ; 18C2 _ 0F 84, 00000010
        mov     rcx, qword ptr [rbp-40H]                ; 18C8 _ 48: 8B. 4D, C0
        call    Unnamed_1_1B50                          ; 18CC _ E8, 000004BF
        mov     qword ptr [rbp-0D0H], rax               ; 18D1 _ 48: 89. 85, FFFFFF30
?_124:  mov     rax, qword ptr [rbp-38H]                ; 18D8 _ 48: 8B. 45, C8
        add     rsp, 240                                ; 18DC _ 48: 81. C4, 000000F0
        pop     rbp                                     ; 18E3 _ 5D
        ret                                             ; 18E4 _ C3

; Filling space: 0BH
; Filler type: Multi-byte NOP
;       db 66H, 66H, 2EH, 0FH, 1FH, 84H, 00H, 00H
;       db 00H, 00H, 00H

ALIGN   16

?_125   LABEL NEAR
        push    rbp                                     ; 18F0 _ 55
        mov     rbp, rsp                                ; 18F1 _ 48: 89. E5
        push    rsi                                     ; 18F4 _ 56
        push    rbx                                     ; 18F5 _ 53
        sub     rsp, 192                                ; 18F6 _ 48: 81. EC, 000000C0
        mov     qword ptr [rbp-18H], rcx                ; 18FD _ 48: 89. 4D, E8
        mov     qword ptr [rbp-20H], rdx                ; 1901 _ 48: 89. 55, E0
        mov     qword ptr [rbp-28H], r8                 ; 1905 _ 4C: 89. 45, D8
        mov     qword ptr [rbp-30H], r9                 ; 1909 _ 4C: 89. 4D, D0
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-18H], 0                  ; 190D _ 48: 81. 7D, E8, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_126                                   ; 1915 _ 0F 85, 00000013
        mov     rax, 8000000000000002H                  ; 191B _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-38H], rax                ; 1925 _ 48: 89. 45, C8
        jmp     Unnamed_1_1AA8                          ; 1929 _ E9, 000003BA

?_126:  mov     rax, qword ptr [rbp-18H]                ; 192E _ 48: 8B. 45, E8
; Note: Immediate operand could be made smaller by sign extension
        cmp     dword ptr [rax+58H], 7                  ; 1932 _ 81. 78, 58, 00000007
; Note: Immediate operand could be made smaller by sign extension
        je      ?_127                                   ; 1939 _ 0F 84, 00000013
        mov     rax, 8000000000000002H                  ; 193F _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-38H], rax                ; 1949 _ 48: 89. 45, C8
        jmp     Unnamed_1_1AA8                          ; 194D _ E9, 00000396

?_127:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-20H], 0                  ; 1952 _ 48: 81. 7D, E0, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_128                                   ; 195A _ 0F 85, 00000013
        mov     rax, 8000000000000002H                  ; 1960 _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-38H], rax                ; 196A _ 48: 89. 45, C8
        jmp     Unnamed_1_1AA8                          ; 196E _ E9, 00000375

?_128:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-28H], 0                  ; 1973 _ 48: 81. 7D, D8, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_129                                   ; 197B _ 0F 85, 00000013
        mov     rax, 8000000000000002H                  ; 1981 _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-38H], rax                ; 198B _ 48: 89. 45, C8
        jmp     Unnamed_1_1AA8                          ; 198F _ E9, 00000354

?_129:
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-30H], 0                  ; 1994 _ 48: 81. 7D, D0, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_130                                   ; 199C _ 0F 85, 00000013
        mov     rax, 8000000000000002H                  ; 19A2 _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-38H], rax                ; 19AC _ 48: 89. 45, C8
        jmp     Unnamed_1_1AA8                          ; 19B0 _ E9, 00000333

?_130:  mov     rax, qword ptr [rbp-18H]                ; 19B5 _ 48: 8B. 45, E8
        mov     rax, qword ptr [rax+0A0H]               ; 19B9 _ 48: 8B. 80, 000000A0
        mov     qword ptr [rbp-40H], rax                ; 19C0 _ 48: 89. 45, C0
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-40H], 0                  ; 19C4 _ 48: 81. 7D, C0, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_131                                   ; 19CC _ 0F 85, 00000013
        mov     rax, 8000000000000002H                  ; 19D2 _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-38H], rax                ; 19DC _ 48: 89. 45, C8
        jmp     Unnamed_1_1AA8                          ; 19E0 _ E9, 00000303

?_131:  mov     rax, qword ptr [rbp-40H]                ; 19E5 _ 48: 8B. 45, C0
        mov     rax, qword ptr [rax+18H]                ; 19E9 _ 48: 8B. 40, 18
        mov     rcx, qword ptr [rbp-40H]                ; 19ED _ 48: 8B. 4D, C0
        sub     rax, qword ptr [rcx+10H]                ; 19F1 _ 48: 2B. 41, 10
        mov     qword ptr [rbp-48H], rax                ; 19F5 _ 48: 89. 45, B8
        mov     rax, qword ptr [rbp-40H]                ; 19F9 _ 48: 8B. 45, C0
        mov     rax, qword ptr [rax+20H]                ; 19FD _ 48: 8B. 40, 20
        mov     rcx, qword ptr [rbp-40H]                ; 1A01 _ 48: 8B. 4D, C0
        sub     rax, qword ptr [rcx+10H]                ; 1A05 _ 48: 2B. 41, 10
        mov     qword ptr [rbp-50H], rax                ; 1A09 _ 48: 89. 45, B0
        mov     rax, qword ptr [rbp-18H]                ; 1A0D _ 48: 8B. 45, E8
        mov     edx, dword ptr [rax+38H]                ; 1A11 _ 8B. 50, 38
        mov     r8d, dword ptr [?_536]                  ; 1A14 _ 44: 8B. 05, 00008B81(rel)
        shl     r8d, 1                                  ; 1A1B _ 41: C1. E0, 01
        shl     r8d, 1                                  ; 1A1F _ 41: C1. E0, 01
        sub     edx, r8d                                ; 1A23 _ 44: 29. C2
        movsxd  rax, edx                                ; 1A26 _ 48: 63. C2
        mov     qword ptr [rbp-58H], rax                ; 1A29 _ 48: 89. 45, A8
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-50H], 0                  ; 1A2D _ 48: 81. 7D, B0, 00000000
; Note: Immediate operand could be made smaller by sign extension
        je      ?_132                                   ; 1A35 _ 0F 84, 00000029
        mov     rax, qword ptr [rbp-58H]                ; 1A3B _ 48: 8B. 45, A8
        mov     rcx, qword ptr [rbp-50H]                ; 1A3F _ 48: 8B. 4D, B0
        imul    rcx, rax                                ; 1A43 _ 48: 0F AF. C8
        mov     rax, qword ptr [rbp-48H]                ; 1A47 _ 48: 8B. 45, B8
        mov     qword ptr [rbp-70H], rax                ; 1A4B _ 48: 89. 45, 90
        mov     rax, rcx                                ; 1A4F _ 48: 89. C8
        cqo                                             ; 1A52 _ 48: 99
        mov     rcx, qword ptr [rbp-70H]                ; 1A54 _ 48: 8B. 4D, 90
        idiv    rcx                                     ; 1A58 _ 48: F7. F9
        mov     qword ptr [rbp-58H], rax                ; 1A5B _ 48: 89. 45, A8
; Note: Immediate operand could be made smaller by sign extension
        jmp     ?_133                                   ; 1A5F _ E9, 00000008

?_132:  mov     qword ptr [rbp-58H], 0                  ; 1A64 _ 48: C7. 45, A8, 00000000
?_133:  lea     rax, ptr [rbp-68H]                      ; 1A6C _ 48: 8D. 45, 98
; Note: Immediate operand could be made smaller by zero extension
        mov     r8, 16                                  ; 1A70 _ 49: B8, 0000000000000010
        mov     rcx, qword ptr [?_578]                  ; 1A7A _ 48: 8B. 0D, 00009227(rel)
        mov     rcx, qword ptr [rcx+160H]               ; 1A81 _ 48: 8B. 89, 00000160
        mov     rdx, rax                                ; 1A88 _ 48: 89. C2
        mov     r9, qword ptr [rbp-18H]                 ; 1A8B _ 4C: 8B. 4D, E8
; Note: Immediate operand could be made smaller by sign extension
        add     r9, 44                                  ; 1A8F _ 49: 81. C1, 0000002C
        mov     qword ptr [rbp-78H], rcx                ; 1A96 _ 48: 89. 4D, 88
        mov     rcx, rdx                                ; 1A9A _ 48: 89. D1
        mov     rdx, r9                                 ; 1A9D _ 4C: 89. CA
        mov     r9, qword ptr [rbp-78H]                 ; 1AA0 _ 4C: 8B. 4D, 88
        mov     qword ptr [rbp-80H], rax                ; 1AA4 _ 48: 89. 45, 80
        call    r9                                      ; 1AA8 _ 41: FF. D1
        mov     rax, qword ptr [rbp-58H]                ; 1AAB _ 48: 8B. 45, A8
        mov     r10d, dword ptr [?_536]                 ; 1AAF _ 44: 8B. 15, 00008AE6(rel)
        shl     r10d, 1                                 ; 1AB6 _ 41: C1. E2, 01
        movsxd  rcx, r10d                               ; 1ABA _ 49: 63. CA
        add     rcx, rax                                ; 1ABD _ 48: 01. C1
        mov     r10d, ecx                               ; 1AC0 _ 41: 89. CA
        mov     dword ptr [rbp-5CH], r10d               ; 1AC3 _ 44: 89. 55, A4
        mov     r8, qword ptr [rbp-20H]                 ; 1AC7 _ 4C: 8B. 45, E0
        mov     rcx, qword ptr [rbp-80H]                ; 1ACB _ 48: 8B. 4D, 80
        mov     rdx, qword ptr [rbp-80H]                ; 1ACF _ 48: 8B. 55, 80
        call    Unnamed_1_A2B                           ; 1AD3 _ E8, FFFFF193
        mov     qword ptr [rbp-38H], rax                ; 1AD8 _ 48: 89. 45, C8
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-38H], 0                  ; 1ADC _ 48: 81. 7D, C8, 00000000
; Note: Immediate operand could be made smaller by sign extension
        je      Unnamed_1_18C3                          ; 1AE4 _ 0F 84, 00000019
        mov     rax, 800000000000000EH                  ; 1AEA _ 48: B8, 800000000000000E
        cmp     qword ptr [rbp-38H], rax                ; 1AF4 _ 48: 39. 45, C8
; Note: Immediate operand could be made smaller by sign extension
        je      Unnamed_1_18C3                          ; 1AF8 _ 0F 84, 00000005
        jmp     Unnamed_1_1AA8                          ; 1AFE _ E9, 000001E5

Unnamed_1_18C3:
        lea     r8, ptr [rbp-68H]                       ; 1B03 _ 4C: 8D. 45, 98
        mov     rcx, qword ptr [rbp-28H]                ; 1B07 _ 48: 8B. 4D, D8
        mov     rdx, qword ptr [rbp-30H]                ; 1B0B _ 48: 8B. 55, D0
        mov     rax, qword ptr [rbp-40H]                ; 1B0F _ 48: 8B. 45, C0
        mov     r9, qword ptr [rax+8H]                  ; 1B13 _ 4C: 8B. 48, 08
        mov     rax, qword ptr [rbp-18H]                ; 1B17 _ 48: 8B. 45, E8
; Note: Immediate operand could be made smaller by sign extension
        add     rax, 32                                 ; 1B1B _ 48: 05, 00000020
        mov     r10, qword ptr [rbp-18H]                ; 1B21 _ 4C: 8B. 55, E8
; Note: Immediate operand could be made smaller by sign extension
        add     r10, 44                                 ; 1B25 _ 49: 81. C2, 0000002C
        mov     r11, qword ptr [rbp-18H]                ; 1B2C _ 4C: 8B. 5D, E8
        mov     bl, byte ptr [r11+0A8H]                 ; 1B30 _ 41: 8A. 9B, 000000A8
        mov     r11, qword ptr [rbp-18H]                ; 1B37 _ 4C: 8B. 5D, E8
        add     r11, 176                                ; 1B3B _ 49: 81. C3, 000000B0
        mov     qword ptr [rsp+20H], rax                ; 1B42 _ 48: 89. 44 24, 20
        mov     qword ptr [rsp+28H], r10                ; 1B47 _ 4C: 89. 54 24, 28
        movzx   esi, bl                                 ; 1B4C _ 0F B6. F3
        mov     dword ptr [rsp+30H], esi                ; 1B4F _ 89. 74 24, 30
        mov     qword ptr [rsp+38H], r11                ; 1B53 _ 4C: 89. 5C 24, 38
        call    Unnamed_1_B13                           ; 1B58 _ E8, FFFFF1F6
        mov     qword ptr [rbp-38H], rax                ; 1B5D _ 48: 89. 45, C8
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-38H], 0                  ; 1B61 _ 48: 81. 7D, C8, 00000000
; Note: Immediate operand could be made smaller by sign extension
        je      Unnamed_1_1948                          ; 1B69 _ 0F 84, 00000019
        mov     rax, 800000000000000EH                  ; 1B6F _ 48: B8, 800000000000000E
        cmp     qword ptr [rbp-38H], rax                ; 1B79 _ 48: 39. 45, C8
; Note: Immediate operand could be made smaller by sign extension
        je      Unnamed_1_1948                          ; 1B7D _ 0F 84, 00000005
        jmp     Unnamed_1_1AA8                          ; 1B83 _ E9, 00000160

Unnamed_1_1948:
        lea     rax, ptr [rbp-68H]                      ; 1B88 _ 48: 8D. 45, 98
; Note: Immediate operand could be made smaller by zero extension
        mov     r8, 16                                  ; 1B8C _ 49: B8, 0000000000000010
        mov     rcx, qword ptr [?_578]                  ; 1B96 _ 48: 8B. 0D, 0000910B(rel)
        mov     rcx, qword ptr [rcx+160H]               ; 1B9D _ 48: 8B. 89, 00000160
        mov     rdx, rax                                ; 1BA4 _ 48: 89. C2
        mov     r9, qword ptr [rbp-18H]                 ; 1BA7 _ 4C: 8B. 4D, E8
; Note: Immediate operand could be made smaller by sign extension
        add     r9, 44                                  ; 1BAB _ 49: 81. C1, 0000002C
        mov     qword ptr [rbp-88H], rcx                ; 1BB2 _ 48: 89. 8D, FFFFFF78
        mov     rcx, rdx                                ; 1BB9 _ 48: 89. D1
        mov     rdx, r9                                 ; 1BBC _ 4C: 89. CA
        mov     r9, qword ptr [rbp-88H]                 ; 1BBF _ 4C: 8B. 8D, FFFFFF78
        mov     qword ptr [rbp-90H], rax                ; 1BC6 _ 48: 89. 85, FFFFFF70
        call    r9                                      ; 1BCD _ 41: FF. D1
        mov     rax, qword ptr [rbp-18H]                ; 1BD0 _ 48: 8B. 45, E8
        movsxd  rax, dword ptr [rax+38H]                ; 1BD4 _ 48: 63. 40, 38
        mov     rcx, qword ptr [rbp-58H]                ; 1BD8 _ 48: 8B. 4D, A8
        mov     r10d, dword ptr [?_536]                 ; 1BDC _ 44: 8B. 15, 000089B9(rel)
        shl     r10d, 1                                 ; 1BE3 _ 41: C1. E2, 01
        movsxd  rdx, r10d                               ; 1BE7 _ 49: 63. D2
        add     rdx, rcx                                ; 1BEA _ 48: 01. CA
        sub     rax, rdx                                ; 1BED _ 48: 29. D0
        mov     r10d, eax                               ; 1BF0 _ 41: 89. C2
        mov     dword ptr [rbp-5CH], r10d               ; 1BF3 _ 44: 89. 55, A4
        mov     rax, qword ptr [rbp-58H]                ; 1BF7 _ 48: 8B. 45, A8
        mov     r10d, dword ptr [?_536]                 ; 1BFB _ 44: 8B. 15, 0000899A(rel)
        shl     r10d, 1                                 ; 1C02 _ 41: C1. E2, 01
        movsxd  rcx, r10d                               ; 1C06 _ 49: 63. CA
        add     rcx, rax                                ; 1C09 _ 48: 01. C1
        mov     r10d, ecx                               ; 1C0C _ 41: 89. CA
        mov     r11d, dword ptr [rbp-68H]               ; 1C0F _ 44: 8B. 5D, 98
        add     r11d, r10d                              ; 1C13 _ 45: 01. D3
        mov     dword ptr [rbp-68H], r11d               ; 1C16 _ 44: 89. 5D, 98
        mov     r8, qword ptr [rbp-20H]                 ; 1C1A _ 4C: 8B. 45, E0
        mov     rcx, qword ptr [rbp-90H]                ; 1C1E _ 48: 8B. 8D, FFFFFF70
        mov     rdx, qword ptr [rbp-90H]                ; 1C25 _ 48: 8B. 95, FFFFFF70
        call    Unnamed_1_A2B                           ; 1C2C _ E8, FFFFF03A
        mov     qword ptr [rbp-38H], rax                ; 1C31 _ 48: 89. 45, C8
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-38H], 0                  ; 1C35 _ 48: 81. 7D, C8, 00000000
; Note: Immediate operand could be made smaller by sign extension
        je      Unnamed_1_1A1C                          ; 1C3D _ 0F 84, 00000019
        mov     rax, 800000000000000EH                  ; 1C43 _ 48: B8, 800000000000000E
        cmp     qword ptr [rbp-38H], rax                ; 1C4D _ 48: 39. 45, C8
; Note: Immediate operand could be made smaller by sign extension
        je      Unnamed_1_1A1C                          ; 1C51 _ 0F 84, 00000005
        jmp     Unnamed_1_1AA8                          ; 1C57 _ E9, 0000008C

Unnamed_1_1A1C:
        lea     r8, ptr [rbp-68H]                       ; 1C5C _ 4C: 8D. 45, 98
        mov     rcx, qword ptr [rbp-28H]                ; 1C60 _ 48: 8B. 4D, D8
        mov     rdx, qword ptr [rbp-30H]                ; 1C64 _ 48: 8B. 55, D0
        mov     rax, qword ptr [rbp-40H]                ; 1C68 _ 48: 8B. 45, C0
        mov     r9, qword ptr [rax]                     ; 1C6C _ 4C: 8B. 08
        mov     rax, qword ptr [rbp-18H]                ; 1C6F _ 48: 8B. 45, E8
; Note: Immediate operand could be made smaller by sign extension
        add     rax, 32                                 ; 1C73 _ 48: 05, 00000020
        mov     r10, qword ptr [rbp-18H]                ; 1C79 _ 4C: 8B. 55, E8
; Note: Immediate operand could be made smaller by sign extension
        add     r10, 44                                 ; 1C7D _ 49: 81. C2, 0000002C
        mov     r11, qword ptr [rbp-18H]                ; 1C84 _ 4C: 8B. 5D, E8
        mov     bl, byte ptr [r11+0A8H]                 ; 1C88 _ 41: 8A. 9B, 000000A8
        mov     r11, qword ptr [rbp-18H]                ; 1C8F _ 4C: 8B. 5D, E8
        add     r11, 176                                ; 1C93 _ 49: 81. C3, 000000B0
        mov     qword ptr [rsp+20H], rax                ; 1C9A _ 48: 89. 44 24, 20
        mov     qword ptr [rsp+28H], r10                ; 1C9F _ 4C: 89. 54 24, 28
        movzx   esi, bl                                 ; 1CA4 _ 0F B6. F3
        mov     dword ptr [rsp+30H], esi                ; 1CA7 _ 89. 74 24, 30
        mov     qword ptr [rsp+38H], r11                ; 1CAB _ 4C: 89. 5C 24, 38
        call    Unnamed_1_B13                           ; 1CB0 _ E8, FFFFF09E
        mov     qword ptr [rbp-38H], rax                ; 1CB5 _ 48: 89. 45, C8
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-38H], 0                  ; 1CB9 _ 48: 81. 7D, C8, 00000000
; Note: Immediate operand could be made smaller by sign extension
        je      Unnamed_1_1AA0                          ; 1CC1 _ 0F 84, 00000019
        mov     rax, 800000000000000EH                  ; 1CC7 _ 48: B8, 800000000000000E
        cmp     qword ptr [rbp-38H], rax                ; 1CD1 _ 48: 39. 45, C8
; Note: Immediate operand could be made smaller by sign extension
        je      Unnamed_1_1AA0                          ; 1CD5 _ 0F 84, 00000005
; Note: Immediate operand could be made smaller by sign extension
        jmp     Unnamed_1_1AA8                          ; 1CDB _ E9, 00000008

Unnamed_1_1AA0:
        mov     qword ptr [rbp-38H], 0                  ; 1CE0 _ 48: C7. 45, C8, 00000000
Unnamed_1_1AA8:
        mov     rax, qword ptr [rbp-38H]                ; 1CE8 _ 48: 8B. 45, C8
        add     rsp, 192                                ; 1CEC _ 48: 81. C4, 000000C0
        pop     rbx                                     ; 1CF3 _ 5B
        pop     rsi                                     ; 1CF4 _ 5E
        pop     rbp                                     ; 1CF5 _ 5D
        ret                                             ; 1CF6 _ C3

; Filling space: 9H
; Filler type: Multi-byte NOP
;       db 66H, 0FH, 1FH, 84H, 00H, 00H, 00H, 00H
;       db 00H

ALIGN   16

?_134   LABEL NEAR
        push    rbp                                     ; 1D00 _ 55
        mov     rbp, rsp                                ; 1D01 _ 48: 89. E5
        sub     rsp, 48                                 ; 1D04 _ 48: 83. EC, 30
        mov     qword ptr [rbp-8H], rcx                 ; 1D08 _ 48: 89. 4D, F8
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-8H], 0                   ; 1D0C _ 48: 81. 7D, F8, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_135                                   ; 1D14 _ 0F 85, 00000013
        mov     rax, 8000000000000002H                  ; 1D1A _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-10H], rax                ; 1D24 _ 48: 89. 45, F0
; Note: Immediate operand could be made smaller by sign extension
        jmp     Unnamed_1_1B37                          ; 1D28 _ E9, 0000004A

?_135:  mov     rax, qword ptr [rbp-8H]                 ; 1D2D _ 48: 8B. 45, F8
; Note: Immediate operand could be made smaller by sign extension
        cmp     dword ptr [rax+58H], 7                  ; 1D31 _ 81. 78, 58, 00000007
; Note: Immediate operand could be made smaller by sign extension
        je      ?_136                                   ; 1D38 _ 0F 84, 00000013
        mov     rax, 8000000000000002H                  ; 1D3E _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-10H], rax                ; 1D48 _ 48: 89. 45, F0
; Note: Immediate operand could be made smaller by sign extension
        jmp     Unnamed_1_1B37                          ; 1D4C _ E9, 00000026

?_136:  mov     rax, qword ptr [rbp-8H]                 ; 1D51 _ 48: 8B. 45, F8
        mov     rax, qword ptr [rax+0A0H]               ; 1D55 _ 48: 8B. 80, 000000A0
        mov     rcx, rax                                ; 1D5C _ 48: 89. C1
        call    Unnamed_1_1B50                          ; 1D5F _ E8, 0000002C
        mov     qword ptr [rbp-10H], rax                ; 1D64 _ 48: 89. 45, F0
        mov     rax, qword ptr [rbp-8H]                 ; 1D68 _ 48: 8B. 45, F8
        mov     qword ptr [rax+0A0H], 0                 ; 1D6C _ 48: C7. 80, 000000A0, 00000000
Unnamed_1_1B37:
        mov     rax, qword ptr [rbp-10H]                ; 1D77 _ 48: 8B. 45, F0
        add     rsp, 48                                 ; 1D7B _ 48: 83. C4, 30
        pop     rbp                                     ; 1D7F _ 5D
        ret                                             ; 1D80 _ C3

; Filling space: 0FH
; Filler type: Multi-byte NOP
;       db 66H, 66H, 66H, 66H, 66H, 66H, 2EH, 0FH
;       db 1FH, 84H, 00H, 00H, 00H, 00H, 00H

ALIGN   16

Unnamed_1_1B50 LABEL NEAR
        push    rbp                                     ; 1D90 _ 55
        mov     rbp, rsp                                ; 1D91 _ 48: 89. E5
        sub     rsp, 80                                 ; 1D94 _ 48: 83. EC, 50
        mov     qword ptr [rbp-8H], rcx                 ; 1D98 _ 48: 89. 4D, F8
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-8H], 0                   ; 1D9C _ 48: 81. 7D, F8, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_137                                   ; 1DA4 _ 0F 85, 00000013
        mov     rax, 8000000000000002H                  ; 1DAA _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-10H], rax                ; 1DB4 _ 48: 89. 45, F0
        jmp     ?_140                                   ; 1DB8 _ E9, 00000088

?_137:  mov     rax, qword ptr [rbp-8H]                 ; 1DBD _ 48: 8B. 45, F8
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rax], 0                      ; 1DC1 _ 48: 81. 38, 00000000
; Note: Immediate operand could be made smaller by sign extension
        je      ?_138                                   ; 1DC8 _ 0F 84, 00000023
        mov     rax, qword ptr [?_578]                  ; 1DCE _ 48: 8B. 05, 00008ED3(rel)
        mov     rax, qword ptr [rax+48H]                ; 1DD5 _ 48: 8B. 40, 48
        mov     rcx, qword ptr [rbp-8H]                 ; 1DD9 _ 48: 8B. 4D, F8
        mov     rcx, qword ptr [rcx]                    ; 1DDD _ 48: 8B. 09
        call    rax                                     ; 1DE0 _ FF. D0
        mov     rcx, qword ptr [rbp-8H]                 ; 1DE2 _ 48: 8B. 4D, F8
        mov     qword ptr [rcx], 0                      ; 1DE6 _ 48: C7. 01, 00000000
        mov     qword ptr [rbp-18H], rax                ; 1DED _ 48: 89. 45, E8
?_138:  mov     rax, qword ptr [rbp-8H]                 ; 1DF1 _ 48: 8B. 45, F8
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rax+8H], 0                   ; 1DF5 _ 48: 81. 78, 08, 00000000
; Note: Immediate operand could be made smaller by sign extension
        je      ?_139                                   ; 1DFD _ 0F 84, 00000025
        mov     rax, qword ptr [?_578]                  ; 1E03 _ 48: 8B. 05, 00008E9E(rel)
        mov     rax, qword ptr [rax+48H]                ; 1E0A _ 48: 8B. 40, 48
        mov     rcx, qword ptr [rbp-8H]                 ; 1E0E _ 48: 8B. 4D, F8
        mov     rcx, qword ptr [rcx+8H]                 ; 1E12 _ 48: 8B. 49, 08
        call    rax                                     ; 1E16 _ FF. D0
        mov     rcx, qword ptr [rbp-8H]                 ; 1E18 _ 48: 8B. 4D, F8
        mov     qword ptr [rcx+8H], 0                   ; 1E1C _ 48: C7. 41, 08, 00000000
        mov     qword ptr [rbp-20H], rax                ; 1E24 _ 48: 89. 45, E0
?_139:  mov     rax, qword ptr [?_578]                  ; 1E28 _ 48: 8B. 05, 00008E79(rel)
        mov     rax, qword ptr [rax+48H]                ; 1E2F _ 48: 8B. 40, 48
        mov     rcx, qword ptr [rbp-8H]                 ; 1E33 _ 48: 8B. 4D, F8
        call    rax                                     ; 1E37 _ FF. D0
        mov     qword ptr [rbp-10H], 0                  ; 1E39 _ 48: C7. 45, F0, 00000000
        mov     qword ptr [rbp-28H], rax                ; 1E41 _ 48: 89. 45, D8
?_140:  mov     rax, qword ptr [rbp-10H]                ; 1E45 _ 48: 8B. 45, F0
        add     rsp, 80                                 ; 1E49 _ 48: 83. C4, 50
        pop     rbp                                     ; 1E4D _ 5D
        ret                                             ; 1E4E _ C3

        nop                                             ; 1E4F _ 90
?_141:  push    rbp                                     ; 1E50 _ 55
        mov     rbp, rsp                                ; 1E51 _ 48: 89. E5
        sub     rsp, 64                                 ; 1E54 _ 48: 83. EC, 40
        mov     qword ptr [rbp-8H], rcx                 ; 1E58 _ 48: 89. 4D, F8
        mov     qword ptr [rbp-10H], rdx                ; 1E5C _ 48: 89. 55, F0
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-8H], 0                   ; 1E60 _ 48: 81. 7D, F8, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_142                                   ; 1E68 _ 0F 85, 00000013
        mov     rax, 8000000000000002H                  ; 1E6E _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-18H], rax                ; 1E78 _ 48: 89. 45, E8
        jmp     Unnamed_1_1D3A                          ; 1E7C _ E9, 000000F9

?_142:  mov     rax, qword ptr [rbp-8H]                 ; 1E81 _ 48: 8B. 45, F8
; Note: Immediate operand could be made smaller by sign extension
        cmp     dword ptr [rax+58H], 7                  ; 1E85 _ 81. 78, 58, 00000007
; Note: Immediate operand could be made smaller by sign extension
        je      ?_143                                   ; 1E8C _ 0F 84, 00000013
        mov     rax, 8000000000000002H                  ; 1E92 _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-18H], rax                ; 1E9C _ 48: 89. 45, E8
        jmp     Unnamed_1_1D3A                          ; 1EA0 _ E9, 000000D5

?_143:  lea     rcx, ptr [?_536]                        ; 1EA5 _ 48: 8D. 0D, 000086F0(rel)
        call    Unnamed_1_7E3                           ; 1EAC _ E8, FFFFEB72
        mov     qword ptr [rbp-18H], rax                ; 1EB1 _ 48: 89. 45, E8
; Note: Immediate operand could be made smaller by zero extension
        mov     rax, 0                                  ; 1EB5 _ 48: B8, 0000000000000000
        cmp     rax, qword ptr [rbp-18H]                ; 1EBF _ 48: 3B. 45, E8
; Note: Immediate operand could be made smaller by sign extension
        je      ?_144                                   ; 1EC3 _ 0F 84, 00000005
        jmp     Unnamed_1_1D3A                          ; 1EC9 _ E9, 000000AC

?_144:  mov     rax, qword ptr [rbp-8H]                 ; 1ECE _ 48: 8B. 45, F8
        mov     rax, qword ptr [rax+0A0H]               ; 1ED2 _ 48: 8B. 80, 000000A0
        mov     qword ptr [rbp-20H], rax                ; 1ED9 _ 48: 89. 45, E0
; Note: Immediate operand could be made smaller by sign extension
        cmp     qword ptr [rbp-20H], 0                  ; 1EDD _ 48: 81. 7D, E0, 00000000
; Note: Immediate operand could be made smaller by sign extension
        jne     ?_145                                   ; 1EE5 _ 0F 85, 00000013
        mov     rax, 8000000000000002H                  ; 1EEB _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-18H], rax                ; 1EF5 _ 48: 89. 45, E8
; Note: Immediate operand could be made smaller by sign extension
        jmp     Unnamed_1_1D3A                          ; 1EF9 _ E9, 0000007C

?_145:  mov     rax, qword ptr [rbp-10H]                ; 1EFE _ 48: 8B. 45, F0
        mov     rcx, qword ptr [rbp-20H]                ; 1F02 _ 48: 8B. 4D, E0
        cmp     rax, qword ptr [rcx+18H]                ; 1F06 _ 48: 3B. 41, 18
; Note: Immediate operand could be made smaller by sign extension
        jle     ?_146                                   ; 1F0A _ 0F 8E, 00000013
        mov     rax, 8000000000000002H                  ; 1F10 _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-18H], rax                ; 1F1A _ 48: 89. 45, E8
; Note: Immediate operand could be made smaller by sign extension
        jmp     Unnamed_1_1D3A                          ; 1F1E _ E9, 00000057

?_146:  mov     rax, qword ptr [rbp-10H]                ; 1F23 _ 48: 8B. 45, F0
        mov     rcx, qword ptr [rbp-20H]                ; 1F27 _ 48: 8B. 4D, E0
        cmp     rax, qword ptr [rcx+10H]                ; 1F2B _ 48: 3B. 41, 10
; Note: Immediate operand could be made smaller by sign extension
        jge     ?_147                                   ; 1F2F _ 0F 8D, 00000013
        mov     rax, 8000000000000002H                  ; 1F35 _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-18H], rax                ; 1F3F _ 48: 89. 45, E8
; Note: Immediate operand could be made smaller by sign extension
        jmp     Unnamed_1_1D3A                          ; 1F43 _ E9, 00000032

?_147:  mov     rax, qword ptr [rbp-10H]                ; 1F48 _ 48: 8B. 45, F0
        mov     rcx, qword ptr [rbp-20H]                ; 1F4C _ 48: 8B. 4D, E0
        mov     qword ptr [rcx+20H], rax                ; 1F50 _ 48: 89. 41, 20
        mov     rcx, qword ptr [rbp-8H]                 ; 1F54 _ 48: 8B. 4D, F8
        call    Unnamed_1_8C7                           ; 1F58 _ E8, FFFFEBAA
        mov     qword ptr [rbp-18H], rax                ; 1F5D _ 48: 89. 45, E8
; Note: Immediate operand could be made smaller by zero extension
        mov     rax, 0                                  ; 1F61 _ 48: B8, 0000000000000000
        cmp     rax, qword ptr [rbp-18H]                ; 1F6B _ 48: 3B. 45, E8
; Note: Immediate operand could be made smaller by sign extension
        je      Unnamed_1_1D3A                          ; 1F6F _ 0F 84, 00000005
; Note: Immediate operand could be made smaller by sign extension
        jmp     Unnamed_1_1D3A                          ; 1F75 _ E9, 00000000

Unnamed_1_1D3A LABEL NEAR
        mov     rax, qword ptr [rbp-18H]                ; 1F7A _ 48: 8B. 45, E8
        add     rsp, 64                                 ; 1F7E _ 48: 83. C4, 40
        pop     rbp                                     ; 1F82 _ 5D
        ret                                             ; 1F83 _ C3

Unnamed_1_1D44 LABEL NEAR
        push    rbp                                     ; 1F84 _ 55
        mov     rbp, rsp                                ; 1F85 _ 48: 89. E5
        push    r15                                     ; 1F88 _ 41: 57
        push    r14                                     ; 1F8A _ 41: 56
        push    r13                                     ; 1F8C _ 41: 55
        push    r12                                     ; 1F8E _ 41: 54
        push    rsi                                     ; 1F90 _ 56
        push    rdi                                     ; 1F91 _ 57
        push    rbx                                     ; 1F92 _ 53
        sub     rsp, 120                                ; 1F93 _ 48: 83. EC, 78
        mov     dword ptr [rbp-64H], r9d                ; 1F97 _ 44: 89. 4D, 9C
        mov     qword ptr [rbp-70H], r8                 ; 1F9B _ 4C: 89. 45, 90
        mov     qword ptr [rbp-78H], rdx                ; 1F9F _ 48: 89. 55, 88
        mov     rdi, rcx                                ; 1FA3 _ 48: 89. CF
        mov     qword ptr [rbp-40H], 0                  ; 1FA6 _ 48: C7. 45, C0, 00000000
        lea     rcx, ptr [?_506]                        ; 1FAE _ 48: 8D. 0D, 00008407(rel)
        lea     rdx, ptr [rbp-40H]                      ; 1FB5 _ 48: 8D. 55, C0
        call    Unnamed_1_50                            ; 1FB9 _ E8, FFFFE2D2
        mov     rbx, rax                                ; 1FBE _ 48: 89. C3
        test    rbx, rbx                                ; 1FC1 _ 48: 85. DB
        js      Unnamed_1_2021                          ; 1FC4 _ 0F 88, 00000297
        mov     rax, qword ptr [rbp-40H]                ; 1FCA _ 48: 8B. 45, C0
        lea     r15, ptr [?_504]                        ; 1FCE _ 4C: 8D. 3D, 000083C7(rel)
?_148:  mov     rcx, r15                                ; 1FD5 _ 4C: 89. F9
        mov     rdx, rax                                ; 1FD8 _ 48: 89. C2
        call    Unnamed_1_1B1                           ; 1FDB _ E8, FFFFE411
        mov     qword ptr [rbp-40H], rax                ; 1FE0 _ 48: 89. 45, C0
        mov     rbx, 800000000000000EH                  ; 1FE4 _ 48: BB, 800000000000000E
        test    rax, rax                                ; 1FEE _ 48: 85. C0
        je      Unnamed_1_2021                          ; 1FF1 _ 0F 84, 0000026A
        mov     ecx, dword ptr [rax+2CH]                ; 1FF7 _ 8B. 48, 2C
        lea     rsi, ptr [rax+48H]                      ; 1FFA _ 48: 8D. 70, 48
        mov     rdx, -1                                 ; 1FFE _ 48: C7. C2, FFFFFFFF
Unnamed_1_1DC5:
        mov     r13, rsi                                ; 2005 _ 49: 89. F5
        inc     rdx                                     ; 2008 _ 48: FF. C2
        cmp     rdx, rcx                                ; 200B _ 48: 39. CA
        jnc     ?_148                                   ; 200E _ 73, C5
        lea     rsi, ptr [r13+30H]                      ; 2010 _ 49: 8D. 75, 30
        mov     r8d, dword ptr [r13-18H]                ; 2014 _ 45: 8B. 45, E8
        test    r8b, 01H                                ; 2018 _ 41: F6. C0, 01
        jz      Unnamed_1_1DC5                          ; 201C _ 74, E7
        mov     rbx, qword ptr [rdi+10H]                ; 201E _ 48: 8B. 5F, 10
        cmp     rbx, qword ptr [r13-10H]                ; 2022 _ 49: 3B. 5D, F0
        jnz     Unnamed_1_1DC5                          ; 2026 _ 75, DD
        mov     qword ptr [rbp-48H], 0                  ; 2028 _ 48: C7. 45, B8, 00000000
        mov     rax, qword ptr [?_578]                  ; 2030 _ 48: 8B. 05, 00008C71(rel)
        mov     rax, qword ptr [rax+138H]               ; 2037 _ 48: 8B. 80, 00000138
        lea     rcx, ptr [rbp-58H]                      ; 203E _ 48: 8D. 4D, A8
        test    r8b, 04H                                ; 2042 _ 41: F6. C0, 04
        je      ?_150                                   ; 2046 _ 0F 84, 000000C7
        mov     qword ptr [rsp+20H], rcx                ; 204C _ 48: 89. 4C 24, 20
        lea     rdx, ptr [?_513]                        ; 2051 _ 48: 8D. 15, 000083D4(rel)
        lea     r9, ptr [rbp-50H]                       ; 2058 _ 4C: 8D. 4D, B0
        mov     ecx, 2                                  ; 205C _ B9, 00000002
        xor     r8d, r8d                                ; 2061 _ 45: 31. C0
        call    rax                                     ; 2064 _ FF. D0
        test    rax, rax                                ; 2066 _ 48: 85. C0
        js      Unnamed_1_1EA3                          ; 2069 _ 78, 78
        mov     rax, qword ptr [rbp-50H]                ; 206B _ 48: 8B. 45, B0
        test    rax, rax                                ; 206F _ 48: 85. C0
        jz      Unnamed_1_1EA3                          ; 2072 _ 74, 6F
        xor     r14d, r14d                              ; 2074 _ 45: 31. F6
        lea     rsi, ptr [?_513]                        ; 2077 _ 48: 8D. 35, 000083AE(rel)
        lea     r15, ptr [rbp-48H]                      ; 207E _ 4C: 8D. 7D, B8
        lea     r12, ptr [rbp-60H]                      ; 2082 _ 4C: 8D. 65, A0
?_149:  cmp     r14, rax                                ; 2086 _ 49: 39. C6
        jnc     Unnamed_1_1F4F                          ; 2089 _ 0F 83, 00000100
        mov     rax, qword ptr [rbp-58H]                ; 208F _ 48: 8B. 45, A8
        mov     rcx, qword ptr [rax+r14*8]              ; 2093 _ 4A: 8B. 0C F0
        mov     rax, qword ptr [?_578]                  ; 2097 _ 48: 8B. 05, 00008C0A(rel)
        mov     rdx, rsi                                ; 209E _ 48: 89. F2
        mov     r8, r15                                 ; 20A1 _ 4D: 89. F8
        call    qword ptr [rax+98H]                     ; 20A4 _ FF. 90, 00000098
        test    rax, rax                                ; 20AA _ 48: 85. C0
        js      Unnamed_1_1F4F                          ; 20AD _ 0F 88, 000000DC
        mov     rax, qword ptr [rbp-48H]                ; 20B3 _ 48: 8B. 45, B8
        mov     rcx, rax                                ; 20B7 _ 48: 89. C1
        mov     rdx, r12                                ; 20BA _ 4C: 89. E2
        call    qword ptr [rax+10H]                     ; 20BD _ FF. 50, 10
        mov     rbx, rax                                ; 20C0 _ 48: 89. C3
        test    rbx, rbx                                ; 20C3 _ 48: 85. DB
        js      Unnamed_1_1F4F                          ; 20C6 _ 0F 88, 000000C3
        mov     rax, qword ptr [rbp-60H]                ; 20CC _ 48: 8B. 45, A0
        cmp     rax, qword ptr [rdi+10H]                ; 20D0 _ 48: 3B. 47, 10
        je      Unnamed_1_1F87                          ; 20D4 _ 0F 84, 000000ED
        inc     r14                                     ; 20DA _ 49: FF. C6
        mov     rax, qword ptr [rbp-50H]                ; 20DD _ 48: 8B. 45, B0
        jmp     ?_149                                   ; 20E1 _ EB, A3

Unnamed_1_1EA3:
        mov     rbx, 800000000000000EH                  ; 20E3 _ 48: BB, 800000000000000E
        mov     rcx, qword ptr [rbp-58H]                ; 20ED _ 48: 8B. 4D, A8
        test    rcx, rcx                                ; 20F1 _ 48: 85. C9
        je      Unnamed_1_2021                          ; 20F4 _ 0F 84, 00000167
        mov     rax, qword ptr [?_578]                  ; 20FA _ 48: 8B. 05, 00008BA7(rel)
        call    qword ptr [rax+48H]                     ; 2101 _ FF. 50, 48
        mov     rbx, 800000000000000EH                  ; 2104 _ 48: BB, 800000000000000E
        jmp     Unnamed_1_2021                          ; 210E _ E9, 0000014E

?_150:  mov     qword ptr [rsp+20H], rcx                ; 2113 _ 48: 89. 4C 24, 20
        lea     r9, ptr [rbp-50H]                       ; 2118 _ 4C: 8D. 4D, B0
        mov     ecx, 2                                  ; 211C _ B9, 00000002
        mov     rdx, r13                                ; 2121 _ 4C: 89. EA
        xor     r8d, r8d                                ; 2124 _ 45: 31. C0
        call    rax                                     ; 2127 _ FF. D0
        test    rax, rax                                ; 2129 _ 48: 85. C0
        js      Unnamed_1_1EA3                          ; 212C _ 78, B5
        mov     rax, qword ptr [rbp-50H]                ; 212E _ 48: 8B. 45, B0
        test    rax, rax                                ; 2132 _ 48: 85. C0
        jz      Unnamed_1_1EA3                          ; 2135 _ 74, AC
        xor     r14d, r14d                              ; 2137 _ 45: 31. F6
        lea     rsi, ptr [rbp-48H]                      ; 213A _ 48: 8D. 75, B8
        lea     r15, ptr [rbp-60H]                      ; 213E _ 4C: 8D. 7D, A0
        jmp     ?_151                                   ; 2142 _ EB, 11

Unnamed_1_1F04:
        mov     rax, qword ptr [rbp-60H]                ; 2144 _ 48: 8B. 45, A0
        cmp     rax, qword ptr [rdi+10H]                ; 2148 _ 48: 3B. 47, 10
        jz      Unnamed_1_1F87                          ; 214C _ 74, 79
        inc     r14                                     ; 214E _ 49: FF. C6
        mov     rax, qword ptr [rbp-50H]                ; 2151 _ 48: 8B. 45, B0
?_151:  cmp     r14, rax                                ; 2155 _ 49: 39. C6
        jnc     Unnamed_1_1F4F                          ; 2158 _ 73, 35
        mov     rax, qword ptr [rbp-58H]                ; 215A _ 48: 8B. 45, A8
        mov     rcx, qword ptr [rax+r14*8]              ; 215E _ 4A: 8B. 0C F0
        mov     rax, qword ptr [?_578]                  ; 2162 _ 48: 8B. 05, 00008B3F(rel)
        mov     rdx, r13                                ; 2169 _ 4C: 89. EA
        mov     r8, rsi                                 ; 216C _ 49: 89. F0
        call    qword ptr [rax+98H]                     ; 216F _ FF. 90, 00000098
        test    rax, rax                                ; 2175 _ 48: 85. C0
        js      Unnamed_1_1F4F                          ; 2178 _ 78, 15
        mov     rax, qword ptr [rbp-48H]                ; 217A _ 48: 8B. 45, B8
        mov     rcx, rax                                ; 217E _ 48: 89. C1
        mov     rdx, r15                                ; 2181 _ 4C: 89. FA
        call    qword ptr [rax+10H]                     ; 2184 _ FF. 50, 10
        mov     rbx, rax                                ; 2187 _ 48: 89. C3
        test    rbx, rbx                                ; 218A _ 48: 85. DB
        jns     Unnamed_1_1F04                          ; 218D _ 79, B5
Unnamed_1_1F4F:
        mov     rbx, 800000000000000EH                  ; 218F _ 48: BB, 800000000000000E
        mov     rcx, qword ptr [rbp-58H]                ; 2199 _ 48: 8B. 4D, A8
        test    rcx, rcx                                ; 219D _ 48: 85. C9
        je      Unnamed_1_2021                          ; 21A0 _ 0F 84, 000000BB
        mov     rax, qword ptr [?_578]                  ; 21A6 _ 48: 8B. 05, 00008AFB(rel)
        call    qword ptr [rax+48H]                     ; 21AD _ FF. 50, 48
        mov     qword ptr [rbp-58H], 0                  ; 21B0 _ 48: C7. 45, A8, 00000000
        mov     rbx, 800000000000000EH                  ; 21B8 _ 48: BB, 800000000000000E
        jmp     Unnamed_1_2021                          ; 21C2 _ E9, 0000009A

Unnamed_1_1F87:
        test    byte ptr [r13-18H], 08H                 ; 21C7 _ 41: F6. 45, E8, 08
        mov     r8d, dword ptr [rbp-64H]                ; 21CC _ 44: 8B. 45, 9C
        mov     rsi, qword ptr [rbp-70H]                ; 21D0 _ 48: 8B. 75, 90
        mov     r9, qword ptr [rbp-78H]                 ; 21D4 _ 4C: 8B. 4D, 88
        jz      Unnamed_1_1FA4                          ; 21D8 _ 74, 0A
        cmp     byte ptr [rdi+30H], 0                   ; 21DA _ 80. 7F, 30, 00
        jnz     Unnamed_1_1FA4                          ; 21DE _ 75, 04
        mov     byte ptr [rdi+30H], 1                   ; 21E0 _ C6. 47, 30, 01
Unnamed_1_1FA4:
        mov     eax, dword ptr [rdi+8H]                 ; 21E4 _ 8B. 47, 08
        cmp     eax, 1                                  ; 21E7 _ 83. F8, 01
        jz      ?_152                                   ; 21EA _ 74, 2F
        test    eax, eax                                ; 21EC _ 85. C0
        jnz     Unnamed_1_2006                          ; 21EE _ 75, 56
        mov     rbx, 8000000000000002H                  ; 21F0 _ 48: BB, 8000000000000002
        cmp     r8b, 11                                 ; 21FA _ 41: 80. F8, 0B
        jnz     Unnamed_1_2006                          ; 21FE _ 75, 46
        mov     rax, qword ptr [rbp-58H]                ; 2200 _ 48: 8B. 45, A8
        mov     rcx, qword ptr [rax+r14*8]              ; 2204 _ 4A: 8B. 0C F0
        mov     rdx, qword ptr [rbp-48H]                ; 2208 _ 48: 8B. 55, B8
        mov     qword ptr [rsp+20H], rsi                ; 220C _ 48: 89. 74 24, 20
        mov     r8, rdi                                 ; 2211 _ 49: 89. F8
        call    ?_207                                   ; 2214 _ E8, 00001460
        jmp     ?_153                                   ; 2219 _ EB, 28

?_152:  mov     rax, qword ptr [rbp-58H]                ; 221B _ 48: 8B. 45, A8
        mov     rcx, qword ptr [rax+r14*8]              ; 221F _ 4A: 8B. 0C F0
        mov     rdx, qword ptr [rbp-48H]                ; 2223 _ 48: 8B. 55, B8
        mov     eax, dword ptr [rbp+30H]                ; 2227 _ 8B. 45, 30
        mov     dword ptr [rsp+30H], eax                ; 222A _ 89. 44 24, 30
        movzx   eax, r8b                                ; 222E _ 41: 0F B6. C0
        mov     dword ptr [rsp+28H], eax                ; 2232 _ 89. 44 24, 28
        mov     qword ptr [rsp+20H], rsi                ; 2236 _ 48: 89. 74 24, 20
        mov     r8, rdi                                 ; 223B _ 49: 89. F8
        call    ?_212                                   ; 223E _ E8, 00001556
?_153:  mov     rbx, rax                                ; 2243 _ 48: 89. C3
Unnamed_1_2006:
        mov     rcx, qword ptr [rbp-58H]                ; 2246 _ 48: 8B. 4D, A8
        test    rcx, rcx                                ; 224A _ 48: 85. C9
        jz      Unnamed_1_2021                          ; 224D _ 74, 12
        mov     rax, qword ptr [?_578]                  ; 224F _ 48: 8B. 05, 00008A52(rel)
        call    qword ptr [rax+48H]                     ; 2256 _ FF. 50, 48
        mov     qword ptr [rbp-58H], 0                  ; 2259 _ 48: C7. 45, A8, 00000000
Unnamed_1_2021:
        mov     rax, rbx                                ; 2261 _ 48: 89. D8
        add     rsp, 120                                ; 2264 _ 48: 83. C4, 78
        pop     rbx                                     ; 2268 _ 5B
        pop     rdi                                     ; 2269 _ 5F
        pop     rsi                                     ; 226A _ 5E
        pop     r12                                     ; 226B _ 41: 5C
        pop     r13                                     ; 226D _ 41: 5D
        pop     r14                                     ; 226F _ 41: 5E
        pop     r15                                     ; 2271 _ 41: 5F
        pop     rbp                                     ; 2273 _ 5D
        ret                                             ; 2274 _ C3

Unnamed_1_2035 LABEL NEAR
        push    rbp                                     ; 2275 _ 55
        mov     rbp, rsp                                ; 2276 _ 48: 89. E5
        push    r15                                     ; 2279 _ 41: 57
        push    r14                                     ; 227B _ 41: 56
        push    r13                                     ; 227D _ 41: 55
        push    r12                                     ; 227F _ 41: 54
        push    rsi                                     ; 2281 _ 56
        push    rdi                                     ; 2282 _ 57
        push    rbx                                     ; 2283 _ 53
        sub     rsp, 136                                ; 2284 _ 48: 81. EC, 00000088
        mov     qword ptr [rbp-70H], r8                 ; 228B _ 4C: 89. 45, 90
        mov     qword ptr [rbp-78H], rdx                ; 228F _ 48: 89. 55, 88
        mov     rbx, qword ptr [rcx+10H]                ; 2293 _ 48: 8B. 59, 10
        mov     qword ptr [rbp-80H], rcx                ; 2297 _ 48: 89. 4D, 80
        xor     edi, edi                                ; 229B _ 31. FF
        lea     r12, ptr [rbp-48H]                      ; 229D _ 4C: 8D. 65, B8
        lea     r14, ptr [rbp-60H]                      ; 22A1 _ 4C: 8D. 75, A0
?_154:  cmp     qword ptr [rbp-70H], 0                  ; 22A5 _ 48: 83. 7D, 90, 00
        je      Unnamed_1_2281                          ; 22AA _ 0F 84, 00000211
        mov     qword ptr [rbp-40H], 0                  ; 22B0 _ 48: C7. 45, C0, 00000000
        lea     rcx, ptr [?_506]                        ; 22B8 _ 48: 8D. 0D, 000080FD(rel)
        lea     rdx, ptr [rbp-40H]                      ; 22BF _ 48: 8D. 55, C0
        call    Unnamed_1_50                            ; 22C3 _ E8, FFFFDFC8
        mov     rdi, rax                                ; 22C8 _ 48: 89. C7
        test    rdi, rdi                                ; 22CB _ 48: 85. FF
        js      Unnamed_1_2281                          ; 22CE _ 0F 88, 000001ED
        mov     rax, qword ptr [rbp-40H]                ; 22D4 _ 48: 8B. 45, C0
?_155:  lea     rcx, ptr [?_504]                        ; 22D8 _ 48: 8D. 0D, 000080BD(rel)
        mov     rdx, rax                                ; 22DF _ 48: 89. C2
        call    Unnamed_1_1B1                           ; 22E2 _ E8, FFFFE10A
        mov     qword ptr [rbp-40H], rax                ; 22E7 _ 48: 89. 45, C0
        mov     rdi, 800000000000000EH                  ; 22EB _ 48: BF, 800000000000000E
        test    rax, rax                                ; 22F5 _ 48: 85. C0
        je      Unnamed_1_2281                          ; 22F8 _ 0F 84, 000001C3
        mov     ecx, dword ptr [rax+2CH]                ; 22FE _ 8B. 48, 2C
        lea     rsi, ptr [rax+48H]                      ; 2301 _ 48: 8D. 70, 48
        mov     rdx, -1                                 ; 2305 _ 48: C7. C2, FFFFFFFF
Unnamed_1_20CC:
        mov     r13, rsi                                ; 230C _ 49: 89. F5
        inc     rdx                                     ; 230F _ 48: FF. C2
        cmp     rdx, rcx                                ; 2312 _ 48: 39. CA
        jnc     ?_155                                   ; 2315 _ 73, C1
        lea     rsi, ptr [r13+30H]                      ; 2317 _ 49: 8D. 75, 30
        mov     rdi, qword ptr [r13-10H]                ; 231B _ 49: 8B. 7D, F0
        cmp     rbx, rdi                                ; 231F _ 48: 39. FB
        jc      Unnamed_1_20CC                          ; 2322 _ 72, E8
        add     rdi, qword ptr [r13-8H]                 ; 2324 _ 49: 03. 7D, F8
        cmp     rbx, rdi                                ; 2328 _ 48: 39. FB
        jnc     Unnamed_1_20CC                          ; 232B _ 73, DF
        mov     qword ptr [rbp-48H], 0                  ; 232D _ 48: C7. 45, B8, 00000000
        mov     rax, qword ptr [?_578]                  ; 2335 _ 48: 8B. 05, 0000896C(rel)
        mov     rax, qword ptr [rax+138H]               ; 233C _ 48: 8B. 80, 00000138
        mov     edx, dword ptr [r13-18H]                ; 2343 _ 41: 8B. 55, E8
        mov     ecx, edx                                ; 2347 _ 89. D1
        and     ecx, 04H                                ; 2349 _ 83. E1, 04
        test    dl, 03H                                 ; 234C _ F6. C2, 03
        lea     rdi, ptr [?_513]                        ; 234F _ 48: 8D. 3D, 000080D6(rel)
        je      ?_165                                   ; 2356 _ 0F 84, 00000214
        test    ecx, ecx                                ; 235C _ 85. C9
        je      ?_162                                   ; 235E _ 0F 84, 00000174
        lea     rcx, ptr [rbp-58H]                      ; 2364 _ 48: 8D. 4D, A8
        mov     qword ptr [rsp+20H], rcx                ; 2368 _ 48: 89. 4C 24, 20
        mov     ecx, 2                                  ; 236D _ B9, 00000002
        mov     rdx, rdi                                ; 2372 _ 48: 89. FA
        xor     r8d, r8d                                ; 2375 _ 45: 31. C0
        lea     r9, ptr [rbp-50H]                       ; 2378 _ 4C: 8D. 4D, B0
        call    rax                                     ; 237C _ FF. D0
        test    rax, rax                                ; 237E _ 48: 85. C0
        js      Unnamed_1_2494                          ; 2381 _ 0F 88, 0000034D
        mov     rax, qword ptr [rbp-50H]                ; 2387 _ 48: 8B. 45, B0
        test    rax, rax                                ; 238B _ 48: 85. C0
        je      Unnamed_1_2494                          ; 238E _ 0F 84, 00000340
        xor     esi, esi                                ; 2394 _ 31. F6
?_156:  cmp     rsi, rax                                ; 2396 _ 48: 39. C6
        jnc     Unnamed_1_245C                          ; 2399 _ 0F 83, 000002FD
        mov     rax, qword ptr [rbp-58H]                ; 239F _ 48: 8B. 45, A8
        mov     rcx, qword ptr [rax+rsi*8]              ; 23A3 _ 48: 8B. 0C F0
        mov     rax, qword ptr [?_578]                  ; 23A7 _ 48: 8B. 05, 000088FA(rel)
        mov     rdx, rdi                                ; 23AE _ 48: 89. FA
        mov     r8, r12                                 ; 23B1 _ 4D: 89. E0
        call    qword ptr [rax+98H]                     ; 23B4 _ FF. 90, 00000098
        test    rax, rax                                ; 23BA _ 48: 85. C0
        js      Unnamed_1_245C                          ; 23BD _ 0F 88, 000002D9
        mov     rax, qword ptr [rbp-48H]                ; 23C3 _ 48: 8B. 45, B8
        mov     rcx, rax                                ; 23C7 _ 48: 89. C1
        mov     rdx, r14                                ; 23CA _ 4C: 89. F2
        call    qword ptr [rax+10H]                     ; 23CD _ FF. 50, 10
        test    rax, rax                                ; 23D0 _ 48: 85. C0
        js      Unnamed_1_245C                          ; 23D3 _ 0F 88, 000002C3
        mov     rax, qword ptr [r13-10H]                ; 23D9 _ 49: 8B. 45, F0
        mov     rcx, qword ptr [rbp-60H]                ; 23DD _ 48: 8B. 4D, A0
        cmp     rax, rcx                                ; 23E1 _ 48: 39. C8
        jc      ?_157                                   ; 23E4 _ 72, 09
        add     rcx, qword ptr [rcx+20H]                ; 23E6 _ 48: 03. 49, 20
        cmp     rax, rcx                                ; 23EA _ 48: 39. C8
        jc      Unnamed_1_21B8                          ; 23ED _ 72, 09
?_157:  inc     rsi                                     ; 23EF _ 48: FF. C6
        mov     rax, qword ptr [rbp-50H]                ; 23F2 _ 48: 8B. 45, B0
        jmp     ?_156                                   ; 23F6 _ EB, 9E

Unnamed_1_21B8:
        mov     rax, qword ptr [rbp-58H]                ; 23F8 _ 48: 8B. 45, A8
        mov     r15, qword ptr [rax+rsi*8]              ; 23FC _ 4C: 8B. 3C F0
        mov     qword ptr [rbp-68H], 0                  ; 2400 _ 48: C7. 45, 98, 00000000
        mov     rax, qword ptr [rbp-80H]                ; 2408 _ 48: 8B. 45, 80
        cmp     byte ptr [rax+30H], 0                   ; 240C _ 80. 78, 30, 00
        jnz     ?_158                                   ; 2410 _ 75, 07
        test    byte ptr [r13-18H], 08H                 ; 2412 _ 41: F6. 45, E8, 08
        jz      ?_159                                   ; 2417 _ 74, 2A
?_158:  mov     rax, qword ptr [rbp-48H]                ; 2419 _ 48: 8B. 45, B8
        mov     qword ptr [rsp+30H], r15                ; 241D _ 4C: 89. 7C 24, 30
        mov     qword ptr [rsp+28H], rax                ; 2422 _ 48: 89. 44 24, 28
        mov     qword ptr [rsp+20H], rbx                ; 2427 _ 48: 89. 5C 24, 20
        mov     rcx, qword ptr [rbp-78H]                ; 242C _ 48: 8B. 4D, 88
        mov     rdx, qword ptr [rbp-70H]                ; 2430 _ 48: 8B. 55, 90
        lea     r8, ptr [rbp-68H]                       ; 2434 _ 4C: 8D. 45, 98
        mov     r9, qword ptr [rbp-80H]                 ; 2438 _ 4C: 8B. 4D, 80
        call    ?_214                                   ; 243C _ E8, 000013F3
        jmp     ?_160                                   ; 2441 _ EB, 22

?_159:  mov     rax, qword ptr [rbp-48H]                ; 2443 _ 48: 8B. 45, B8
        mov     qword ptr [rsp+28H], r15                ; 2447 _ 4C: 89. 7C 24, 28
        mov     qword ptr [rsp+20H], rax                ; 244C _ 48: 89. 44 24, 20
        mov     rcx, qword ptr [rbp-78H]                ; 2451 _ 48: 8B. 4D, 88
        mov     rdx, qword ptr [rbp-70H]                ; 2455 _ 48: 8B. 55, 90
        lea     r8, ptr [rbp-68H]                       ; 2459 _ 4C: 8D. 45, 98
        mov     r9, rbx                                 ; 245D _ 49: 89. D9
        call    ?_230                                   ; 2460 _ E8, 00001AA9
?_160:  mov     rdi, rax                                ; 2465 _ 48: 89. C7
        mov     rcx, qword ptr [rbp-58H]                ; 2468 _ 48: 8B. 4D, A8
        test    rcx, rcx                                ; 246C _ 48: 85. C9
        jz      ?_161                                   ; 246F _ 74, 12
        mov     rax, qword ptr [?_578]                  ; 2471 _ 48: 8B. 05, 00008830(rel)
        call    qword ptr [rax+48H]                     ; 2478 _ FF. 50, 48
        mov     qword ptr [rbp-58H], 0                  ; 247B _ 48: C7. 45, A8, 00000000
?_161:  test    rdi, rdi                                ; 2483 _ 48: 85. FF
        js      Unnamed_1_2281                          ; 2486 _ 78, 39
        mov     rsi, qword ptr [rbp-68H]                ; 2488 _ 48: 8B. 75, 98
        mov     r9, qword ptr [rbp-48H]                 ; 248C _ 4C: 8B. 4D, B8
        mov     rax, qword ptr [?_578]                  ; 2490 _ 48: 8B. 05, 00008811(rel)
        mov     rcx, r15                                ; 2497 _ 4C: 89. F9
        lea     rdx, ptr [?_513]                        ; 249A _ 48: 8D. 15, 00007F8B(rel)
        mov     r8, r9                                  ; 24A1 _ 4D: 89. C8
        call    qword ptr [rax+88H]                     ; 24A4 _ FF. 90, 00000088
        mov     rdi, rax                                ; 24AA _ 48: 89. C7
        add     qword ptr [rbp-78H], rsi                ; 24AD _ 48: 01. 75, 88
        sub     qword ptr [rbp-70H], rsi                ; 24B1 _ 48: 29. 75, 90
        add     rbx, rsi                                ; 24B5 _ 48: 01. F3
        test    rdi, rdi                                ; 24B8 _ 48: 85. FF
        jns     ?_154                                   ; 24BB _ 0F 89, FFFFFDE4
Unnamed_1_2281:
        mov     rax, rdi                                ; 24C1 _ 48: 89. F8
        add     rsp, 136                                ; 24C4 _ 48: 81. C4, 00000088
        pop     rbx                                     ; 24CB _ 5B
        pop     rdi                                     ; 24CC _ 5F
        pop     rsi                                     ; 24CD _ 5E
        pop     r12                                     ; 24CE _ 41: 5C
        pop     r13                                     ; 24D0 _ 41: 5D
        pop     r14                                     ; 24D2 _ 41: 5E
        pop     r15                                     ; 24D4 _ 41: 5F
        pop     rbp                                     ; 24D6 _ 5D
        ret                                             ; 24D7 _ C3

?_162:  lea     rcx, ptr [rbp-58H]                      ; 24D8 _ 48: 8D. 4D, A8
        mov     qword ptr [rsp+20H], rcx                ; 24DC _ 48: 89. 4C 24, 20
        mov     ecx, 2                                  ; 24E1 _ B9, 00000002
        mov     rdx, r13                                ; 24E6 _ 4C: 89. EA
        xor     r8d, r8d                                ; 24E9 _ 45: 31. C0
        lea     r9, ptr [rbp-50H]                       ; 24EC _ 4C: 8D. 4D, B0
        call    rax                                     ; 24F0 _ FF. D0
        test    rax, rax                                ; 24F2 _ 48: 85. C0
        js      Unnamed_1_2494                          ; 24F5 _ 0F 88, 000001D9
        mov     rax, qword ptr [rbp-50H]                ; 24FB _ 48: 8B. 45, B0
        test    rax, rax                                ; 24FF _ 48: 85. C0
        je      Unnamed_1_2494                          ; 2502 _ 0F 84, 000001CC
        xor     esi, esi                                ; 2508 _ 31. F6
?_163:  cmp     rsi, rax                                ; 250A _ 48: 39. C6
        jnc     Unnamed_1_245C                          ; 250D _ 0F 83, 00000189
        mov     rax, qword ptr [rbp-58H]                ; 2513 _ 48: 8B. 45, A8
        mov     rcx, qword ptr [rax+rsi*8]              ; 2517 _ 48: 8B. 0C F0
        mov     rax, qword ptr [?_578]                  ; 251B _ 48: 8B. 05, 00008786(rel)
        mov     rdx, r13                                ; 2522 _ 4C: 89. EA
        mov     r8, r12                                 ; 2525 _ 4D: 89. E0
        call    qword ptr [rax+98H]                     ; 2528 _ FF. 90, 00000098
        test    rax, rax                                ; 252E _ 48: 85. C0
        js      Unnamed_1_245C                          ; 2531 _ 0F 88, 00000165
        mov     rax, qword ptr [rbp-48H]                ; 2537 _ 48: 8B. 45, B8
        mov     rcx, rax                                ; 253B _ 48: 89. C1
        mov     rdx, r14                                ; 253E _ 4C: 89. F2
        call    qword ptr [rax+10H]                     ; 2541 _ FF. 50, 10
        test    rax, rax                                ; 2544 _ 48: 85. C0
        js      Unnamed_1_245C                          ; 2547 _ 0F 88, 0000014F
        mov     rax, qword ptr [r13-10H]                ; 254D _ 49: 8B. 45, F0
        mov     rcx, qword ptr [rbp-60H]                ; 2551 _ 48: 8B. 4D, A0
        cmp     rax, rcx                                ; 2555 _ 48: 39. C8
        jc      ?_164                                   ; 2558 _ 72, 0D
        add     rcx, qword ptr [rcx+20H]                ; 255A _ 48: 03. 49, 20
        cmp     rax, rcx                                ; 255E _ 48: 39. C8
        jc      Unnamed_1_21B8                          ; 2561 _ 0F 82, FFFFFE91
?_164:  inc     rsi                                     ; 2567 _ 48: FF. C6
        mov     rax, qword ptr [rbp-50H]                ; 256A _ 48: 8B. 45, B0
        jmp     ?_163                                   ; 256E _ EB, 9A

?_165:  test    ecx, ecx                                ; 2570 _ 85. C9
        je      ?_168                                   ; 2572 _ 0F 84, 00000098
        lea     rcx, ptr [rbp-58H]                      ; 2578 _ 48: 8D. 4D, A8
        mov     qword ptr [rsp+20H], rcx                ; 257C _ 48: 89. 4C 24, 20
        mov     ecx, 2                                  ; 2581 _ B9, 00000002
        mov     rdx, rdi                                ; 2586 _ 48: 89. FA
        xor     r8d, r8d                                ; 2589 _ 45: 31. C0
        lea     r9, ptr [rbp-50H]                       ; 258C _ 4C: 8D. 4D, B0
        call    rax                                     ; 2590 _ FF. D0
        test    rax, rax                                ; 2592 _ 48: 85. C0
        js      Unnamed_1_2494                          ; 2595 _ 0F 88, 00000139
        mov     rax, qword ptr [rbp-50H]                ; 259B _ 48: 8B. 45, B0
        test    rax, rax                                ; 259F _ 48: 85. C0
        je      Unnamed_1_2494                          ; 25A2 _ 0F 84, 0000012C
        xor     esi, esi                                ; 25A8 _ 31. F6
?_166:  cmp     rsi, rax                                ; 25AA _ 48: 39. C6
        jnc     Unnamed_1_245C                          ; 25AD _ 0F 83, 000000E9
        mov     rax, qword ptr [rbp-58H]                ; 25B3 _ 48: 8B. 45, A8
        mov     rcx, qword ptr [rax+rsi*8]              ; 25B7 _ 48: 8B. 0C F0
        mov     rax, qword ptr [?_578]                  ; 25BB _ 48: 8B. 05, 000086E6(rel)
        mov     rdx, rdi                                ; 25C2 _ 48: 89. FA
        mov     r8, r12                                 ; 25C5 _ 4D: 89. E0
        call    qword ptr [rax+98H]                     ; 25C8 _ FF. 90, 00000098
        test    rax, rax                                ; 25CE _ 48: 85. C0
        js      Unnamed_1_245C                          ; 25D1 _ 0F 88, 000000C5
        mov     rax, qword ptr [rbp-48H]                ; 25D7 _ 48: 8B. 45, B8
        mov     rcx, rax                                ; 25DB _ 48: 89. C1
        mov     rdx, r14                                ; 25DE _ 4C: 89. F2
        call    qword ptr [rax+10H]                     ; 25E1 _ FF. 50, 10
        test    rax, rax                                ; 25E4 _ 48: 85. C0
        js      Unnamed_1_245C                          ; 25E7 _ 0F 88, 000000AF
        mov     rax, qword ptr [r13-10H]                ; 25ED _ 49: 8B. 45, F0
        mov     rcx, qword ptr [rbp-60H]                ; 25F1 _ 48: 8B. 4D, A0
        cmp     rax, rcx                                ; 25F5 _ 48: 39. C8
        jc      ?_167                                   ; 25F8 _ 72, 0D
        add     rcx, qword ptr [rcx+20H]                ; 25FA _ 48: 03. 49, 20
        cmp     rax, rcx                                ; 25FE _ 48: 39. C8
        jc      Unnamed_1_21B8                          ; 2601 _ 0F 82, FFFFFDF1
?_167:  inc     rsi                                     ; 2607 _ 48: FF. C6
        mov     rax, qword ptr [rbp-50H]                ; 260A _ 48: 8B. 45, B0
        jmp     ?_166                                   ; 260E _ EB, 9A

?_168:  lea     rcx, ptr [rbp-58H]                      ; 2610 _ 48: 8D. 4D, A8
        mov     qword ptr [rsp+20H], rcx                ; 2614 _ 48: 89. 4C 24, 20
        mov     ecx, 2                                  ; 2619 _ B9, 00000002
        mov     rdx, r13                                ; 261E _ 4C: 89. EA
        xor     r8d, r8d                                ; 2621 _ 45: 31. C0
        lea     r9, ptr [rbp-50H]                       ; 2624 _ 4C: 8D. 4D, B0
        call    rax                                     ; 2628 _ FF. D0
        test    rax, rax                                ; 262A _ 48: 85. C0
        js      Unnamed_1_2494                          ; 262D _ 0F 88, 000000A1
        mov     rax, qword ptr [rbp-50H]                ; 2633 _ 48: 8B. 45, B0
        test    rax, rax                                ; 2637 _ 48: 85. C0
        je      Unnamed_1_2494                          ; 263A _ 0F 84, 00000094
        xor     esi, esi                                ; 2640 _ 31. F6
        jmp     ?_170                                   ; 2642 _ EB, 21

Unnamed_1_2404:
        mov     rax, qword ptr [r13-10H]                ; 2644 _ 49: 8B. 45, F0
        mov     rcx, qword ptr [rbp-60H]                ; 2648 _ 48: 8B. 4D, A0
        cmp     rax, rcx                                ; 264C _ 48: 39. C8
        jc      ?_169                                   ; 264F _ 72, 0D
        add     rcx, qword ptr [rcx+20H]                ; 2651 _ 48: 03. 49, 20
        cmp     rax, rcx                                ; 2655 _ 48: 39. C8
        jc      Unnamed_1_21B8                          ; 2658 _ 0F 82, FFFFFD9A
?_169:  inc     rsi                                     ; 265E _ 48: FF. C6
        mov     rax, qword ptr [rbp-50H]                ; 2661 _ 48: 8B. 45, B0
?_170:  cmp     rsi, rax                                ; 2665 _ 48: 39. C6
        jnc     Unnamed_1_245C                          ; 2668 _ 73, 32
        mov     rax, qword ptr [rbp-58H]                ; 266A _ 48: 8B. 45, A8
        mov     rcx, qword ptr [rax+rsi*8]              ; 266E _ 48: 8B. 0C F0
        mov     rax, qword ptr [?_578]                  ; 2672 _ 48: 8B. 05, 0000862F(rel)
        mov     rdx, r13                                ; 2679 _ 4C: 89. EA
        mov     r8, r12                                 ; 267C _ 4D: 89. E0
        call    qword ptr [rax+98H]                     ; 267F _ FF. 90, 00000098
        test    rax, rax                                ; 2685 _ 48: 85. C0
        js      Unnamed_1_245C                          ; 2688 _ 78, 12
        mov     rax, qword ptr [rbp-48H]                ; 268A _ 48: 8B. 45, B8
        mov     rcx, rax                                ; 268E _ 48: 89. C1
        mov     rdx, r14                                ; 2691 _ 4C: 89. F2
        call    qword ptr [rax+10H]                     ; 2694 _ FF. 50, 10
        test    rax, rax                                ; 2697 _ 48: 85. C0
        jns     Unnamed_1_2404                          ; 269A _ 79, A8
Unnamed_1_245C:
        mov     rdi, 800000000000000EH                  ; 269C _ 48: BF, 800000000000000E
        mov     rcx, qword ptr [rbp-58H]                ; 26A6 _ 48: 8B. 4D, A8
        test    rcx, rcx                                ; 26AA _ 48: 85. C9
        je      Unnamed_1_2281                          ; 26AD _ 0F 84, FFFFFE0E
        mov     rax, qword ptr [?_578]                  ; 26B3 _ 48: 8B. 05, 000085EE(rel)
        call    qword ptr [rax+48H]                     ; 26BA _ FF. 50, 48
        mov     qword ptr [rbp-58H], 0                  ; 26BD _ 48: C7. 45, A8, 00000000
        mov     rdi, 800000000000000EH                  ; 26C5 _ 48: BF, 800000000000000E
        jmp     Unnamed_1_2281                          ; 26CF _ E9, FFFFFDED

Unnamed_1_2494 LABEL NEAR
        mov     rdi, 800000000000000EH                  ; 26D4 _ 48: BF, 800000000000000E
        mov     rcx, qword ptr [rbp-58H]                ; 26DE _ 48: 8B. 4D, A8
        test    rcx, rcx                                ; 26E2 _ 48: 85. C9
        je      Unnamed_1_2281                          ; 26E5 _ 0F 84, FFFFFDD6
        mov     rax, qword ptr [?_578]                  ; 26EB _ 48: 8B. 05, 000085B6(rel)
        call    qword ptr [rax+48H]                     ; 26F2 _ FF. 50, 48
        mov     rdi, 800000000000000EH                  ; 26F5 _ 48: BF, 800000000000000E
        jmp     Unnamed_1_2281                          ; 26FF _ E9, FFFFFDBD

Unnamed_1_24C4 LABEL NEAR
        push    rbp                                     ; 2704 _ 55
        mov     rbp, rsp                                ; 2705 _ 48: 89. E5
        push    r15                                     ; 2708 _ 41: 57
        push    r14                                     ; 270A _ 41: 56
        push    rsi                                     ; 270C _ 56
        push    rdi                                     ; 270D _ 57
        push    rbx                                     ; 270E _ 53
        sub     rsp, 40                                 ; 270F _ 48: 83. EC, 28
        mov     r14, rcx                                ; 2713 _ 49: 89. CE
        lea     rcx, ptr [?_506]                        ; 2716 _ 48: 8D. 0D, 00007C9F(rel)
        lea     rdx, ptr [rbp-30H]                      ; 271D _ 48: 8D. 55, D0
        call    Unnamed_1_50                            ; 2721 _ E8, FFFFDB6A
        test    rax, rax                                ; 2726 _ 48: 85. C0
        js      Unnamed_1_25D1                          ; 2729 _ 0F 88, 000000E2
        mov     rdx, qword ptr [rbp-30H]                ; 272F _ 48: 8B. 55, D0
        lea     rsi, ptr [?_504]                        ; 2733 _ 48: 8D. 35, 00007C62(rel)
        lea     rdi, ptr [?_525]                        ; 273A _ 48: 8D. 3D, 00007DAB(rel)
        jmp     ?_171                                   ; 2741 _ EB, 0F

Unnamed_1_2503:
        mov     rax, qword ptr [rbp-30H]                ; 2743 _ 48: 8B. 45, D0
        movzx   edx, word ptr [rax+2H]                  ; 2747 _ 0F B7. 50, 02
        add     rdx, rax                                ; 274B _ 48: 01. C2
        mov     qword ptr [rbp-30H], rdx                ; 274E _ 48: 89. 55, D0
?_171:  mov     rcx, rsi                                ; 2752 _ 48: 89. F1
        call    Unnamed_1_1B1                           ; 2755 _ E8, FFFFDC97
        mov     rbx, rax                                ; 275A _ 48: 89. C3
        mov     qword ptr [rbp-30H], rbx                ; 275D _ 48: 89. 5D, D0
        xor     eax, eax                                ; 2761 _ 31. C0
        test    rbx, rbx                                ; 2763 _ 48: 85. DB
        je      Unnamed_1_25D1                          ; 2766 _ 0F 84, 000000A5
        lea     rcx, ptr [rbx+1CH]                      ; 276C _ 48: 8D. 4B, 1C
        mov     rdx, rdi                                ; 2770 _ 48: 89. FA
        call    Unnamed_1_1FD                           ; 2773 _ E8, FFFFDCC5
        test    al, al                                  ; 2778 _ 84. C0
        jz      Unnamed_1_2503                          ; 277A _ 74, C7
        mov     rdi, qword ptr [r14+28H]                ; 277C _ 49: 8B. 7E, 28
        mov     r15, qword ptr [rbx+38H]                ; 2780 _ 4C: 8B. 7B, 38
        mov     rbx, qword ptr [rbx+40H]                ; 2784 _ 48: 8B. 5B, 40
        cmp     rbx, rdi                                ; 2788 _ 48: 39. FB
        sete    cl                                      ; 278B _ 0F 94. C1
        cmp     r15, qword ptr [r14+10H]                ; 278E _ 4D: 3B. 7E, 10
        sete    dl                                      ; 2792 _ 0F 94. C2
        xor     eax, eax                                ; 2795 _ 31. C0
        test    cl, dl                                  ; 2797 _ 84. D1
        jnz     Unnamed_1_25D1                          ; 2799 _ 75, 76
        cmp     rbx, rdi                                ; 279B _ 48: 39. FB
        ja      Unnamed_1_25D1                          ; 279E _ 77, 71
        mov     rcx, rdi                                ; 27A0 _ 48: 89. F9
        call    Unnamed_1_CB                            ; 27A3 _ E8, FFFFDB63
        mov     rsi, rax                                ; 27A8 _ 48: 89. C6
        mov     rax, 8000000000000009H                  ; 27AB _ 48: B8, 8000000000000009
        test    rsi, rsi                                ; 27B5 _ 48: 85. F6
        jz      Unnamed_1_25D1                          ; 27B8 _ 74, 57
        mov     rax, qword ptr [?_578]                  ; 27BA _ 48: 8B. 05, 000084E7(rel)
        mov     rcx, rsi                                ; 27C1 _ 48: 89. F1
        mov     rdx, rdi                                ; 27C4 _ 48: 89. FA
        mov     r8d, 255                                ; 27C7 _ 41: B8, 000000FF
        call    qword ptr [rax+168H]                    ; 27CD _ FF. 90, 00000168
        mov     rax, qword ptr [?_578]                  ; 27D3 _ 48: 8B. 05, 000084CE(rel)
        mov     rcx, rsi                                ; 27DA _ 48: 89. F1
        mov     rdx, r15                                ; 27DD _ 4C: 89. FA
        mov     r8, rbx                                 ; 27E0 _ 49: 89. D8
        call    qword ptr [rax+160H]                    ; 27E3 _ FF. 90, 00000160
        mov     rcx, r14                                ; 27E9 _ 4C: 89. F1
        mov     rdx, rsi                                ; 27EC _ 48: 89. F2
        mov     r8, rdi                                 ; 27EF _ 49: 89. F8
        call    Unnamed_1_6187                          ; 27F2 _ E8, 00003BD0
        mov     rdi, rax                                ; 27F7 _ 48: 89. C7
        mov     rax, qword ptr [?_578]                  ; 27FA _ 48: 8B. 05, 000084A7(rel)
        mov     rcx, rsi                                ; 2801 _ 48: 89. F1
        call    qword ptr [rax+48H]                     ; 2804 _ FF. 50, 48
        mov     rax, rdi                                ; 2807 _ 48: 89. F8
        sar     rax, 63                                 ; 280A _ 48: C1. F8, 3F
        and     rax, rdi                                ; 280E _ 48: 21. F8
Unnamed_1_25D1:
        add     rsp, 40                                 ; 2811 _ 48: 83. C4, 28
        pop     rbx                                     ; 2815 _ 5B
        pop     rdi                                     ; 2816 _ 5F
        pop     rsi                                     ; 2817 _ 5E
        pop     r14                                     ; 2818 _ 41: 5E
        pop     r15                                     ; 281A _ 41: 5F
        pop     rbp                                     ; 281C _ 5D
        ret                                             ; 281D _ C3

Unnamed_1_25DE LABEL NEAR
        push    rbp                                     ; 281E _ 55
        mov     rbp, rsp                                ; 281F _ 48: 89. E5
        push    r15                                     ; 2822 _ 41: 57
        push    r14                                     ; 2824 _ 41: 56
        push    r13                                     ; 2826 _ 41: 55
        push    r12                                     ; 2828 _ 41: 54
        push    rsi                                     ; 282A _ 56
        push    rdi                                     ; 282B _ 57
        push    rbx                                     ; 282C _ 53
        sub     rsp, 88                                 ; 282D _ 48: 83. EC, 58
        mov     r12, rdx                                ; 2831 _ 49: 89. D4
        mov     rbx, rcx                                ; 2834 _ 48: 89. CB
        mov     qword ptr [rbp-40H], 0                  ; 2837 _ 48: C7. 45, C0, 00000000
        mov     qword ptr [rbp-48H], 0                  ; 283F _ 48: C7. 45, B8, 00000000
        lea     rdi, ptr [r12+18H]                      ; 2847 _ 49: 8D. 7C 24, 18
        lea     rdx, ptr [?_525]                        ; 284C _ 48: 8D. 15, 00007C99(rel)
        mov     rcx, rdi                                ; 2853 _ 48: 89. F9
        call    Unnamed_1_1FD                           ; 2856 _ E8, FFFFDBE2
        test    al, al                                  ; 285B _ 84. C0
        jz      ?_172                                   ; 285D _ 74, 10
        mov     rcx, r12                                ; 285F _ 4C: 89. E1
        call    Unnamed_1_24C4                          ; 2862 _ E8, FFFFFE9D
        mov     rsi, rax                                ; 2867 _ 48: 89. C6
        jmp     Unnamed_1_288C                          ; 286A _ E9, 0000025D

?_172:  lea     rdx, ptr [?_526]                        ; 286F _ 48: 8D. 15, 00007C86(rel)
        mov     rcx, rdi                                ; 2876 _ 48: 89. F9
        call    Unnamed_1_1FD                           ; 2879 _ E8, FFFFDBBF
        test    al, al                                  ; 287E _ 84. C0
        jz      Unnamed_1_2654                          ; 2880 _ 74, 12
        call    Unnamed_1_63B7                          ; 2882 _ E8, 00003D70
        cmp     rax, 12                                 ; 2887 _ 48: 83. F8, 0C
        jnz     Unnamed_1_2654                          ; 288B _ 75, 07
        mov     byte ptr [?_581], 1                     ; 288D _ C6. 05, 0000842C(rel), 01
Unnamed_1_2654:
        lea     rax, ptr [rbp-50H]                      ; 2894 _ 48: 8D. 45, B0
        lea     r13, ptr [rbp-54H]                      ; 2898 _ 4C: 8D. 6D, AC
        mov     qword ptr [rsp+30H], r13                ; 289C _ 4C: 89. 6C 24, 30
        mov     qword ptr [rsp+28H], rax                ; 28A1 _ 48: 89. 44 24, 28
        lea     rax, ptr [rbp-49H]                      ; 28A6 _ 48: 8D. 45, B7
        mov     qword ptr [rsp+20H], rax                ; 28AA _ 48: 89. 44 24, 20
        lea     r14, ptr [rbp-40H]                      ; 28AF _ 4C: 8D. 75, C0
        lea     r15, ptr [rbp-48H]                      ; 28B3 _ 4C: 8D. 7D, B8
        mov     rcx, rbx                                ; 28B7 _ 48: 89. D9
        mov     rdx, rdi                                ; 28BA _ 48: 89. FA
        mov     r8, r14                                 ; 28BD _ 4D: 89. F0
        mov     r9, r15                                 ; 28C0 _ 4D: 89. F9
        call    qword ptr [rbx+10H]                     ; 28C3 _ FF. 53, 10
        mov     rsi, rax                                ; 28C6 _ 48: 89. C6
        test    rsi, rsi                                ; 28C9 _ 48: 85. F6
        js      Unnamed_1_288C                          ; 28CC _ 0F 88, 000001FA
        lea     rcx, ptr [?_458]                        ; 28D2 _ 48: 8D. 0D, 0000561F(rel)
        call    Unnamed_1_B95                           ; 28D9 _ E8, FFFFE4F7
        mov     eax, dword ptr [r12+8H]                 ; 28DE _ 41: 8B. 44 24, 08
        mov     rsi, 8000000000000002H                  ; 28E3 _ 48: BE, 8000000000000002
        cmp     rax, 5                                  ; 28ED _ 48: 83. F8, 05
        ja      Unnamed_1_2871                          ; 28F1 _ 0F 87, 000001BA
        lea     rdx, ptr [?_181]                        ; 28F7 _ 48: 8D. 15, 000001E2(rel)
        movsxd  rcx, dword ptr [rdx+rax*4]              ; 28FE _ 48: 63. 0C 82
        add     rcx, rdx                                ; 2902 _ 48: 01. D1
        jmp     rcx                                     ; 2905 _ FF. E1

?_173   LABEL NEAR
        mov     rsi, 8000000000000002H                  ; 2907 _ 48: BE, 8000000000000002
        cmp     byte ptr [rbp-49H], 11                  ; 2911 _ 80. 7D, B7, 0B
        jne     Unnamed_1_2871                          ; 2915 _ 0F 85, 00000196
        mov     rcx, qword ptr [rbp-40H]                ; 291B _ 48: 8B. 4D, C0
        test    rcx, rcx                                ; 291F _ 48: 85. C9
        jz      ?_174                                   ; 2922 _ 74, 0A
        mov     rax, qword ptr [?_578]                  ; 2924 _ 48: 8B. 05, 0000837D(rel)
        call    qword ptr [rax+48H]                     ; 292B _ FF. 50, 48
?_174:  mov     qword ptr [rbp-40H], 0                  ; 292E _ 48: C7. 45, C0, 00000000
        mov     qword ptr [rbp-48H], 0                  ; 2936 _ 48: C7. 45, B8, 00000000
        mov     qword ptr [rsp+30H], r13                ; 293E _ 4C: 89. 6C 24, 30
        mov     qword ptr [rsp+28H], r15                ; 2943 _ 4C: 89. 7C 24, 28
        mov     qword ptr [rsp+20H], r14                ; 2948 _ 4C: 89. 74 24, 20
        mov     rcx, rbx                                ; 294D _ 48: 89. D9
        mov     rdx, rdi                                ; 2950 _ 48: 89. FA
        mov     r8d, 23                                 ; 2953 _ 41: B8, 00000017
        xor     r9d, r9d                                ; 2959 _ 45: 31. C9
        call    qword ptr [rbx+18H]                     ; 295C _ FF. 53, 18
        mov     rsi, rax                                ; 295F _ 48: 89. C6
        test    rsi, rsi                                ; 2962 _ 48: 85. F6
        js      Unnamed_1_2871                          ; 2965 _ 0F 88, 00000146

?_175   LABEL NEAR
        movzx   r9d, byte ptr [rbp-49H]                 ; 296B _ 44: 0F B6. 4D, B7
        mov     r8, qword ptr [rbp-48H]                 ; 2970 _ 4C: 8B. 45, B8
        mov     rdx, qword ptr [rbp-40H]                ; 2974 _ 48: 8B. 55, C0
        mov     eax, dword ptr [rbp-50H]                ; 2978 _ 8B. 45, B0
        mov     dword ptr [rsp+20H], eax                ; 297B _ 89. 44 24, 20
        mov     rcx, r12                                ; 297F _ 4C: 89. E1
        call    Unnamed_1_1D44                          ; 2982 _ E8, FFFFF5FD
        jmp     Unnamed_1_285A                          ; 2987 _ E9, 0000010E

?_176   LABEL NEAR
        mov     rsi, 8000000000000002H                  ; 298C _ 48: BE, 8000000000000002
        cmp     byte ptr [rbp-49H], 1                   ; 2996 _ 80. 7D, B7, 01
        jne     Unnamed_1_2871                          ; 299A _ 0F 85, 00000111
        mov     rcx, qword ptr [rbp-40H]                ; 29A0 _ 48: 8B. 4D, C0
        test    rcx, rcx                                ; 29A4 _ 48: 85. C9
        jz      ?_177                                   ; 29A7 _ 74, 0A
        mov     rax, qword ptr [?_578]                  ; 29A9 _ 48: 8B. 05, 000082F8(rel)
        call    qword ptr [rax+48H]                     ; 29B0 _ FF. 50, 48
?_177:  mov     qword ptr [rbp-40H], 0                  ; 29B3 _ 48: C7. 45, C0, 00000000
        mov     qword ptr [rbp-48H], 0                  ; 29BB _ 48: C7. 45, B8, 00000000
        mov     qword ptr [rsp+30H], r13                ; 29C3 _ 4C: 89. 6C 24, 30
        mov     qword ptr [rsp+28H], r15                ; 29C8 _ 4C: 89. 7C 24, 28
        mov     qword ptr [rsp+20H], r14                ; 29CD _ 4C: 89. 74 24, 20
        mov     rcx, rbx                                ; 29D2 _ 48: 89. D9
        mov     rdx, rdi                                ; 29D5 _ 48: 89. FA
        mov     r8d, 23                                 ; 29D8 _ 41: B8, 00000017
        xor     r9d, r9d                                ; 29DE _ 45: 31. C9
        call    qword ptr [rbx+18H]                     ; 29E1 _ FF. 53, 18
        mov     rsi, rax                                ; 29E4 _ 48: 89. C6
        test    rsi, rsi                                ; 29E7 _ 48: 85. F6
        js      Unnamed_1_2871                          ; 29EA _ 0F 88, 000000C1
        mov     r8, qword ptr [rbp-48H]                 ; 29F0 _ 4C: 8B. 45, B8
        mov     rdx, qword ptr [rbp-40H]                ; 29F4 _ 48: 8B. 55, C0
        mov     rcx, r12                                ; 29F8 _ 4C: 89. E1
        call    Unnamed_1_2035                          ; 29FB _ E8, FFFFF875
        jmp     Unnamed_1_285A                          ; 2A00 _ E9, 00000095

?_178   LABEL NEAR
        mov     rcx, qword ptr [rbp-40H]                ; 2A05 _ 48: 8B. 4D, C0
        test    rcx, rcx                                ; 2A09 _ 48: 85. C9
        jz      ?_179                                   ; 2A0C _ 74, 0F
        mov     rax, qword ptr [?_578]                  ; 2A0E _ 48: 8B. 05, 00008293(rel)
        call    qword ptr [rax+48H]                     ; 2A15 _ FF. 50, 48
        mov     eax, dword ptr [r12+8H]                 ; 2A18 _ 41: 8B. 44 24, 08
?_179:  mov     qword ptr [rbp-40H], 0                  ; 2A1D _ 48: C7. 45, C0, 00000000
        mov     qword ptr [rbp-48H], 0                  ; 2A25 _ 48: C7. 45, B8, 00000000
        mov     qword ptr [rsp+30H], r13                ; 2A2D _ 4C: 89. 6C 24, 30
        mov     qword ptr [rsp+28H], r15                ; 2A32 _ 4C: 89. 7C 24, 28
        mov     qword ptr [rsp+20H], r14                ; 2A37 _ 4C: 89. 74 24, 20
        mov     cl, 25                                  ; 2A3C _ B1, 19
        cmp     eax, 5                                  ; 2A3E _ 83. F8, 05
        jz      ?_180                                   ; 2A41 _ 74, 02
        mov     cl, 23                                  ; 2A43 _ B1, 17
?_180:  movzx   r8d, cl                                 ; 2A45 _ 44: 0F B6. C1
        mov     rcx, rbx                                ; 2A49 _ 48: 89. D9
        mov     rdx, rdi                                ; 2A4C _ 48: 89. FA
        xor     r9d, r9d                                ; 2A4F _ 45: 31. C9
        call    qword ptr [rbx+18H]                     ; 2A52 _ FF. 53, 18
        mov     rsi, rax                                ; 2A55 _ 48: 89. C6
        test    rsi, rsi                                ; 2A58 _ 48: 85. F6
        js      Unnamed_1_2871                          ; 2A5B _ 78, 54
        lea     rdx, ptr [?_527]                        ; 2A5D _ 48: 8D. 15, 00007AA8(rel)
        mov     rcx, rdi                                ; 2A64 _ 48: 89. F9
        call    Unnamed_1_1FD                           ; 2A67 _ E8, FFFFD9D1
        test    al, al                                  ; 2A6C _ 84. C0
        jz      Unnamed_1_284A                          ; 2A6E _ 74, 1A
        call    Unnamed_1_63B7                          ; 2A70 _ E8, 00003B82
        cmp     rax, 12                                 ; 2A75 _ 48: 83. F8, 0C
        jnz     Unnamed_1_284A                          ; 2A79 _ 75, 0F
        mov     rcx, qword ptr [rbp-40H]                ; 2A7B _ 48: 8B. 4D, C0
        call    ?_379                                   ; 2A7F _ E8, 00003C77
        mov     dword ptr [?_582], eax                  ; 2A84 _ 89. 05, 0000823A(rel)
Unnamed_1_284A:
        mov     r8, qword ptr [rbp-48H]                 ; 2A8A _ 4C: 8B. 45, B8
        mov     rdx, qword ptr [rbp-40H]                ; 2A8E _ 48: 8B. 55, C0
        mov     rcx, r12                                ; 2A92 _ 4C: 89. E1
        call    Unnamed_1_6187                          ; 2A95 _ E8, 0000392D
Unnamed_1_285A:
        mov     rsi, rax                                ; 2A9A _ 48: 89. C6
        test    rsi, rsi                                ; 2A9D _ 48: 85. F6
        jns     Unnamed_1_2871                          ; 2AA0 _ 79, 0F
        lea     rcx, ptr [?_459]                        ; 2AA2 _ 48: 8D. 0D, 00005453(rel)
        mov     rdx, rsi                                ; 2AA9 _ 48: 89. F2
        call    Unnamed_1_B95                           ; 2AAC _ E8, FFFFE324
Unnamed_1_2871:
        mov     rcx, qword ptr [rbp-40H]                ; 2AB1 _ 48: 8B. 4D, C0
        test    rcx, rcx                                ; 2AB5 _ 48: 85. C9
        jz      Unnamed_1_288C                          ; 2AB8 _ 74, 12
        mov     rax, qword ptr [?_578]                  ; 2ABA _ 48: 8B. 05, 000081E7(rel)
        call    qword ptr [rax+48H]                     ; 2AC1 _ FF. 50, 48
        mov     qword ptr [rbp-40H], 0                  ; 2AC4 _ 48: C7. 45, C0, 00000000
Unnamed_1_288C:
        mov     rax, rsi                                ; 2ACC _ 48: 89. F0
        add     rsp, 88                                 ; 2ACF _ 48: 83. C4, 58
        pop     rbx                                     ; 2AD3 _ 5B
        pop     rdi                                     ; 2AD4 _ 5F
        pop     rsi                                     ; 2AD5 _ 5E
        pop     r12                                     ; 2AD6 _ 41: 5C
        pop     r13                                     ; 2AD8 _ 41: 5D
        pop     r14                                     ; 2ADA _ 41: 5E
        pop     r15                                     ; 2ADC _ 41: 5F
        pop     rbp                                     ; 2ADE _ 5D
        ret                                             ; 2ADF _ C3

?_181   label dword                                     ; switch/case jump table
        dd ?_173-?_181                                  ; 2AE0 _ FFFFFE27 (refpoint)
        dd ?_175-?_181                                  ; 2AE4 _ FFFFFE8B (refpoint)
        dd ?_176-?_181                                  ; 2AE8 _ FFFFFEAC (refpoint)
        dd ?_178-?_181                                  ; 2AEC _ FFFFFF25 (refpoint)
        dd ?_178-?_181                                  ; 2AF0 _ FFFFFF25 (refpoint)
        dd ?_178-?_181                                  ; 2AF4 _ FFFFFF25 (refpoint)

; Filling space: 1H
; Filler type: NOP
;       db 90H

; Note: No jump seems to point here
        push    rbp                                     ; 2AF9 _ 55
        mov     rbp, rsp                                ; 2AFA _ 48: 89. E5
        push    r14                                     ; 2AFD _ 41: 56
        push    rsi                                     ; 2AFF _ 56
        push    rdi                                     ; 2B00 _ 57
        push    rbx                                     ; 2B01 _ 53
        sub     rsp, 176                                ; 2B02 _ 48: 81. EC, 000000B0
        mov     rdi, rcx                                ; 2B09 _ 48: 89. CF
        mov     rax, qword ptr [?_461]                  ; 2B0C _ 48: 8B. 05, 0000542D(rel)
        mov     qword ptr [rbp-58H], rax                ; 2B13 _ 48: 89. 45, A8
        mov     rax, qword ptr [?_460]                  ; 2B17 _ 48: 8B. 05, 0000541A(rel)
        mov     qword ptr [rbp-60H], rax                ; 2B1E _ 48: 89. 45, A0
        mov     rax, qword ptr [?_463]                  ; 2B22 _ 48: 8B. 05, 00005427(rel)
        mov     qword ptr [rbp-68H], rax                ; 2B29 _ 48: 89. 45, 98
        mov     rax, qword ptr [?_462]                  ; 2B2D _ 48: 8B. 05, 00005414(rel)
        mov     qword ptr [rbp-70H], rax                ; 2B34 _ 48: 89. 45, 90
        mov     rcx, rdi                                ; 2B38 _ 48: 89. F9
        call    Unnamed_1_20                            ; 2B3B _ E8, FFFFD720
        mov     rcx, rdi                                ; 2B40 _ 48: 89. F9
        xor     edx, edx                                ; 2B43 _ 31. D2
        call    ?_336                                   ; 2B45 _ E8, 000031BC
        lea     rcx, ptr [?_464]                        ; 2B4A _ 48: 8D. 0D, 00005407(rel)
        call    Unnamed_1_B95                           ; 2B51 _ E8, FFFFE27F
        call    ?_237                                   ; 2B56 _ E8, 000015C7
        mov     rsi, 8000000000000015H                  ; 2B5B _ 48: BE, 8000000000000015
        test    al, al                                  ; 2B65 _ 84. C0
        je      Unnamed_1_2CD4                          ; 2B67 _ 0F 84, 000003A7
        mov     rax, qword ptr [?_578]                  ; 2B6D _ 48: 8B. 05, 00008134(rel)
        mov     dword ptr [rsp+28H], 2                  ; 2B74 _ C7. 44 24, 28, 00000002
        mov     qword ptr [rsp+20H], 0                  ; 2B7C _ 48: C7. 44 24, 20, 00000000
        lea     rdx, ptr [?_515]                        ; 2B85 _ 48: 8D. 15, 000078C0(rel)
        lea     r8, ptr [rbp-28H]                       ; 2B8C _ 4C: 8D. 45, D8
        mov     rcx, rdi                                ; 2B90 _ 48: 89. F9
        mov     r9, rdi                                 ; 2B93 _ 49: 89. F9
        call    qword ptr [rax+118H]                    ; 2B96 _ FF. 90, 00000118
        mov     rsi, rax                                ; 2B9C _ 48: 89. C6
        test    rsi, rsi                                ; 2B9F _ 48: 85. F6
        js      Unnamed_1_2CD4                          ; 2BA2 _ 0F 88, 0000036C
        mov     rax, qword ptr [rbp-28H]                ; 2BA8 _ 48: 8B. 45, D8
        mov     rcx, qword ptr [rax+18H]                ; 2BAC _ 48: 8B. 48, 18
        mov     rax, qword ptr [?_578]                  ; 2BB0 _ 48: 8B. 05, 000080F1(rel)
        lea     rdx, ptr [?_512]                        ; 2BB7 _ 48: 8D. 15, 0000785E(rel)
        lea     r8, ptr [rbp-30H]                       ; 2BBE _ 4C: 8D. 45, D0
        call    qword ptr [rax+98H]                     ; 2BC2 _ FF. 90, 00000098
        mov     rsi, 800000000000000EH                  ; 2BC8 _ 48: BE, 800000000000000E
        test    rax, rax                                ; 2BD2 _ 48: 85. C0
        js      Unnamed_1_2CD4                          ; 2BD5 _ 0F 88, 00000339
        mov     rax, qword ptr [rbp-28H]                ; 2BDB _ 48: 8B. 45, D8
        mov     rcx, qword ptr [rax+20H]                ; 2BDF _ 48: 8B. 48, 20
        call    ?_192                                   ; 2BE3 _ E8, 0000033D
        mov     rdi, rax                                ; 2BE8 _ 48: 89. C7
        mov     rsi, 800000000000000EH                  ; 2BEB _ 48: BE, 800000000000000E
        jmp     ?_182                                   ; 2BF5 _ EB, 20

Unnamed_1_29B7:
        cmp     al, 127                                 ; 2BF7 _ 3C, 7F
        jnz     Unnamed_1_29C5                          ; 2BF9 _ 75, 0A
        cmp     byte ptr [rdi+1H], -1                   ; 2BFB _ 80. 7F, 01, FF
        je      Unnamed_1_2CD4                          ; 2BFF _ 0F 84, 0000030F
Unnamed_1_29C5:
        movzx   ecx, byte ptr [rdi+2H]                  ; 2C05 _ 0F B6. 4F, 02
        movzx   eax, byte ptr [rdi+3H]                  ; 2C09 _ 0F B6. 47, 03
        shl     rax, 8                                  ; 2C0D _ 48: C1. E0, 08
        or      rax, rcx                                ; 2C11 _ 48: 09. C8
        add     rdi, rax                                ; 2C14 _ 48: 01. C7
?_182:  mov     al, byte ptr [rdi]                      ; 2C17 _ 8A. 07
        and     al, 7FH                                 ; 2C19 _ 24, 7F
        cmp     al, 4                                   ; 2C1B _ 3C, 04
        jnz     Unnamed_1_29B7                          ; 2C1D _ 75, D8
        cmp     byte ptr [rdi+1H], 6                    ; 2C1F _ 80. 7F, 01, 06
        jnz     Unnamed_1_29C5                          ; 2C23 _ 75, E0
        mov     rsi, 800000000000000EH                  ; 2C25 _ 48: BE, 800000000000000E
        test    rdi, rdi                                ; 2C2F _ 48: 85. FF
        je      Unnamed_1_2CD4                          ; 2C32 _ 0F 84, 000002DC
        mov     qword ptr [rbp-40H], 0                  ; 2C38 _ 48: C7. 45, C0, 00000000
        mov     qword ptr [rbp-48H], 0                  ; 2C40 _ 48: C7. 45, B8, 00000000
        mov     rax, qword ptr [rbp-30H]                ; 2C48 _ 48: 8B. 45, D0
        lea     rcx, ptr [rbp-48H]                      ; 2C4C _ 48: 8D. 4D, B8
        lea     r14, ptr [rbp-78H]                      ; 2C50 _ 4C: 8D. 75, 88
        mov     qword ptr [rsp+30H], r14                ; 2C54 _ 4C: 89. 74 24, 30
        mov     qword ptr [rsp+28H], rcx                ; 2C59 _ 48: 89. 4C 24, 28
        lea     rcx, ptr [rbp-40H]                      ; 2C5E _ 48: 8D. 4D, C0
        mov     qword ptr [rsp+20H], rcx                ; 2C62 _ 48: 89. 4C 24, 20
        add     rdi, 4                                  ; 2C67 _ 48: 83. C7, 04
        mov     rcx, rax                                ; 2C6B _ 48: 89. C1
        mov     rdx, rdi                                ; 2C6E _ 48: 89. FA
        mov     r8d, 16                                 ; 2C71 _ 41: B8, 00000010
        xor     r9d, r9d                                ; 2C77 _ 45: 31. C9
        call    qword ptr [rax+18H]                     ; 2C7A _ FF. 50, 18
        mov     rsi, rax                                ; 2C7D _ 48: 89. C6
        test    rsi, rsi                                ; 2C80 _ 48: 85. F6
        js      Unnamed_1_2CD4                          ; 2C83 _ 0F 88, 0000028B
        mov     rax, qword ptr [?_578]                  ; 2C89 _ 48: 8B. 05, 00008018(rel)
        lea     rcx, ptr [?_586]                        ; 2C90 _ 48: 8D. 0D, 00008041(rel)
        mov     rdx, rdi                                ; 2C97 _ 48: 89. FA
        mov     r8d, 16                                 ; 2C9A _ 41: B8, 00000010
        call    qword ptr [rax+160H]                    ; 2CA0 _ FF. 90, 00000160
        mov     rcx, qword ptr [rbp-40H]                ; 2CA6 _ 48: 8B. 4D, C0
        test    rcx, rcx                                ; 2CAA _ 48: 85. C9
        jz      ?_183                                   ; 2CAD _ 74, 12
        mov     rax, qword ptr [?_578]                  ; 2CAF _ 48: 8B. 05, 00007FF2(rel)
        call    qword ptr [rax+48H]                     ; 2CB6 _ FF. 50, 48
        mov     qword ptr [rbp-40H], 0                  ; 2CB9 _ 48: C7. 45, C0, 00000000
?_183:  mov     qword ptr [rbp-40H], 0                  ; 2CC1 _ 48: C7. 45, C0, 00000000
        mov     qword ptr [rbp-48H], 0                  ; 2CC9 _ 48: C7. 45, B8, 00000000
        mov     rax, qword ptr [rbp-30H]                ; 2CD1 _ 48: 8B. 45, D0
        mov     qword ptr [rsp+30H], r14                ; 2CD5 _ 4C: 89. 74 24, 30
        lea     rdi, ptr [rbp-74H]                      ; 2CDA _ 48: 8D. 7D, 8C
        mov     qword ptr [rsp+28H], rdi                ; 2CDE _ 48: 89. 7C 24, 28
        lea     rbx, ptr [rbp-49H]                      ; 2CE3 _ 48: 8D. 5D, B7
        mov     qword ptr [rsp+20H], rbx                ; 2CE7 _ 48: 89. 5C 24, 20
        lea     rdx, ptr [rbp-60H]                      ; 2CEC _ 48: 8D. 55, A0
        lea     r8, ptr [rbp-40H]                       ; 2CF0 _ 4C: 8D. 45, C0
        lea     r9, ptr [rbp-48H]                       ; 2CF4 _ 4C: 8D. 4D, B8
        mov     rcx, rax                                ; 2CF8 _ 48: 89. C1
        call    qword ptr [rax+10H]                     ; 2CFB _ FF. 50, 10
        mov     rsi, rax                                ; 2CFE _ 48: 89. C6
        test    rsi, rsi                                ; 2D01 _ 48: 85. F6
        js      Unnamed_1_2CD4                          ; 2D04 _ 0F 88, 0000020A
        mov     rsi, 800000000000000EH                  ; 2D0A _ 48: BE, 800000000000000E
        cmp     byte ptr [rbp-49H], 1                   ; 2D14 _ 80. 7D, B7, 01
        jne     Unnamed_1_2CD4                          ; 2D18 _ 0F 85, 000001F6
        mov     qword ptr [rbp-80H], 0                  ; 2D1E _ 48: C7. 45, 80, 00000000
        mov     qword ptr [rbp-88H], 0                  ; 2D26 _ 48: C7. 85, FFFFFF78, 00000000
        mov     rdx, qword ptr [rbp-48H]                ; 2D31 _ 48: 8B. 55, B8
        mov     rcx, qword ptr [rbp-40H]                ; 2D35 _ 48: 8B. 4D, C0
        lea     rax, ptr [rbp-80H]                      ; 2D39 _ 48: 8D. 45, 80
        mov     qword ptr [rsp+20H], rax                ; 2D3D _ 48: 89. 44 24, 20
        lea     r8, ptr [rbp-90H]                       ; 2D42 _ 4C: 8D. 85, FFFFFF70
        lea     r9, ptr [rbp-88H]                       ; 2D49 _ 4C: 8D. 8D, FFFFFF78
        call    ?_321                                   ; 2D50 _ E8, 0000284F
        mov     rsi, rax                                ; 2D55 _ 48: 89. C6
        mov     rcx, qword ptr [rbp-40H]                ; 2D58 _ 48: 8B. 4D, C0
        test    rcx, rcx                                ; 2D5C _ 48: 85. C9
        jz      ?_184                                   ; 2D5F _ 74, 12
        mov     rax, qword ptr [?_578]                  ; 2D61 _ 48: 8B. 05, 00007F40(rel)
        call    qword ptr [rax+48H]                     ; 2D68 _ FF. 50, 48
        mov     qword ptr [rbp-40H], 0                  ; 2D6B _ 48: C7. 45, C0, 00000000
?_184:  test    rsi, rsi                                ; 2D73 _ 48: 85. F6
        js      Unnamed_1_2CD4                          ; 2D76 _ 0F 88, 00000198
        call    ?_264                                   ; 2D7C _ E8, 00001D64
        mov     rsi, 8000000000000019H                  ; 2D81 _ 48: BE, 8000000000000019
        cmp     rax, qword ptr [rbp-90H]                ; 2D8B _ 48: 3B. 85, FFFFFF70
        jc      Unnamed_1_2CD4                          ; 2D92 _ 0F 82, 0000017C
        mov     qword ptr [rbp-40H], 0                  ; 2D98 _ 48: C7. 45, C0, 00000000
        mov     qword ptr [rbp-48H], 0                  ; 2DA0 _ 48: C7. 45, B8, 00000000
        mov     rax, qword ptr [rbp-30H]                ; 2DA8 _ 48: 8B. 45, D0
        mov     qword ptr [rsp+30H], r14                ; 2DAC _ 4C: 89. 74 24, 30
        mov     qword ptr [rsp+28H], rdi                ; 2DB1 _ 48: 89. 7C 24, 28
        mov     qword ptr [rsp+20H], rbx                ; 2DB6 _ 48: 89. 5C 24, 20
        lea     rdx, ptr [rbp-70H]                      ; 2DBB _ 48: 8D. 55, 90
        lea     r8, ptr [rbp-40H]                       ; 2DBF _ 4C: 8D. 45, C0
        lea     r9, ptr [rbp-48H]                       ; 2DC3 _ 4C: 8D. 4D, B8
        mov     rcx, rax                                ; 2DC7 _ 48: 89. C1
        call    qword ptr [rax+10H]                     ; 2DCA _ FF. 50, 10
        mov     rsi, rax                                ; 2DCD _ 48: 89. C6
        test    rsi, rsi                                ; 2DD0 _ 48: 85. F6
        js      Unnamed_1_2CD4                          ; 2DD3 _ 0F 88, 0000013B
        mov     rsi, 800000000000000EH                  ; 2DD9 _ 48: BE, 800000000000000E
        cmp     byte ptr [rbp-49H], 1                   ; 2DE3 _ 80. 7D, B7, 01
        jne     Unnamed_1_2CD4                          ; 2DE7 _ 0F 85, 00000127
        mov     qword ptr [rbp-38H], 0                  ; 2DED _ 48: C7. 45, C8, 00000000
        mov     rdx, qword ptr [rbp-48H]                ; 2DF5 _ 48: 8B. 55, B8
        mov     rcx, qword ptr [rbp-40H]                ; 2DF9 _ 48: 8B. 4D, C0
        lea     r8, ptr [rbp-38H]                       ; 2DFD _ 4C: 8D. 45, C8
        call    ?_331                                   ; 2E01 _ E8, 00002C07
        mov     rsi, rax                                ; 2E06 _ 48: 89. C6
        test    rsi, rsi                                ; 2E09 _ 48: 85. F6
        jns     ?_185                                   ; 2E0C _ 79, 13
        mov     rcx, qword ptr [rbp-40H]                ; 2E0E _ 48: 8B. 4D, C0
        mov     rax, qword ptr [?_578]                  ; 2E12 _ 48: 8B. 05, 00007E8F(rel)
        call    qword ptr [rax+48H]                     ; 2E19 _ FF. 50, 48
        jmp     Unnamed_1_2CD4                          ; 2E1C _ E9, 000000F3

?_185:  call    ?_255                                   ; 2E21 _ E8, 00001948
        xor     ecx, ecx                                ; 2E26 _ 31. C9
        mov     rax, qword ptr [rbp-88H]                ; 2E28 _ 48: 8B. 85, FFFFFF78
        test    rax, rax                                ; 2E2F _ 48: 85. C0
        jz      ?_187                                   ; 2E32 _ 74, 16
        mov     rdx, qword ptr [rbp-80H]                ; 2E34 _ 48: 8B. 55, 80
        add     rdx, 40                                 ; 2E38 _ 48: 83. C2, 28
        xor     ecx, ecx                                ; 2E3C _ 31. C9
?_186:  add     rcx, qword ptr [rdx]                    ; 2E3E _ 48: 03. 0A
        add     rdx, 104                                ; 2E41 _ 48: 83. C2, 68
        dec     rax                                     ; 2E45 _ 48: FF. C8
        jnz     ?_186                                   ; 2E48 _ 75, F4
?_187:  call    ?_248                                   ; 2E4A _ E8, 0000156A
        mov     rax, qword ptr [?_578]                  ; 2E4F _ 48: 8B. 05, 00007E52(rel)
        mov     ecx, 16                                 ; 2E56 _ B9, 00000010
        call    qword ptr [rax+18H]                     ; 2E5B _ FF. 50, 18
        mov     ecx, 1                                  ; 2E5E _ B9, 00000001
        call    Unnamed_1_4705                          ; 2E63 _ E8, 00001ADD
        mov     ecx, 1                                  ; 2E68 _ B9, 00000001
        call    Unnamed_1_4012                          ; 2E6D _ E8, 000013E0
        call    ?_243                                   ; 2E72 _ E8, 00001446
        call    Unnamed_1_63B7                          ; 2E77 _ E8, 0000377B
        test    rax, rax                                ; 2E7C _ 48: 85. C0
        jnz     ?_188                                   ; 2E7F _ 75, 05
        call    ?_245                                   ; 2E81 _ E8, 00001482
?_188:  call    ?_247                                   ; 2E86 _ E8, 000014F6
        call    ?_388                                   ; 2E8B _ E8, 00003973
        xor     edi, edi                                ; 2E90 _ 31. FF
        mov     rbx, -1                                 ; 2E92 _ 48: C7. C3, FFFFFFFF
        jmp     ?_189                                   ; 2E99 _ EB, 1C

Unnamed_1_2C5B:
        mov     rdx, qword ptr [rbp-80H]                ; 2E9B _ 48: 8B. 55, 80
        add     rdx, rdi                                ; 2E9F _ 48: 01. FA
        lea     rdi, ptr [rdi+68H]                      ; 2EA2 _ 48: 8D. 7F, 68
        mov     rcx, qword ptr [rbp-38H]                ; 2EA6 _ 48: 8B. 4D, C8
        call    Unnamed_1_25DE                          ; 2EAA _ E8, FFFFF96F
        mov     rsi, rax                                ; 2EAF _ 48: 89. C6
        test    rsi, rsi                                ; 2EB2 _ 48: 85. F6
        js      ?_190                                   ; 2EB5 _ 78, 11
?_189:  inc     rbx                                     ; 2EB7 _ 48: FF. C3
        cmp     rbx, qword ptr [rbp-88H]                ; 2EBA _ 48: 3B. 9D, FFFFFF78
        jc      Unnamed_1_2C5B                          ; 2EC1 _ 72, D8
        test    rsi, rsi                                ; 2EC3 _ 48: 85. F6
        jns     ?_191                                   ; 2EC6 _ 79, 1D
?_190:  mov     rcx, qword ptr [rbp-80H]                ; 2EC8 _ 48: 8B. 4D, 80
        test    rcx, rcx                                ; 2ECC _ 48: 85. C9
        jz      Unnamed_1_2CD4                          ; 2ECF _ 74, 43
        mov     rax, qword ptr [?_578]                  ; 2ED1 _ 48: 8B. 05, 00007DD0(rel)
        call    qword ptr [rax+48H]                     ; 2ED8 _ FF. 50, 48
        mov     qword ptr [rbp-80H], 0                  ; 2EDB _ 48: C7. 45, 80, 00000000
        jmp     Unnamed_1_2CD4                          ; 2EE3 _ EB, 2F

?_191:  xor     ecx, ecx                                ; 2EE5 _ 31. C9
        call    Unnamed_1_4012                          ; 2EE7 _ E8, 00001366
        xor     ecx, ecx                                ; 2EEC _ 31. C9
        call    Unnamed_1_4705                          ; 2EEE _ E8, 00001A52
        mov     rax, qword ptr [?_578]                  ; 2EF3 _ 48: 8B. 05, 00007DAE(rel)
        mov     ecx, 1000000                            ; 2EFA _ B9, 000F4240
        call    qword ptr [rax+0F8H]                    ; 2EFF _ FF. 90, 000000F8
        call    ?_257                                   ; 2F05 _ E8, 00001980
        mov     rsi, 8000000000000015H                  ; 2F0A _ 48: BE, 8000000000000015
Unnamed_1_2CD4:
        mov     rax, rsi                                ; 2F14 _ 48: 89. F0
        add     rsp, 176                                ; 2F17 _ 48: 81. C4, 000000B0
        pop     rbx                                     ; 2F1E _ 5B
        pop     rdi                                     ; 2F1F _ 5F
        pop     rsi                                     ; 2F20 _ 5E
        pop     r14                                     ; 2F21 _ 41: 5E
        pop     rbp                                     ; 2F23 _ 5D
        ret                                             ; 2F24 _ C3

?_192   LABEL NEAR
        push    rbp                                     ; 2F25 _ 55
        mov     rbp, rsp                                ; 2F26 _ 48: 89. E5
        push    r15                                     ; 2F29 _ 41: 57
        push    r14                                     ; 2F2B _ 41: 56
        push    r12                                     ; 2F2D _ 41: 54
        push    rsi                                     ; 2F2F _ 56
        push    rdi                                     ; 2F30 _ 57
        push    rbx                                     ; 2F31 _ 53
        sub     rsp, 32                                 ; 2F32 _ 48: 83. EC, 20
        mov     r12, rcx                                ; 2F36 _ 49: 89. CC
        xor     eax, eax                                ; 2F39 _ 31. C0
        mov     rdx, r12                                ; 2F3B _ 4C: 89. E2
        xor     ebx, ebx                                ; 2F3E _ 31. DB
        jmp     ?_193                                   ; 2F40 _ EB, 03

Unnamed_1_2D02:
        add     rdx, rdi                                ; 2F42 _ 48: 01. FA
?_193:  movzx   esi, byte ptr [rdx+2H]                  ; 2F45 _ 0F B6. 72, 02
        movzx   edi, byte ptr [rdx+3H]                  ; 2F49 _ 0F B6. 7A, 03
        shl     rdi, 8                                  ; 2F4D _ 48: C1. E7, 08
        or      rdi, rsi                                ; 2F51 _ 48: 09. F7
        add     rbx, rdi                                ; 2F54 _ 48: 01. FB
        mov     rcx, rbx                                ; 2F57 _ 48: 89. D9
        and     rcx, 03H                                ; 2F5A _ 48: 83. E1, 03
        mov     esi, 4                                  ; 2F5E _ BE, 00000004
        sub     rsi, rcx                                ; 2F63 _ 48: 29. CE
        mov     rcx, rbx                                ; 2F66 _ 48: 89. D9
        and     rcx, 03H                                ; 2F69 _ 48: 83. E1, 03
        cmove   rsi, rax                                ; 2F6D _ 48: 0F 44. F0
        mov     r8b, byte ptr [rdx]                     ; 2F71 _ 44: 8A. 02
        add     rbx, rsi                                ; 2F74 _ 48: 01. F3
        and     r8b, 7FH                                ; 2F77 _ 41: 80. E0, 7F
        cmp     r8b, 127                                ; 2F7B _ 41: 80. F8, 7F
        jnz     Unnamed_1_2D02                          ; 2F7F _ 75, C1
        cmp     byte ptr [rdx+1H], -1                   ; 2F81 _ 80. 7A, 01, FF
        jnz     Unnamed_1_2D02                          ; 2F85 _ 75, BB
        mov     rcx, rbx                                ; 2F87 _ 48: 89. D9
        call    Unnamed_1_FF                            ; 2F8A _ E8, FFFFD3B0
        mov     r14, rax                                ; 2F8F _ 49: 89. C6
        test    r14, r14                                ; 2F92 _ 4D: 85. F6
        je      ?_195                                   ; 2F95 _ 0F 84, 00000086
        xor     r15d, r15d                              ; 2F9B _ 45: 31. FF
        mov     rbx, r14                                ; 2F9E _ 4C: 89. F3
        jmp     ?_194                                   ; 2FA1 _ EB, 19

Unnamed_1_2D63:
        add     rbx, rdi                                ; 2FA3 _ 48: 01. FB
        movzx   ecx, byte ptr [r12+2H]                  ; 2FA6 _ 41: 0F B6. 4C 24, 02
        movzx   eax, byte ptr [r12+3H]                  ; 2FAC _ 41: 0F B6. 44 24, 03
        shl     rax, 8                                  ; 2FB2 _ 48: C1. E0, 08
        or      rax, rcx                                ; 2FB6 _ 48: 09. C8
        add     r12, rax                                ; 2FB9 _ 49: 01. C4
?_194:  movzx   eax, byte ptr [r12+2H]                  ; 2FBC _ 41: 0F B6. 44 24, 02
        mov     rcx, rax                                ; 2FC2 _ 48: 89. C1
        and     rcx, 03H                                ; 2FC5 _ 48: 83. E1, 03
        mov     esi, 4                                  ; 2FC9 _ BE, 00000004
        sub     rsi, rcx                                ; 2FCE _ 48: 29. CE
        mov     rcx, rax                                ; 2FD1 _ 48: 89. C1
        and     rcx, 03H                                ; 2FD4 _ 48: 83. E1, 03
        cmove   rsi, r15                                ; 2FD8 _ 49: 0F 44. F7
        movzx   edi, byte ptr [r12+3H]                  ; 2FDC _ 41: 0F B6. 7C 24, 03
        shl     rdi, 8                                  ; 2FE2 _ 48: C1. E7, 08
        or      rdi, rax                                ; 2FE6 _ 48: 09. C7
        mov     rax, qword ptr [?_578]                  ; 2FE9 _ 48: 8B. 05, 00007CB8(rel)
        mov     rcx, rbx                                ; 2FF0 _ 48: 89. D9
        mov     rdx, r12                                ; 2FF3 _ 4C: 89. E2
        mov     r8, rdi                                 ; 2FF6 _ 49: 89. F8
        call    qword ptr [rax+160H]                    ; 2FF9 _ FF. 90, 00000160
        add     rdi, rsi                                ; 2FFF _ 48: 01. F7
        mov     byte ptr [rbx+2H], dil                  ; 3002 _ 40: 88. 7B, 02
        mov     rax, rdi                                ; 3006 _ 48: 89. F8
        mov     byte ptr [rbx+3H], ah                   ; 3009 _ 88. 63, 03
        or      byte ptr [rbx], 0FFFFFF80H              ; 300C _ 80. 0B, 80
        mov     al, byte ptr [r12]                      ; 300F _ 41: 8A. 04 24
        and     al, 7FH                                 ; 3013 _ 24, 7F
        cmp     al, 127                                 ; 3015 _ 3C, 7F
        jnz     Unnamed_1_2D63                          ; 3017 _ 75, 8A
        cmp     byte ptr [r12+1H], -1                   ; 3019 _ 41: 80. 7C 24, 01, FF
        jnz     Unnamed_1_2D63                          ; 301F _ 75, 82
?_195:  mov     rax, r14                                ; 3021 _ 4C: 89. F0
        add     rsp, 32                                 ; 3024 _ 48: 83. C4, 20
        pop     rbx                                     ; 3028 _ 5B
        pop     rdi                                     ; 3029 _ 5F
        pop     rsi                                     ; 302A _ 5E
        pop     r12                                     ; 302B _ 41: 5C
        pop     r14                                     ; 302D _ 41: 5E
        pop     r15                                     ; 302F _ 41: 5F
        pop     rbp                                     ; 3031 _ 5D
        ret                                             ; 3032 _ C3

Unnamed_1_2DF3 LABEL NEAR
        push    rbp                                     ; 3033 _ 55
        mov     rbp, rsp                                ; 3034 _ 48: 89. E5
        push    r14                                     ; 3037 _ 41: 56
        push    rsi                                     ; 3039 _ 56
        push    rdi                                     ; 303A _ 57
        push    rbx                                     ; 303B _ 53
        sub     rsp, 48                                 ; 303C _ 48: 83. EC, 30
        mov     r14, r9                                 ; 3040 _ 4D: 89. CE
        mov     rsi, r8                                 ; 3043 _ 4C: 89. C6
        mov     rbx, rdx                                ; 3046 _ 48: 89. D3
        mov     rdi, rcx                                ; 3049 _ 48: 89. CF
        mov     rcx, rdi                                ; 304C _ 48: 89. F9
        mov     rdx, rbx                                ; 304F _ 48: 89. DA
        mov     r8d, 1                                  ; 3052 _ 41: B8, 00000001
        mov     r9, -1                                  ; 3058 _ 49: C7. C1, FFFFFFFF
        call    qword ptr [rdi+30H]                     ; 305F _ FF. 57, 30
        test    rax, rax                                ; 3062 _ 48: 85. C0
        js      Unnamed_1_2E50                          ; 3065 _ 78, 29
        mov     qword ptr [rbp-28H], rsi                ; 3067 _ 48: 89. 75, D8
        mov     qword ptr [rsp+20H], r14                ; 306B _ 4C: 89. 74 24, 20
        lea     r9, ptr [rbp-28H]                       ; 3070 _ 4C: 8D. 4D, D8
        mov     rcx, rdi                                ; 3074 _ 48: 89. F9
        mov     rdx, rbx                                ; 3077 _ 48: 89. DA
        xor     r8d, r8d                                ; 307A _ 45: 31. C0
        call    qword ptr [rdi+28H]                     ; 307D _ FF. 57, 28
        test    rax, rax                                ; 3080 _ 48: 85. C0
        js      Unnamed_1_2E50                          ; 3083 _ 78, 0B
        mov     rcx, qword ptr [rbp-28H]                ; 3085 _ 48: 8B. 4D, D8
        cmp     rcx, rsi                                ; 3089 _ 48: 39. F1
        jnz     Unnamed_1_2E50                          ; 308C _ 75, 02
        xor     eax, eax                                ; 308E _ 31. C0
Unnamed_1_2E50:
        add     rsp, 48                                 ; 3090 _ 48: 83. C4, 30
        pop     rbx                                     ; 3094 _ 5B
        pop     rdi                                     ; 3095 _ 5F
        pop     rsi                                     ; 3096 _ 5E
        pop     r14                                     ; 3097 _ 41: 5E
        pop     rbp                                     ; 3099 _ 5D
        ret                                             ; 309A _ C3

Unnamed_1_2E5B LABEL NEAR
        push    rbp                                     ; 309B _ 55
        mov     rbp, rsp                                ; 309C _ 48: 89. E5
        push    r15                                     ; 309F _ 41: 57
        push    r14                                     ; 30A1 _ 41: 56
        push    r13                                     ; 30A3 _ 41: 55
        push    r12                                     ; 30A5 _ 41: 54
        push    rsi                                     ; 30A7 _ 56
        push    rdi                                     ; 30A8 _ 57
        push    rbx                                     ; 30A9 _ 53
        sub     rsp, 56                                 ; 30AA _ 48: 83. EC, 38
        mov     r15, r9                                 ; 30AE _ 4D: 89. CF
        mov     rsi, r8                                 ; 30B1 _ 4C: 89. C6
        mov     r13, rdx                                ; 30B4 _ 49: 89. D5
        mov     rbx, rcx                                ; 30B7 _ 48: 89. CB
        mov     r9, qword ptr [rbp+38H]                 ; 30BA _ 4C: 8B. 4D, 38
        mov     r12, qword ptr [rbp+30H]                ; 30BE _ 4C: 8B. 65, 30
        test    rsi, rsi                                ; 30C2 _ 48: 85. F6
        jnz     Unnamed_1_2E9F                          ; 30C5 _ 75, 18
        cmp     r15, r12                                ; 30C7 _ 4D: 39. E7
        jnz     Unnamed_1_2E9F                          ; 30CA _ 75, 13
        mov     rcx, rbx                                ; 30CC _ 48: 89. D9
        mov     rdx, r13                                ; 30CF _ 4C: 89. EA
        mov     r8, r12                                 ; 30D2 _ 4D: 89. E0
        call    Unnamed_1_2DF3                          ; 30D5 _ E8, FFFFFF59
        mov     r14, rax                                ; 30DA _ 49: 89. C6
        jmp     Unnamed_1_2F1E                          ; 30DD _ EB, 7F

Unnamed_1_2E9F:
        mov     rcx, r12                                ; 30DF _ 4C: 89. E1
        call    Unnamed_1_CB                            ; 30E2 _ E8, FFFFD224
        mov     rdi, rax                                ; 30E7 _ 48: 89. C7
        mov     r14, 8000000000000009H                  ; 30EA _ 49: BE, 8000000000000009
        test    rdi, rdi                                ; 30F4 _ 48: 85. FF
        jz      Unnamed_1_2F1E                          ; 30F7 _ 74, 65
        mov     qword ptr [rbp-40H], r12                ; 30F9 _ 4C: 89. 65, C0
        mov     qword ptr [rsp+20H], rdi                ; 30FD _ 48: 89. 7C 24, 20
        lea     r9, ptr [rbp-40H]                       ; 3102 _ 4C: 8D. 4D, C0
        mov     rcx, rbx                                ; 3106 _ 48: 89. D9
        mov     rdx, r13                                ; 3109 _ 4C: 89. EA
        xor     r8d, r8d                                ; 310C _ 45: 31. C0
        call    qword ptr [rbx+20H]                     ; 310F _ FF. 53, 20
        mov     r14, rax                                ; 3112 _ 49: 89. C6
        mov     rax, qword ptr [?_578]                  ; 3115 _ 48: 8B. 05, 00007B8C(rel)
        test    r14, r14                                ; 311C _ 4D: 85. F6
        js      Unnamed_1_2F18                          ; 311F _ 78, 37
        mov     rcx, qword ptr [rbp-40H]                ; 3121 _ 48: 8B. 4D, C0
        cmp     rcx, r12                                ; 3125 _ 4C: 39. E1
        jnz     Unnamed_1_2F18                          ; 3128 _ 75, 2E
        add     rsi, rdi                                ; 312A _ 48: 01. FE
        mov     rcx, rsi                                ; 312D _ 48: 89. F1
        mov     rdx, qword ptr [rbp+38H]                ; 3130 _ 48: 8B. 55, 38
        mov     r8, r15                                 ; 3134 _ 4D: 89. F8
        call    qword ptr [rax+160H]                    ; 3137 _ FF. 90, 00000160
        mov     rcx, rbx                                ; 313D _ 48: 89. D9
        mov     rdx, r13                                ; 3140 _ 4C: 89. EA
        mov     r8, r12                                 ; 3143 _ 4D: 89. E0
        mov     r9, rdi                                 ; 3146 _ 49: 89. F9
        call    Unnamed_1_2DF3                          ; 3149 _ E8, FFFFFEE5
        mov     r14, rax                                ; 314E _ 49: 89. C6
        mov     rax, qword ptr [?_578]                  ; 3151 _ 48: 8B. 05, 00007B50(rel)
Unnamed_1_2F18:
        mov     rcx, rdi                                ; 3158 _ 48: 89. F9
        call    qword ptr [rax+48H]                     ; 315B _ FF. 50, 48
Unnamed_1_2F1E:
        mov     rax, r14                                ; 315E _ 4C: 89. F0
        add     rsp, 56                                 ; 3161 _ 48: 83. C4, 38
        pop     rbx                                     ; 3165 _ 5B
        pop     rdi                                     ; 3166 _ 5F
        pop     rsi                                     ; 3167 _ 5E
        pop     r12                                     ; 3168 _ 41: 5C
        pop     r13                                     ; 316A _ 41: 5D
        pop     r14                                     ; 316C _ 41: 5E
        pop     r15                                     ; 316E _ 41: 5F
        pop     rbp                                     ; 3170 _ 5D
        ret                                             ; 3171 _ C3

Unnamed_1_2F32 LABEL NEAR
        push    rbp                                     ; 3172 _ 55
        mov     rbp, rsp                                ; 3173 _ 48: 89. E5
        push    r15                                     ; 3176 _ 41: 57
        push    r14                                     ; 3178 _ 41: 56
        push    r13                                     ; 317A _ 41: 55
        push    r12                                     ; 317C _ 41: 54
        push    rsi                                     ; 317E _ 56
        push    rdi                                     ; 317F _ 57
        push    rbx                                     ; 3180 _ 53
        sub     rsp, 104                                ; 3181 _ 48: 83. EC, 68
        mov     r12, r9                                 ; 3185 _ 4D: 89. CC
        mov     rbx, r8                                 ; 3188 _ 4C: 89. C3
        mov     rsi, rdx                                ; 318B _ 48: 89. D6
        mov     qword ptr [rbp-60H], rcx                ; 318E _ 48: 89. 4D, A0
        mov     rax, qword ptr [rbp+50H]                ; 3192 _ 48: 8B. 45, 50
        mov     byte ptr [rax], 0                       ; 3196 _ C6. 00, 00
        mov     qword ptr [rbp-50H], r12                ; 3199 _ 4C: 89. 65, B0
        lea     rcx, ptr [rbp-50H]                      ; 319D _ 48: 8D. 4D, B0
        mov     rdx, qword ptr [rbp+30H]                ; 31A1 _ 48: 8B. 55, 30
        lea     rax, ptr [rbp-51H]                      ; 31A5 _ 48: 8D. 45, AF
        mov     qword ptr [rsp+38H], rax                ; 31A9 _ 48: 89. 44 24, 38
        mov     qword ptr [rsp+30H], rdx                ; 31AE _ 48: 89. 54 24, 30
        mov     qword ptr [rsp+28H], rcx                ; 31B3 _ 48: 89. 4C 24, 28
        mov     rax, qword ptr [rbp+48H]                ; 31B8 _ 48: 8B. 45, 48
        mov     qword ptr [rsp+20H], rax                ; 31BC _ 48: 89. 44 24, 20
        lea     rdx, ptr [rbp-48H]                      ; 31C1 _ 48: 8D. 55, B8
        mov     rax, qword ptr [rbp+38H]                ; 31C5 _ 48: 8B. 45, 38
        mov     rdi, qword ptr [rbp+40H]                ; 31C9 _ 48: 8B. 7D, 40
        mov     rcx, rsi                                ; 31CD _ 48: 89. F1
        mov     r8, rax                                 ; 31D0 _ 49: 89. C0
        mov     r13, rax                                ; 31D3 _ 49: 89. C5
        mov     r9, rdi                                 ; 31D6 _ 49: 89. F9
        mov     r14, rdi                                ; 31D9 _ 49: 89. FE
        call    qword ptr [rsi+28H]                     ; 31DC _ FF. 56, 28
        mov     rdi, rax                                ; 31DF _ 48: 89. C7
        test    rdi, rdi                                ; 31E2 _ 48: 85. FF
        jns     ?_198                                   ; 31E5 _ 0F 89, 000000C9
        mov     rax, 800000000000000EH                  ; 31EB _ 48: B8, 800000000000000E
        cmp     rdi, rax                                ; 31F5 _ 48: 39. C7
        jnz     ?_196                                   ; 31F8 _ 75, 0D
        mov     cl, byte ptr [rbp-51H]                  ; 31FA _ 8A. 4D, AF
        xor     eax, eax                                ; 31FD _ 31. C0
        test    cl, cl                                  ; 31FF _ 84. C9
        jne     Unnamed_1_30F2                          ; 3201 _ 0F 85, 0000012B
?_196:  mov     rax, 8000000000000015H                  ; 3207 _ 48: B8, 8000000000000015
        mov     rcx, 8000000000000005H                  ; 3211 _ 48: B9, 8000000000000005
        cmp     rdi, rcx                                ; 321B _ 48: 39. CF
        jne     Unnamed_1_30F2                          ; 321E _ 0F 85, 0000010E
        mov     rcx, qword ptr [rbp-50H]                ; 3224 _ 48: 8B. 4D, B0
        call    Unnamed_1_CB                            ; 3228 _ E8, FFFFD0DE
        mov     r15, rax                                ; 322D _ 49: 89. C7
        mov     rax, 8000000000000009H                  ; 3230 _ 48: B8, 8000000000000009
        test    r15, r15                                ; 323A _ 4D: 85. FF
        je      Unnamed_1_30F2                          ; 323D _ 0F 84, 000000EF
        lea     rax, ptr [rbp-51H]                      ; 3243 _ 48: 8D. 45, AF
        mov     qword ptr [rsp+38H], rax                ; 3247 _ 48: 89. 44 24, 38
        mov     qword ptr [rsp+30H], r15                ; 324C _ 4C: 89. 7C 24, 30
        lea     rax, ptr [rbp-50H]                      ; 3251 _ 48: 8D. 45, B0
        mov     qword ptr [rsp+28H], rax                ; 3255 _ 48: 89. 44 24, 28
        mov     rax, qword ptr [rbp+48H]                ; 325A _ 48: 8B. 45, 48
        mov     qword ptr [rsp+20H], rax                ; 325E _ 48: 89. 44 24, 20
        lea     rdx, ptr [rbp-48H]                      ; 3263 _ 48: 8D. 55, B8
        mov     rcx, rsi                                ; 3267 _ 48: 89. F1
        mov     r8, r13                                 ; 326A _ 4D: 89. E8
        mov     r9, r14                                 ; 326D _ 4D: 89. F1
        call    qword ptr [rsi+28H]                     ; 3270 _ FF. 56, 28
        mov     rdi, rax                                ; 3273 _ 48: 89. C7
        mov     rax, qword ptr [?_578]                  ; 3276 _ 48: 8B. 05, 00007A2B(rel)
        test    rdi, rdi                                ; 327D _ 48: 85. FF
        jns     ?_197                                   ; 3280 _ 79, 15
        mov     rcx, r15                                ; 3282 _ 4C: 89. F9
        call    qword ptr [rax+48H]                     ; 3285 _ FF. 50, 48
        mov     rax, 8000000000000015H                  ; 3288 _ 48: B8, 8000000000000015
        jmp     Unnamed_1_30F2                          ; 3292 _ E9, 0000009B

?_197:  mov     rcx, qword ptr [rbp+30H]                ; 3297 _ 48: 8B. 4D, 30
        mov     rdx, r15                                ; 329B _ 4C: 89. FA
        mov     r8, r12                                 ; 329E _ 4D: 89. E0
        call    qword ptr [rax+160H]                    ; 32A1 _ FF. 90, 00000160
        mov     rax, qword ptr [?_578]                  ; 32A7 _ 48: 8B. 05, 000079FA(rel)
        mov     rcx, r15                                ; 32AE _ 4C: 89. F9
        call    qword ptr [rax+48H]                     ; 32B1 _ FF. 50, 48
?_198:  mov     rax, qword ptr [rbp+50H]                ; 32B4 _ 48: 8B. 45, 50
        mov     byte ptr [rax], 1                       ; 32B8 _ C6. 00, 01
        lea     rcx, ptr [rbp-48H]                      ; 32BB _ 48: 8D. 4D, B8
        lea     rdx, ptr [?_586]                        ; 32BF _ 48: 8D. 15, 00007A12(rel)
        mov     r8d, 16                                 ; 32C6 _ 41: B8, 00000010
        call    Unnamed_1_222                           ; 32CC _ E8, FFFFD191
        mov     rcx, rax                                ; 32D1 _ 48: 89. C1
        mov     rax, 800000000000000EH                  ; 32D4 _ 48: B8, 800000000000000E
        test    rcx, rcx                                ; 32DE _ 48: 85. C9
        jnz     Unnamed_1_30F2                          ; 32E1 _ 75, 4F
        add     rbx, 24                                 ; 32E3 _ 48: 83. C3, 18
        mov     rcx, qword ptr [rbp+30H]                ; 32E7 _ 48: 8B. 4D, 30
        mov     rdx, rbx                                ; 32EB _ 48: 89. DA
        mov     r8d, 16                                 ; 32EE _ 41: B8, 00000010
        call    Unnamed_1_222                           ; 32F4 _ E8, FFFFD169
        mov     rcx, rax                                ; 32F9 _ 48: 89. C1
        mov     rax, 800000000000000EH                  ; 32FC _ 48: B8, 800000000000000E
        test    rcx, rcx                                ; 3306 _ 48: 85. C9
        jnz     Unnamed_1_30F2                          ; 3309 _ 75, 27
        cmp     byte ptr [rbp-51H], 0                   ; 330B _ 80. 7D, AF, 00
        mov     rax, rdi                                ; 330F _ 48: 89. F8
        jnz     Unnamed_1_30F2                          ; 3312 _ 75, 1E
        mov     rcx, rsi                                ; 3314 _ 48: 89. F1
        mov     rdx, qword ptr [rbp-60H]                ; 3317 _ 48: 8B. 55, A0
        call    qword ptr [rsi+18H]                     ; 331B _ FF. 56, 18
        test    rax, rax                                ; 331E _ 48: 85. C0
        jns     Unnamed_1_30F2                          ; 3321 _ 79, 0F
        mov     rcx, rsi                                ; 3323 _ 48: 89. F1
        call    qword ptr [rsi+20H]                     ; 3326 _ FF. 56, 20
        mov     rax, qword ptr [rbp+50H]                ; 3329 _ 48: 8B. 45, 50
        mov     byte ptr [rax], 0                       ; 332D _ C6. 00, 00
        xor     eax, eax                                ; 3330 _ 31. C0
Unnamed_1_30F2:
        add     rsp, 104                                ; 3332 _ 48: 83. C4, 68
        pop     rbx                                     ; 3336 _ 5B
        pop     rdi                                     ; 3337 _ 5F
        pop     rsi                                     ; 3338 _ 5E
        pop     r12                                     ; 3339 _ 41: 5C
        pop     r13                                     ; 333B _ 41: 5D
        pop     r14                                     ; 333D _ 41: 5E
        pop     r15                                     ; 333F _ 41: 5F
        pop     rbp                                     ; 3341 _ 5D
        ret                                             ; 3342 _ C3

Unnamed_1_3103 LABEL NEAR
        push    rbp                                     ; 3343 _ 55
        mov     rbp, rsp                                ; 3344 _ 48: 89. E5
        push    r15                                     ; 3347 _ 41: 57
        push    r14                                     ; 3349 _ 41: 56
        push    r13                                     ; 334B _ 41: 55
        push    r12                                     ; 334D _ 41: 54
        push    rsi                                     ; 334F _ 56
        push    rdi                                     ; 3350 _ 57
        push    rbx                                     ; 3351 _ 53
        sub     rsp, 152                                ; 3352 _ 48: 81. EC, 00000098
        mov     r12, r9                                 ; 3359 _ 4D: 89. CC
        mov     r14, r8                                 ; 335C _ 4D: 89. C6
        mov     qword ptr [rbp-80H], rcx                ; 335F _ 48: 89. 4D, 80
        mov     rcx, 8000000000000002H                  ; 3363 _ 48: B9, 8000000000000002
        cmp     dword ptr [r12+8H], 0                   ; 336D _ 41: 83. 7C 24, 08, 00
        jne     Unnamed_1_335A                          ; 3373 _ 0F 85, 00000221
        mov     rcx, 8000000000000002H                  ; 3379 _ 48: B9, 8000000000000002
        cmp     byte ptr [r12+30H], 0                   ; 3383 _ 41: 80. 7C 24, 30, 00
        je      Unnamed_1_335A                          ; 3389 _ 0F 84, 0000020B
        mov     rax, qword ptr [?_578]                  ; 338F _ 48: 8B. 05, 00007912(rel)
        lea     rcx, ptr [?_509]                        ; 3396 _ 48: 8D. 0D, 0000704F(rel)
        xor     ebx, ebx                                ; 339D _ 31. DB
        lea     r8, ptr [rbp-40H]                       ; 339F _ 4C: 8D. 45, C0
        xor     edx, edx                                ; 33A3 _ 31. D2
        call    qword ptr [rax+140H]                    ; 33A5 _ FF. 90, 00000140
        mov     rcx, 800000000000000EH                  ; 33AB _ 48: B9, 800000000000000E
        test    rax, rax                                ; 33B5 _ 48: 85. C0
        js      Unnamed_1_335A                          ; 33B8 _ 0F 88, 000001DC
        mov     rdi, qword ptr [rbp+30H]                ; 33BE _ 48: 8B. 7D, 30
        lea     rax, ptr [r14+4H]                       ; 33C2 _ 49: 8D. 46, 04
        mov     rsi, rbx                                ; 33C6 _ 48: 89. DE
        jmp     ?_199                                   ; 33C9 _ EB, 0E

Unnamed_1_318B:
        cmp     rbx, rdx                                ; 33CB _ 48: 39. D3
        cmovc   rbx, rdx                                ; 33CE _ 48: 0F 42. DA
        add     rsi, rcx                                ; 33D2 _ 48: 01. CE
        add     rax, 8                                  ; 33D5 _ 48: 83. C0, 08
?_199:  mov     ecx, dword ptr [rax-4H]                 ; 33D9 _ 8B. 48, FC
        test    rcx, rcx                                ; 33DC _ 48: 85. C9
        jz      ?_200                                   ; 33DF _ 74, 07
        mov     edx, dword ptr [rax]                    ; 33E1 _ 8B. 10
        test    rdx, rdx                                ; 33E3 _ 48: 85. D2
        jnz     Unnamed_1_318B                          ; 33E6 _ 75, E3
?_200:  mov     rax, qword ptr [rbp-40H]                ; 33E8 _ 48: 8B. 45, C0
        lea     rdx, ptr [rbp-48H]                      ; 33EC _ 48: 8D. 55, B8
        mov     rcx, rax                                ; 33F0 _ 48: 89. C1
        call    qword ptr [rax]                         ; 33F3 _ FF. 10
        mov     rcx, 8000000000000009H                  ; 33F5 _ 48: B9, 8000000000000009
        cmp     qword ptr [rbp-48H], rbx                ; 33FF _ 48: 39. 5D, B8
        jc      Unnamed_1_335A                          ; 3403 _ 0F 82, 00000191
        mov     qword ptr [rbp-68H], 0                  ; 3409 _ 48: C7. 45, 98, 00000000
        mov     qword ptr [rbp-70H], 0                  ; 3411 _ 48: C7. 45, 90, 00000000
        mov     qword ptr [rbp-78H], 0                  ; 3419 _ 48: C7. 45, 88, 00000000
        mov     byte ptr [rbp-49H], 0                   ; 3421 _ C6. 45, B7, 00
        mov     rdx, qword ptr [rbp-40H]                ; 3425 _ 48: 8B. 55, C0
        lea     rcx, ptr [rbp-60H]                      ; 3429 _ 48: 8D. 4D, A0
        lea     r8, ptr [rbp-68H]                       ; 342D _ 4C: 8D. 45, 98
        lea     r9, ptr [rbp-70H]                       ; 3431 _ 4C: 8D. 4D, 90
        lea     rbx, ptr [rbp-78H]                      ; 3435 _ 48: 8D. 5D, 88
        lea     rax, ptr [rbp-49H]                      ; 3439 _ 48: 8D. 45, B7
        mov     qword ptr [rsp+40H], rax                ; 343D _ 48: 89. 44 24, 40
        mov     qword ptr [rsp+38H], rbx                ; 3442 _ 48: 89. 5C 24, 38
        mov     qword ptr [rsp+30H], r9                 ; 3447 _ 4C: 89. 4C 24, 30
        mov     qword ptr [rsp+28H], r8                 ; 344C _ 4C: 89. 44 24, 28
        mov     qword ptr [rsp+20H], rcx                ; 3451 _ 48: 89. 4C 24, 20
        mov     rcx, qword ptr [rbp-80H]                ; 3456 _ 48: 8B. 4D, 80
        mov     r8, r12                                 ; 345A _ 4D: 89. E0
        mov     r9d, 16                                 ; 345D _ 41: B9, 00000010
        call    Unnamed_1_2F32                          ; 3463 _ E8, FFFFFD0A
        mov     rcx, 8000000000000015H                  ; 3468 _ 48: B9, 8000000000000015
        mov     rdx, 800000000000000EH                  ; 3472 _ 48: BA, 800000000000000E
        cmp     rax, rdx                                ; 347C _ 48: 39. D0
        sete    r8b                                     ; 347F _ 41: 0F 94. C0
        mov     r13b, byte ptr [rbp-49H]                ; 3483 _ 44: 8A. 6D, B7
        test    r13b, r13b                              ; 3487 _ 45: 84. ED
        setne   dl                                      ; 348A _ 0F 95. C2
        test    r8b, dl                                 ; 348D _ 41: 84. D0
        jne     Unnamed_1_335A                          ; 3490 _ 0F 85, 00000104
        test    rax, rax                                ; 3496 _ 48: 85. C0
        js      Unnamed_1_335A                          ; 3499 _ 0F 88, 000000FB
        test    r13b, r13b                              ; 349F _ 45: 84. ED
        jnz     ?_201                                   ; 34A2 _ 75, 26
        mov     rax, qword ptr [rbp-40H]                ; 34A4 _ 48: 8B. 45, C0
        lea     rdx, ptr [?_586]                        ; 34A8 _ 48: 8D. 15, 00007829(rel)
        mov     rcx, rax                                ; 34AF _ 48: 89. C1
        mov     r8d, 16                                 ; 34B2 _ 41: B8, 00000010
        mov     r9, rsi                                 ; 34B8 _ 49: 89. F1
        call    qword ptr [rax+8H]                      ; 34BB _ FF. 50, 08
        test    rax, rax                                ; 34BE _ 48: 85. C0
        mov     rcx, rax                                ; 34C1 _ 48: 89. C1
        js      Unnamed_1_335A                          ; 34C4 _ 0F 88, 000000D0
?_201:  mov     rcx, qword ptr [r12+18H]                ; 34CA _ 49: 8B. 4C 24, 18
        mov     rdx, qword ptr [r12+20H]                ; 34CF _ 49: 8B. 54 24, 20
        mov     qword ptr [rbp-58H], rdx                ; 34D4 _ 48: 89. 55, A8
        mov     qword ptr [rbp-60H], rcx                ; 34D8 _ 48: 89. 4D, A0
        add     r14, 4                                  ; 34DC _ 49: 83. C6, 04
        xor     r15d, r15d                              ; 34E0 _ 45: 31. FF
        jmp     ?_204                                   ; 34E3 _ E9, 000000A3

Unnamed_1_32A8:
        mov     ebx, dword ptr [r14]                    ; 34E8 _ 41: 8B. 1E
        test    rbx, rbx                                ; 34EB _ 48: 85. DB
        je      Unnamed_1_3357                          ; 34EE _ 0F 84, 000000A3
        xor     r12d, r12d                              ; 34F4 _ 45: 31. E4
        jmp     ?_202                                   ; 34F7 _ EB, 3B

Unnamed_1_32B9:
        cmp     rdx, rsi                                ; 34F9 _ 48: 39. F2
        jc      Unnamed_1_32E5                          ; 34FC _ 72, 27
Unnamed_1_32BE:
        mov     rax, qword ptr [rbp-40H]                ; 34FE _ 48: 8B. 45, C0
        mov     qword ptr [rsp+30H], rdi                ; 3502 _ 48: 89. 7C 24, 30
        mov     rcx, qword ptr [rbp-80H]                ; 3507 _ 48: 8B. 4D, 80
        mov     qword ptr [rsp+28H], rcx                ; 350B _ 48: 89. 4C 24, 28
        lea     rcx, ptr [rbp-60H]                      ; 3510 _ 48: 8D. 4D, A0
        mov     qword ptr [rsp+20H], rcx                ; 3514 _ 48: 89. 4C 24, 20
        mov     rcx, rax                                ; 3519 _ 48: 89. C1
        xor     r8d, r8d                                ; 351C _ 45: 31. C0
        mov     r9, rbx                                 ; 351F _ 49: 89. D9
        call    qword ptr [rax+10H]                     ; 3522 _ FF. 50, 10
Unnamed_1_32E5:
        test    rax, rax                                ; 3525 _ 48: 85. C0
        js      Unnamed_1_3357                          ; 3528 _ 78, 6D
        add     rdi, rbx                                ; 352A _ 48: 01. DF
        mov     ecx, dword ptr [r14-4H]                 ; 352D _ 41: 8B. 4E, FC
        inc     r12                                     ; 3531 _ 49: FF. C4
?_202:  lea     rdx, ptr [r15+r12]                      ; 3534 _ 4B: 8D. 14 27
        mov     ecx, ecx                                ; 3538 _ 89. C9
        cmp     r12, rcx                                ; 353A _ 49: 39. CC
        jnc     ?_203                                   ; 353D _ 73, 40
        test    r13b, r13b                              ; 353F _ 45: 84. ED
        jz      Unnamed_1_32BE                          ; 3542 _ 74, BA
        mov     rsi, qword ptr [rbp-68H]                ; 3544 _ 48: 8B. 75, 98
        cmp     rdx, rsi                                ; 3548 _ 48: 39. F2
        jnz     Unnamed_1_32B9                          ; 354B _ 75, AC
        mov     rcx, 8000000000000015H                  ; 354D _ 48: B9, 8000000000000015
        cmp     qword ptr [rbp-70H], 0                  ; 3557 _ 48: 83. 7D, 90, 00
        jnz     Unnamed_1_335A                          ; 355C _ 75, 3C
        mov     rcx, 8000000000000015H                  ; 355E _ 48: B9, 8000000000000015
        cmp     qword ptr [rbp-78H], rbx                ; 3568 _ 48: 39. 5D, 88
        jnz     Unnamed_1_335A                          ; 356C _ 75, 2C
        test    r13b, r13b                              ; 356E _ 45: 84. ED
        setne   cl                                      ; 3571 _ 0F 95. C1
        cmp     rdx, rsi                                ; 3574 _ 48: 39. F2
        jnc     Unnamed_1_32BE                          ; 3577 _ 73, 85
        test    cl, cl                                  ; 3579 _ 84. C9
        jz      Unnamed_1_32BE                          ; 357B _ 74, 81
        jmp     Unnamed_1_32E5                          ; 357D _ EB, A6

?_203:  test    rax, rax                                ; 357F _ 48: 85. C0
        js      Unnamed_1_3357                          ; 3582 _ 78, 13
        add     r14, 8                                  ; 3584 _ 49: 83. C6, 08
        mov     r15, rdx                                ; 3588 _ 49: 89. D7
?_204:  mov     ecx, dword ptr [r14-4H]                 ; 358B _ 41: 8B. 4E, FC
        test    ecx, ecx                                ; 358F _ 85. C9
        jne     Unnamed_1_32A8                          ; 3591 _ 0F 85, FFFFFF51
Unnamed_1_3357:
        mov     rcx, rax                                ; 3597 _ 48: 89. C1
Unnamed_1_335A:
        mov     rax, rcx                                ; 359A _ 48: 89. C8
        add     rsp, 152                                ; 359D _ 48: 81. C4, 00000098
        pop     rbx                                     ; 35A4 _ 5B
        pop     rdi                                     ; 35A5 _ 5F
        pop     rsi                                     ; 35A6 _ 5E
        pop     r12                                     ; 35A7 _ 41: 5C
        pop     r13                                     ; 35A9 _ 41: 5D
        pop     r14                                     ; 35AB _ 41: 5E
        pop     r15                                     ; 35AD _ 41: 5F
        pop     rbp                                     ; 35AF _ 5D
        ret                                             ; 35B0 _ C3

Unnamed_1_3371 LABEL NEAR
        push    rbp                                     ; 35B1 _ 55
        mov     rbp, rsp                                ; 35B2 _ 48: 89. E5
        push    r15                                     ; 35B5 _ 41: 57
        push    r14                                     ; 35B7 _ 41: 56
        push    r13                                     ; 35B9 _ 41: 55
        push    r12                                     ; 35BB _ 41: 54
        push    rsi                                     ; 35BD _ 56
        push    rdi                                     ; 35BE _ 57
        push    rbx                                     ; 35BF _ 53
        sub     rsp, 56                                 ; 35C0 _ 48: 83. EC, 38
        mov     r15, r9                                 ; 35C4 _ 4D: 89. CF
        mov     r12, r8                                 ; 35C7 _ 4D: 89. C4
        mov     qword ptr [rbp-40H], rdx                ; 35CA _ 48: 89. 55, C0
        mov     rsi, 8000000000000002H                  ; 35CE _ 48: BE, 8000000000000002
        cmp     dword ptr [r15+8H], 0                   ; 35D8 _ 41: 83. 7F, 08, 00
        jne     Unnamed_1_3425                          ; 35DD _ 0F 85, 00000082
        mov     rsi, 8000000000000002H                  ; 35E3 _ 48: BE, 8000000000000002
        cmp     byte ptr [r15+30H], 0                   ; 35ED _ 41: 80. 7F, 30, 00
        jnz     Unnamed_1_3425                          ; 35F2 _ 75, 71
        mov     rbx, qword ptr [rbp+30H]                ; 35F4 _ 48: 8B. 5D, 30
        add     r12, 4                                  ; 35F8 _ 49: 83. C4, 04
        xor     esi, esi                                ; 35FC _ 31. F6
        mov     r13, rsi                                ; 35FE _ 49: 89. F5
        jmp     ?_205                                   ; 3601 _ EB, 07

Unnamed_1_33C3:
        add     r12, 8                                  ; 3603 _ 49: 83. C4, 08
        mov     r13, r8                                 ; 3607 _ 4D: 89. C5
?_205:  mov     eax, dword ptr [r12-4H]                 ; 360A _ 41: 8B. 44 24, FC
        test    eax, eax                                ; 360F _ 85. C0
        jz      Unnamed_1_3419                          ; 3611 _ 74, 46
        mov     edi, dword ptr [r12]                    ; 3613 _ 41: 8B. 3C 24
        test    rdi, rdi                                ; 3617 _ 48: 85. FF
        jz      Unnamed_1_3419                          ; 361A _ 74, 3D
        xor     r14d, r14d                              ; 361C _ 45: 31. F6
        jmp     ?_206                                   ; 361F _ EB, 27

Unnamed_1_33E1:
        mov     qword ptr [rsp+20H], rbx                ; 3621 _ 48: 89. 5C 24, 20
        mov     rcx, qword ptr [rbp-40H]                ; 3626 _ 48: 8B. 4D, C0
        mov     rdx, r15                                ; 362A _ 4C: 89. FA
        mov     r9, rdi                                 ; 362D _ 49: 89. F9
        call    ?_253                                   ; 3630 _ E8, 00000F8C
        mov     rsi, rax                                ; 3635 _ 48: 89. C6
        test    rsi, rsi                                ; 3638 _ 48: 85. F6
        js      Unnamed_1_3419                          ; 363B _ 78, 1C
        add     rbx, rdi                                ; 363D _ 48: 01. FB
        mov     eax, dword ptr [r12-4H]                 ; 3640 _ 41: 8B. 44 24, FC
        inc     r14                                     ; 3645 _ 49: FF. C6
?_206:  lea     r8, ptr [r13+r14]                       ; 3648 _ 4F: 8D. 44 35, 00
        mov     eax, eax                                ; 364D _ 89. C0
        cmp     r14, rax                                ; 364F _ 49: 39. C6
        jc      Unnamed_1_33E1                          ; 3652 _ 72, CD
        test    rsi, rsi                                ; 3654 _ 48: 85. F6
        jns     Unnamed_1_33C3                          ; 3657 _ 79, AA
Unnamed_1_3419:
        lea     rcx, ptr [?_458]                        ; 3659 _ 48: 8D. 0D, 00004898(rel)
        call    Unnamed_1_B95                           ; 3660 _ E8, FFFFD770
Unnamed_1_3425:
        mov     rax, rsi                                ; 3665 _ 48: 89. F0
        add     rsp, 56                                 ; 3668 _ 48: 83. C4, 38
        pop     rbx                                     ; 366C _ 5B
        pop     rdi                                     ; 366D _ 5F
        pop     rsi                                     ; 366E _ 5E
        pop     r12                                     ; 366F _ 41: 5C
        pop     r13                                     ; 3671 _ 41: 5D
        pop     r14                                     ; 3673 _ 41: 5E
        pop     r15                                     ; 3675 _ 41: 5F
        pop     rbp                                     ; 3677 _ 5D
        ret                                             ; 3678 _ C3

?_207   LABEL NEAR
        push    rbp                                     ; 3679 _ 55
        mov     rbp, rsp                                ; 367A _ 48: 89. E5
        push    r15                                     ; 367D _ 41: 57
        push    r14                                     ; 367F _ 41: 56
        push    r12                                     ; 3681 _ 41: 54
        push    rsi                                     ; 3683 _ 56
        push    rdi                                     ; 3684 _ 57
        push    rbx                                     ; 3685 _ 53
        sub     rsp, 48                                 ; 3686 _ 48: 83. EC, 30
        mov     r12, r9                                 ; 368A _ 4D: 89. CC
        mov     rdi, r8                                 ; 368D _ 4C: 89. C7
        mov     r15, rdx                                ; 3690 _ 49: 89. D7
        mov     r14, rcx                                ; 3693 _ 49: 89. CE
        mov     rsi, 8000000000000002H                  ; 3696 _ 48: BE, 8000000000000002
        cmp     dword ptr [rdi+8H], 0                   ; 36A0 _ 83. 7F, 08, 00
        jne     Unnamed_1_3519                          ; 36A4 _ 0F 85, 000000AF
        mov     rax, qword ptr [rdi+10H]                ; 36AA _ 48: 8B. 47, 10
        movzx   ecx, word ptr [rax+30H]                 ; 36AE _ 0F B7. 48, 30
        call    Unnamed_1_CB                            ; 36B2 _ E8, FFFFCC54
        mov     rbx, rax                                ; 36B7 _ 48: 89. C3
        mov     rsi, 8000000000000009H                  ; 36BA _ 48: BE, 8000000000000009
        test    rbx, rbx                                ; 36C4 _ 48: 85. DB
        je      Unnamed_1_3519                          ; 36C7 _ 0F 84, 0000008C
        mov     rsi, qword ptr [rbp+30H]                ; 36CD _ 48: 8B. 75, 30
        mov     rdx, qword ptr [rdi+10H]                ; 36D1 _ 48: 8B. 57, 10
        movzx   r8d, word ptr [rdx+30H]                 ; 36D5 _ 44: 0F B7. 42, 30
        mov     rax, qword ptr [?_578]                  ; 36DA _ 48: 8B. 05, 000075C7(rel)
        mov     rcx, rbx                                ; 36E1 _ 48: 89. D9
        call    qword ptr [rax+160H]                    ; 36E4 _ FF. 90, 00000160
        mov     rdx, qword ptr [rbx+20H]                ; 36EA _ 48: 8B. 53, 20
        cmp     rdx, rsi                                ; 36EE _ 48: 39. F2
        jz      ?_208                                   ; 36F1 _ 74, 19
        mov     rax, qword ptr [?_578]                  ; 36F3 _ 48: 8B. 05, 000075AE(rel)
        mov     rcx, rbx                                ; 36FA _ 48: 89. D9
        call    qword ptr [rax+48H]                     ; 36FD _ FF. 50, 48
        mov     rsi, 8000000000000002H                  ; 3700 _ 48: BE, 8000000000000002
        jmp     Unnamed_1_3519                          ; 370A _ EB, 4D

?_208:  mov     rcx, qword ptr [rdi+10H]                ; 370C _ 48: 8B. 4F, 10
        add     rdx, rcx                                ; 3710 _ 48: 01. CA
        call    ?_249                                   ; 3713 _ E8, 00000CDC
        lea     r8, ptr [rbx+38H]                       ; 3718 _ 4C: 8D. 43, 38
        cmp     byte ptr [rdi+30H], 0                   ; 371C _ 80. 7F, 30, 00
        jz      ?_209                                   ; 3720 _ 74, 12
        mov     qword ptr [rsp+20H], r12                ; 3722 _ 4C: 89. 64 24, 20
        mov     rcx, r14                                ; 3727 _ 4C: 89. F1
        mov     r9, rdi                                 ; 372A _ 49: 89. F9
        call    Unnamed_1_3103                          ; 372D _ E8, FFFFFC11
        jmp     ?_210                                   ; 3732 _ EB, 10

?_209:  mov     qword ptr [rsp+20H], r12                ; 3734 _ 4C: 89. 64 24, 20
        mov     rdx, r15                                ; 3739 _ 4C: 89. FA
        mov     r9, rdi                                 ; 373C _ 49: 89. F9
        call    Unnamed_1_3371                          ; 373F _ E8, FFFFFE6D
?_210:  mov     rsi, rax                                ; 3744 _ 48: 89. C6
        mov     rax, qword ptr [?_578]                  ; 3747 _ 48: 8B. 05, 0000755A(rel)
        mov     rcx, rbx                                ; 374E _ 48: 89. D9
        call    qword ptr [rax+48H]                     ; 3751 _ FF. 50, 48
        test    rsi, rsi                                ; 3754 _ 48: 85. F6
        jns     ?_211                                   ; 3757 _ 79, 12
Unnamed_1_3519:
        mov     rax, rsi                                ; 3759 _ 48: 89. F0
        add     rsp, 48                                 ; 375C _ 48: 83. C4, 30
        pop     rbx                                     ; 3760 _ 5B
        pop     rdi                                     ; 3761 _ 5F
        pop     rsi                                     ; 3762 _ 5E
        pop     r12                                     ; 3763 _ 41: 5C
        pop     r14                                     ; 3765 _ 41: 5E
        pop     r15                                     ; 3767 _ 41: 5F
        pop     rbp                                     ; 3769 _ 5D
        ret                                             ; 376A _ C3

?_211   LABEL NEAR
        mov     rax, qword ptr [?_578]                  ; 376B _ 48: 8B. 05, 00007536(rel)
        mov     rax, qword ptr [rax+88H]                ; 3772 _ 48: 8B. 80, 00000088
        lea     rdx, ptr [?_513]                        ; 3779 _ 48: 8D. 15, 00006CAC(rel)
        mov     rcx, r14                                ; 3780 _ 4C: 89. F1
        mov     r8, r15                                 ; 3783 _ 4D: 89. F8
        mov     r9, r15                                 ; 3786 _ 4D: 89. F9
        add     rsp, 48                                 ; 3789 _ 48: 83. C4, 30
        pop     rbx                                     ; 378D _ 5B
        pop     rdi                                     ; 378E _ 5F
        pop     rsi                                     ; 378F _ 5E
        pop     r12                                     ; 3790 _ 41: 5C
        pop     r14                                     ; 3792 _ 41: 5E
        pop     r15                                     ; 3794 _ 41: 5F
        pop     rbp                                     ; 3796 _ 5D
        jmp     rax                                     ; 3797 _ FF. E0

?_212   LABEL NEAR
        push    rbp                                     ; 3799 _ 55
        mov     rbp, rsp                                ; 379A _ 48: 89. E5
        push    rsi                                     ; 379D _ 56
        push    rdi                                     ; 379E _ 57
        push    rbx                                     ; 379F _ 53
        sub     rsp, 72                                 ; 37A0 _ 48: 83. EC, 48
        mov     rbx, r9                                 ; 37A4 _ 4C: 89. CB
        mov     rsi, r8                                 ; 37A7 _ 4C: 89. C6
        mov     rax, 8000000000000002H                  ; 37AA _ 48: B8, 8000000000000002
        cmp     dword ptr [rsi+8H], 1                   ; 37B4 _ 83. 7E, 08, 01
        jnz     Unnamed_1_35EB                          ; 37B8 _ 75, 71
        mov     rax, qword ptr [?_578]                  ; 37BA _ 48: 8B. 05, 000074E7(rel)
        lea     rdx, ptr [?_512]                        ; 37C1 _ 48: 8D. 15, 00006C54(rel)
        lea     r8, ptr [rbp-20H]                       ; 37C8 _ 4C: 8D. 45, E0
        call    qword ptr [rax+98H]                     ; 37CC _ FF. 90, 00000098
        test    rax, rax                                ; 37D2 _ 48: 85. C0
        js      Unnamed_1_35EB                          ; 37D5 _ 78, 54
        mov     cl, byte ptr [rbp+38H]                  ; 37D7 _ 8A. 4D, 38
        cmp     cl, 8                                   ; 37DA _ 80. F9, 08
        ja      ?_213                                   ; 37DD _ 77, 18
        movzx   edx, cl                                 ; 37DF _ 0F B6. D1
        mov     rax, 8000000000000003H                  ; 37E2 _ 48: B8, 8000000000000003
        mov     edi, 336                                ; 37EC _ BF, 00000150
        bt      rdi, rdx                                ; 37F1 _ 48: 0F A3. D7
        jc      Unnamed_1_35EB                          ; 37F5 _ 72, 34
?_213:  mov     edx, dword ptr [rbp+40H]                ; 37F7 _ 8B. 55, 40
        mov     rax, qword ptr [rbp+30H]                ; 37FA _ 48: 8B. 45, 30
        lea     rdi, ptr [rsi+18H]                      ; 37FE _ 48: 8D. 7E, 18
        mov     qword ptr [rbp-40H], rdi                ; 3802 _ 48: 89. 7D, C0
        mov     byte ptr [rbp-38H], cl                  ; 3806 _ 88. 4D, C8
        mov     dword ptr [rbp-34H], edx                ; 3809 _ 89. 55, CC
        mov     qword ptr [rbp-30H], rbx                ; 380C _ 48: 89. 5D, D0
        mov     dword ptr [rbp-28H], eax                ; 3810 _ 89. 45, D8
        lea     r9, ptr [rbp-40H]                       ; 3813 _ 4C: 8D. 4D, C0
        movzx   r8d, byte ptr [rsi+30H]                 ; 3817 _ 44: 0F B6. 46, 30
        mov     rax, qword ptr [rbp-20H]                ; 381C _ 48: 8B. 45, E0
        mov     rcx, rax                                ; 3820 _ 48: 89. C1
        mov     edx, 1                                  ; 3823 _ BA, 00000001
        call    qword ptr [rax+20H]                     ; 3828 _ FF. 50, 20
Unnamed_1_35EB:
        add     rsp, 72                                 ; 382B _ 48: 83. C4, 48
        pop     rbx                                     ; 382F _ 5B
        pop     rdi                                     ; 3830 _ 5F
        pop     rsi                                     ; 3831 _ 5E
        pop     rbp                                     ; 3832 _ 5D
        ret                                             ; 3833 _ C3

?_214   LABEL NEAR
        push    rbp                                     ; 3834 _ 55
        mov     rbp, rsp                                ; 3835 _ 48: 89. E5
        push    r15                                     ; 3838 _ 41: 57
        push    r14                                     ; 383A _ 41: 56
        push    r13                                     ; 383C _ 41: 55
        push    r12                                     ; 383E _ 41: 54
        push    rsi                                     ; 3840 _ 56
        push    rdi                                     ; 3841 _ 57
        push    rbx                                     ; 3842 _ 53
        sub     rsp, 264                                ; 3843 _ 48: 81. EC, 00000108
        mov     qword ptr [rbp-0C8H], r9                ; 384A _ 4C: 89. 8D, FFFFFF38
        mov     qword ptr [rbp-0F0H], r8                ; 3851 _ 4C: 89. 85, FFFFFF10
        mov     qword ptr [rbp-0E8H], rdx               ; 3858 _ 48: 89. 95, FFFFFF18
        mov     qword ptr [rbp-0D0H], rcx               ; 385F _ 48: 89. 8D, FFFFFF30
        lea     rdx, ptr [rbp-40H]                      ; 3866 _ 48: 8D. 55, C0
        mov     rax, qword ptr [rbp+38H]                ; 386A _ 48: 8B. 45, 38
        mov     rcx, rax                                ; 386E _ 48: 89. C1
        call    qword ptr [rax+10H]                     ; 3871 _ FF. 50, 10
        test    rax, rax                                ; 3874 _ 48: 85. C0
        mov     qword ptr [rbp-0C0H], rax               ; 3877 _ 48: 89. 85, FFFFFF40
        js      Unnamed_1_3CAE                          ; 387E _ 0F 88, 0000066A
        mov     rsi, qword ptr [rbp+30H]                ; 3884 _ 48: 8B. 75, 30
        mov     rax, 8000000000000002H                  ; 3888 _ 48: B8, 8000000000000002
        mov     qword ptr [rbp-0C0H], rax               ; 3892 _ 48: 89. 85, FFFFFF40
        mov     rdx, qword ptr [rbp-40H]                ; 3899 _ 48: 8B. 55, C0
        cmp     rdx, rsi                                ; 389D _ 48: 39. F2
        ja      Unnamed_1_3CAE                          ; 38A0 _ 0F 87, 00000648
        mov     rax, qword ptr [rdx+20H]                ; 38A6 _ 48: 8B. 42, 20
        add     rax, rdx                                ; 38AA _ 48: 01. D0
        mov     rcx, 8000000000000002H                  ; 38AD _ 48: B9, 8000000000000002
        mov     qword ptr [rbp-0C0H], rcx               ; 38B7 _ 48: 89. 8D, FFFFFF40
        cmp     rax, rsi                                ; 38BE _ 48: 39. F0
        jc      Unnamed_1_3CAE                          ; 38C1 _ 0F 82, 00000627
        mov     r13, rsi                                ; 38C7 _ 49: 89. F5
        movzx   ecx, word ptr [rdx+30H]                 ; 38CA _ 0F B7. 4A, 30
        call    Unnamed_1_154                           ; 38CE _ E8, FFFFCAC1
        mov     rcx, rax                                ; 38D3 _ 48: 89. C1
        mov     rax, 8000000000000009H                  ; 38D6 _ 48: B8, 8000000000000009
        mov     qword ptr [rbp-0C0H], rax               ; 38E0 _ 48: 89. 85, FFFFFF40
        test    rcx, rcx                                ; 38E7 _ 48: 85. C9
        mov     qword ptr [rbp-0E0H], rcx               ; 38EA _ 48: 89. 8D, FFFFFF20
        je      Unnamed_1_3CAE                          ; 38F1 _ 0F 84, 000005F7
        mov     rax, qword ptr [rbp-0E0H]               ; 38F7 _ 48: 8B. 85, FFFFFF20
        lea     rdx, ptr [rax+3CH]                      ; 38FE _ 48: 8D. 50, 3C
        xor     eax, eax                                ; 3902 _ 31. C0
        mov     rbx, qword ptr [rbp-40H]                ; 3904 _ 48: 8B. 5D, C0
        mov     r12, qword ptr [rbp-0E8H]               ; 3908 _ 4C: 8B. A5, FFFFFF18
        mov     rdi, r13                                ; 390F _ 4C: 89. EF
        mov     qword ptr [rbp-88H], rax                ; 3912 _ 48: 89. 85, FFFFFF78
        mov     qword ptr [rbp-0B8H], 0                 ; 3919 _ 48: C7. 85, FFFFFF48, 00000000
        jmp     ?_216                                   ; 3924 _ E9, 00000108

Unnamed_1_36E9:
        mov     qword ptr [rbp-0B0H], rdx               ; 3929 _ 48: 89. 95, FFFFFF50
        mov     r8d, 1                                  ; 3930 _ 41: B8, 00000001
        sub     r8, rbx                                 ; 3936 _ 49: 29. D8
        mov     rax, rcx                                ; 3939 _ 48: 89. C8
        not     rax                                     ; 393C _ 48: F7. D0
        mov     qword ptr [rbp-98H], rax                ; 393F _ 48: 89. 85, FFFFFF68
        dec     rbx                                     ; 3946 _ 48: FF. CB
        mov     r15, -1                                 ; 3949 _ 49: C7. C7, FFFFFFFF
        mov     rsi, rbx                                ; 3950 _ 48: 89. DE
Unnamed_1_3713:
        mov     r11, rsi                                ; 3953 _ 49: 89. F3
        mov     rdx, r8                                 ; 3956 _ 4C: 89. C2
        lea     rbx, ptr [r11+1H]                       ; 3959 _ 49: 8D. 5B, 01
        inc     r15                                     ; 395D _ 49: FF. C7
        cmp     r15, qword ptr [rbp-0A0H]               ; 3960 _ 4C: 3B. BD, FFFFFF60
        jnc     ?_215                                   ; 3967 _ 0F 83, 000000B9
        lea     rsi, ptr [r11+rcx]                      ; 396D _ 49: 8D. 34 0B
        mov     r8, rdx                                 ; 3971 _ 49: 89. D0
        sub     r8, rcx                                 ; 3974 _ 49: 29. C8
        cmp     rdi, rbx                                ; 3977 _ 48: 39. DF
        mov     qword ptr [rbp-0A8H], rbx               ; 397A _ 48: 89. 9D, FFFFFF58
        jc      Unnamed_1_3713                          ; 3981 _ 72, D0
        lea     rax, ptr [rcx+r11+1H]                   ; 3983 _ 4A: 8D. 44 19, 01
        cmp     rdi, rax                                ; 3988 _ 48: 39. C7
        jnc     Unnamed_1_3713                          ; 398B _ 73, C6
        mov     qword ptr [rbp-90H], rsi                ; 398D _ 48: 89. B5, FFFFFF70
        mov     rax, r11                                ; 3994 _ 4C: 89. D8
        sub     rax, rdi                                ; 3997 _ 48: 29. F8
        sub     rax, r12                                ; 399A _ 4C: 29. E0
        mov     rbx, qword ptr [rbp-98H]                ; 399D _ 48: 8B. 9D, FFFFFF68
        cmp     rax, rbx                                ; 39A4 _ 48: 39. D8
        mov     r14, rbx                                ; 39A7 _ 49: 89. DE
        cmova   r14, rax                                ; 39AA _ 4C: 0F 47. F0
        lea     rbx, ptr [rdi+r12]                      ; 39AE _ 4A: 8D. 1C 27
        neg     rdi                                     ; 39B2 _ 48: F7. DF
        sub     rdi, r14                                ; 39B5 _ 4C: 29. F7
        lea     r10, ptr [rbx+r14]                      ; 39B8 _ 4E: 8D. 14 33
        add     r10, rdx                                ; 39BC _ 49: 01. D2
        add     rdi, r11                                ; 39BF _ 4C: 01. DF
        mov     r9, r11                                 ; 39C2 _ 4D: 89. D9
        sub     r9, r14                                 ; 39C5 _ 4D: 29. F1
        mov     rsi, qword ptr [rbp-88H]                ; 39C8 _ 48: 8B. B5, FFFFFF78
        cmp     rsi, rcx                                ; 39CF _ 48: 39. CE
        cmovc   rsi, rcx                                ; 39D2 _ 48: 0F 42. F1
        mov     qword ptr [rbp-88H], rsi                ; 39D6 _ 48: 89. B5, FFFFFF78
        inc     qword ptr [rbp-0B8H]                    ; 39DD _ 48: FF. 85, FFFFFF48
        cmp     rdi, r12                                ; 39E4 _ 4C: 39. E7
        mov     r12, r10                                ; 39E7 _ 4D: 89. D4
        mov     rdi, r9                                 ; 39EA _ 4C: 89. CF
        mov     rsi, qword ptr [rbp-90H]                ; 39ED _ 48: 8B. B5, FFFFFF70
        jne     Unnamed_1_3713                          ; 39F4 _ 0F 85, FFFFFF59
        not     ecx                                     ; 39FA _ F7. D1
        mov     rsi, 0FFFFFFFF00000000H                 ; 39FC _ 48: BE, FFFFFFFF00000000
        or      rcx, rsi                                ; 3A06 _ 48: 09. F1
        cmp     rax, rcx                                ; 3A09 _ 48: 39. C8
        cmova   rcx, rax                                ; 3A0C _ 48: 0F 47. C8
        sub     r11, rcx                                ; 3A10 _ 49: 29. CB
        add     rbx, rcx                                ; 3A13 _ 48: 01. CB
        add     rbx, rdx                                ; 3A16 _ 48: 01. D3
        mov     r12, rbx                                ; 3A19 _ 49: 89. DC
        mov     rdi, r11                                ; 3A1C _ 4C: 89. DF
        mov     rbx, qword ptr [rbp-0A8H]               ; 3A1F _ 48: 8B. 9D, FFFFFF58
?_215:  mov     rdx, qword ptr [rbp-0B0H]               ; 3A26 _ 48: 8B. 95, FFFFFF50
        add     rdx, 8                                  ; 3A2D _ 48: 83. C2, 08
?_216:  test    r12, r12                                ; 3A31 _ 4D: 85. E4
        jz      Unnamed_1_3810                          ; 3A34 _ 74, 1A
        mov     eax, dword ptr [rdx-4H]                 ; 3A36 _ 8B. 42, FC
        test    rax, rax                                ; 3A39 _ 48: 85. C0
        mov     qword ptr [rbp-0A0H], rax               ; 3A3C _ 48: 89. 85, FFFFFF60
        jz      Unnamed_1_3810                          ; 3A43 _ 74, 0B
        mov     ecx, dword ptr [rdx]                    ; 3A45 _ 8B. 0A
        test    rcx, rcx                                ; 3A47 _ 48: 85. C9
        jne     Unnamed_1_36E9                          ; 3A4A _ 0F 85, FFFFFED9
Unnamed_1_3810:
        mov     r14, r13                                ; 3A50 _ 4D: 89. EE
        mov     rax, qword ptr [?_578]                  ; 3A53 _ 48: 8B. 05, 0000724E(rel)
        lea     rcx, ptr [?_509]                        ; 3A5A _ 48: 8D. 0D, 0000698B(rel)
        lea     r8, ptr [rbp-48H]                       ; 3A61 _ 4C: 8D. 45, B8
        xor     edx, edx                                ; 3A65 _ 31. D2
        call    qword ptr [rax+140H]                    ; 3A67 _ FF. 90, 00000140
        test    rax, rax                                ; 3A6D _ 48: 85. C0
        mov     rbx, qword ptr [rbp-0C8H]               ; 3A70 _ 48: 8B. 9D, FFFFFF38
        jns     ?_217                                   ; 3A77 _ 79, 27
        mov     rax, qword ptr [?_578]                  ; 3A79 _ 48: 8B. 05, 00007228(rel)
        mov     rcx, qword ptr [rbp-0E0H]               ; 3A80 _ 48: 8B. 8D, FFFFFF20
        call    qword ptr [rax+48H]                     ; 3A87 _ FF. 50, 48
        mov     rax, 800000000000000EH                  ; 3A8A _ 48: B8, 800000000000000E
        mov     qword ptr [rbp-0C0H], rax               ; 3A94 _ 48: 89. 85, FFFFFF40
        jmp     Unnamed_1_3CAE                          ; 3A9B _ E9, 0000044E

?_217:  mov     rax, qword ptr [rbp-48H]                ; 3AA0 _ 48: 8B. 45, B8
        lea     rdx, ptr [rbp-50H]                      ; 3AA4 _ 48: 8D. 55, B0
        mov     rcx, rax                                ; 3AA8 _ 48: 89. C1
        call    qword ptr [rax]                         ; 3AAB _ FF. 10
        mov     rax, qword ptr [rbp-88H]                ; 3AAD _ 48: 8B. 85, FFFFFF78
        cmp     qword ptr [rbp-50H], rax                ; 3AB4 _ 48: 39. 45, B0
        jnc     ?_218                                   ; 3AB8 _ 73, 27
        mov     rax, qword ptr [?_578]                  ; 3ABA _ 48: 8B. 05, 000071E7(rel)
        mov     rcx, qword ptr [rbp-0E0H]               ; 3AC1 _ 48: 8B. 8D, FFFFFF20
        call    qword ptr [rax+48H]                     ; 3AC8 _ FF. 50, 48
        mov     rax, 8000000000000009H                  ; 3ACB _ 48: B8, 8000000000000009
        mov     qword ptr [rbp-0C0H], rax               ; 3AD5 _ 48: 89. 85, FFFFFF40
        jmp     Unnamed_1_3CAE                          ; 3ADC _ E9, 0000040D

?_218:  mov     qword ptr [rbp-70H], 0                  ; 3AE1 _ 48: C7. 45, 90, 00000000
        mov     qword ptr [rbp-78H], 0                  ; 3AE9 _ 48: C7. 45, 88, 00000000
        mov     qword ptr [rbp-80H], 0                  ; 3AF1 _ 48: C7. 45, 80, 00000000
        mov     byte ptr [rbp-51H], 0                   ; 3AF9 _ C6. 45, AF, 00
        mov     rdx, qword ptr [rbp-48H]                ; 3AFD _ 48: 8B. 55, B8
        lea     rax, ptr [rbp-68H]                      ; 3B01 _ 48: 8D. 45, 98
        lea     r8, ptr [rbp-70H]                       ; 3B05 _ 4C: 8D. 45, 90
        lea     rcx, ptr [rbp-78H]                      ; 3B09 _ 48: 8D. 4D, 88
        lea     rsi, ptr [rbp-80H]                      ; 3B0D _ 48: 8D. 75, 80
        lea     rdi, ptr [rbp-51H]                      ; 3B11 _ 48: 8D. 7D, AF
        mov     qword ptr [rsp+40H], rdi                ; 3B15 _ 48: 89. 7C 24, 40
        mov     qword ptr [rsp+38H], rsi                ; 3B1A _ 48: 89. 74 24, 38
        mov     qword ptr [rsp+30H], rcx                ; 3B1F _ 48: 89. 4C 24, 30
        mov     qword ptr [rsp+28H], r8                 ; 3B24 _ 4C: 89. 44 24, 28
        mov     qword ptr [rsp+20H], rax                ; 3B29 _ 48: 89. 44 24, 20
        mov     rcx, qword ptr [rbp+40H]                ; 3B2E _ 48: 8B. 4D, 40
        mov     r8, rbx                                 ; 3B32 _ 49: 89. D8
        mov     r9d, 16                                 ; 3B35 _ 41: B9, 00000010
        call    Unnamed_1_2F32                          ; 3B3B _ E8, FFFFF632
        mov     qword ptr [rbp-0C0H], rax               ; 3B40 _ 48: 89. 85, FFFFFF40
        mov     al, byte ptr [rbp-51H]                  ; 3B47 _ 8A. 45, AF
        test    al, al                                  ; 3B4A _ 84. C0
        mov     byte ptr [rbp-0B0H], al                 ; 3B4C _ 88. 85, FFFFFF50
        jz      Unnamed_1_394E                          ; 3B52 _ 74, 3A
        mov     rax, 800000000000000EH                  ; 3B54 _ 48: B8, 800000000000000E
        cmp     qword ptr [rbp-0C0H], rax               ; 3B5E _ 48: 39. 85, FFFFFF40
        jnz     Unnamed_1_394E                          ; 3B65 _ 75, 27
?_219:  mov     rax, qword ptr [?_578]                  ; 3B67 _ 48: 8B. 05, 0000713A(rel)
        mov     rcx, qword ptr [rbp-0E0H]               ; 3B6E _ 48: 8B. 8D, FFFFFF20
        call    qword ptr [rax+48H]                     ; 3B75 _ FF. 50, 48
        mov     rax, 8000000000000015H                  ; 3B78 _ 48: B8, 8000000000000015
        mov     qword ptr [rbp-0C0H], rax               ; 3B82 _ 48: 89. 85, FFFFFF40
        jmp     Unnamed_1_3CAE                          ; 3B89 _ E9, 00000360

Unnamed_1_394E:
        cmp     qword ptr [rbp-0C0H], 0                 ; 3B8E _ 48: 83. BD, FFFFFF40, 00
        js      ?_219                                   ; 3B96 _ 78, CF
        cmp     byte ptr [rbp-0B0H], 0                  ; 3B98 _ 80. BD, FFFFFF50, 00
        jnz     Unnamed_1_39A1                          ; 3B9F _ 75, 40
        mov     rax, qword ptr [rbp-48H]                ; 3BA1 _ 48: 8B. 45, B8
        lea     rdx, ptr [?_586]                        ; 3BA5 _ 48: 8D. 15, 0000712C(rel)
        mov     rcx, rax                                ; 3BAC _ 48: 89. C1
        mov     r8d, 16                                 ; 3BAF _ 41: B8, 00000010
        mov     r9, qword ptr [rbp-0B8H]                ; 3BB5 _ 4C: 8B. 8D, FFFFFF48
        call    qword ptr [rax+8H]                      ; 3BBC _ FF. 50, 08
        test    rax, rax                                ; 3BBF _ 48: 85. C0
        mov     qword ptr [rbp-0C0H], rax               ; 3BC2 _ 48: 89. 85, FFFFFF40
        jns     Unnamed_1_39A1                          ; 3BC9 _ 79, 16
        mov     rax, qword ptr [?_578]                  ; 3BCB _ 48: 8B. 05, 000070D6(rel)
        mov     rcx, qword ptr [rbp-0E0H]               ; 3BD2 _ 48: 8B. 8D, FFFFFF20
        call    qword ptr [rax+48H]                     ; 3BD9 _ FF. 50, 48
        jmp     Unnamed_1_3CAE                          ; 3BDC _ E9, 0000030D

Unnamed_1_39A1:
        mov     rdx, qword ptr [rbp-40H]                ; 3BE1 _ 48: 8B. 55, C0
        mov     rax, qword ptr [rbx+18H]                ; 3BE5 _ 48: 8B. 43, 18
        mov     rcx, qword ptr [rbx+20H]                ; 3BE9 _ 48: 8B. 4B, 20
        mov     qword ptr [rbp-60H], rcx                ; 3BED _ 48: 89. 4D, A0
        mov     qword ptr [rbp-68H], rax                ; 3BF1 _ 48: 89. 45, 98
        mov     rax, qword ptr [rbp-0E0H]               ; 3BF5 _ 48: 8B. 85, FFFFFF20
        lea     rax, ptr [rax+3CH]                      ; 3BFC _ 48: 8D. 40, 3C
        mov     qword ptr [rbp-0B8H], rax               ; 3C00 _ 48: 89. 85, FFFFFF48
        mov     rsi, qword ptr [rbp-0E8H]               ; 3C07 _ 48: 8B. B5, FFFFFF18
        mov     qword ptr [rbp-0C8H], 0                 ; 3C0E _ 48: C7. 85, FFFFFF38, 00000000
        mov     r10, qword ptr [rbp-0D0H]               ; 3C19 _ 4C: 8B. 95, FFFFFF30
        mov     rbx, r14                                ; 3C20 _ 4C: 89. F3
        jmp     ?_228                                   ; 3C23 _ E9, 0000028B

Unnamed_1_39E8:
        mov     rax, qword ptr [rbp-0B8H]               ; 3C28 _ 48: 8B. 85, FFFFFF48
        mov     eax, dword ptr [rax-4H]                 ; 3C2F _ 8B. 40, FC
        test    eax, eax                                ; 3C32 _ 85. C0
        je      Unnamed_1_3C7E                          ; 3C34 _ 0F 84, 00000284
        mov     rcx, qword ptr [rbp-0B8H]               ; 3C3A _ 48: 8B. 8D, FFFFFF48
        mov     ecx, dword ptr [rcx]                    ; 3C41 _ 8B. 09
        mov     qword ptr [rbp-90H], rcx                ; 3C43 _ 48: 89. 8D, FFFFFF70
        test    rcx, rcx                                ; 3C4A _ 48: 85. C9
        je      Unnamed_1_3C7E                          ; 3C4D _ 0F 84, 0000026B
        mov     rcx, qword ptr [rbp-90H]                ; 3C53 _ 48: 8B. 8D, FFFFFF70
        not     rcx                                     ; 3C5A _ 48: F7. D1
        mov     qword ptr [rbp-0A0H], rcx               ; 3C5D _ 48: 89. 8D, FFFFFF60
        mov     rdi, 0FFFFFFFF00000000H                 ; 3C64 _ 48: BF, FFFFFFFF00000000
        or      rcx, rdi                                ; 3C6E _ 48: 09. F9
        mov     qword ptr [rbp-98H], rcx                ; 3C71 _ 48: 89. 8D, FFFFFF68
        mov     r8, rdx                                 ; 3C78 _ 49: 89. D0
        neg     r8                                      ; 3C7B _ 49: F7. D8
        dec     rdx                                     ; 3C7E _ 48: FF. CA
        xor     edi, edi                                ; 3C81 _ 31. FF
        mov     r14, rdx                                ; 3C83 _ 49: 89. D6
        mov     qword ptr [rbp-0D8H], rdx               ; 3C86 _ 48: 89. 95, FFFFFF28
        jmp     ?_225                                   ; 3C8D _ E9, 000001D0

Unnamed_1_3A52:
        cmp     rbx, rdx                                ; 3C92 _ 48: 39. D3
        jc      Unnamed_1_3C12                          ; 3C95 _ 0F 82, 000001B7
        mov     qword ptr [rbp-88H], rdi                ; 3C9B _ 48: 89. BD, FFFFFF78
        mov     rcx, qword ptr [rbp-90H]                ; 3CA2 _ 48: 8B. 8D, FFFFFF70
        lea     rcx, ptr [rcx+r14+1H]                   ; 3CA9 _ 4A: 8D. 4C 31, 01
        cmp     rbx, rcx                                ; 3CAE _ 48: 39. CB
        jc      ?_220                                   ; 3CB1 _ 72, 0C
        mov     rdi, qword ptr [rbp-88H]                ; 3CB3 _ 48: 8B. BD, FFFFFF78
        jmp     Unnamed_1_3C12                          ; 3CBA _ E9, 00000193

?_220:  mov     qword ptr [rbp-0D0H], rdx               ; 3CBF _ 48: 89. 95, FFFFFF30
        cmp     byte ptr [rbp-0B0H], 0                  ; 3CC6 _ 80. BD, FFFFFF50, 00
        jz      Unnamed_1_3AEE                          ; 3CCD _ 74, 5F
        mov     rax, qword ptr [rbp-70H]                ; 3CCF _ 48: 8B. 45, 90
        cmp     r11, rax                                ; 3CD3 _ 49: 39. C3
        jne     ?_221                                   ; 3CD6 _ 0F 85, 000000D5
        lea     rcx, ptr [rbx+r8]                       ; 3CDC _ 4A: 8D. 0C 03
        cmp     rcx, qword ptr [rbp-78H]                ; 3CE0 _ 48: 3B. 4D, 88
        jne     Unnamed_1_3C7E                          ; 3CE4 _ 0F 85, 000001D4
        mov     rcx, r14                                ; 3CEA _ 4C: 89. F1
        sub     rcx, rbx                                ; 3CED _ 48: 29. D9
        sub     rcx, rsi                                ; 3CF0 _ 48: 29. F1
        mov     rdx, qword ptr [rbp-98H]                ; 3CF3 _ 48: 8B. 95, FFFFFF68
        cmp     rcx, rdx                                ; 3CFA _ 48: 39. D1
        cmovbe  rcx, rdx                                ; 3CFD _ 48: 0F 46. CA
        mov     rdx, rbx                                ; 3D01 _ 48: 89. DA
        neg     rdx                                     ; 3D04 _ 48: F7. DA
        sub     rdx, rcx                                ; 3D07 _ 48: 29. CA
        add     rdx, r14                                ; 3D0A _ 4C: 01. F2
        cmp     rdx, qword ptr [rbp-80H]                ; 3D0D _ 48: 3B. 55, 80
        jne     Unnamed_1_3C7E                          ; 3D11 _ 0F 85, 000001A7
        cmp     byte ptr [rbp-0B0H], 0                  ; 3D17 _ 80. BD, FFFFFF50, 00
        setne   cl                                      ; 3D1E _ 0F 95. C1
        cmp     r11, rax                                ; 3D21 _ 49: 39. C3
        jnc     Unnamed_1_3AEE                          ; 3D24 _ 73, 08
        test    cl, cl                                  ; 3D26 _ 84. C9
        jne     ?_222                                   ; 3D28 _ 0F 85, 0000008C
Unnamed_1_3AEE:
        mov     rcx, r14                                ; 3D2E _ 4C: 89. F1
        sub     rcx, rbx                                ; 3D31 _ 48: 29. D9
        sub     rcx, rsi                                ; 3D34 _ 48: 29. F1
        mov     r9, rbx                                 ; 3D37 _ 49: 89. D9
        neg     r9                                      ; 3D3A _ 49: F7. D9
        mov     rax, qword ptr [rbp-48H]                ; 3D3D _ 48: 8B. 45, B8
        mov     rdx, qword ptr [rbp-98H]                ; 3D41 _ 48: 8B. 95, FFFFFF68
        cmp     rcx, rdx                                ; 3D48 _ 48: 39. D1
        cmovbe  rcx, rdx                                ; 3D4B _ 48: 0F 46. CA
        mov     r15, r9                                 ; 3D4F _ 4D: 89. CF
        sub     r15, rsi                                ; 3D52 _ 49: 29. F7
        mov     r12, rsi                                ; 3D55 _ 49: 89. F4
        mov     qword ptr [rsp+30H], r10                ; 3D58 _ 4C: 89. 54 24, 30
        mov     r13, r10                                ; 3D5D _ 4D: 89. D5
        mov     rdx, qword ptr [rbp+40H]                ; 3D60 _ 48: 8B. 55, 40
        mov     qword ptr [rsp+28H], rdx                ; 3D64 _ 48: 89. 54 24, 28
        lea     rdx, ptr [rbp-68H]                      ; 3D69 _ 48: 8D. 55, 98
        mov     qword ptr [rsp+20H], rdx                ; 3D6D _ 48: 89. 54 24, 20
        sub     r9, rcx                                 ; 3D72 _ 49: 29. C9
        add     r15, r14                                ; 3D75 _ 4D: 01. F7
        mov     rcx, qword ptr [rbp-0A0H]               ; 3D78 _ 48: 8B. 8D, FFFFFF60
        cmp     r15, rcx                                ; 3D7F _ 49: 39. CF
        cmovbe  r15, rcx                                ; 3D82 _ 4C: 0F 46. F9
        add     r9, r14                                 ; 3D86 _ 4D: 01. F1
        mov     rsi, r8                                 ; 3D89 _ 4C: 89. C6
        lea     r8, ptr [rbx+rsi]                       ; 3D8C _ 4C: 8D. 04 33
        mov     rcx, rax                                ; 3D90 _ 48: 89. C1
        mov     rdx, r11                                ; 3D93 _ 4C: 89. DA
        mov     qword ptr [rbp-0A8H], r11               ; 3D96 _ 4C: 89. 9D, FFFFFF58
        call    qword ptr [rax+10H]                     ; 3D9D _ FF. 50, 10
        test    rax, rax                                ; 3DA0 _ 48: 85. C0
        mov     qword ptr [rbp-0C0H], rax               ; 3DA3 _ 48: 89. 85, FFFFFF40
        jns     ?_223                                   ; 3DAA _ 79, 58
        jmp     ?_229                                   ; 3DAC _ E9, 00000158

?_221:  cmp     r11, rax                                ; 3DB1 _ 49: 39. C3
        jnc     Unnamed_1_3AEE                          ; 3DB4 _ 0F 83, FFFFFF74
?_222:  mov     qword ptr [rbp-0A8H], r11               ; 3DBA _ 4C: 89. 9D, FFFFFF58
        mov     rcx, r14                                ; 3DC1 _ 4C: 89. F1
        sub     rcx, rbx                                ; 3DC4 _ 48: 29. D9
        mov     rax, rbx                                ; 3DC7 _ 48: 89. D8
        neg     rax                                     ; 3DCA _ 48: F7. D8
        mov     r15, rax                                ; 3DCD _ 49: 89. C7
        sub     r15, rsi                                ; 3DD0 _ 49: 29. F7
        add     r15, r14                                ; 3DD3 _ 4D: 01. F7
        mov     rdx, qword ptr [rbp-0A0H]               ; 3DD6 _ 48: 8B. 95, FFFFFF60
        cmp     r15, rdx                                ; 3DDD _ 49: 39. D7
        cmovbe  r15, rdx                                ; 3DE0 _ 4C: 0F 46. FA
        sub     rcx, rsi                                ; 3DE4 _ 48: 29. F1
        mov     rdx, qword ptr [rbp-98H]                ; 3DE7 _ 48: 8B. 95, FFFFFF68
        cmp     rcx, rdx                                ; 3DEE _ 48: 39. D1
        cmovbe  rcx, rdx                                ; 3DF1 _ 48: 0F 46. CA
        sub     rax, rcx                                ; 3DF5 _ 48: 29. C8
        add     rax, r14                                ; 3DF8 _ 4C: 01. F0
        mov     rdi, qword ptr [rbp-88H]                ; 3DFB _ 48: 8B. BD, FFFFFF78
        jmp     ?_224                                   ; 3E02 _ EB, 28

?_223:  mov     rax, qword ptr [rbp-90H]                ; 3E04 _ 48: 8B. 85, FFFFFF70
        mov     rdi, qword ptr [rbp-88H]                ; 3E0B _ 48: 8B. BD, FFFFFF78
        imul    rax, rdi                                ; 3E12 _ 48: 0F AF. C7
        add     rax, qword ptr [rbp-0D8H]               ; 3E16 _ 48: 03. 85, FFFFFF28
        sub     rax, rbx                                ; 3E1D _ 48: 29. D8
        sub     rax, r15                                ; 3E20 _ 4C: 29. F8
        mov     r8, rsi                                 ; 3E23 _ 49: 89. F0
        mov     rsi, r12                                ; 3E26 _ 4C: 89. E6
        mov     r10, r13                                ; 3E29 _ 4D: 89. EA
?_224:  add     r10, rax                                ; 3E2C _ 49: 01. C2
        add     rbx, rsi                                ; 3E2F _ 48: 01. F3
        add     rbx, r15                                ; 3E32 _ 4C: 01. FB
        cmp     rsi, rax                                ; 3E35 _ 48: 39. C6
        jz      ?_226                                   ; 3E38 _ 74, 47
        mov     rcx, r14                                ; 3E3A _ 4C: 89. F1
        sub     rcx, r15                                ; 3E3D _ 4C: 29. F9
        lea     rsi, ptr [r8+rbx+1H]                    ; 3E40 _ 49: 8D. 74 18, 01
        mov     rax, qword ptr [rbp-0B8H]               ; 3E45 _ 48: 8B. 85, FFFFFF48
        mov     eax, dword ptr [rax-4H]                 ; 3E4C _ 8B. 40, FC
        mov     rbx, rcx                                ; 3E4F _ 48: 89. CB
Unnamed_1_3C12:
        mov     rcx, qword ptr [rbp-90H]                ; 3E52 _ 48: 8B. 8D, FFFFFF70
        add     r14, rcx                                ; 3E59 _ 49: 01. CE
        sub     r8, rcx                                 ; 3E5C _ 49: 29. C8
        inc     rdi                                     ; 3E5F _ 48: FF. C7
?_225:  mov     rcx, qword ptr [rbp-0C8H]               ; 3E62 _ 48: 8B. 8D, FFFFFF38
        lea     r11, ptr [rcx+rdi]                      ; 3E69 _ 4C: 8D. 1C 39
        lea     rdx, ptr [r14+1H]                       ; 3E6D _ 49: 8D. 56, 01
        mov     ecx, eax                                ; 3E71 _ 89. C1
        cmp     rdi, rcx                                ; 3E73 _ 48: 39. CF
        jc      Unnamed_1_3A52                          ; 3E76 _ 0F 82, FFFFFE16
        mov     r14, rbx                                ; 3E7C _ 49: 89. DE
        jmp     ?_227                                   ; 3E7F _ EB, 16

?_226:  sub     r14, r15                                ; 3E81 _ 4D: 29. FE
        lea     rsi, ptr [r8+rbx+1H]                    ; 3E84 _ 49: 8D. 74 18, 01
        mov     rdx, qword ptr [rbp-0D0H]               ; 3E89 _ 48: 8B. 95, FFFFFF30
        mov     r11, qword ptr [rbp-0A8H]               ; 3E90 _ 4C: 8B. 9D, FFFFFF58
?_227:  cmp     qword ptr [rbp-0C0H], 0                 ; 3E97 _ 48: 83. BD, FFFFFF40, 00
        js      Unnamed_1_3C7E                          ; 3E9F _ 78, 1D
        add     qword ptr [rbp-0B8H], 8                 ; 3EA1 _ 48: 83. 85, FFFFFF48, 08
        mov     rbx, r14                                ; 3EA9 _ 4C: 89. F3
        mov     qword ptr [rbp-0C8H], r11               ; 3EAC _ 4C: 89. 9D, FFFFFF38
?_228:  test    rsi, rsi                                ; 3EB3 _ 48: 85. F6
        jne     Unnamed_1_39E8                          ; 3EB6 _ 0F 85, FFFFFD6C
        xor     esi, esi                                ; 3EBC _ 31. F6
Unnamed_1_3C7E:
        mov     rax, qword ptr [?_578]                  ; 3EBE _ 48: 8B. 05, 00006DE3(rel)
        mov     rcx, qword ptr [rbp-0E0H]               ; 3EC5 _ 48: 8B. 8D, FFFFFF20
        call    qword ptr [rax+48H]                     ; 3ECC _ FF. 50, 48
        mov     rax, qword ptr [rbp-0E8H]               ; 3ECF _ 48: 8B. 85, FFFFFF18
        sub     rax, rsi                                ; 3ED6 _ 48: 29. F0
        mov     rcx, qword ptr [rbp-0F0H]               ; 3ED9 _ 48: 8B. 8D, FFFFFF10
        mov     qword ptr [rcx], rax                    ; 3EE0 _ 48: 89. 01
        mov     qword ptr [rbp-0C0H], 0                 ; 3EE3 _ 48: C7. 85, FFFFFF40, 00000000
Unnamed_1_3CAE:
        mov     rax, qword ptr [rbp-0C0H]               ; 3EEE _ 48: 8B. 85, FFFFFF40
        add     rsp, 264                                ; 3EF5 _ 48: 81. C4, 00000108
        pop     rbx                                     ; 3EFC _ 5B
        pop     rdi                                     ; 3EFD _ 5F
        pop     rsi                                     ; 3EFE _ 5E
        pop     r12                                     ; 3EFF _ 41: 5C
        pop     r13                                     ; 3F01 _ 41: 5D
        pop     r14                                     ; 3F03 _ 41: 5E
        pop     r15                                     ; 3F05 _ 41: 5F
        pop     rbp                                     ; 3F07 _ 5D
        ret                                             ; 3F08 _ C3

?_229   LABEL NEAR
        mov     rsi, r12                                ; 3F09 _ 4C: 89. E6
        jmp     Unnamed_1_3C7E                          ; 3F0C _ EB, B0

?_230   LABEL NEAR
        push    rbp                                     ; 3F0E _ 55
        mov     rbp, rsp                                ; 3F0F _ 48: 89. E5
        push    r15                                     ; 3F12 _ 41: 57
        push    r14                                     ; 3F14 _ 41: 56
        push    r13                                     ; 3F16 _ 41: 55
        push    r12                                     ; 3F18 _ 41: 54
        push    rsi                                     ; 3F1A _ 56
        push    rdi                                     ; 3F1B _ 57
        push    rbx                                     ; 3F1C _ 53
        sub     rsp, 104                                ; 3F1D _ 48: 83. EC, 68
        mov     r12, r9                                 ; 3F21 _ 4D: 89. CC
        mov     qword ptr [rbp-70H], r8                 ; 3F24 _ 4C: 89. 45, 90
        mov     rsi, rdx                                ; 3F28 _ 48: 89. D6
        mov     r14, rcx                                ; 3F2B _ 49: 89. CE
        lea     rdx, ptr [rbp-40H]                      ; 3F2E _ 48: 8D. 55, C0
        mov     rax, qword ptr [rbp+30H]                ; 3F32 _ 48: 8B. 45, 30
        mov     rcx, rax                                ; 3F36 _ 48: 89. C1
        call    qword ptr [rax+10H]                     ; 3F39 _ FF. 50, 10
        test    rax, rax                                ; 3F3C _ 48: 85. C0
        js      Unnamed_1_3EA3                          ; 3F3F _ 0F 88, 0000019E
        mov     rdi, rax                                ; 3F45 _ 48: 89. C7
        mov     rax, 8000000000000002H                  ; 3F48 _ 48: B8, 8000000000000002
        mov     rdx, qword ptr [rbp-40H]                ; 3F52 _ 48: 8B. 55, C0
        cmp     rdx, r12                                ; 3F56 _ 4C: 39. E2
        ja      Unnamed_1_3EA3                          ; 3F59 _ 0F 87, 00000184
        mov     rcx, qword ptr [rdx+20H]                ; 3F5F _ 48: 8B. 4A, 20
        add     rcx, rdx                                ; 3F63 _ 48: 01. D1
        mov     rax, 8000000000000002H                  ; 3F66 _ 48: B8, 8000000000000002
        cmp     rcx, r12                                ; 3F70 _ 4C: 39. E1
        jc      Unnamed_1_3EA3                          ; 3F73 _ 0F 82, 0000016A
        movzx   ecx, word ptr [rdx+30H]                 ; 3F79 _ 0F B7. 4A, 30
        call    Unnamed_1_154                           ; 3F7D _ E8, FFFFC412
        mov     rcx, rax                                ; 3F82 _ 48: 89. C1
        mov     rax, 8000000000000009H                  ; 3F85 _ 48: B8, 8000000000000009
        test    rcx, rcx                                ; 3F8F _ 48: 85. C9
        je      Unnamed_1_3EA3                          ; 3F92 _ 0F 84, 0000014B
        lea     rax, ptr [rcx+3CH]                      ; 3F98 _ 48: 8D. 41, 3C
        mov     qword ptr [rbp-60H], rcx                ; 3F9C _ 48: 89. 4D, A0
        mov     qword ptr [rbp-50H], rax                ; 3FA0 _ 48: 89. 45, B0
        mov     r9, rsi                                 ; 3FA4 _ 49: 89. F1
        mov     qword ptr [rbp-68H], rsi                ; 3FA7 _ 48: 89. 75, 98
        mov     qword ptr [rbp-58H], 0                  ; 3FAB _ 48: C7. 45, A8, 00000000
        mov     r8, rdi                                 ; 3FB3 _ 49: 89. F8
        mov     rdx, r14                                ; 3FB6 _ 4C: 89. F2
        jmp     ?_234                                   ; 3FB9 _ E9, 000000E0

Unnamed_1_3D7E:
        mov     r9, rcx                                 ; 3FBE _ 49: 89. C9
        mov     r10, rbx                                ; 3FC1 _ 49: 89. DA
        jmp     ?_233                                   ; 3FC4 _ E9, 000000CC

Unnamed_1_3D89:
        mov     rax, qword ptr [rbp-50H]                ; 3FC9 _ 48: 8B. 45, B0
        mov     eax, dword ptr [rax-4H]                 ; 3FCD _ 8B. 40, FC
        test    eax, eax                                ; 3FD0 _ 85. C0
        je      Unnamed_1_3E6C                          ; 3FD2 _ 0F 84, 000000D4
        mov     rcx, qword ptr [rbp-50H]                ; 3FD8 _ 48: 8B. 4D, B0
        mov     ecx, dword ptr [rcx]                    ; 3FDC _ 8B. 09
        mov     qword ptr [rbp-48H], rcx                ; 3FDE _ 48: 89. 4D, B8
        test    rcx, rcx                                ; 3FE2 _ 48: 85. C9
        je      Unnamed_1_3E6C                          ; 3FE5 _ 0F 84, 000000C1
        xor     esi, esi                                ; 3FEB _ 31. F6
        jmp     ?_231                                   ; 3FED _ EB, 2B

Unnamed_1_3DAF:
        mov     rdx, r12                                ; 3FEF _ 4C: 89. E2
        add     rdx, r15                                ; 3FF2 _ 4C: 01. FA
        mov     rcx, rsi                                ; 3FF5 _ 48: 89. F1
        sub     rcx, r15                                ; 3FF8 _ 4C: 29. F9
        mov     r12, r14                                ; 3FFB _ 4D: 89. F4
        add     r12, r15                                ; 3FFE _ 4D: 01. FC
        cmp     rsi, r15                                ; 4001 _ 4C: 39. FE
        mov     rsi, r13                                ; 4004 _ 4C: 89. EE
        jz      Unnamed_1_3D7E                          ; 4007 _ 74, B5
        mov     rax, qword ptr [rbp-50H]                ; 4009 _ 48: 8B. 45, B0
        mov     eax, dword ptr [rax-4H]                 ; 400D _ 8B. 40, FC
        mov     r9, rcx                                 ; 4010 _ 49: 89. C9
Unnamed_1_3DD3:
        mov     qword ptr [rbp-40H], rdi                ; 4013 _ 48: 89. 7D, C0
        inc     rsi                                     ; 4017 _ 48: FF. C6
?_231:  mov     rcx, qword ptr [rbp-58H]                ; 401A _ 48: 8B. 4D, A8
        lea     r10, ptr [rcx+rsi]                      ; 401E _ 4C: 8D. 14 31
        mov     ecx, eax                                ; 4022 _ 89. C1
        cmp     rsi, rcx                                ; 4024 _ 48: 39. CE
        jnc     ?_232                                   ; 4027 _ 73, 67
        mov     rcx, qword ptr [rbp-40H]                ; 4029 _ 48: 8B. 4D, C0
        mov     rdi, qword ptr [rbp-48H]                ; 402D _ 48: 8B. 7D, B8
        lea     rdi, ptr [rcx+rdi]                      ; 4031 _ 48: 8D. 3C 39
        cmp     r12, rcx                                ; 4035 _ 49: 39. CC
        jc      Unnamed_1_3DD3                          ; 4038 _ 72, D9
        cmp     r12, rdi                                ; 403A _ 49: 39. FC
        jnc     Unnamed_1_3DD3                          ; 403D _ 73, D4
        mov     r13, rsi                                ; 403F _ 49: 89. F5
        mov     rsi, qword ptr [rbp-48H]                ; 4042 _ 48: 8B. 75, B8
        mov     qword ptr [rsp+20H], rsi                ; 4046 _ 48: 89. 74 24, 20
        mov     r8, r12                                 ; 404B _ 4D: 89. E0
        mov     r14, r12                                ; 404E _ 4D: 89. E6
        sub     r8, rcx                                 ; 4051 _ 49: 29. C8
        mov     qword ptr [rsp+28H], rdx                ; 4054 _ 48: 89. 54 24, 28
        mov     r12, rdx                                ; 4059 _ 49: 89. D4
        mov     r15, rsi                                ; 405C _ 49: 89. F7
        sub     r15, r8                                 ; 405F _ 4D: 29. C7
        lea     rax, ptr [r8+r9]                        ; 4062 _ 4B: 8D. 04 08
        cmp     rax, rsi                                ; 4066 _ 48: 39. F0
        cmovbe  r15, r9                                 ; 4069 _ 4D: 0F 46. F9
        mov     rsi, r9                                 ; 406D _ 4C: 89. CE
        mov     rcx, qword ptr [rbp+30H]                ; 4070 _ 48: 8B. 4D, 30
        mov     rdx, r10                                ; 4074 _ 4C: 89. D2
        mov     rbx, r10                                ; 4077 _ 4C: 89. D3
        mov     r9, r15                                 ; 407A _ 4D: 89. F9
        call    Unnamed_1_2E5B                          ; 407D _ E8, FFFFF019
        mov     r8, rax                                 ; 4082 _ 49: 89. C0
        test    r8, r8                                  ; 4085 _ 4D: 85. C0
        jns     Unnamed_1_3DAF                          ; 4088 _ 0F 89, FFFFFF61
        jmp     ?_235                                   ; 408E _ EB, 3F

?_232:  test    r8, r8                                  ; 4090 _ 4D: 85. C0
        js      Unnamed_1_3E6C                          ; 4093 _ 78, 17
?_233:  add     qword ptr [rbp-50H], 8                  ; 4095 _ 48: 83. 45, B0, 08
        mov     qword ptr [rbp-58H], r10                ; 409A _ 4C: 89. 55, A8
?_234:  test    r9, r9                                  ; 409E _ 4D: 85. C9
        jne     Unnamed_1_3D89                          ; 40A1 _ 0F 85, FFFFFF22
        xor     eax, eax                                ; 40A7 _ 31. C0
        mov     r9, rax                                 ; 40A9 _ 49: 89. C1
Unnamed_1_3E6C:
        mov     rax, qword ptr [?_578]                  ; 40AC _ 48: 8B. 05, 00006BF5(rel)
        mov     rcx, qword ptr [rbp-60H]                ; 40B3 _ 48: 8B. 4D, A0
        mov     rsi, r9                                 ; 40B7 _ 4C: 89. CE
        call    qword ptr [rax+48H]                     ; 40BA _ FF. 50, 48
        mov     rax, qword ptr [rbp-68H]                ; 40BD _ 48: 8B. 45, 98
        sub     rax, rsi                                ; 40C1 _ 48: 29. F0
        mov     rcx, qword ptr [rbp-70H]                ; 40C4 _ 48: 8B. 4D, 90
        mov     qword ptr [rcx], rax                    ; 40C8 _ 48: 89. 01
        xor     eax, eax                                ; 40CB _ 31. C0
        jmp     Unnamed_1_3EA3                          ; 40CD _ EB, 14

?_235:  mov     rax, qword ptr [?_578]                  ; 40CF _ 48: 8B. 05, 00006BD2(rel)
        mov     rcx, qword ptr [rbp-60H]                ; 40D6 _ 48: 8B. 4D, A0
        mov     rsi, r8                                 ; 40DA _ 4C: 89. C6
        call    qword ptr [rax+48H]                     ; 40DD _ FF. 50, 48
        mov     rax, rsi                                ; 40E0 _ 48: 89. F0
Unnamed_1_3EA3:
        add     rsp, 104                                ; 40E3 _ 48: 83. C4, 68
        pop     rbx                                     ; 40E7 _ 5B
        pop     rdi                                     ; 40E8 _ 5F
        pop     rsi                                     ; 40E9 _ 5E
        pop     r12                                     ; 40EA _ 41: 5C
        pop     r13                                     ; 40EC _ 41: 5D
        pop     r14                                     ; 40EE _ 41: 5E
        pop     r15                                     ; 40F0 _ 41: 5F
        pop     rbp                                     ; 40F2 _ 5D
        ret                                             ; 40F3 _ C3

Unnamed_1_3EB4 LABEL NEAR
        cmp     rdx, 1                                  ; 40F4 _ 48: 83. FA, 01
        jz      Unnamed_1_3EE1                          ; 40F8 _ 74, 27
        mov     rax, rdx                                ; 40FA _ 48: 89. D0
        shr     rax, 1                                  ; 40FD _ 48: D1. E8
        test    rax, rax                                ; 4100 _ 48: 85. C0
        jz      Unnamed_1_3EE1                          ; 4103 _ 74, 1C
        lea     rdx, ptr [rdx+rcx-1H]                   ; 4105 _ 48: 8D. 54 0A, FF
?_236:  mov     r8b, byte ptr [rcx]                     ; 410A _ 44: 8A. 01
        mov     r9b, byte ptr [rdx]                     ; 410D _ 44: 8A. 0A
        mov     byte ptr [rcx], r9b                     ; 4110 _ 44: 88. 09
        mov     byte ptr [rdx], r8b                     ; 4113 _ 44: 88. 02
        inc     rcx                                     ; 4116 _ 48: FF. C1
        dec     rdx                                     ; 4119 _ 48: FF. CA
        dec     rax                                     ; 411C _ 48: FF. C8
        jnz     ?_236                                   ; 411F _ 75, E9
Unnamed_1_3EE1:
        ret                                             ; 4121 _ C3

?_237   LABEL NEAR
        push    rbp                                     ; 4122 _ 55
        mov     rbp, rsp                                ; 4123 _ 48: 89. E5
        push    rbx                                     ; 4126 _ 53
        sub     rsp, 40                                 ; 4127 _ 48: 83. EC, 28
        mov     byte ptr [rbp-9H], 0                    ; 412B _ C6. 45, F7, 00
        mov     byte ptr [rbp-0AH], 0                   ; 412F _ C6. 45, F6, 00
        lea     r8, ptr [rbp-9H]                        ; 4133 _ 4C: 8D. 45, F7
        mov     ecx, 1112438125                         ; 4137 _ B9, 424E756D
        mov     edx, 1                                  ; 413C _ BA, 00000001
        call    Unnamed_1_3FA0                          ; 4141 _ E8, 0000009A
        test    rax, rax                                ; 4146 _ 48: 85. C0
        jnz     Unnamed_1_3F80                          ; 4149 _ 75, 75
        mov     cl, byte ptr [rbp-9H]                   ; 414B _ 8A. 4D, F7
        test    cl, cl                                  ; 414E _ 84. C9
        jz      Unnamed_1_3F80                          ; 4150 _ 74, 6E
        lea     r8, ptr [rbp-0AH]                       ; 4152 _ 4C: 8D. 45, F6
        mov     ecx, 1112754542                         ; 4156 _ B9, 4253496E
        mov     edx, 1                                  ; 415B _ BA, 00000001
        call    Unnamed_1_3FA0                          ; 4160 _ E8, 0000007B
        test    rax, rax                                ; 4165 _ 48: 85. C0
        jz      ?_238                                   ; 4168 _ 74, 04
Unnamed_1_3F2A:
        xor     bl, bl                                  ; 416A _ 30. DB
        jmp     ?_239                                   ; 416C _ EB, 59

?_238:  mov     bl, 1                                   ; 416E _ B3, 01
        test    byte ptr [rbp-0AH], 02H                 ; 4170 _ F6. 45, F6, 02
        jnz     Unnamed_1_3F96                          ; 4174 _ 75, 60
        lea     r8, ptr [rbp-0CH]                       ; 4176 _ 4C: 8D. 45, F4
        mov     ecx, 1110459971                         ; 417A _ B9, 42304643
        mov     edx, 2                                  ; 417F _ BA, 00000002
        call    Unnamed_1_3FA0                          ; 4184 _ E8, 00000057
        test    rax, rax                                ; 4189 _ 48: 85. C0
        jnz     Unnamed_1_3F2A                          ; 418C _ 75, DC
        lea     r8, ptr [rbp-0EH]                       ; 418E _ 4C: 8D. 45, F2
        mov     ecx, 1110463053                         ; 4192 _ B9, 4230524D
        mov     edx, 2                                  ; 4197 _ BA, 00000002
        call    Unnamed_1_3FA0                          ; 419C _ E8, 0000003F
        test    rax, rax                                ; 41A1 _ 48: 85. C0
        jnz     Unnamed_1_3F2A                          ; 41A4 _ 75, C4
        movzx   eax, word ptr [rbp-0EH]                 ; 41A6 _ 0F B7. 45, F2
        imul    eax, eax, 100                           ; 41AA _ 6B. C0, 64
        movzx   ecx, word ptr [rbp-0CH]                 ; 41AD _ 0F B7. 4D, F4
        xor     edx, edx                                ; 41B1 _ 31. D2
        div     ecx                                     ; 41B3 _ F7. F1
        movzx   eax, al                                 ; 41B5 _ 0F B6. C0
        cmp     eax, 4                                  ; 41B8 _ 83. F8, 04
        seta    bl                                      ; 41BB _ 0F 97. C3
        jmp     Unnamed_1_3F96                          ; 41BE _ EB, 16

Unnamed_1_3F80:
        mov     bl, 1                                   ; 41C0 _ B3, 01
        test    rax, rax                                ; 41C2 _ 48: 85. C0
        jz      Unnamed_1_3F96                          ; 41C5 _ 74, 0F
?_239:  lea     rcx, ptr [?_465]                        ; 41C7 _ 48: 8D. 0D, 00003DC6(rel)
        mov     rdx, rax                                ; 41CE _ 48: 89. C2
        call    Unnamed_1_B95                           ; 41D1 _ E8, FFFFCBFF
Unnamed_1_3F96:
        movzx   eax, bl                                 ; 41D6 _ 0F B6. C3
        add     rsp, 40                                 ; 41D9 _ 48: 83. C4, 28
        pop     rbx                                     ; 41DD _ 5B
        pop     rbp                                     ; 41DE _ 5D
        ret                                             ; 41DF _ C3

Unnamed_1_3FA0 LABEL NEAR
        push    rbp                                     ; 41E0 _ 55
        mov     rbp, rsp                                ; 41E1 _ 48: 89. E5
        push    rsi                                     ; 41E4 _ 56
        push    rdi                                     ; 41E5 _ 57
        push    rbx                                     ; 41E6 _ 53
        sub     rsp, 40                                 ; 41E7 _ 48: 83. EC, 28
        mov     rsi, r8                                 ; 41EB _ 4C: 89. C6
        mov     ebx, edx                                ; 41EE _ 89. D3
        mov     edi, ecx                                ; 41F0 _ 89. CF
        mov     rax, qword ptr [?_561]                  ; 41F2 _ 48: 8B. 05, 00006A3F(rel)
        test    rax, rax                                ; 41F9 _ 48: 85. C0
        jnz     ?_240                                   ; 41FC _ 75, 29
        mov     rax, qword ptr [?_578]                  ; 41FE _ 48: 8B. 05, 00006AA3(rel)
        lea     rcx, ptr [?_522]                        ; 4205 _ 48: 8D. 0D, 000062B0(rel)
        lea     r8, ptr [?_561]                         ; 420C _ 4C: 8D. 05, 00006A25(rel)
        xor     edx, edx                                ; 4213 _ 31. D2
        call    qword ptr [rax+140H]                    ; 4215 _ FF. 90, 00000140
        test    rax, rax                                ; 421B _ 48: 85. C0
        jnz     ?_241                                   ; 421E _ 75, 29
        mov     rax, qword ptr [?_561]                  ; 4220 _ 48: 8B. 05, 00006A11(rel)
?_240:  movzx   ebx, bl                                 ; 4227 _ 0F B6. DB
        mov     rcx, rax                                ; 422A _ 48: 89. C1
        mov     edx, edi                                ; 422D _ 89. FA
        mov     r8d, ebx                                ; 422F _ 41: 89. D8
        mov     r9, rsi                                 ; 4232 _ 49: 89. F1
        call    qword ptr [rax+8H]                      ; 4235 _ FF. 50, 08
        mov     rdi, rax                                ; 4238 _ 48: 89. C7
        movzx   edx, bl                                 ; 423B _ 0F B6. D3
        mov     rcx, rsi                                ; 423E _ 48: 89. F1
        call    Unnamed_1_3EB4                          ; 4241 _ E8, FFFFFEAE
        mov     rax, rdi                                ; 4246 _ 48: 89. F8
?_241:  add     rsp, 40                                 ; 4249 _ 48: 83. C4, 28
        pop     rbx                                     ; 424D _ 5B
        pop     rdi                                     ; 424E _ 5F
        pop     rsi                                     ; 424F _ 5E
        pop     rbp                                     ; 4250 _ 5D
        ret                                             ; 4251 _ C3

Unnamed_1_4012 LABEL NEAR
        push    rbp                                     ; 4252 _ 55
        mov     rbp, rsp                                ; 4253 _ 48: 89. E5
        push    rsi                                     ; 4256 _ 56
        sub     rsp, 56                                 ; 4257 _ 48: 83. EC, 38
        test    cl, cl                                  ; 425B _ 84. C9
        setne   byte ptr [rbp-9H]                       ; 425D _ 0F 95. 45, F7
        mov     rax, qword ptr [?_578]                  ; 4261 _ 48: 8B. 05, 00006A40(rel)
        lea     rcx, ptr [?_521]                        ; 4268 _ 48: 8D. 0D, 0000623D(rel)
        lea     r8, ptr [rbp-18H]                       ; 426F _ 4C: 8D. 45, E8
        xor     edx, edx                                ; 4273 _ 31. D2
        call    qword ptr [rax+140H]                    ; 4275 _ FF. 90, 00000140
        test    rax, rax                                ; 427B _ 48: 85. C0
        js      ?_242                                   ; 427E _ 78, 36
        mov     rax, qword ptr [rbp-18H]                ; 4280 _ 48: 8B. 45, E8
        lea     rsi, ptr [rbp-9H]                       ; 4284 _ 48: 8D. 75, F7
        mov     rcx, rax                                ; 4288 _ 48: 89. C1
        mov     rdx, rsi                                ; 428B _ 48: 89. F2
        mov     r8d, 1                                  ; 428E _ 41: B8, 00000001
        mov     r9d, 172                                ; 4294 _ 41: B9, 000000AC
        call    qword ptr [rax+10H]                     ; 429A _ FF. 50, 10
        mov     rax, qword ptr [rbp-18H]                ; 429D _ 48: 8B. 45, E8
        mov     rcx, rax                                ; 42A1 _ 48: 89. C1
        mov     rdx, rsi                                ; 42A4 _ 48: 89. F2
        mov     r8d, 1                                  ; 42A7 _ 41: B8, 00000001
        mov     r9d, 172                                ; 42AD _ 41: B9, 000000AC
        call    qword ptr [rax+8H]                      ; 42B3 _ FF. 50, 08
?_242:  add     rsp, 56                                 ; 42B6 _ 48: 83. C4, 38
        pop     rsi                                     ; 42BA _ 5E
        pop     rbp                                     ; 42BB _ 5D
        ret                                             ; 42BC _ C3

?_243   LABEL NEAR
        push    rbp                                     ; 42BD _ 55
        mov     rbp, rsp                                ; 42BE _ 48: 89. E5
        sub     rsp, 48                                 ; 42C1 _ 48: 83. EC, 30
        mov     byte ptr [rbp-1H], 0                    ; 42C5 _ C6. 45, FF, 00
        mov     rax, qword ptr [?_578]                  ; 42C9 _ 48: 8B. 05, 000069D8(rel)
        lea     rcx, ptr [?_521]                        ; 42D0 _ 48: 8D. 0D, 000061D5(rel)
        lea     r8, ptr [rbp-10H]                       ; 42D7 _ 4C: 8D. 45, F0
        xor     edx, edx                                ; 42DB _ 31. D2
        call    qword ptr [rax+140H]                    ; 42DD _ FF. 90, 00000140
        test    rax, rax                                ; 42E3 _ 48: 85. C0
        js      ?_244                                   ; 42E6 _ 78, 1A
        mov     rax, qword ptr [rbp-10H]                ; 42E8 _ 48: 8B. 45, F0
        lea     rdx, ptr [rbp-1H]                       ; 42EC _ 48: 8D. 55, FF
        mov     rcx, rax                                ; 42F0 _ 48: 89. C1
        mov     r8d, 1                                  ; 42F3 _ 41: B8, 00000001
        mov     r9d, 92                                 ; 42F9 _ 41: B9, 0000005C
        call    qword ptr [rax+10H]                     ; 42FF _ FF. 50, 10
?_244:  add     rsp, 48                                 ; 4302 _ 48: 83. C4, 30
        pop     rbp                                     ; 4306 _ 5D
        ret                                             ; 4307 _ C3

?_245   LABEL NEAR
        push    rbp                                     ; 4308 _ 55
        mov     rbp, rsp                                ; 4309 _ 48: 89. E5
        push    rsi                                     ; 430C _ 56
        sub     rsp, 56                                 ; 430D _ 48: 83. EC, 38
        mov     byte ptr [rbp-11H], 0                   ; 4311 _ C6. 45, EF, 00
        mov     rax, qword ptr [?_578]                  ; 4315 _ 48: 8B. 05, 0000698C(rel)
        lea     rcx, ptr [?_510]                        ; 431C _ 48: 8D. 0D, 000060D9(rel)
        lea     r8, ptr [rbp-10H]                       ; 4323 _ 4C: 8D. 45, F0
        xor     edx, edx                                ; 4327 _ 31. D2
        call    qword ptr [rax+140H]                    ; 4329 _ FF. 90, 00000140
        test    rax, rax                                ; 432F _ 48: 85. C0
        js      ?_246                                   ; 4332 _ 78, 46
        mov     byte ptr [rbp-11H], 0                   ; 4334 _ C6. 45, EF, 00
        mov     rax, qword ptr [rbp-10H]                ; 4338 _ 48: 8B. 45, F0
        lea     rsi, ptr [rbp-11H]                      ; 433C _ 48: 8D. 75, EF
        mov     qword ptr [rsp+20H], rsi                ; 4340 _ 48: 89. 74 24, 20
        mov     rcx, rax                                ; 4345 _ 48: 89. C1
        xor     edx, edx                                ; 4348 _ 31. D2
        mov     r8d, 116                                ; 434A _ 41: B8, 00000074
        mov     r9d, 1                                  ; 4350 _ 41: B9, 00000001
        call    qword ptr [rax+18H]                     ; 4356 _ FF. 50, 18
        mov     byte ptr [rbp-11H], 0                   ; 4359 _ C6. 45, EF, 00
        mov     rax, qword ptr [rbp-10H]                ; 435D _ 48: 8B. 45, F0
        mov     qword ptr [rsp+20H], rsi                ; 4361 _ 48: 89. 74 24, 20
        mov     rcx, rax                                ; 4366 _ 48: 89. C1
        xor     edx, edx                                ; 4369 _ 31. D2
        mov     r8d, 117                                ; 436B _ 41: B8, 00000075
        mov     r9d, 1                                  ; 4371 _ 41: B9, 00000001
        call    qword ptr [rax+18H]                     ; 4377 _ FF. 50, 18
?_246:  add     rsp, 56                                 ; 437A _ 48: 83. C4, 38
        pop     rsi                                     ; 437E _ 5E
        pop     rbp                                     ; 437F _ 5D
        ret                                             ; 4380 _ C3

?_247   LABEL NEAR
        push    rbp                                     ; 4381 _ 55
        mov     rbp, rsp                                ; 4382 _ 48: 89. E5
        sub     rsp, 48                                 ; 4385 _ 48: 83. EC, 30
        mov     rax, qword ptr [?_579]                  ; 4389 _ 48: 8B. 05, 00006920(rel)
        mov     qword ptr [rsp+20H], 0                  ; 4390 _ 48: C7. 44 24, 20, 00000000
        lea     rcx, ptr [?_503]                        ; 4399 _ 48: 8D. 0D, 00005FE0(rel)
        lea     rdx, ptr [?_518]                        ; 43A0 _ 48: 8D. 15, 000060D5(rel)
        mov     r8d, 7                                  ; 43A7 _ 41: B8, 00000007
        xor     r9d, r9d                                ; 43AD _ 45: 31. C9
        call    qword ptr [rax+58H]                     ; 43B0 _ FF. 50, 58
        add     rsp, 48                                 ; 43B3 _ 48: 83. C4, 30
        pop     rbp                                     ; 43B7 _ 5D
        ret                                             ; 43B8 _ C3

?_248   LABEL NEAR
        push    rbp                                     ; 43B9 _ 55
        mov     rbp, rsp                                ; 43BA _ 48: 89. E5
        sub     rsp, 32                                 ; 43BD _ 48: 83. EC, 20
        mov     qword ptr [?_557], rcx                  ; 43C1 _ 48: 89. 0D, 00006850(rel)
        mov     rax, qword ptr [?_578]                  ; 43C8 _ 48: 8B. 05, 000068D9(rel)
        lea     rcx, ptr [?_520]                        ; 43CF _ 48: 8D. 0D, 000060C6(rel)
        lea     r8, ptr [?_558]                         ; 43D6 _ 4C: 8D. 05, 00006843(rel)
        xor     edx, edx                                ; 43DD _ 31. D2
        call    qword ptr [rax+140H]                    ; 43DF _ FF. 90, 00000140
        xor     ecx, ecx                                ; 43E5 _ 31. C9
        call    Unnamed_1_5B45                          ; 43E7 _ E8, 00001999
        xor     eax, eax                                ; 43EC _ 31. C0
        add     rsp, 32                                 ; 43EE _ 48: 83. C4, 20
        pop     rbp                                     ; 43F2 _ 5D
        ret                                             ; 43F3 _ C3

?_249   LABEL NEAR
        push    rbp                                     ; 43F4 _ 55
        mov     rbp, rsp                                ; 43F5 _ 48: 89. E5
        push    rsi                                     ; 43F8 _ 56
        push    rdi                                     ; 43F9 _ 57
        sub     rsp, 32                                 ; 43FA _ 48: 83. EC, 20
        mov     rsi, rdx                                ; 43FE _ 48: 89. D6
        mov     rdi, rcx                                ; 4401 _ 48: 89. CF
        lea     rcx, ptr [?_466]                        ; 4404 _ 48: 8D. 0D, 00003BD9(rel)
        call    Unnamed_1_B95                           ; 440B _ E8, FFFFC9C5
        lea     rcx, ptr [?_467]                        ; 4410 _ 48: 8D. 0D, 00003C21(rel)
        mov     rdx, rdi                                ; 4417 _ 48: 89. FA
        call    Unnamed_1_B95                           ; 441A _ E8, FFFFC9B6
        lea     rcx, ptr [?_468]                        ; 441F _ 48: 8D. 0D, 00003C2C(rel)
        mov     rdx, rsi                                ; 4426 _ 48: 89. F2
        call    Unnamed_1_B95                           ; 4429 _ E8, FFFFC9A7
        lea     rcx, ptr [?_458]                        ; 442E _ 48: 8D. 0D, 00003AC3(rel)
        call    Unnamed_1_B95                           ; 4435 _ E8, FFFFC99B
        xor     eax, eax                                ; 443A _ 31. C0
        add     rsp, 32                                 ; 443C _ 48: 83. C4, 20
        pop     rdi                                     ; 4440 _ 5F
        pop     rsi                                     ; 4441 _ 5E
        pop     rbp                                     ; 4442 _ 5D
        ret                                             ; 4443 _ C3

Unnamed_1_4204 LABEL NEAR
        push    rbp                                     ; 4444 _ 55
        mov     rbp, rsp                                ; 4445 _ 48: 89. E5
        push    rsi                                     ; 4448 _ 56
        push    rdi                                     ; 4449 _ 57
        push    rbx                                     ; 444A _ 53
        sub     rsp, 40                                 ; 444B _ 48: 83. EC, 28
        mov     rdi, rdx                                ; 444F _ 48: 89. D7
        mov     rsi, rcx                                ; 4452 _ 48: 89. CE
        mov     rbx, 8000000000000006H                  ; 4455 _ 48: BB, 8000000000000006
        mov     rcx, qword ptr [?_557]                  ; 445F _ 48: 8B. 0D, 000067B2(rel)
        test    rcx, rcx                                ; 4466 _ 48: 85. C9
        je      ?_251                                   ; 4469 _ 0F 84, 0000008E
        mov     rax, qword ptr [?_558]                  ; 446F _ 48: 8B. 05, 000067AA(rel)
        test    rax, rax                                ; 4476 _ 48: 85. C0
        jz      ?_250                                   ; 4479 _ 74, 37
        mov     ecx, 4                                  ; 447B _ B9, 00000004
        xor     edx, edx                                ; 4480 _ 31. D2
        call    qword ptr [rax+8H]                      ; 4482 _ FF. 50, 08
        mov     rax, qword ptr [?_578]                  ; 4485 _ 48: 8B. 05, 0000681C(rel)
        mov     ecx, 3000000                            ; 448C _ B9, 002DC6C0
        call    qword ptr [rax+0F8H]                    ; 4491 _ FF. 90, 000000F8
        mov     rax, qword ptr [?_558]                  ; 4497 _ 48: 8B. 05, 00006782(rel)
        mov     ecx, 4                                  ; 449E _ B9, 00000004
        mov     edx, 2                                  ; 44A3 _ BA, 00000002
        call    qword ptr [rax+8H]                      ; 44A8 _ FF. 50, 08
        mov     rcx, qword ptr [?_557]                  ; 44AB _ 48: 8B. 0D, 00006766(rel)
?_250:  add     rdi, qword ptr [?_559]                  ; 44B2 _ 48: 03. 3D, 0000676F(rel)
        mov     qword ptr [?_559], rdi                  ; 44B9 _ 48: 89. 3D, 00006768(rel)
        imul    rax, rdi, 100                           ; 44C0 _ 48: 6B. C7, 64
        xor     ebx, ebx                                ; 44C4 _ 31. DB
        xor     edx, edx                                ; 44C6 _ 31. D2
        div     rcx                                     ; 44C8 _ 48: F7. F1
        imul    rcx, rax, 1000                          ; 44CB _ 48: 69. C8, 000003E8
        call    Unnamed_1_5B45                          ; 44D2 _ E8, 000018AE
        lea     rcx, ptr [?_469]                        ; 44D7 _ 48: 8D. 0D, 00003B8A(rel)
        call    Unnamed_1_B95                           ; 44DE _ E8, FFFFC8F2
        lea     rcx, ptr [?_470]                        ; 44E3 _ 48: 8D. 0D, 00003BA4(rel)
        mov     edx, esi                                ; 44EA _ 89. F2
        call    Unnamed_1_B95                           ; 44EC _ E8, FFFFC8E4
        lea     rcx, ptr [?_471]                        ; 44F1 _ 48: 8D. 0D, 00003BA6(rel)
        call    Unnamed_1_B95                           ; 44F8 _ E8, FFFFC8D8
?_251:  mov     rax, rbx                                ; 44FD _ 48: 89. D8
        add     rsp, 40                                 ; 4500 _ 48: 83. C4, 28
        pop     rbx                                     ; 4504 _ 5B
        pop     rdi                                     ; 4505 _ 5F
        pop     rsi                                     ; 4506 _ 5E
        pop     rbp                                     ; 4507 _ 5D
        ret                                             ; 4508 _ C3

Unnamed_1_42C9 LABEL NEAR
        push    rbp                                     ; 4509 _ 55
        mov     rbp, rsp                                ; 450A _ 48: 89. E5
        push    r15                                     ; 450D _ 41: 57
        push    r14                                     ; 450F _ 41: 56
        push    r13                                     ; 4511 _ 41: 55
        push    r12                                     ; 4513 _ 41: 54
        push    rsi                                     ; 4515 _ 56
        push    rdi                                     ; 4516 _ 57
        push    rbx                                     ; 4517 _ 53
        sub     rsp, 40                                 ; 4518 _ 48: 83. EC, 28
        mov     r14, r9                                 ; 451C _ 4D: 89. CE
        mov     r15, r8                                 ; 451F _ 4D: 89. C7
        mov     r12, rdx                                ; 4522 _ 49: 89. D4
        mov     rsi, rcx                                ; 4525 _ 48: 89. CE
        lea     r13, ptr [r12+rsi]                      ; 4528 _ 4D: 8D. 2C 34
        mov     rbx, qword ptr [rbp+30H]                ; 452C _ 48: 8B. 5D, 30
        add     rbx, 80                                 ; 4530 _ 48: 83. C3, 50
        mov     rdi, -1                                 ; 4534 _ 48: C7. C7, FFFFFFFF
        jmp     Unnamed_1_4348                          ; 453B _ EB, 4B

Unnamed_1_42FD:
        mov     rcx, qword ptr [rbx-8H]                 ; 453D _ 48: 8B. 4B, F8
        lea     rbx, ptr [rbx+10H]                      ; 4541 _ 48: 8D. 5B, 10
        add     rax, rcx                                ; 4545 _ 48: 01. C8
        cmp     r13, rcx                                ; 4548 _ 49: 39. CD
        jc      Unnamed_1_4348                          ; 454B _ 72, 3B
        cmp     rax, rsi                                ; 454D _ 48: 39. F0
        jc      Unnamed_1_4348                          ; 4550 _ 72, 36
        mov     rdx, rcx                                ; 4552 _ 48: 89. CA
        sub     rdx, rsi                                ; 4555 _ 48: 29. F2
        cmp     rcx, rsi                                ; 4558 _ 48: 39. F1
        mov     ecx, 0                                  ; 455B _ B9, 00000000
        cmovc   rdx, rcx                                ; 4560 _ 48: 0F 42. D1
        mov     r8, rax                                 ; 4564 _ 49: 89. C0
        sub     r8, rsi                                 ; 4567 _ 49: 29. F0
        cmp     rax, r13                                ; 456A _ 4C: 39. E8
        cmovnc  r8, r12                                 ; 456D _ 4D: 0F 43. C4
        sub     r8, rdx                                 ; 4571 _ 49: 29. D0
        lea     rcx, ptr [r15+rdx]                      ; 4574 _ 49: 8D. 0C 17
        add     rdx, r14                                ; 4578 _ 4C: 01. F2
        mov     rax, qword ptr [?_578]                  ; 457B _ 48: 8B. 05, 00006726(rel)
        call    qword ptr [rax+160H]                    ; 4582 _ FF. 90, 00000160
Unnamed_1_4348:
        inc     rdi                                     ; 4588 _ 48: FF. C7
        cmp     rdi, 1                                  ; 458B _ 48: 83. FF, 01
        ja      ?_252                                   ; 458F _ 77, 08
        mov     rax, qword ptr [rbx]                    ; 4591 _ 48: 8B. 03
        test    rax, rax                                ; 4594 _ 48: 85. C0
        jnz     Unnamed_1_42FD                          ; 4597 _ 75, A4
?_252:  mov     rcx, r14                                ; 4599 _ 4C: 89. F1
        mov     rdx, r15                                ; 459C _ 4C: 89. FA
        mov     r8, r12                                 ; 459F _ 4D: 89. E0
        call    Unnamed_1_222                           ; 45A2 _ E8, FFFFBEBB
        test    rax, rax                                ; 45A7 _ 48: 85. C0
        sete    al                                      ; 45AA _ 0F 94. C0
        movzx   eax, al                                 ; 45AD _ 0F B6. C0
        add     rsp, 40                                 ; 45B0 _ 48: 83. C4, 28
        pop     rbx                                     ; 45B4 _ 5B
        pop     rdi                                     ; 45B5 _ 5F
        pop     rsi                                     ; 45B6 _ 5E
        pop     r12                                     ; 45B7 _ 41: 5C
        pop     r13                                     ; 45B9 _ 41: 5D
        pop     r14                                     ; 45BB _ 41: 5E
        pop     r15                                     ; 45BD _ 41: 5F
        pop     rbp                                     ; 45BF _ 5D
        ret                                             ; 45C0 _ C3

?_253   LABEL NEAR
        push    rbp                                     ; 45C1 _ 55
        mov     rbp, rsp                                ; 45C2 _ 48: 89. E5
        push    r15                                     ; 45C5 _ 41: 57
        push    r14                                     ; 45C7 _ 41: 56
        push    r13                                     ; 45C9 _ 41: 55
        push    r12                                     ; 45CB _ 41: 54
        push    rsi                                     ; 45CD _ 56
        push    rdi                                     ; 45CE _ 57
        push    rbx                                     ; 45CF _ 53
        sub     rsp, 56                                 ; 45D0 _ 48: 83. EC, 38
        mov     rsi, r9                                 ; 45D4 _ 4C: 89. CE
        mov     r14, r8                                 ; 45D7 _ 4D: 89. C6
        mov     r15, rdx                                ; 45DA _ 49: 89. D7
        mov     rbx, rcx                                ; 45DD _ 48: 89. CB
        lea     rdx, ptr [rbp-48H]                      ; 45E0 _ 48: 8D. 55, B8
        mov     rcx, rbx                                ; 45E4 _ 48: 89. D9
        call    qword ptr [rbx+10H]                     ; 45E7 _ FF. 53, 10
        mov     rdi, rax                                ; 45EA _ 48: 89. C7
        test    rdi, rdi                                ; 45ED _ 48: 85. FF
        jne     Unnamed_1_4464                          ; 45F0 _ 0F 85, 000000AE
        mov     qword ptr [rbp-40H], rsi                ; 45F6 _ 48: 89. 75, C0
        mov     rcx, rsi                                ; 45FA _ 48: 89. F1
        call    Unnamed_1_CB                            ; 45FD _ E8, FFFFBD09
        mov     r12, rax                                ; 4602 _ 49: 89. C4
        mov     rdi, 8000000000000009H                  ; 4605 _ 48: BF, 8000000000000009
        test    r12, r12                                ; 460F _ 4D: 85. E4
        je      Unnamed_1_4464                          ; 4612 _ 0F 84, 0000008C
        mov     qword ptr [rsp+20H], r12                ; 4618 _ 4C: 89. 64 24, 20
        lea     r9, ptr [rbp-40H]                       ; 461D _ 4C: 8D. 4D, C0
        mov     rcx, rbx                                ; 4621 _ 48: 89. D9
        mov     rdx, r14                                ; 4624 _ 4C: 89. F2
        xor     r8d, r8d                                ; 4627 _ 45: 31. C0
        call    qword ptr [rbx+20H]                     ; 462A _ FF. 53, 20
        mov     rdi, rax                                ; 462D _ 48: 89. C7
        test    rdi, rdi                                ; 4630 _ 48: 85. FF
        jnz     Unnamed_1_4457                          ; 4633 _ 75, 62
        mov     rdi, 8000000000000004H                  ; 4635 _ 48: BF, 8000000000000004
        cmp     qword ptr [rbp-40H], rsi                ; 463F _ 48: 39. 75, C0
        jnz     Unnamed_1_4457                          ; 4643 _ 75, 52
        mov     r13, qword ptr [rbp+30H]                ; 4645 _ 4C: 8B. 6D, 30
        mov     rcx, qword ptr [rbp-48H]                ; 4649 _ 48: 8B. 4D, B8
        mov     qword ptr [rsp+20H], r15                ; 464D _ 4C: 89. 7C 24, 20
        mov     rdi, rsi                                ; 4652 _ 48: 89. F7
        imul    rdi, r14                                ; 4655 _ 49: 0F AF. FE
        add     rcx, rdi                                ; 4659 _ 48: 01. F9
        mov     rdx, rsi                                ; 465C _ 48: 89. F2
        mov     r8, r13                                 ; 465F _ 4D: 89. E8
        mov     r9, r12                                 ; 4662 _ 4D: 89. E1
        call    Unnamed_1_42C9                          ; 4665 _ E8, FFFFFE9F
        mov     r15b, al                                ; 466A _ 41: 88. C7
        add     rdi, qword ptr [rbp-48H]                ; 466D _ 48: 03. 7D, B8
        mov     rcx, rdi                                ; 4671 _ 48: 89. F9
        mov     rdx, rsi                                ; 4674 _ 48: 89. F2
        call    Unnamed_1_4204                          ; 4677 _ E8, FFFFFDC8
        xor     edi, edi                                ; 467C _ 31. FF
        test    r15b, r15b                              ; 467E _ 45: 84. FF
        jnz     Unnamed_1_4457                          ; 4681 _ 75, 14
        mov     rcx, rbx                                ; 4683 _ 48: 89. D9
        mov     rdx, r14                                ; 4686 _ 4C: 89. F2
        mov     r8, rsi                                 ; 4689 _ 49: 89. F0
        mov     r9, r13                                 ; 468C _ 4D: 89. E9
        call    Unnamed_1_2DF3                          ; 468F _ E8, FFFFE99F
        mov     rdi, rax                                ; 4694 _ 48: 89. C7
Unnamed_1_4457:
        mov     rax, qword ptr [?_578]                  ; 4697 _ 48: 8B. 05, 0000660A(rel)
        mov     rcx, r12                                ; 469E _ 4C: 89. E1
        call    qword ptr [rax+48H]                     ; 46A1 _ FF. 50, 48
Unnamed_1_4464:
        mov     rax, rdi                                ; 46A4 _ 48: 89. F8
        add     rsp, 56                                 ; 46A7 _ 48: 83. C4, 38
        pop     rbx                                     ; 46AB _ 5B
        pop     rdi                                     ; 46AC _ 5F
        pop     rsi                                     ; 46AD _ 5E
        pop     r12                                     ; 46AE _ 41: 5C
        pop     r13                                     ; 46B0 _ 41: 5D
        pop     r14                                     ; 46B2 _ 41: 5E
        pop     r15                                     ; 46B4 _ 41: 5F
        pop     rbp                                     ; 46B6 _ 5D
        ret                                             ; 46B7 _ C3

Unnamed_1_4478 LABEL NEAR
        push    rbp                                     ; 46B8 _ 55
        mov     rbp, rsp                                ; 46B9 _ 48: 89. E5
        push    rsi                                     ; 46BC _ 56
        push    rdi                                     ; 46BD _ 57
        push    rbx                                     ; 46BE _ 53
        sub     rsp, 88                                 ; 46BF _ 48: 83. EC, 58
        mov     edi, edx                                ; 46C3 _ 89. D7
        mov     rbx, rcx                                ; 46C5 _ 48: 89. CB
        mov     qword ptr [rbp-20H], 0                  ; 46C8 _ 48: C7. 45, E0, 00000000
        mov     rax, qword ptr [?_578]                  ; 46D0 _ 48: 8B. 05, 000065D1(rel)
        lea     rcx, ptr [rbp-28H]                      ; 46D7 _ 48: 8D. 4D, D8
        mov     qword ptr [rsp+20H], rcx                ; 46DB _ 48: 89. 4C 24, 20
        mov     ecx, 2147483648                         ; 46E0 _ B9, 80000000
        xor     edx, edx                                ; 46E5 _ 31. D2
        xor     r8d, r8d                                ; 46E7 _ 45: 31. C0
        xor     r9d, r9d                                ; 46EA _ 45: 31. C9
        call    qword ptr [rax+50H]                     ; 46ED _ FF. 50, 50
        mov     rsi, rax                                ; 46F0 _ 48: 89. C6
        test    rsi, rsi                                ; 46F3 _ 48: 85. F6
        js      ?_254                                   ; 46F6 _ 78, 6A
        mov     rcx, qword ptr [rbp-28H]                ; 46F8 _ 48: 8B. 4D, D8
        mov     qword ptr [rbp-40H], rcx                ; 46FC _ 48: 89. 4D, C0
        mov     qword ptr [rbp-38H], rbx                ; 4700 _ 48: 89. 5D, C8
        mov     rax, qword ptr [?_578]                  ; 4704 _ 48: 8B. 05, 0000659D(rel)
        imul    r8d, edi, 10000000                      ; 470B _ 44: 69. C7, 00989680
        mov     edx, 2                                  ; 4712 _ BA, 00000002
        call    qword ptr [rax+58H]                     ; 4717 _ FF. 50, 58
        mov     rsi, rax                                ; 471A _ 48: 89. C6
        test    rsi, rsi                                ; 471D _ 48: 85. F6
        js      Unnamed_1_4514                          ; 4720 _ 78, 32
        mov     rax, qword ptr [?_578]                  ; 4722 _ 48: 8B. 05, 0000657F(rel)
        lea     rdx, ptr [rbp-40H]                      ; 4729 _ 48: 8D. 55, C0
        lea     r8, ptr [rbp-20H]                       ; 472D _ 4C: 8D. 45, E0
        mov     ecx, 2                                  ; 4731 _ B9, 00000002
        call    qword ptr [rax+60H]                     ; 4736 _ FF. 50, 60
        mov     rsi, rax                                ; 4739 _ 48: 89. C6
        test    rsi, rsi                                ; 473C _ 48: 85. F6
        js      Unnamed_1_4514                          ; 473F _ 78, 13
        mov     rax, qword ptr [rbp-20H]                ; 4741 _ 48: 8B. 45, E0
        test    rax, rax                                ; 4745 _ 48: 85. C0
        jnz     Unnamed_1_4514                          ; 4748 _ 75, 0A
        mov     rsi, 8000000000000012H                  ; 474A _ 48: BE, 8000000000000012
Unnamed_1_4514:
        mov     rcx, qword ptr [rbp-28H]                ; 4754 _ 48: 8B. 4D, D8
        mov     rax, qword ptr [?_578]                  ; 4758 _ 48: 8B. 05, 00006549(rel)
        call    qword ptr [rax+70H]                     ; 475F _ FF. 50, 70
?_254:  mov     rax, rsi                                ; 4762 _ 48: 89. F0
        add     rsp, 88                                 ; 4765 _ 48: 83. C4, 58
        pop     rbx                                     ; 4769 _ 5B
        pop     rdi                                     ; 476A _ 5F
        pop     rsi                                     ; 476B _ 5E
        pop     rbp                                     ; 476C _ 5D
        ret                                             ; 476D _ C3

?_255   LABEL NEAR
        push    rbp                                     ; 476E _ 55
        mov     rbp, rsp                                ; 476F _ 48: 89. E5
        push    rsi                                     ; 4772 _ 56
        sub     rsp, 40                                 ; 4773 _ 48: 83. EC, 28
        mov     rax, qword ptr [?_578]                  ; 4777 _ 48: 8B. 05, 0000652A(rel)
        lea     rcx, ptr [?_519]                        ; 477E _ 48: 8D. 0D, 00005D07(rel)
        lea     r8, ptr [rbp-10H]                       ; 4785 _ 4C: 8D. 45, F0
        xor     edx, edx                                ; 4789 _ 31. D2
        call    qword ptr [rax+140H]                    ; 478B _ FF. 90, 00000140
        mov     rsi, rax                                ; 4791 _ 48: 89. C6
        test    rsi, rsi                                ; 4794 _ 48: 85. F6
        js      Unnamed_1_4588                          ; 4797 _ 78, 2F
        mov     rax, qword ptr [rbp-10H]                ; 4799 _ 48: 8B. 45, F0
        mov     rcx, qword ptr [rax]                    ; 479D _ 48: 8B. 08
        test    rcx, rcx                                ; 47A0 _ 48: 85. C9
        jz      Unnamed_1_4588                          ; 47A3 _ 74, 23
        mov     edx, 5                                  ; 47A5 _ BA, 00000005
        call    Unnamed_1_4478                          ; 47AA _ E8, FFFFFF09
        mov     rsi, rax                                ; 47AF _ 48: 89. C6
        test    rsi, rsi                                ; 47B2 _ 48: 85. F6
        js      Unnamed_1_4588                          ; 47B5 _ 78, 11
        mov     rax, qword ptr [rbp-10H]                ; 47B7 _ 48: 8B. 45, F0
        mov     rcx, qword ptr [rax]                    ; 47BB _ 48: 8B. 08
        mov     rax, qword ptr [?_578]                  ; 47BE _ 48: 8B. 05, 000064E3(rel)
        call    qword ptr [rax+68H]                     ; 47C5 _ FF. 50, 68
Unnamed_1_4588:
        mov     rax, rsi                                ; 47C8 _ 48: 89. F0
        add     rsp, 40                                 ; 47CB _ 48: 83. C4, 28
        pop     rsi                                     ; 47CF _ 5E
        pop     rbp                                     ; 47D0 _ 5D
        ret                                             ; 47D1 _ C3

Unnamed_1_4592 LABEL NEAR
        push    rbp                                     ; 47D2 _ 55
        mov     rbp, rsp                                ; 47D3 _ 48: 89. E5
        push    rsi                                     ; 47D6 _ 56
        sub     rsp, 56                                 ; 47D7 _ 48: 83. EC, 38
        mov     esi, ecx                                ; 47DB _ 89. CE
        mov     byte ptr [rbp-9H], dl                   ; 47DD _ 88. 55, F7
        mov     rax, qword ptr [?_560]                  ; 47E0 _ 48: 8B. 05, 00006449(rel)
        test    rax, rax                                ; 47E7 _ 48: 85. C0
        jnz     ?_256                                   ; 47EA _ 75, 0C
        call    Unnamed_1_630C                          ; 47EC _ E8, 00001D5B
        mov     qword ptr [?_560], rax                  ; 47F1 _ 48: 89. 05, 00006438(rel)
?_256:  lea     rcx, ptr [rbp-9H]                       ; 47F8 _ 48: 8D. 4D, F7
        mov     qword ptr [rsp+20H], rcx                ; 47FC _ 48: 89. 4C 24, 20
        movzx   r8d, si                                 ; 4801 _ 44: 0F B7. C6
        mov     rcx, rax                                ; 4805 _ 48: 89. C1
        xor     edx, edx                                ; 4808 _ 31. D2
        mov     r9d, 1                                  ; 480A _ 41: B9, 00000001
        call    qword ptr [rax+30H]                     ; 4810 _ FF. 50, 30
        add     rsp, 56                                 ; 4813 _ 48: 83. C4, 38
        pop     rsi                                     ; 4817 _ 5E
        pop     rbp                                     ; 4818 _ 5D
        ret                                             ; 4819 _ C3

Unnamed_1_45DA LABEL NEAR
        push    rbp                                     ; 481A _ 55
        mov     rbp, rsp                                ; 481B _ 48: 89. E5
        sub     rsp, 32                                 ; 481E _ 48: 83. EC, 20
        mov     ecx, 102                                ; 4822 _ B9, 00000066
        mov     edx, 129                                ; 4827 _ BA, 00000081
        call    Unnamed_1_4592                          ; 482C _ E8, FFFFFFA1
        mov     rax, qword ptr [?_578]                  ; 4831 _ 48: 8B. 05, 00006470(rel)
        mov     ecx, 20                                 ; 4838 _ B9, 00000014
        call    qword ptr [rax+0F8H]                    ; 483D _ FF. 90, 000000F8
        mov     ecx, 98                                 ; 4843 _ B9, 00000062
        mov     edx, 16                                 ; 4848 _ BA, 00000010
        call    Unnamed_1_4592                          ; 484D _ E8, FFFFFF80
        mov     rax, qword ptr [?_578]                  ; 4852 _ 48: 8B. 05, 0000644F(rel)
        mov     ecx, 20                                 ; 4859 _ B9, 00000014
        call    qword ptr [rax+0F8H]                    ; 485E _ FF. 90, 000000F8
        mov     ecx, 98                                 ; 4864 _ B9, 00000062
        mov     edx, 5                                  ; 4869 _ BA, 00000005
        call    Unnamed_1_4592                          ; 486E _ E8, FFFFFF5F
        mov     rax, qword ptr [?_578]                  ; 4873 _ 48: 8B. 05, 0000642E(rel)
        mov     ecx, 20                                 ; 487A _ B9, 00000014
        add     rsp, 32                                 ; 487F _ 48: 83. C4, 20
        pop     rbp                                     ; 4883 _ 5D
        jmp     qword ptr [rax+0F8H]                    ; 4884 _ FF. A0, 000000F8

?_257   LABEL NEAR
        push    rbp                                     ; 488A _ 55
        mov     rbp, rsp                                ; 488B _ 48: 89. E5
        sub     rsp, 48                                 ; 488E _ 48: 83. EC, 30
        mov     byte ptr [rbp-1H], 1                    ; 4892 _ C6. 45, FF, 01
        mov     byte ptr [rbp-2H], 1                    ; 4896 _ C6. 45, FE, 01
        lea     rdx, ptr [rbp-1H]                       ; 489A _ 48: 8D. 55, FF
        mov     ecx, 1194547012                         ; 489E _ B9, 47335744
        call    Unnamed_1_46A1                          ; 48A3 _ E8, 00000039
        lea     rdx, ptr [rbp-2H]                       ; 48A8 _ 48: 8D. 55, FE
        mov     ecx, 1096110159                         ; 48AC _ B9, 4155504F
        call    Unnamed_1_46A1                          ; 48B1 _ E8, 0000002B
        test    rax, rax                                ; 48B6 _ 48: 85. C0
        jns     ?_258                                   ; 48B9 _ 79, 04
        xor     ecx, ecx                                ; 48BB _ 31. C9
        jmp     ?_259                                   ; 48BD _ EB, 0A

?_258:  call    Unnamed_1_45DA                          ; 48BF _ E8, FFFFFF56
        mov     ecx, 2                                  ; 48C4 _ B9, 00000002
?_259:  mov     rax, qword ptr [?_579]                  ; 48C9 _ 48: 8B. 05, 000063E0(rel)
        xor     edx, edx                                ; 48D0 _ 31. D2
        xor     r8d, r8d                                ; 48D2 _ 45: 31. C0
        xor     r9d, r9d                                ; 48D5 _ 45: 31. C9
        call    qword ptr [rax+68H]                     ; 48D8 _ FF. 50, 68
        add     rsp, 48                                 ; 48DB _ 48: 83. C4, 30
        pop     rbp                                     ; 48DF _ 5D
        ret                                             ; 48E0 _ C3

Unnamed_1_46A1 LABEL NEAR
        push    rbp                                     ; 48E1 _ 55
        mov     rbp, rsp                                ; 48E2 _ 48: 89. E5
        push    rsi                                     ; 48E5 _ 56
        push    rdi                                     ; 48E6 _ 57
        sub     rsp, 32                                 ; 48E7 _ 48: 83. EC, 20
        mov     rsi, rdx                                ; 48EB _ 48: 89. D6
        mov     edi, ecx                                ; 48EE _ 89. CF
        mov     rcx, qword ptr [?_561]                  ; 48F0 _ 48: 8B. 0D, 00006341(rel)
        test    rcx, rcx                                ; 48F7 _ 48: 85. C9
        jnz     ?_260                                   ; 48FA _ 75, 29
        mov     rax, qword ptr [?_578]                  ; 48FC _ 48: 8B. 05, 000063A5(rel)
        lea     rcx, ptr [?_522]                        ; 4903 _ 48: 8D. 0D, 00005BB2(rel)
        lea     r8, ptr [?_561]                         ; 490A _ 4C: 8D. 05, 00006327(rel)
        xor     edx, edx                                ; 4911 _ 31. D2
        call    qword ptr [rax+140H]                    ; 4913 _ FF. 90, 00000140
        test    rax, rax                                ; 4919 _ 48: 85. C0
        jnz     ?_261                                   ; 491C _ 75, 1F
        mov     rcx, qword ptr [?_561]                  ; 491E _ 48: 8B. 0D, 00006313(rel)
?_260:  mov     rax, qword ptr [rcx+10H]                ; 4925 _ 48: 8B. 41, 10
        mov     edx, edi                                ; 4929 _ 89. FA
        mov     r8d, 1                                  ; 492B _ 41: B8, 00000001
        mov     r9, rsi                                 ; 4931 _ 49: 89. F1
        add     rsp, 32                                 ; 4934 _ 48: 83. C4, 20
        pop     rdi                                     ; 4938 _ 5F
        pop     rsi                                     ; 4939 _ 5E
        pop     rbp                                     ; 493A _ 5D
        jmp     rax                                     ; 493B _ FF. E0

?_261   LABEL NEAR
        add     rsp, 32                                 ; 493D _ 48: 83. C4, 20
        pop     rdi                                     ; 4941 _ 5F
        pop     rsi                                     ; 4942 _ 5E
        pop     rbp                                     ; 4943 _ 5D
        ret                                             ; 4944 _ C3

Unnamed_1_4705 LABEL NEAR
        push    rbp                                     ; 4945 _ 55
        mov     rbp, rsp                                ; 4946 _ 48: 89. E5
        sub     rsp, 48                                 ; 4949 _ 48: 83. EC, 30
        test    cl, cl                                  ; 494D _ 84. C9
        setne   byte ptr [rbp-1H]                       ; 494F _ 0F 95. 45, FF
        lea     rdx, ptr [rbp-1H]                       ; 4953 _ 48: 8D. 55, FF
        mov     ecx, 1313820738                         ; 4957 _ B9, 4E4F5042
        call    Unnamed_1_46A1                          ; 495C _ E8, FFFFFF80
        add     rsp, 48                                 ; 4961 _ 48: 83. C4, 30
        pop     rbp                                     ; 4965 _ 5D
        ret                                             ; 4966 _ C3

Unnamed_1_4727 LABEL NEAR
        push    rbp                                     ; 4967 _ 55
        mov     rbp, rsp                                ; 4968 _ 48: 89. E5
        push    r15                                     ; 496B _ 41: 57
        push    r14                                     ; 496D _ 41: 56
        push    rsi                                     ; 496F _ 56
        push    rdi                                     ; 4970 _ 57
        push    rbx                                     ; 4971 _ 53
        sub     rsp, 120                                ; 4972 _ 48: 83. EC, 78
        mov     rax, qword ptr [?_473]                  ; 4976 _ 48: 8B. 05, 00003733(rel)
        mov     qword ptr [rbp-58H], rax                ; 497D _ 48: 89. 45, A8
        mov     rax, qword ptr [?_472]                  ; 4981 _ 48: 8B. 05, 00003720(rel)
        mov     qword ptr [rbp-60H], rax                ; 4988 _ 48: 89. 45, A0
        mov     rax, qword ptr [?_578]                  ; 498C _ 48: 8B. 05, 00006315(rel)
        lea     rcx, ptr [?_511]                        ; 4993 _ 48: 8D. 0D, 00005A72(rel)
        xor     esi, esi                                ; 499A _ 31. F6
        lea     r8, ptr [rbp-40H]                       ; 499C _ 4C: 8D. 45, C0
        xor     edx, edx                                ; 49A0 _ 31. D2
        call    qword ptr [rax+140H]                    ; 49A2 _ FF. 90, 00000140
        test    rax, rax                                ; 49A8 _ 48: 85. C0
        js      Unnamed_1_47D0                          ; 49AB _ 78, 63
        mov     qword ptr [rbp-50H], 0                  ; 49AD _ 48: C7. 45, B0, 00000000
        mov     qword ptr [rbp-48H], 0                  ; 49B5 _ 48: C7. 45, B8, 00000000
        lea     r14, ptr [rbp-50H]                      ; 49BD _ 4C: 8D. 75, B0
        lea     r15, ptr [rbp-48H]                      ; 49C1 _ 4C: 8D. 7D, B8
        lea     rdi, ptr [rbp-60H]                      ; 49C5 _ 48: 8D. 7D, A0
?_262:  mov     rax, qword ptr [rbp-40H]                ; 49C9 _ 48: 8B. 45, C0
        mov     rcx, rax                                ; 49CD _ 48: 89. C1
        mov     rdx, r14                                ; 49D0 _ 4C: 89. F2
        xor     r8d, r8d                                ; 49D3 _ 45: 31. C0
        mov     r9, r15                                 ; 49D6 _ 4D: 89. F9
        call    qword ptr [rax+8H]                      ; 49D9 _ FF. 50, 08
        mov     rbx, rax                                ; 49DC _ 48: 89. C3
        mov     rsi, qword ptr [rbp-48H]                ; 49DF _ 48: 8B. 75, B8
        cmp     qword ptr [rsi+28H], 4                  ; 49E3 _ 48: 83. 7E, 28, 04
        jnz     Unnamed_1_47C0                          ; 49E8 _ 75, 16
        lea     rcx, ptr [rsi+8H]                       ; 49EA _ 48: 8D. 4E, 08
        mov     rdx, rdi                                ; 49EE _ 48: 89. FA
        call    Unnamed_1_1FD                           ; 49F1 _ E8, FFFFBA47
        test    al, al                                  ; 49F6 _ 84. C0
        jz      Unnamed_1_47C0                          ; 49F8 _ 74, 06
        cmp     dword ptr [rsi+54H], 2                  ; 49FA _ 83. 7E, 54, 02
        jz      ?_263                                   ; 49FE _ 74, 20
Unnamed_1_47C0:
        xor     esi, esi                                ; 4A00 _ 31. F6
        test    rbx, rbx                                ; 4A02 _ 48: 85. DB
        js      Unnamed_1_47D0                          ; 4A05 _ 78, 09
        mov     rax, qword ptr [rbp-50H]                ; 4A07 _ 48: 8B. 45, B0
        test    rax, rax                                ; 4A0B _ 48: 85. C0
        jnz     ?_262                                   ; 4A0E _ 75, B9
Unnamed_1_47D0:
        mov     rax, rsi                                ; 4A10 _ 48: 89. F0
        add     rsp, 120                                ; 4A13 _ 48: 83. C4, 78
        pop     rbx                                     ; 4A17 _ 5B
        pop     rdi                                     ; 4A18 _ 5F
        pop     rsi                                     ; 4A19 _ 5E
        pop     r14                                     ; 4A1A _ 41: 5E
        pop     r15                                     ; 4A1C _ 41: 5F
        pop     rbp                                     ; 4A1E _ 5D
        ret                                             ; 4A1F _ C3

?_263   LABEL NEAR
        mov     di, word ptr [rsi+5AH]                  ; 4A20 _ 66: 8B. 7E, 5A
        mov     rdx, qword ptr [rbp-48H]                ; 4A24 _ 48: 8B. 55, B8
        mov     qword ptr [rbp-30H], 0                  ; 4A28 _ 48: C7. 45, D0, 00000000
        add     rdx, 24                                 ; 4A30 _ 48: 83. C2, 18
        lea     rcx, ptr [rbp-30H]                      ; 4A34 _ 48: 8D. 4D, D0
        call    Unnamed_1_60C                           ; 4A38 _ E8, FFFFBE0F
        xor     esi, esi                                ; 4A3D _ 31. F6
        test    ax, ax                                  ; 4A3F _ 66: 85. C0
        je      Unnamed_1_4893                          ; 4A42 _ 0F 84, 0000008B
        mov     qword ptr [rbp-38H], 0                  ; 4A48 _ 48: C7. 45, C8, 00000000
        mov     rsi, qword ptr [rbp-30H]                ; 4A50 _ 48: 8B. 75, D0
        lea     r15, ptr [rbp-38H]                      ; 4A54 _ 4C: 8D. 7D, C8
        mov     qword ptr [rsp+28H], r15                ; 4A58 _ 4C: 89. 7C 24, 28
        mov     qword ptr [rsp+30H], 0                  ; 4A5D _ 48: C7. 44 24, 30, 00000000
        mov     qword ptr [rsp+20H], 0                  ; 4A66 _ 48: C7. 44 24, 20, 00000000
        movzx   ebx, ax                                 ; 4A6F _ 0F B7. D8
        movzx   r14d, di                                ; 4A72 _ 44: 0F B7. F7
        mov     rcx, rsi                                ; 4A76 _ 48: 89. F1
        mov     edx, ebx                                ; 4A79 _ 89. DA
        mov     r8d, r14d                               ; 4A7B _ 45: 89. F0
        xor     r9d, r9d                                ; 4A7E _ 45: 31. C9
        call    qword ptr [rsi+50H]                     ; 4A81 _ FF. 56, 50
        mov     rcx, qword ptr [rbp-38H]                ; 4A84 _ 48: 8B. 4D, C8
        call    Unnamed_1_FF                            ; 4A88 _ E8, FFFFB8B2
        mov     rdi, rax                                ; 4A8D _ 48: 89. C7
        xor     esi, esi                                ; 4A90 _ 31. F6
        test    rdi, rdi                                ; 4A92 _ 48: 85. FF
        jz      Unnamed_1_4893                          ; 4A95 _ 74, 3C
        mov     rax, qword ptr [rbp-30H]                ; 4A97 _ 48: 8B. 45, D0
        mov     qword ptr [rsp+30H], rdi                ; 4A9B _ 48: 89. 7C 24, 30
        mov     qword ptr [rsp+28H], r15                ; 4AA0 _ 4C: 89. 7C 24, 28
        mov     qword ptr [rsp+20H], 0                  ; 4AA5 _ 48: C7. 44 24, 20, 00000000
        mov     rcx, rax                                ; 4AAE _ 48: 89. C1
        mov     edx, ebx                                ; 4AB1 _ 89. DA
        mov     r8d, r14d                               ; 4AB3 _ 45: 89. F0
        xor     r9d, r9d                                ; 4AB6 _ 45: 31. C9
        call    qword ptr [rax+50H]                     ; 4AB9 _ FF. 50, 50
        test    rax, rax                                ; 4ABC _ 48: 85. C0
        mov     rsi, rdi                                ; 4ABF _ 48: 89. FE
        jz      Unnamed_1_4893                          ; 4AC2 _ 74, 0F
        mov     rax, qword ptr [?_578]                  ; 4AC4 _ 48: 8B. 05, 000061DD(rel)
        mov     rcx, rdi                                ; 4ACB _ 48: 89. F9
        call    qword ptr [rax+48H]                     ; 4ACE _ FF. 50, 48
        xor     esi, esi                                ; 4AD1 _ 31. F6
Unnamed_1_4893:
        mov     rcx, rsi                                ; 4AD3 _ 48: 89. F1
        mov     edx, 32                                 ; 4AD6 _ BA, 00000020
        call    Unnamed_1_29F                           ; 4ADB _ E8, FFFFB9FF
        jmp     Unnamed_1_47D0                          ; 4AE0 _ E9, FFFFFF2B

?_264   LABEL NEAR
        push    rbp                                     ; 4AE5 _ 55
        mov     rbp, rsp                                ; 4AE6 _ 48: 89. E5
        sub     rsp, 32                                 ; 4AE9 _ 48: 83. EC, 20
        call    Unnamed_1_4727                          ; 4AED _ E8, FFFFFE75
        test    rax, rax                                ; 4AF2 _ 48: 85. C0
        jnz     Unnamed_1_48CA                          ; 4AF5 _ 75, 13
        lea     rcx, ptr [?_474]                        ; 4AF7 _ 48: 8D. 0D, 000035BA(rel)
        call    Unnamed_1_B95                           ; 4AFE _ E8, FFFFC2D2
        mov     ecx, 666                                ; 4B03 _ B9, 0000029A
        jmp     ?_267                                   ; 4B08 _ EB, 4E

Unnamed_1_48CA:
        cmp     word ptr [rax], 46                      ; 4B0A _ 66: 83. 38, 2E
        lea     rax, ptr [rax+2H]                       ; 4B0E _ 48: 8D. 40, 02
        jnz     Unnamed_1_48CA                          ; 4B12 _ 75, F6
        xor     edx, edx                                ; 4B14 _ 31. D2
?_265:  cmp     word ptr [rax], 46                      ; 4B16 _ 66: 83. 38, 2E
        lea     rax, ptr [rax+2H]                       ; 4B1A _ 48: 8D. 40, 02
        jnz     ?_265                                   ; 4B1E _ 75, F6
        mov     r8, -55                                 ; 4B20 _ 49: C7. C0, FFFFFFC9
        mov     r9, rdx                                 ; 4B27 _ 49: 89. D1
        mov     rcx, rdx                                ; 4B2A _ 48: 89. D1
?_266:  movzx   r11d, word ptr [rax+rdx]                ; 4B2D _ 44: 0F B7. 1C 10
        cmp     r11, 64                                 ; 4B32 _ 49: 83. FB, 40
        mov     r10, -48                                ; 4B36 _ 49: C7. C2, FFFFFFD0
        cmova   r10, r8                                 ; 4B3D _ 4D: 0F 47. D0
        shl     rcx, 4                                  ; 4B41 _ 48: C1. E1, 04
        add     rcx, r11                                ; 4B45 _ 4C: 01. D9
        add     rcx, r10                                ; 4B48 _ 4C: 01. D1
        add     rdx, 2                                  ; 4B4B _ 48: 83. C2, 02
        inc     r9                                      ; 4B4F _ 49: FF. C1
        cmp     r9, 4                                   ; 4B52 _ 49: 83. F9, 04
        jnz     ?_266                                   ; 4B56 _ 75, D5
?_267:  mov     rax, rcx                                ; 4B58 _ 48: 89. C8
        add     rsp, 32                                 ; 4B5B _ 48: 83. C4, 20
        pop     rbp                                     ; 4B5F _ 5D
        ret                                             ; 4B60 _ C3

Unnamed_1_4921 LABEL NEAR
        push    rbp                                     ; 4B61 _ 55
        mov     rbp, rsp                                ; 4B62 _ 48: 89. E5
        push    r14                                     ; 4B65 _ 41: 56
        push    rsi                                     ; 4B67 _ 56
        push    rdi                                     ; 4B68 _ 57
        push    rbx                                     ; 4B69 _ 53
        sub     rsp, 32                                 ; 4B6A _ 48: 83. EC, 20
        mov     rdi, r9                                 ; 4B6E _ 4C: 89. CF
        mov     r14, r8                                 ; 4B71 _ 4D: 89. C6
        mov     rsi, rdx                                ; 4B74 _ 48: 89. D6
        mov     rbx, rcx                                ; 4B77 _ 48: 89. CB
        lea     rcx, ptr [rbx+rsi]                      ; 4B7A _ 48: 8D. 0C 33
        mov     rax, rbx                                ; 4B7E _ 48: 89. D8
        jmp     ?_268                                   ; 4B81 _ EB, 03

Unnamed_1_4943:
        inc     rax                                     ; 4B83 _ 48: FF. C0
?_268:  cmp     rax, rcx                                ; 4B86 _ 48: 39. C8
        jnc     Unnamed_1_4957                          ; 4B89 _ 73, 0C
        mov     dl, byte ptr [rax]                      ; 4B8B _ 8A. 10
        cmp     dl, 10                                  ; 4B8D _ 80. FA, 0A
        jz      Unnamed_1_4957                          ; 4B90 _ 74, 05
        cmp     dl, 13                                  ; 4B92 _ 80. FA, 0D
        jnz     Unnamed_1_4943                          ; 4B95 _ 75, EC
Unnamed_1_4957:
        lea     rcx, ptr [rsi+rbx-1H]                   ; 4B97 _ 48: 8D. 4C 1E, FF
        cmp     rax, rcx                                ; 4B9C _ 48: 39. C8
        jnc     ?_270                                   ; 4B9F _ 73, 1D
        cmp     byte ptr [rax], 13                      ; 4BA1 _ 80. 38, 0D
        jnz     Unnamed_1_4973                          ; 4BA4 _ 75, 0D
        cmp     byte ptr [rax+1H], 10                   ; 4BA6 _ 80. 78, 01, 0A
        jnz     Unnamed_1_4973                          ; 4BAA _ 75, 07
        mov     esi, 2                                  ; 4BAC _ BE, 00000002
        jmp     ?_269                                   ; 4BB1 _ EB, 05

Unnamed_1_4973:
        mov     esi, 1                                  ; 4BB3 _ BE, 00000001
?_269:  sub     rsi, rbx                                ; 4BB8 _ 48: 29. DE
        add     rsi, rax                                ; 4BBB _ 48: 01. C6
?_270:  mov     rdx, qword ptr [rdi]                    ; 4BBE _ 48: 8B. 17
        cmp     rsi, rdx                                ; 4BC1 _ 48: 39. D6
        jbe     ?_271                                   ; 4BC4 _ 76, 0F
        mov     qword ptr [rdi], rsi                    ; 4BC6 _ 48: 89. 37
        mov     rax, 8000000000000005H                  ; 4BC9 _ 48: B8, 8000000000000005
        jmp     ?_272                                   ; 4BD3 _ EB, 2E

?_271:  mov     rax, qword ptr [?_578]                  ; 4BD5 _ 48: 8B. 05, 000060CC(rel)
        mov     rcx, r14                                ; 4BDC _ 4C: 89. F1
        xor     r8d, r8d                                ; 4BDF _ 45: 31. C0
        call    qword ptr [rax+168H]                    ; 4BE2 _ FF. 90, 00000168
        mov     qword ptr [rdi], rsi                    ; 4BE8 _ 48: 89. 37
        mov     rax, qword ptr [?_578]                  ; 4BEB _ 48: 8B. 05, 000060B6(rel)
        mov     rcx, r14                                ; 4BF2 _ 4C: 89. F1
        mov     rdx, rbx                                ; 4BF5 _ 48: 89. DA
        mov     r8, rsi                                 ; 4BF8 _ 49: 89. F0
        call    qword ptr [rax+160H]                    ; 4BFB _ FF. 90, 00000160
        xor     eax, eax                                ; 4C01 _ 31. C0
?_272:  add     rsp, 32                                 ; 4C03 _ 48: 83. C4, 20
        pop     rbx                                     ; 4C07 _ 5B
        pop     rdi                                     ; 4C08 _ 5F
        pop     rsi                                     ; 4C09 _ 5E
        pop     r14                                     ; 4C0A _ 41: 5E
        pop     rbp                                     ; 4C0C _ 5D
        ret                                             ; 4C0D _ C3

Unnamed_1_49CE LABEL NEAR
        push    rsi                                     ; 4C0E _ 56
        mov     r8, rdx                                 ; 4C0F _ 49: 89. D0
        mov     rax, qword ptr [r8]                     ; 4C12 _ 49: 8B. 00
        test    rax, rax                                ; 4C15 _ 48: 85. C0
        je      Unnamed_1_4A77                          ; 4C18 _ 0F 84, 00000099
        lea     r10, ptr [rcx+rax-1H]                   ; 4C1E _ 4C: 8D. 54 01, FF
        mov     rax, 100002600H                         ; 4C23 _ 48: B8, 0000000100002600
        jmp     ?_273                                   ; 4C2D _ EB, 13

Unnamed_1_49EF:
        movzx   edx, byte ptr [r10]                     ; 4C2F _ 41: 0F B6. 12
        cmp     rdx, 32                                 ; 4C33 _ 48: 83. FA, 20
        ja      Unnamed_1_4A10                          ; 4C37 _ 77, 17
        bt      rax, rdx                                ; 4C39 _ 48: 0F A3. D0
        jnc     Unnamed_1_4A10                          ; 4C3D _ 73, 11
        dec     r10                                     ; 4C3F _ 49: FF. CA
?_273:  cmp     r10, rcx                                ; 4C42 _ 49: 39. CA
        jnc     Unnamed_1_49EF                          ; 4C45 _ 73, E8
        mov     qword ptr [r8], 0                       ; 4C47 _ 49: C7. 00, 00000000
        jmp     Unnamed_1_4A77                          ; 4C4E _ EB, 67

Unnamed_1_4A10:
        mov     r9d, 1                                  ; 4C50 _ 41: B9, 00000001
        sub     r9, rcx                                 ; 4C56 _ 49: 29. C9
        add     r9, r10                                 ; 4C59 _ 4D: 01. D1
        xor     eax, eax                                ; 4C5C _ 31. C0
        mov     r11, 100002600H                         ; 4C5E _ 49: BB, 0000000100002600
        jmp     ?_274                                   ; 4C68 _ EB, 03

Unnamed_1_4A2A:
        inc     rax                                     ; 4C6A _ 48: FF. C0
?_274:  lea     rdx, ptr [rcx+rax]                      ; 4C6D _ 48: 8D. 14 01
        cmp     rdx, r10                                ; 4C71 _ 4C: 39. D2
        ja      Unnamed_1_4A45                          ; 4C74 _ 77, 0F
        movzx   esi, byte ptr [rdx]                     ; 4C76 _ 0F B6. 32
        cmp     rsi, 32                                 ; 4C79 _ 48: 83. FE, 20
        ja      Unnamed_1_4A45                          ; 4C7D _ 77, 06
        bt      r11, rsi                                ; 4C7F _ 49: 0F A3. F3
        jc      Unnamed_1_4A2A                          ; 4C83 _ 72, E5
Unnamed_1_4A45:
        test    rax, rax                                ; 4C85 _ 48: 85. C0
        jnz     ?_275                                   ; 4C88 _ 75, 05
        mov     qword ptr [r8], r9                      ; 4C8A _ 4D: 89. 08
        jmp     Unnamed_1_4A77                          ; 4C8D _ EB, 28

?_275:  lea     rax, ptr [r10+1H]                       ; 4C8F _ 49: 8D. 42, 01
        sub     rax, rdx                                ; 4C93 _ 48: 29. D0
        mov     qword ptr [r8], rax                     ; 4C96 _ 49: 89. 00
        cmp     rdx, r10                                ; 4C99 _ 4C: 39. D2
        ja      Unnamed_1_4A77                          ; 4C9C _ 77, 19
        xor     eax, eax                                ; 4C9E _ 31. C0
?_276:  mov     r8b, byte ptr [rdx+rax]                 ; 4CA0 _ 44: 8A. 04 02
        mov     byte ptr [rcx], r8b                     ; 4CA4 _ 44: 88. 01
        lea     r8, ptr [rdx+rax+1H]                    ; 4CA7 _ 4C: 8D. 44 02, 01
        inc     rax                                     ; 4CAC _ 48: FF. C0
        inc     rcx                                     ; 4CAF _ 48: FF. C1
        cmp     r8, r10                                 ; 4CB2 _ 4D: 39. D0
        jbe     ?_276                                   ; 4CB5 _ 76, E9
Unnamed_1_4A77:
        pop     rsi                                     ; 4CB7 _ 5E
        ret                                             ; 4CB8 _ C3

Unnamed_1_4A79 LABEL NEAR
        push    rbp                                     ; 4CB9 _ 55
        mov     rbp, rsp                                ; 4CBA _ 48: 89. E5
        push    r14                                     ; 4CBD _ 41: 56
        push    rsi                                     ; 4CBF _ 56
        push    rdi                                     ; 4CC0 _ 57
        push    rbx                                     ; 4CC1 _ 53
        sub     rsp, 32                                 ; 4CC2 _ 48: 83. EC, 20
        mov     rdi, r8                                 ; 4CC6 _ 4C: 89. C7
        mov     rsi, rdx                                ; 4CC9 _ 48: 89. D6
        mov     r14, rcx                                ; 4CCC _ 49: 89. CE
        mov     ecx, 16                                 ; 4CCF _ B9, 00000010
        call    Unnamed_1_CB                            ; 4CD4 _ E8, FFFFB632
        mov     rbx, rax                                ; 4CD9 _ 48: 89. C3
        mov     rax, 8000000000000009H                  ; 4CDC _ 48: B8, 8000000000000009
        test    rbx, rbx                                ; 4CE6 _ 48: 85. DB
        jz      Unnamed_1_4AEF                          ; 4CE9 _ 74, 44
        mov     rax, qword ptr [rdi]                    ; 4CEB _ 48: 8B. 07
        mov     qword ptr [rbx+8H], rax                 ; 4CEE _ 48: 89. 43, 08
        mov     qword ptr [rdi], rbx                    ; 4CF2 _ 48: 89. 1F
        lea     rcx, ptr [rsi+1H]                       ; 4CF5 _ 48: 8D. 4E, 01
        call    Unnamed_1_CB                            ; 4CF9 _ E8, FFFFB60D
        mov     rcx, rax                                ; 4CFE _ 48: 89. C1
        mov     qword ptr [rbx], rcx                    ; 4D01 _ 48: 89. 0B
        mov     rax, 8000000000000009H                  ; 4D04 _ 48: B8, 8000000000000009
        test    rcx, rcx                                ; 4D0E _ 48: 85. C9
        jz      Unnamed_1_4AEF                          ; 4D11 _ 74, 1C
        mov     rax, qword ptr [?_578]                  ; 4D13 _ 48: 8B. 05, 00005F8E(rel)
        mov     rdx, r14                                ; 4D1A _ 4C: 89. F2
        mov     r8, rsi                                 ; 4D1D _ 49: 89. F0
        call    qword ptr [rax+160H]                    ; 4D20 _ FF. 90, 00000160
        mov     rax, qword ptr [rbx]                    ; 4D26 _ 48: 8B. 03
        mov     byte ptr [rax+rsi], 0                   ; 4D29 _ C6. 04 30, 00
        xor     eax, eax                                ; 4D2D _ 31. C0
Unnamed_1_4AEF:
        add     rsp, 32                                 ; 4D2F _ 48: 83. C4, 20
        pop     rbx                                     ; 4D33 _ 5B
        pop     rdi                                     ; 4D34 _ 5F
        pop     rsi                                     ; 4D35 _ 5E
        pop     r14                                     ; 4D36 _ 41: 5E
        pop     rbp                                     ; 4D38 _ 5D
        ret                                             ; 4D39 _ C3

Unnamed_1_4AFA LABEL NEAR
        push    rbp                                     ; 4D3A _ 55
        mov     rbp, rsp                                ; 4D3B _ 48: 89. E5
        push    r14                                     ; 4D3E _ 41: 56
        push    rsi                                     ; 4D40 _ 56
        push    rdi                                     ; 4D41 _ 57
        push    rbx                                     ; 4D42 _ 53
        sub     rsp, 48                                 ; 4D43 _ 48: 83. EC, 30
        mov     r14, r8                                 ; 4D47 _ 4D: 89. C6
        mov     rsi, rcx                                ; 4D4A _ 48: 89. CE
        lea     rcx, ptr [rdx+rsi-1H]                   ; 4D4D _ 48: 8D. 4C 32, FF
        xor     eax, eax                                ; 4D52 _ 31. C0
        cmp     rcx, rsi                                ; 4D54 _ 48: 39. F1
        jbe     Unnamed_1_4BC6                          ; 4D57 _ 0F 86, 000000A9
        cmp     byte ptr [rcx], 93                      ; 4D5D _ 80. 39, 5D
        jz      Unnamed_1_4B29                          ; 4D60 _ 74, 07
        cmp     rcx, rsi                                ; 4D62 _ 48: 39. F1
        jbe     Unnamed_1_4B29                          ; 4D65 _ 76, 02
?_277:  jmp     ?_277                                   ; 4D67 _ EB, FE

Unnamed_1_4B29:
        add     rdx, -2                                 ; 4D69 _ 48: 83. C2, FE
        mov     qword ptr [rbp-28H], rdx                ; 4D6D _ 48: 89. 55, D8
        inc     rsi                                     ; 4D71 _ 48: FF. C6
        lea     rdx, ptr [rbp-28H]                      ; 4D74 _ 48: 8D. 55, D8
        mov     rcx, rsi                                ; 4D78 _ 48: 89. F1
        call    Unnamed_1_49CE                          ; 4D7B _ E8, FFFFFE8E
        xor     eax, eax                                ; 4D80 _ 31. C0
        mov     rbx, qword ptr [rbp-28H]                ; 4D82 _ 48: 8B. 5D, D8
        test    rbx, rbx                                ; 4D86 _ 48: 85. DB
        jz      Unnamed_1_4BC6                          ; 4D89 _ 74, 7B
        mov     ecx, 40                                 ; 4D8B _ B9, 00000028
        call    Unnamed_1_CB                            ; 4D90 _ E8, FFFFB576
        mov     rdi, rax                                ; 4D95 _ 48: 89. C7
        mov     rax, 8000000000000009H                  ; 4D98 _ 48: B8, 8000000000000009
        test    rdi, rdi                                ; 4DA2 _ 48: 85. FF
        jz      Unnamed_1_4BC6                          ; 4DA5 _ 74, 5F
        mov     qword ptr [rdi], 0                      ; 4DA7 _ 48: C7. 07, 00000000
        mov     qword ptr [rdi+8H], rbx                 ; 4DAE _ 48: 89. 5F, 08
        mov     qword ptr [rdi+10H], 0                  ; 4DB2 _ 48: C7. 47, 10, 00000000
        mov     qword ptr [rdi+18H], 0                  ; 4DBA _ 48: C7. 47, 18, 00000000
        mov     rax, qword ptr [r14]                    ; 4DC2 _ 49: 8B. 06
        mov     qword ptr [rdi+20H], rax                ; 4DC5 _ 48: 89. 47, 20
        mov     qword ptr [r14], rdi                    ; 4DC9 _ 49: 89. 3E
        lea     rcx, ptr [rbx+1H]                       ; 4DCC _ 48: 8D. 4B, 01
        call    Unnamed_1_CB                            ; 4DD0 _ E8, FFFFB536
        mov     rcx, rax                                ; 4DD5 _ 48: 89. C1
        mov     rax, 8000000000000009H                  ; 4DD8 _ 48: B8, 8000000000000009
        mov     qword ptr [rdi], rcx                    ; 4DE2 _ 48: 89. 0F
        test    rcx, rcx                                ; 4DE5 _ 48: 85. C9
        jz      Unnamed_1_4BC6                          ; 4DE8 _ 74, 1C
        mov     rax, qword ptr [?_578]                  ; 4DEA _ 48: 8B. 05, 00005EB7(rel)
        mov     rdx, rsi                                ; 4DF1 _ 48: 89. F2
        mov     r8, rbx                                 ; 4DF4 _ 49: 89. D8
        call    qword ptr [rax+160H]                    ; 4DF7 _ FF. 90, 00000160
        mov     rax, qword ptr [rdi]                    ; 4DFD _ 48: 8B. 07
        mov     byte ptr [rax+rbx], 0                   ; 4E00 _ C6. 04 18, 00
        xor     eax, eax                                ; 4E04 _ 31. C0
Unnamed_1_4BC6:
        add     rsp, 48                                 ; 4E06 _ 48: 83. C4, 30
        pop     rbx                                     ; 4E0A _ 5B
        pop     rdi                                     ; 4E0B _ 5F
        pop     rsi                                     ; 4E0C _ 5E
        pop     r14                                     ; 4E0D _ 41: 5E
        pop     rbp                                     ; 4E0F _ 5D
        ret                                             ; 4E10 _ C3

Unnamed_1_4BD1 LABEL NEAR
        push    rbp                                     ; 4E11 _ 55
        mov     rbp, rsp                                ; 4E12 _ 48: 89. E5
        push    r15                                     ; 4E15 _ 41: 57
        push    r14                                     ; 4E17 _ 41: 56
        push    r13                                     ; 4E19 _ 41: 55
        push    r12                                     ; 4E1B _ 41: 54
        push    rsi                                     ; 4E1D _ 56
        push    rdi                                     ; 4E1E _ 57
        push    rbx                                     ; 4E1F _ 53
        sub     rsp, 40                                 ; 4E20 _ 48: 83. EC, 28
        mov     r15, r8                                 ; 4E24 _ 4D: 89. C7
        mov     r14, rcx                                ; 4E27 _ 49: 89. CE
        lea     rbx, ptr [rdx+r14-1H]                   ; 4E2A _ 4A: 8D. 5C 32, FF
        xor     eax, eax                                ; 4E2F _ 31. C0
        mov     rsi, rax                                ; 4E31 _ 48: 89. C6
        jmp     ?_278                                   ; 4E34 _ EB, 03

Unnamed_1_4BF6:
        inc     rsi                                     ; 4E36 _ 48: FF. C6
?_278:  lea     rcx, ptr [r14+rsi]                      ; 4E39 _ 49: 8D. 0C 36
        cmp     rcx, rbx                                ; 4E3D _ 48: 39. D9
        ja      Unnamed_1_4D7D                          ; 4E40 _ 0F 87, 00000177
        cmp     byte ptr [rcx], 61                      ; 4E46 _ 80. 39, 3D
        jnz     Unnamed_1_4BF6                          ; 4E49 _ 75, EB
        mov     qword ptr [rbp-40H], rsi                ; 4E4B _ 48: 89. 75, C0
        lea     rdx, ptr [rbp-40H]                      ; 4E4F _ 48: 8D. 55, C0
        mov     rcx, r14                                ; 4E53 _ 4C: 89. F1
        call    Unnamed_1_49CE                          ; 4E56 _ E8, FFFFFDB3
        xor     eax, eax                                ; 4E5B _ 31. C0
        mov     rdi, qword ptr [rbp-40H]                ; 4E5D _ 48: 8B. 7D, C0
        test    rdi, rdi                                ; 4E61 _ 48: 85. FF
        je      Unnamed_1_4D7D                          ; 4E64 _ 0F 84, 00000153
        mov     r13, qword ptr [r15]                    ; 4E6A _ 4D: 8B. 2F
        xor     eax, eax                                ; 4E6D _ 31. C0
        test    r13, r13                                ; 4E6F _ 4D: 85. ED
        je      Unnamed_1_4D7D                          ; 4E72 _ 0F 84, 00000145
        mov     ecx, 40                                 ; 4E78 _ B9, 00000028
        call    Unnamed_1_CB                            ; 4E7D _ E8, FFFFB489
        mov     r12, rax                                ; 4E82 _ 49: 89. C4
        mov     rax, 8000000000000009H                  ; 4E85 _ 48: B8, 8000000000000009
        test    r12, r12                                ; 4E8F _ 4D: 85. E4
        je      Unnamed_1_4D7D                          ; 4E92 _ 0F 84, 00000125
        mov     qword ptr [r12], 0                      ; 4E98 _ 49: C7. 04 24, 00000000
        mov     qword ptr [r12+10H], 0                  ; 4EA0 _ 49: C7. 44 24, 10, 00000000
        mov     qword ptr [r12+18H], 0                  ; 4EA9 _ 49: C7. 44 24, 18, 00000000
        mov     rax, qword ptr [r13+8H]                 ; 4EB2 _ 49: 8B. 45, 08
        mov     qword ptr [r12+8H], rax                 ; 4EB6 _ 49: 89. 44 24, 08
        mov     rax, qword ptr [r15]                    ; 4EBB _ 49: 8B. 07
        mov     qword ptr [r12+20H], rax                ; 4EBE _ 49: 89. 44 24, 20
        mov     qword ptr [r15], r12                    ; 4EC3 _ 4D: 89. 27
        mov     rcx, qword ptr [r13+8H]                 ; 4EC6 _ 49: 8B. 4D, 08
        inc     rcx                                     ; 4ECA _ 48: FF. C1
        call    Unnamed_1_CB                            ; 4ECD _ E8, FFFFB439
        mov     rcx, rax                                ; 4ED2 _ 48: 89. C1
        mov     rax, 8000000000000009H                  ; 4ED5 _ 48: B8, 8000000000000009
        mov     qword ptr [r12], rcx                    ; 4EDF _ 49: 89. 0C 24
        test    rcx, rcx                                ; 4EE3 _ 48: 85. C9
        je      Unnamed_1_4D7D                          ; 4EE6 _ 0F 84, 000000D1
        mov     rdx, qword ptr [r13]                    ; 4EEC _ 49: 8B. 55, 00
        mov     r8, qword ptr [r13+8H]                  ; 4EF0 _ 4D: 8B. 45, 08
        mov     rax, qword ptr [?_578]                  ; 4EF4 _ 48: 8B. 05, 00005DAD(rel)
        inc     r8                                      ; 4EFB _ 49: FF. C0
        call    qword ptr [rax+160H]                    ; 4EFE _ FF. 90, 00000160
        lea     rcx, ptr [rdi+1H]                       ; 4F04 _ 48: 8D. 4F, 01
        call    Unnamed_1_CB                            ; 4F08 _ E8, FFFFB3FE
        mov     rcx, rax                                ; 4F0D _ 48: 89. C1
        mov     qword ptr [r12+10H], rcx                ; 4F10 _ 49: 89. 4C 24, 10
        mov     rax, 8000000000000009H                  ; 4F15 _ 48: B8, 8000000000000009
        test    rcx, rcx                                ; 4F1F _ 48: 85. C9
        je      Unnamed_1_4D7D                          ; 4F22 _ 0F 84, 00000095
        mov     r15, rdi                                ; 4F28 _ 49: 89. FF
        lea     rdi, ptr [r14+rsi+1H]                   ; 4F2B _ 49: 8D. 7C 36, 01
        mov     rax, qword ptr [?_578]                  ; 4F30 _ 48: 8B. 05, 00005D71(rel)
        mov     rdx, r14                                ; 4F37 _ 4C: 89. F2
        mov     r8, r15                                 ; 4F3A _ 4D: 89. F8
        call    qword ptr [rax+160H]                    ; 4F3D _ FF. 90, 00000160
        mov     rax, qword ptr [r12+10H]                ; 4F43 _ 49: 8B. 44 24, 10
        mov     byte ptr [rax+r15], 0                   ; 4F48 _ 42: C6. 04 38, 00
        lea     rsi, ptr [r14+rsi+1H]                   ; 4F4D _ 49: 8D. 74 36, 01
        jmp     ?_279                                   ; 4F52 _ EB, 03

Unnamed_1_4D14:
        inc     rdi                                     ; 4F54 _ 48: FF. C7
?_279:  cmp     rdi, rbx                                ; 4F57 _ 48: 39. DF
        ja      ?_280                                   ; 4F5A _ 77, 05
        cmp     byte ptr [rdi], 35                      ; 4F5C _ 80. 3F, 23
        jnz     Unnamed_1_4D14                          ; 4F5F _ 75, F3
?_280:  sub     rdi, rsi                                ; 4F61 _ 48: 29. F7
        mov     qword ptr [rbp-40H], rdi                ; 4F64 _ 48: 89. 7D, C0
        lea     rdx, ptr [rbp-40H]                      ; 4F68 _ 48: 8D. 55, C0
        mov     rcx, rsi                                ; 4F6C _ 48: 89. F1
        call    Unnamed_1_49CE                          ; 4F6F _ E8, FFFFFC9A
        xor     eax, eax                                ; 4F74 _ 31. C0
        mov     rbx, qword ptr [rbp-40H]                ; 4F76 _ 48: 8B. 5D, C0
        test    rbx, rbx                                ; 4F7A _ 48: 85. DB
        jz      Unnamed_1_4D7D                          ; 4F7D _ 74, 3E
        lea     rcx, ptr [rbx+1H]                       ; 4F7F _ 48: 8D. 4B, 01
        call    Unnamed_1_CB                            ; 4F83 _ E8, FFFFB383
        mov     rcx, rax                                ; 4F88 _ 48: 89. C1
        mov     qword ptr [r12+18H], rcx                ; 4F8B _ 49: 89. 4C 24, 18
        mov     rax, 8000000000000009H                  ; 4F90 _ 48: B8, 8000000000000009
        test    rcx, rcx                                ; 4F9A _ 48: 85. C9
        jz      Unnamed_1_4D7D                          ; 4F9D _ 74, 1E
        mov     rax, qword ptr [?_578]                  ; 4F9F _ 48: 8B. 05, 00005D02(rel)
        mov     rdx, rsi                                ; 4FA6 _ 48: 89. F2
        mov     r8, rbx                                 ; 4FA9 _ 49: 89. D8
        call    qword ptr [rax+160H]                    ; 4FAC _ FF. 90, 00000160
        mov     rax, qword ptr [r12+18H]                ; 4FB2 _ 49: 8B. 44 24, 18
        mov     byte ptr [rax+rbx], 0                   ; 4FB7 _ C6. 04 18, 00
        xor     eax, eax                                ; 4FBB _ 31. C0
Unnamed_1_4D7D:
        add     rsp, 40                                 ; 4FBD _ 48: 83. C4, 28
        pop     rbx                                     ; 4FC1 _ 5B
        pop     rdi                                     ; 4FC2 _ 5F
        pop     rsi                                     ; 4FC3 _ 5E
        pop     r12                                     ; 4FC4 _ 41: 5C
        pop     r13                                     ; 4FC6 _ 41: 5D
        pop     r14                                     ; 4FC8 _ 41: 5E
        pop     r15                                     ; 4FCA _ 41: 5F
        pop     rbp                                     ; 4FCC _ 5D
        ret                                             ; 4FCD _ C3

Unnamed_1_4D8E LABEL NEAR
        push    rbp                                     ; 4FCE _ 55
        mov     rbp, rsp                                ; 4FCF _ 48: 89. E5
        push    rsi                                     ; 4FD2 _ 56
        push    rdi                                     ; 4FD3 _ 57
        push    rbx                                     ; 4FD4 _ 53
        sub     rsp, 40                                 ; 4FD5 _ 48: 83. EC, 28
        mov     rsi, rdx                                ; 4FD9 _ 48: 89. D6
        mov     rdi, rcx                                ; 4FDC _ 48: 89. CF
        test    rdi, rdi                                ; 4FDF _ 48: 85. FF
        jnz     Unnamed_1_4DDD                          ; 4FE2 _ 75, 39
?_281:  test    rsi, rsi                                ; 4FE4 _ 48: 85. F6
        jz      ?_284                                   ; 4FE7 _ 74, 2B
?_282:  mov     rcx, qword ptr [rsi]                    ; 4FE9 _ 48: 8B. 0E
        mov     rdi, qword ptr [rsi+8H]                 ; 4FEC _ 48: 8B. 7E, 08
        test    rcx, rcx                                ; 4FF0 _ 48: 85. C9
        jz      ?_283                                   ; 4FF3 _ 74, 0A
        mov     rax, qword ptr [?_578]                  ; 4FF5 _ 48: 8B. 05, 00005CAC(rel)
        call    qword ptr [rax+48H]                     ; 4FFC _ FF. 50, 48
?_283:  mov     rax, qword ptr [?_578]                  ; 4FFF _ 48: 8B. 05, 00005CA2(rel)
        mov     rcx, rsi                                ; 5006 _ 48: 89. F1
        call    qword ptr [rax+48H]                     ; 5009 _ FF. 50, 48
        test    rdi, rdi                                ; 500C _ 48: 85. FF
        mov     rsi, rdi                                ; 500F _ 48: 89. FE
        jnz     ?_282                                   ; 5012 _ 75, D5
?_284:  add     rsp, 40                                 ; 5014 _ 48: 83. C4, 28
        pop     rbx                                     ; 5018 _ 5B
        pop     rdi                                     ; 5019 _ 5F
        pop     rsi                                     ; 501A _ 5E
        pop     rbp                                     ; 501B _ 5D
        ret                                             ; 501C _ C3

Unnamed_1_4DDD LABEL NEAR
        mov     rcx, qword ptr [rdi+10H]                ; 501D _ 48: 8B. 4F, 10
        mov     rbx, qword ptr [rdi+20H]                ; 5021 _ 48: 8B. 5F, 20
        test    rcx, rcx                                ; 5025 _ 48: 85. C9
        jz      ?_285                                   ; 5028 _ 74, 0A
        mov     rax, qword ptr [?_578]                  ; 502A _ 48: 8B. 05, 00005C77(rel)
        call    qword ptr [rax+48H]                     ; 5031 _ FF. 50, 48
?_285:  mov     rcx, qword ptr [rdi]                    ; 5034 _ 48: 8B. 0F
        test    rcx, rcx                                ; 5037 _ 48: 85. C9
        jz      ?_286                                   ; 503A _ 74, 0A
        mov     rax, qword ptr [?_578]                  ; 503C _ 48: 8B. 05, 00005C65(rel)
        call    qword ptr [rax+48H]                     ; 5043 _ FF. 50, 48
?_286:  mov     rcx, qword ptr [rdi+18H]                ; 5046 _ 48: 8B. 4F, 18
        test    rcx, rcx                                ; 504A _ 48: 85. C9
        jz      ?_287                                   ; 504D _ 74, 0A
        mov     rax, qword ptr [?_578]                  ; 504F _ 48: 8B. 05, 00005C52(rel)
        call    qword ptr [rax+48H]                     ; 5056 _ FF. 50, 48
?_287:  mov     rax, qword ptr [?_578]                  ; 5059 _ 48: 8B. 05, 00005C48(rel)
        mov     rcx, rdi                                ; 5060 _ 48: 89. F9
        call    qword ptr [rax+48H]                     ; 5063 _ FF. 50, 48
        test    rbx, rbx                                ; 5066 _ 48: 85. DB
        mov     rdi, rbx                                ; 5069 _ 48: 89. DF
        je      ?_281                                   ; 506C _ 0F 84, FFFFFF72
        jmp     Unnamed_1_4DDD                          ; 5072 _ EB, A9

Unnamed_1_4E34 LABEL NEAR
        push    rbx                                     ; 5074 _ 53
        mov     r10, rdx                                ; 5075 _ 49: 89. D2
        mov     qword ptr [r9], 0                       ; 5078 _ 49: C7. 01, 00000000
        jmp     ?_289                                   ; 507F _ EB, 2E

Unnamed_1_4E41:
        inc     rax                                     ; 5081 _ 48: FF. C0
        inc     rdx                                     ; 5084 _ 48: FF. C2
?_288:  mov     r11b, byte ptr [rdx]                    ; 5087 _ 44: 8A. 1A
        mov     bl, byte ptr [rax]                      ; 508A _ 8A. 18
        test    bl, bl                                  ; 508C _ 84. DB
        jz      Unnamed_1_4E5A                          ; 508E _ 74, 0A
        test    r11b, r11b                              ; 5090 _ 45: 84. DB
        jz      Unnamed_1_4E5A                          ; 5093 _ 74, 05
        cmp     bl, r11b                                ; 5095 _ 44: 38. DB
        jz      Unnamed_1_4E41                          ; 5098 _ 74, E7
Unnamed_1_4E5A:
        cmp     bl, r11b                                ; 509A _ 44: 38. DB
        jnz     Unnamed_1_4E6B                          ; 509D _ 75, 0C
        mov     rax, qword ptr [rcx+10H]                ; 509F _ 48: 8B. 41, 10
        test    rax, rax                                ; 50A3 _ 48: 85. C0
        mov     rdx, r8                                 ; 50A6 _ 4C: 89. C2
        jnz     ?_290                                   ; 50A9 _ 75, 21
Unnamed_1_4E6B:
        mov     rcx, qword ptr [rcx+20H]                ; 50AB _ 48: 8B. 49, 20
?_289:  mov     rax, 800000000000000EH                  ; 50AF _ 48: B8, 800000000000000E
        test    rcx, rcx                                ; 50B9 _ 48: 85. C9
        jz      ?_291                                   ; 50BC _ 74, 2F
        mov     rax, qword ptr [rcx]                    ; 50BE _ 48: 8B. 01
        mov     rdx, r10                                ; 50C1 _ 4C: 89. D2
        jmp     ?_288                                   ; 50C4 _ EB, C1

Unnamed_1_4E86:
        inc     rax                                     ; 50C6 _ 48: FF. C0
        inc     rdx                                     ; 50C9 _ 48: FF. C2
?_290:  mov     r11b, byte ptr [rdx]                    ; 50CC _ 44: 8A. 1A
        mov     bl, byte ptr [rax]                      ; 50CF _ 8A. 18
        test    bl, bl                                  ; 50D1 _ 84. DB
        jz      Unnamed_1_4E9F                          ; 50D3 _ 74, 0A
        test    r11b, r11b                              ; 50D5 _ 45: 84. DB
        jz      Unnamed_1_4E9F                          ; 50D8 _ 74, 05
        cmp     bl, r11b                                ; 50DA _ 44: 38. DB
        jz      Unnamed_1_4E86                          ; 50DD _ 74, E7
Unnamed_1_4E9F:
        cmp     bl, r11b                                ; 50DF _ 44: 38. DB
        jnz     Unnamed_1_4E6B                          ; 50E2 _ 75, C7
        mov     rax, qword ptr [rcx+18H]                ; 50E4 _ 48: 8B. 41, 18
        mov     qword ptr [r9], rax                     ; 50E8 _ 49: 89. 01
        xor     eax, eax                                ; 50EB _ 31. C0
?_291:  pop     rbx                                     ; 50ED _ 5B
        ret                                             ; 50EE _ C3

Unnamed_1_4EAF LABEL NEAR
        mov     r8, rcx                                 ; 50EF _ 49: 89. C8
        mov     dl, byte ptr [r8]                       ; 50F2 _ 41: 8A. 10
        jmp     ?_292                                   ; 50F5 _ EB, 07

Unnamed_1_4EB7:
        mov     dl, byte ptr [r8+1H]                    ; 50F7 _ 41: 8A. 50, 01
        inc     r8                                      ; 50FB _ 49: FF. C0
?_292:  cmp     dl, 32                                  ; 50FE _ 80. FA, 20
        jz      Unnamed_1_4EB7                          ; 5101 _ 74, F4
        mov     eax, 1                                  ; 5103 _ B8, 00000001
        jmp     ?_293                                   ; 5108 _ EB, 07

Unnamed_1_4ECA:
        mov     dl, byte ptr [r8+rax]                   ; 510A _ 41: 8A. 14 00
        inc     rax                                     ; 510E _ 48: FF. C0
?_293:  cmp     dl, 120                                 ; 5111 _ 80. FA, 78
        jz      Unnamed_1_4EE3                          ; 5114 _ 74, 0D
        cmp     dl, 88                                  ; 5116 _ 80. FA, 58
        jz      Unnamed_1_4EE3                          ; 5119 _ 74, 08
        cmp     dl, 48                                  ; 511B _ 80. FA, 30
        jz      Unnamed_1_4ECA                          ; 511E _ 74, EA
        dec     rax                                     ; 5120 _ 48: FF. C8
Unnamed_1_4EE3:
        add     r8, rax                                 ; 5123 _ 49: 01. C0
        xor     eax, eax                                ; 5126 _ 31. C0
        jmp     ?_294                                   ; 5128 _ EB, 0C

Unnamed_1_4EEA:
        shl     rax, 4                                  ; 512A _ 48: C1. E0, 04
        lea     rax, ptr [rax+rcx-37H]                  ; 512E _ 48: 8D. 44 08, C9
Unnamed_1_4EF3:
        inc     r8                                      ; 5133 _ 49: FF. C0
?_294:  movzx   ecx, byte ptr [r8]                      ; 5136 _ 41: 0F B6. 08
        test    rcx, rcx                                ; 513A _ 48: 85. C9
        jz      ?_297                                   ; 513D _ 74, 34
        mov     dl, cl                                  ; 513F _ 88. CA
        add     dl, -48                                 ; 5141 _ 80. C2, D0
        cmp     dl, 9                                   ; 5144 _ 80. FA, 09
        ja      ?_295                                   ; 5147 _ 77, 0B
        shl     rax, 4                                  ; 5149 _ 48: C1. E0, 04
        lea     rax, ptr [rax+rcx-30H]                  ; 514D _ 48: 8D. 44 08, D0
        jmp     Unnamed_1_4EF3                          ; 5152 _ EB, DF

?_295:  mov     dl, cl                                  ; 5154 _ 88. CA
        add     dl, -97                                 ; 5156 _ 80. C2, 9F
        cmp     dl, 5                                   ; 5159 _ 80. FA, 05
        ja      ?_296                                   ; 515C _ 77, 0B
        shl     rax, 4                                  ; 515E _ 48: C1. E0, 04
        lea     rax, ptr [rax+rcx-57H]                  ; 5162 _ 48: 8D. 44 08, A9
        jmp     Unnamed_1_4EF3                          ; 5167 _ EB, CA

?_296:  mov     dl, cl                                  ; 5169 _ 88. CA
        add     dl, -65                                 ; 516B _ 80. C2, BF
        cmp     dl, 5                                   ; 516E _ 80. FA, 05
        jbe     Unnamed_1_4EEA                          ; 5171 _ 76, B7
?_297:  ret                                             ; 5173 _ C3

Unnamed_1_4F34 LABEL NEAR
        inc     rcx                                     ; 5174 _ 48: FF. C1
        xor     eax, eax                                ; 5177 _ 31. C0
        jmp     ?_298                                   ; 5179 _ EB, 03

Unnamed_1_4F3B:
        inc     rcx                                     ; 517B _ 48: FF. C1
?_298:  mov     r9b, byte ptr [rcx-1H]                  ; 517E _ 44: 8A. 49, FF
        test    r9b, r9b                                ; 5182 _ 45: 84. C9
        jz      Unnamed_1_4F91                          ; 5185 _ 74, 4A
        cmp     r9b, 32                                 ; 5187 _ 41: 80. F9, 20
        jz      Unnamed_1_4F3B                          ; 518B _ 74, EE
        cmp     r9b, 48                                 ; 518D _ 41: 80. F9, 30
        jz      ?_299                                   ; 5191 _ 74, 11
        mov     r8b, r9b                                ; 5193 _ 45: 88. C8
        add     r8b, -48                                ; 5196 _ 41: 80. C0, D0
        xor     eax, eax                                ; 519A _ 31. C0
        cmp     r8b, 10                                 ; 519C _ 41: 80. F8, 0A
        jc      Unnamed_1_4F73                          ; 51A0 _ 72, 11
        jmp     Unnamed_1_4F91                          ; 51A2 _ EB, 2D

?_299:  mov     r8b, byte ptr [rcx]                     ; 51A4 _ 44: 8A. 01
        or      r8b, 20H                                ; 51A7 _ 41: 80. C8, 20
        xor     eax, eax                                ; 51AB _ 31. C0
        cmp     r8b, 120                                ; 51AD _ 41: 80. F8, 78
        jz      ?_300                                   ; 51B1 _ 74, 1F
Unnamed_1_4F73:
        lea     rax, ptr [rax+rax*4]                    ; 51B3 _ 48: 8D. 04 80
        movzx   edx, r9b                                ; 51B7 _ 41: 0F B6. D1
        lea     rax, ptr [rdx+rax*2-30H]                ; 51BB _ 48: 8D. 44 42, D0
        mov     r9b, byte ptr [rcx]                     ; 51C0 _ 44: 8A. 09
        inc     rcx                                     ; 51C3 _ 48: FF. C1
        mov     dl, r9b                                 ; 51C6 _ 44: 88. CA
        add     dl, -48                                 ; 51C9 _ 80. C2, D0
        cmp     dl, 10                                  ; 51CC _ 80. FA, 0A
        jc      Unnamed_1_4F73                          ; 51CF _ 72, E2
Unnamed_1_4F91:
        ret                                             ; 51D1 _ C3

?_300   LABEL NEAR
        dec     rcx                                     ; 51D2 _ 48: FF. C9
        jmp     Unnamed_1_4EAF                          ; 51D5 _ E9, FFFFFF15

Unnamed_1_4F9A LABEL NEAR
        push    rbp                                     ; 51DA _ 55
        mov     rbp, rsp                                ; 51DB _ 48: 89. E5
        push    r15                                     ; 51DE _ 41: 57
        push    r14                                     ; 51E0 _ 41: 56
        push    rsi                                     ; 51E2 _ 56
        push    rdi                                     ; 51E3 _ 57
        push    rbx                                     ; 51E4 _ 53
        sub     rsp, 88                                 ; 51E5 _ 48: 83. EC, 58
        mov     rax, rdx                                ; 51E9 _ 48: 89. D0
        mov     r15, rcx                                ; 51EC _ 49: 89. CF
        mov     ebx, 1                                  ; 51EF _ BB, 00000001
        test    rax, rax                                ; 51F4 _ 48: 85. C0
        js      ?_301                                   ; 51F7 _ 78, 05
        mov     r14, rbx                                ; 51F9 _ 49: 89. DE
        jmp     ?_302                                   ; 51FC _ EB, 10

?_301:  mov     byte ptr [r15], 45                      ; 51FE _ 41: C6. 07, 2D
        neg     rax                                     ; 5202 _ 48: F7. D8
        inc     r15                                     ; 5205 _ 49: FF. C7
        mov     r14d, 2                                 ; 5208 _ 41: BE, 00000002
?_302:  lea     rdi, ptr [rbp-58H]                      ; 520E _ 48: 8D. 7D, A8
?_303:  mov     rcx, rax                                ; 5212 _ 48: 89. C1
        mov     edx, 10                                 ; 5215 _ BA, 0000000A
        mov     r8, rdi                                 ; 521A _ 49: 89. F8
        call    Unnamed_1_396                           ; 521D _ E8, FFFFB3B4
        mov     cl, byte ptr [rbp-58H]                  ; 5222 _ 8A. 4D, A8
        add     cl, 48                                  ; 5225 _ 80. C1, 30
        mov     byte ptr [rbp+rbx-50H], cl              ; 5228 _ 88. 4C 1D, B0
        inc     rbx                                     ; 522C _ 48: FF. C3
        test    rax, rax                                ; 522F _ 48: 85. C0
        jnz     ?_303                                   ; 5232 _ 75, DE
        cmp     rbx, 1                                  ; 5234 _ 48: 83. FB, 01
        jz      ?_305                                   ; 5238 _ 74, 20
        lea     rax, ptr [rbx-1H]                       ; 523A _ 48: 8D. 43, FF
        mov     rsi, r15                                ; 523E _ 4C: 89. FE
        mov     rdx, rbx                                ; 5241 _ 48: 89. DA
?_304:  mov     cl, byte ptr [rbp+rdx-51H]              ; 5244 _ 8A. 4C 15, AF
        mov     byte ptr [rsi], cl                      ; 5248 _ 88. 0E
        dec     rdx                                     ; 524A _ 48: FF. CA
        inc     rsi                                     ; 524D _ 48: FF. C6
        dec     rax                                     ; 5250 _ 48: FF. C8
        jnz     ?_304                                   ; 5253 _ 75, EF
        lea     r15, ptr [r15+rbx-1H]                   ; 5255 _ 4D: 8D. 7C 1F, FF
?_305:  lea     rax, ptr [r14+rbx-2H]                   ; 525A _ 49: 8D. 44 1E, FE
        mov     byte ptr [r15], 0                       ; 525F _ 41: C6. 07, 00
        add     rsp, 88                                 ; 5263 _ 48: 83. C4, 58
        pop     rbx                                     ; 5267 _ 5B
        pop     rdi                                     ; 5268 _ 5F
        pop     rsi                                     ; 5269 _ 5E
        pop     r14                                     ; 526A _ 41: 5E
        pop     r15                                     ; 526C _ 41: 5F
        pop     rbp                                     ; 526E _ 5D
        ret                                             ; 526F _ C3

Unnamed_1_5030 LABEL NEAR
        push    rbp                                     ; 5270 _ 55
        mov     rbp, rsp                                ; 5271 _ 48: 89. E5
        push    rsi                                     ; 5274 _ 56
        sub     rsp, 40                                 ; 5275 _ 48: 83. EC, 28
        mov     rsi, rcx                                ; 5279 _ 48: 89. CE
        cmp     byte ptr [rsi], 0                       ; 527C _ 80. 3E, 00
        jz      ?_307                                   ; 527F _ 74, 0A
?_306:  cmp     byte ptr [rsi+1H], 0                    ; 5281 _ 80. 7E, 01, 00
        lea     rsi, ptr [rsi+1H]                       ; 5285 _ 48: 8D. 76, 01
        jnz     ?_306                                   ; 5289 _ 75, F6
?_307:  mov     rcx, rsi                                ; 528B _ 48: 89. F1
        call    Unnamed_1_4F9A                          ; 528E _ E8, FFFFFF47
        mov     byte ptr [rsi+rax], 0                   ; 5293 _ C6. 04 06, 00
        add     rsp, 40                                 ; 5297 _ 48: 83. C4, 28
        pop     rsi                                     ; 529B _ 5E
        pop     rbp                                     ; 529C _ 5D
        ret                                             ; 529D _ C3

Unnamed_1_505E LABEL NEAR
        push    rbp                                     ; 529E _ 55
        mov     rbp, rsp                                ; 529F _ 48: 89. E5
        push    r15                                     ; 52A2 _ 41: 57
        push    r14                                     ; 52A4 _ 41: 56
        push    r12                                     ; 52A6 _ 41: 54
        push    rsi                                     ; 52A8 _ 56
        push    rdi                                     ; 52A9 _ 57
        push    rbx                                     ; 52AA _ 53
        sub     rsp, 48                                 ; 52AB _ 48: 83. EC, 30
        mov     r15, rdx                                ; 52AF _ 49: 89. D7
        mov     rbx, rcx                                ; 52B2 _ 48: 89. CB
        mov     eax, 1                                  ; 52B5 _ B8, 00000001
        cmp     byte ptr [rbx], 0                       ; 52BA _ 80. 3B, 00
        jnz     Unnamed_1_5084                          ; 52BD _ 75, 05
        mov     rcx, rax                                ; 52BF _ 48: 89. C1
        jmp     ?_308                                   ; 52C2 _ EB, 0D

Unnamed_1_5084:
        lea     rcx, ptr [rax+1H]                       ; 52C4 _ 48: 8D. 48, 01
        cmp     byte ptr [rbx+rax], 0                   ; 52C8 _ 80. 3C 03, 00
        mov     rax, rcx                                ; 52CC _ 48: 89. C8
        jnz     Unnamed_1_5084                          ; 52CF _ 75, F3
?_308:  call    Unnamed_1_CB                            ; 52D1 _ E8, FFFFB035
        mov     r12, rax                                ; 52D6 _ 49: 89. C4
        mov     rax, 8000000000000009H                  ; 52D9 _ 48: B8, 8000000000000009
        test    r12, r12                                ; 52E3 _ 4D: 85. E4
        je      Unnamed_1_51EB                          ; 52E6 _ 0F 84, 0000013F
        mov     rcx, r12                                ; 52EC _ 4C: 89. E1
        mov     rdx, rbx                                ; 52EF _ 48: 89. DA
        call    Unnamed_1_27E                           ; 52F2 _ E8, FFFFB1C7
        mov     ebx, 1                                  ; 52F7 _ BB, 00000001
        jmp     ?_309                                   ; 52FC _ EB, 03

Unnamed_1_50BE:
        inc     rbx                                     ; 52FE _ 48: FF. C3
?_309:  mov     al, byte ptr [r12+rbx-1H]               ; 5301 _ 41: 8A. 44 1C, FF
        test    al, al                                  ; 5306 _ 84. C0
        je      Unnamed_1_51C3                          ; 5308 _ 0F 84, 000000F5
        cmp     al, 45                                  ; 530E _ 3C, 2D
        jnz     Unnamed_1_50BE                          ; 5310 _ 75, EC
        mov     byte ptr [r12+rbx-1H], 0                ; 5312 _ 41: C6. 44 1C, FF, 00
        mov     rcx, r12                                ; 5318 _ 4C: 89. E1
        call    Unnamed_1_4EAF                          ; 531B _ E8, FFFFFDCF
        mov     dword ptr [r15], eax                    ; 5320 _ 41: 89. 07
        lea     rcx, ptr [r12+rbx]                      ; 5323 _ 49: 8D. 0C 1C
?_310:  inc     rbx                                     ; 5327 _ 48: FF. C3
        mov     al, byte ptr [r12+rbx-1H]               ; 532A _ 41: 8A. 44 1C, FF
        test    al, al                                  ; 532F _ 84. C0
        je      Unnamed_1_51C3                          ; 5331 _ 0F 84, 000000CC
        cmp     al, 45                                  ; 5337 _ 3C, 2D
        jnz     ?_310                                   ; 5339 _ 75, EC
        mov     byte ptr [r12+rbx-1H], 0                ; 533B _ 41: C6. 44 1C, FF, 00
        call    Unnamed_1_4EAF                          ; 5341 _ E8, FFFFFDA9
        mov     word ptr [r15+4H], ax                   ; 5346 _ 66 41: 89. 47, 04
        lea     rcx, ptr [r12+rbx]                      ; 534B _ 49: 8D. 0C 1C
        add     rbx, -2                                 ; 534F _ 48: 83. C3, FE
        jmp     ?_311                                   ; 5353 _ EB, 03

Unnamed_1_5115:
        inc     rbx                                     ; 5355 _ 48: FF. C3
?_311:  mov     al, byte ptr [r12+rbx+2H]               ; 5358 _ 41: 8A. 44 1C, 02
        test    al, al                                  ; 535D _ 84. C0
        je      Unnamed_1_51C3                          ; 535F _ 0F 84, 0000009E
        cmp     al, 45                                  ; 5365 _ 3C, 2D
        jnz     Unnamed_1_5115                          ; 5367 _ 75, EC
        mov     byte ptr [r12+rbx+2H], 0                ; 5369 _ 41: C6. 44 1C, 02, 00
        call    Unnamed_1_4EAF                          ; 536F _ E8, FFFFFD7B
        mov     word ptr [r15+6H], ax                   ; 5374 _ 66 41: 89. 47, 06
        lea     rsi, ptr [r12+rbx+5H]                   ; 5379 _ 49: 8D. 74 1C, 05
        add     rbx, r12                                ; 537E _ 4C: 01. E3
        xor     edi, edi                                ; 5381 _ 31. FF
        lea     r14, ptr [rbp-33H]                      ; 5383 _ 4C: 8D. 75, CD
        jmp     ?_312                                   ; 5387 _ EB, 2A

Unnamed_1_5149:
        test    cl, cl                                  ; 5389 _ 84. C9
        jz      Unnamed_1_51C3                          ; 538B _ 74, 76
        mov     al, byte ptr [rbx+rdi*2+4H]             ; 538D _ 8A. 44 7B, 04
        test    al, al                                  ; 5391 _ 84. C0
        jz      Unnamed_1_51C3                          ; 5393 _ 74, 6E
        mov     byte ptr [rbp-33H], cl                  ; 5395 _ 88. 4D, CD
        mov     byte ptr [rbp-32H], al                  ; 5398 _ 88. 45, CE
        mov     byte ptr [rbp-31H], 0                   ; 539B _ C6. 45, CF, 00
        mov     rcx, r14                                ; 539F _ 4C: 89. F1
        call    Unnamed_1_4EAF                          ; 53A2 _ E8, FFFFFD48
        mov     byte ptr [r15+rdi+8H], al               ; 53A7 _ 41: 88. 44 3F, 08
        add     rsi, 2                                  ; 53AC _ 48: 83. C6, 02
        inc     rdi                                     ; 53B0 _ 48: FF. C7
?_312:  mov     cl, byte ptr [rbx+rdi*2+3H]             ; 53B3 _ 8A. 4C 7B, 03
        cmp     rdi, 1                                  ; 53B7 _ 48: 83. FF, 01
        jbe     Unnamed_1_5149                          ; 53BB _ 76, CC
        mov     rax, 800000000000000EH                  ; 53BD _ 48: B8, 800000000000000E
        cmp     cl, 45                                  ; 53C7 _ 80. F9, 2D
        jnz     Unnamed_1_51EB                          ; 53CA _ 75, 5F
        lea     rbx, ptr [rbp-33H]                      ; 53CC _ 48: 8D. 5D, CD
        jmp     ?_313                                   ; 53D0 _ EB, 1E

Unnamed_1_5192:
        mov     byte ptr [rbp-33H], al                  ; 53D2 _ 88. 45, CD
        mov     byte ptr [rbp-32H], cl                  ; 53D5 _ 88. 4D, CE
        mov     byte ptr [rbp-31H], 0                   ; 53D8 _ C6. 45, CF, 00
        mov     rcx, rbx                                ; 53DC _ 48: 89. D9
        call    Unnamed_1_4EAF                          ; 53DF _ E8, FFFFFD0B
        mov     byte ptr [r15+rdi+8H], al               ; 53E4 _ 41: 88. 44 3F, 08
        add     rsi, 2                                  ; 53E9 _ 48: 83. C6, 02
        inc     rdi                                     ; 53ED _ 48: FF. C7
?_313:  cmp     rdi, 7                                  ; 53F0 _ 48: 83. FF, 07
        ja      ?_314                                   ; 53F4 _ 77, 26
        mov     al, byte ptr [rsi-1H]                   ; 53F6 _ 8A. 46, FF
        test    al, al                                  ; 53F9 _ 84. C0
        jz      Unnamed_1_51C3                          ; 53FB _ 74, 06
        mov     cl, byte ptr [rsi]                      ; 53FD _ 8A. 0E
        test    cl, cl                                  ; 53FF _ 84. C9
        jnz     Unnamed_1_5192                          ; 5401 _ 75, CF
Unnamed_1_51C3:
        mov     rax, qword ptr [?_578]                  ; 5403 _ 48: 8B. 05, 0000589E(rel)
        mov     rcx, r12                                ; 540A _ 4C: 89. E1
        call    qword ptr [rax+48H]                     ; 540D _ FF. 50, 48
        mov     rax, 800000000000000EH                  ; 5410 _ 48: B8, 800000000000000E
        jmp     Unnamed_1_51EB                          ; 541A _ EB, 0F

?_314:  mov     rax, qword ptr [?_578]                  ; 541C _ 48: 8B. 05, 00005885(rel)
        mov     rcx, r12                                ; 5423 _ 4C: 89. E1
        call    qword ptr [rax+48H]                     ; 5426 _ FF. 50, 48
        xor     eax, eax                                ; 5429 _ 31. C0
Unnamed_1_51EB:
        add     rsp, 48                                 ; 542B _ 48: 83. C4, 30
        pop     rbx                                     ; 542F _ 5B
        pop     rdi                                     ; 5430 _ 5F
        pop     rsi                                     ; 5431 _ 5E
        pop     r12                                     ; 5432 _ 41: 5C
        pop     r14                                     ; 5434 _ 41: 5E
        pop     r15                                     ; 5436 _ 41: 5F
        pop     rbp                                     ; 5438 _ 5D
        ret                                             ; 5439 _ C3

Unnamed_1_51FA LABEL NEAR
        push    rbp                                     ; 543A _ 55
        mov     rbp, rsp                                ; 543B _ 48: 89. E5
        push    r15                                     ; 543E _ 41: 57
        push    r14                                     ; 5440 _ 41: 56
        push    r13                                     ; 5442 _ 41: 55
        push    r12                                     ; 5444 _ 41: 54
        push    rsi                                     ; 5446 _ 56
        push    rdi                                     ; 5447 _ 57
        push    rbx                                     ; 5448 _ 53
        sub     rsp, 56                                 ; 5449 _ 48: 83. EC, 38
        mov     r12, r8                                 ; 544D _ 4D: 89. C4
        mov     r13, rdx                                ; 5450 _ 49: 89. D5
        mov     r15, rcx                                ; 5453 _ 49: 89. CF
        mov     qword ptr [r12], 0                      ; 5456 _ 49: C7. 04 24, 00000000
        mov     qword ptr [r9], 0                       ; 545E _ 49: C7. 01, 00000000
        mov     qword ptr [rbp-48H], r9                 ; 5465 _ 4C: 89. 4D, B8
        mov     r14d, 512                               ; 5469 _ 41: BE, 00000200
        mov     ecx, 512                                ; 546F _ B9, 00000200
        call    Unnamed_1_CB                            ; 5474 _ E8, FFFFAE92
        mov     rsi, rax                                ; 5479 _ 48: 89. C6
        mov     rbx, 8000000000000009H                  ; 547C _ 48: BB, 8000000000000009
        test    rsi, rsi                                ; 5486 _ 48: 85. F6
        je      ?_319                                   ; 5489 _ 0F 84, 000000F3
        add     r13, r15                                ; 548F _ 4D: 01. FD
        xor     ebx, ebx                                ; 5492 _ 31. DB
Unnamed_1_5254:
        cmp     r15, r13                                ; 5494 _ 4D: 39. EF
        jnc     Unnamed_1_5335                          ; 5497 _ 0F 83, 000000D8
        mov     qword ptr [rbp-40H], r14                ; 549D _ 4C: 89. 75, C0
        mov     rdx, r13                                ; 54A1 _ 4C: 89. EA
        sub     rdx, r15                                ; 54A4 _ 4C: 29. FA
        mov     rcx, r15                                ; 54A7 _ 4C: 89. F9
        mov     r8, rsi                                 ; 54AA _ 49: 89. F0
        lea     r9, ptr [rbp-40H]                       ; 54AD _ 4C: 8D. 4D, C0
        call    Unnamed_1_4921                          ; 54B1 _ E8, FFFFF6AB
        mov     rbx, rax                                ; 54B6 _ 48: 89. C3
        test    rbx, rbx                                ; 54B9 _ 48: 85. DB
        js      ?_315                                   ; 54BC _ 78, 06
        mov     rdi, qword ptr [rbp-40H]                ; 54BE _ 48: 8B. 7D, C0
        jmp     ?_316                                   ; 54C2 _ EB, 59

?_315:  mov     rax, 8000000000000005H                  ; 54C4 _ 48: B8, 8000000000000005
        cmp     rbx, rax                                ; 54CE _ 48: 39. C3
        jne     Unnamed_1_5335                          ; 54D1 _ 0F 85, 0000009E
        mov     rax, qword ptr [?_578]                  ; 54D7 _ 48: 8B. 05, 000057CA(rel)
        mov     rcx, rsi                                ; 54DE _ 48: 89. F1
        call    qword ptr [rax+48H]                     ; 54E1 _ FF. 50, 48
        mov     rbx, qword ptr [rbp-40H]                ; 54E4 _ 48: 8B. 5D, C0
        mov     rcx, rbx                                ; 54E8 _ 48: 89. D9
        call    Unnamed_1_CB                            ; 54EB _ E8, FFFFAE1B
        mov     rsi, rax                                ; 54F0 _ 48: 89. C6
        test    rsi, rsi                                ; 54F3 _ 48: 85. F6
        je      ?_320                                   ; 54F6 _ 0F 84, 0000009A
        mov     rcx, r15                                ; 54FC _ 4C: 89. F9
        mov     rdx, rbx                                ; 54FF _ 48: 89. DA
        mov     r8, rsi                                 ; 5502 _ 49: 89. F0
        lea     r9, ptr [rbp-40H]                       ; 5505 _ 4C: 8D. 4D, C0
        call    Unnamed_1_4921                          ; 5509 _ E8, FFFFF653
        mov     rbx, rax                                ; 550E _ 48: 89. C3
        test    rbx, rbx                                ; 5511 _ 48: 85. DB
        js      Unnamed_1_5335                          ; 5514 _ 78, 5F
        mov     rdi, qword ptr [rbp-40H]                ; 5516 _ 48: 8B. 7D, C0
        mov     r14, rdi                                ; 551A _ 49: 89. FE
?_316:  mov     rcx, rsi                                ; 551D _ 48: 89. F1
        lea     rdx, ptr [rbp-40H]                      ; 5520 _ 48: 8D. 55, C0
        call    Unnamed_1_49CE                          ; 5524 _ E8, FFFFF6E5
        add     rdi, r15                                ; 5529 _ 4C: 01. FF
        mov     rdx, qword ptr [rbp-40H]                ; 552C _ 48: 8B. 55, C0
        test    rdx, rdx                                ; 5530 _ 48: 85. D2
        mov     r15, rdi                                ; 5533 _ 49: 89. FF
        je      Unnamed_1_5254                          ; 5536 _ 0F 84, FFFFFF58
        mov     al, byte ptr [rsi]                      ; 553C _ 8A. 06
        mov     rcx, rsi                                ; 553E _ 48: 89. F1
        cmp     al, 91                                  ; 5541 _ 3C, 5B
        jz      ?_317                                   ; 5543 _ 74, 0F
        cmp     al, 35                                  ; 5545 _ 3C, 23
        jnz     ?_318                                   ; 5547 _ 75, 15
        mov     r8, qword ptr [rbp-48H]                 ; 5549 _ 4C: 8B. 45, B8
        call    Unnamed_1_4A79                          ; 554D _ E8, FFFFF767
        jmp     Unnamed_1_5326                          ; 5552 _ EB, 12

?_317:  mov     r8, r12                                 ; 5554 _ 4D: 89. E0
        call    Unnamed_1_4AFA                          ; 5557 _ E8, FFFFF7DE
        jmp     Unnamed_1_5326                          ; 555C _ EB, 08

?_318:  mov     r8, r12                                 ; 555E _ 4D: 89. E0
        call    Unnamed_1_4BD1                          ; 5561 _ E8, FFFFF8AB
Unnamed_1_5326:
        mov     rbx, rax                                ; 5566 _ 48: 89. C3
        test    rbx, rbx                                ; 5569 _ 48: 85. DB
        mov     r15, rdi                                ; 556C _ 49: 89. FF
        jns     Unnamed_1_5254                          ; 556F _ 0F 89, FFFFFF1F
Unnamed_1_5335:
        mov     rax, qword ptr [?_578]                  ; 5575 _ 48: 8B. 05, 0000572C(rel)
        mov     rcx, rsi                                ; 557C _ 48: 89. F1
        call    qword ptr [rax+48H]                     ; 557F _ FF. 50, 48
?_319:  mov     rax, rbx                                ; 5582 _ 48: 89. D8
        add     rsp, 56                                 ; 5585 _ 48: 83. C4, 38
        pop     rbx                                     ; 5589 _ 5B
        pop     rdi                                     ; 558A _ 5F
        pop     rsi                                     ; 558B _ 5E
        pop     r12                                     ; 558C _ 41: 5C
        pop     r13                                     ; 558E _ 41: 5D
        pop     r14                                     ; 5590 _ 41: 5E
        pop     r15                                     ; 5592 _ 41: 5F
        pop     rbp                                     ; 5594 _ 5D
        ret                                             ; 5595 _ C3

?_320   LABEL NEAR
        mov     rbx, 8000000000000009H                  ; 5596 _ 48: BB, 8000000000000009
        xor     esi, esi                                ; 55A0 _ 31. F6
        jmp     Unnamed_1_5335                          ; 55A2 _ EB, D1

?_321   LABEL NEAR
        push    rbp                                     ; 55A4 _ 55
        mov     rbp, rsp                                ; 55A5 _ 48: 89. E5
        push    r15                                     ; 55A8 _ 41: 57
        push    r14                                     ; 55AA _ 41: 56
        push    r13                                     ; 55AC _ 41: 55
        push    r12                                     ; 55AE _ 41: 54
        push    rsi                                     ; 55B0 _ 56
        push    rdi                                     ; 55B1 _ 57
        push    rbx                                     ; 55B2 _ 53
        sub     rsp, 1128                               ; 55B3 _ 48: 81. EC, 00000468
        mov     qword ptr [rbp-478H], r9                ; 55BA _ 4C: 89. 8D, FFFFFB88
        mov     rsi, r8                                 ; 55C1 _ 4C: 89. C6
        mov     qword ptr [rbp-448H], 0                 ; 55C4 _ 48: C7. 85, FFFFFBB8, 00000000
        mov     qword ptr [rbp-450H], 0                 ; 55CF _ 48: C7. 85, FFFFFBB0, 00000000
        lea     r8, ptr [rbp-448H]                      ; 55DA _ 4C: 8D. 85, FFFFFBB8
        lea     r9, ptr [rbp-450H]                      ; 55E1 _ 4C: 8D. 8D, FFFFFBB0
        call    Unnamed_1_51FA                          ; 55E8 _ E8, FFFFFE4D
        mov     r15, rax                                ; 55ED _ 49: 89. C7
        test    r15, r15                                ; 55F0 _ 4D: 85. FF
        jns     ?_322                                   ; 55F3 _ 79, 18
Unnamed_1_53B5:
        mov     rdx, qword ptr [rbp-450H]               ; 55F5 _ 48: 8B. 95, FFFFFBB0
        mov     rcx, qword ptr [rbp-448H]               ; 55FC _ 48: 8B. 8D, FFFFFBB8
        call    Unnamed_1_4D8E                          ; 5603 _ E8, FFFFF9C6
        jmp     Unnamed_1_5797                          ; 5608 _ E9, 000003CA

?_322:  mov     qword ptr [rsi], 0                      ; 560D _ 48: C7. 06, 00000000
        mov     rcx, qword ptr [rbp-448H]               ; 5614 _ 48: 8B. 8D, FFFFFBB8
        lea     rdx, ptr [?_492]                        ; 561B _ 48: 8D. 15, 0000324A(rel)
        lea     r8, ptr [?_493]                         ; 5622 _ 4C: 8D. 05, 00003248(rel)
        lea     r9, ptr [rbp-40H]                       ; 5629 _ 4C: 8D. 4D, C0
        call    Unnamed_1_4E34                          ; 562D _ E8, FFFFFA42
        test    rax, rax                                ; 5632 _ 48: 85. C0
        js      ?_323                                   ; 5635 _ 78, 0C
        mov     rcx, qword ptr [rbp-40H]                ; 5637 _ 48: 8B. 4D, C0
        call    Unnamed_1_4EAF                          ; 563B _ E8, FFFFFAAF
        mov     qword ptr [rsi], rax                    ; 5640 _ 48: 89. 06
?_323:  mov     qword ptr [rbp-40H], 0                  ; 5643 _ 48: C7. 45, C0, 00000000
        mov     rcx, qword ptr [rbp-448H]               ; 564B _ 48: 8B. 8D, FFFFFBB8
        lea     rdx, ptr [?_492]                        ; 5652 _ 48: 8D. 15, 00003213(rel)
        lea     r8, ptr [?_494]                         ; 5659 _ 4C: 8D. 05, 0000321C(rel)
        lea     r9, ptr [rbp-40H]                       ; 5660 _ 4C: 8D. 4D, C0
        call    Unnamed_1_4E34                          ; 5664 _ E8, FFFFFA0B
        mov     r15, rax                                ; 5669 _ 49: 89. C7
        test    r15, r15                                ; 566C _ 4D: 85. FF
        js      Unnamed_1_53B5                          ; 566F _ 78, 84
        mov     rcx, qword ptr [rbp-40H]                ; 5671 _ 48: 8B. 4D, C0
        call    Unnamed_1_4F34                          ; 5675 _ E8, FFFFFAFA
        test    rax, rax                                ; 567A _ 48: 85. C0
        jnz     ?_324                                   ; 567D _ 75, 22
        mov     rdx, qword ptr [rbp-450H]               ; 567F _ 48: 8B. 95, FFFFFBB0
        mov     rcx, qword ptr [rbp-448H]               ; 5686 _ 48: 8B. 8D, FFFFFBB8
        call    Unnamed_1_4D8E                          ; 568D _ E8, FFFFF93C
        mov     r15, 800000000000000EH                  ; 5692 _ 49: BF, 800000000000000E
        jmp     Unnamed_1_5797                          ; 569C _ E9, 00000336

?_324:  mov     r12, qword ptr [rbp+30H]                ; 56A1 _ 4C: 8B. 65, 30
        mov     rcx, qword ptr [rbp-478H]               ; 56A5 _ 48: 8B. 8D, FFFFFB88
        mov     qword ptr [rcx], rax                    ; 56AC _ 48: 89. 01
        imul    rcx, rax, 104                           ; 56AF _ 48: 6B. C8, 68
        call    Unnamed_1_CB                            ; 56B3 _ E8, FFFFAC53
        mov     qword ptr [r12], rax                    ; 56B8 _ 49: 89. 04 24
        test    rax, rax                                ; 56BC _ 48: 85. C0
        je      ?_330                                   ; 56BF _ 0F 84, 00000329
        xor     esi, esi                                ; 56C5 _ 31. F6
        lea     r14, ptr [rbp-40H]                      ; 56C7 _ 4C: 8D. 75, C0
        lea     rdi, ptr [rbp-460H]                     ; 56CB _ 48: 8D. BD, FFFFFBA0
        lea     r13, ptr [rbp-440H]                     ; 56D2 _ 4C: 8D. AD, FFFFFBC0
        mov     qword ptr [rbp-468H], 0                 ; 56D9 _ 48: C7. 85, FFFFFB98, 00000000
        jmp     ?_328                                   ; 56E4 _ E9, 0000011D

Unnamed_1_54A9:
        mov     rcx, qword ptr [rbp-40H]                ; 56E9 _ 48: 8B. 4D, C0
        call    Unnamed_1_4EAF                          ; 56ED _ E8, FFFFF9FD
        mov     rcx, qword ptr [r12]                    ; 56F2 _ 49: 8B. 0C 24
        mov     qword ptr [rcx+rbx+48H], rax            ; 56F6 _ 48: 89. 44 19, 48
        mov     rcx, r13                                ; 56FB _ 4C: 89. E9
        mov     rdx, r15                                ; 56FE _ 4C: 89. FA
        call    Unnamed_1_27E                           ; 5701 _ E8, FFFFADB8
        mov     rcx, r13                                ; 5706 _ 4C: 89. E9
        mov     rdx, rsi                                ; 5709 _ 48: 89. F2
        call    Unnamed_1_5030                          ; 570C _ E8, FFFFFB5F
        mov     rcx, qword ptr [rbp-448H]               ; 5711 _ 48: 8B. 8D, FFFFFBB8
        mov     rdx, rdi                                ; 5718 _ 48: 89. FA
        mov     r8, r13                                 ; 571B _ 4D: 89. E8
        mov     r9, r14                                 ; 571E _ 4D: 89. F1
        call    Unnamed_1_4E34                          ; 5721 _ E8, FFFFF94E
        test    rax, rax                                ; 5726 _ 48: 85. C0
        js      ?_325                                   ; 5729 _ 78, 12
        mov     rcx, qword ptr [rbp-40H]                ; 572B _ 48: 8B. 4D, C0
        call    Unnamed_1_4EAF                          ; 572F _ E8, FFFFF9BB
        mov     rcx, qword ptr [r12]                    ; 5734 _ 49: 8B. 0C 24
        mov     qword ptr [rcx+rbx+50H], rax            ; 5738 _ 48: 89. 44 19, 50
?_325:  add     rbx, 16                                 ; 573D _ 48: 83. C3, 10
        inc     rsi                                     ; 5741 _ 48: FF. C6
?_326:  cmp     rsi, 1                                  ; 5744 _ 48: 83. FE, 01
        ja      ?_327                                   ; 5748 _ 77, 4E
        mov     rcx, r13                                ; 574A _ 4C: 89. E9
        lea     rdx, ptr [?_500]                        ; 574D _ 48: 8D. 15, 00003164(rel)
        call    Unnamed_1_27E                           ; 5754 _ E8, FFFFAD65
        mov     rcx, r13                                ; 5759 _ 4C: 89. E9
        mov     rdx, rsi                                ; 575C _ 48: 89. F2
        call    Unnamed_1_5030                          ; 575F _ E8, FFFFFB0C
        mov     rax, qword ptr [r12]                    ; 5764 _ 49: 8B. 04 24
        mov     qword ptr [rax+rbx+48H], 0              ; 5768 _ 48: C7. 44 18, 48, 00000000
        mov     qword ptr [rax+rbx+50H], 0              ; 5771 _ 48: C7. 44 18, 50, 00000000
        mov     rcx, qword ptr [rbp-448H]               ; 577A _ 48: 8B. 8D, FFFFFBB8
        mov     rdx, rdi                                ; 5781 _ 48: 89. FA
        mov     r8, r13                                 ; 5784 _ 4D: 89. E8
        mov     r9, r14                                 ; 5787 _ 4D: 89. F1
        call    Unnamed_1_4E34                          ; 578A _ E8, FFFFF8E5
        test    rax, rax                                ; 578F _ 48: 85. C0
        jns     Unnamed_1_54A9                          ; 5792 _ 0F 89, FFFFFF51
?_327:  mov     rcx, qword ptr [rbp-448H]               ; 5798 _ 48: 8B. 8D, FFFFFBB8
        mov     rdx, rdi                                ; 579F _ 48: 89. FA
        lea     r8, ptr [?_502]                         ; 57A2 _ 4C: 8D. 05, 00003122(rel)
        mov     r9, r14                                 ; 57A9 _ 4D: 89. F1
        call    Unnamed_1_4E34                          ; 57AC _ E8, FFFFF8C3
        test    rax, rax                                ; 57B1 _ 48: 85. C0
        lea     rdi, ptr [rbp-460H]                     ; 57B4 _ 48: 8D. BD, FFFFFBA0
        js      Unnamed_1_55B4                          ; 57BB _ 78, 37
        mov     rcx, qword ptr [rbp-40H]                ; 57BD _ 48: 8B. 4D, C0
        mov     rdx, rdi                                ; 57C1 _ 48: 89. FA
        call    Unnamed_1_505E                          ; 57C4 _ E8, FFFFFAD5
        test    rax, rax                                ; 57C9 _ 48: 85. C0
        js      Unnamed_1_55B4                          ; 57CC _ 78, 26
        mov     rax, qword ptr [r12]                    ; 57CE _ 49: 8B. 04 24
        mov     rcx, qword ptr [rbp-468H]               ; 57D2 _ 48: 8B. 8D, FFFFFB98
        lea     rcx, ptr [rax+rcx+34H]                  ; 57D9 _ 48: 8D. 4C 08, 34
        mov     rax, qword ptr [?_578]                  ; 57DE _ 48: 8B. 05, 000054C3(rel)
        mov     rdx, rdi                                ; 57E5 _ 48: 89. FA
        mov     r8d, 16                                 ; 57E8 _ 41: B8, 00000010
        call    qword ptr [rax+160H]                    ; 57EE _ FF. 90, 00000160
Unnamed_1_55B4:
        add     qword ptr [rbp-468H], 104               ; 57F4 _ 48: 83. 85, FFFFFB98, 68
        mov     rsi, qword ptr [rbp-470H]               ; 57FC _ 48: 8B. B5, FFFFFB90
        inc     rsi                                     ; 5803 _ 48: FF. C6
?_328:  mov     rax, qword ptr [rbp-478H]               ; 5806 _ 48: 8B. 85, FFFFFB88
        cmp     rsi, qword ptr [rax]                    ; 580D _ 48: 3B. 30
        jnc     ?_329                                   ; 5810 _ 0F 83, 000001AB
        lea     rbx, ptr [rbp-240H]                     ; 5816 _ 48: 8D. 9D, FFFFFDC0
        mov     rcx, rbx                                ; 581D _ 48: 89. D9
        lea     rdx, ptr [?_495]                        ; 5820 _ 48: 8D. 15, 00003061(rel)
        call    Unnamed_1_27E                           ; 5827 _ E8, FFFFAC92
        mov     rcx, rbx                                ; 582C _ 48: 89. D9
        mov     rdx, rsi                                ; 582F _ 48: 89. F2
        mov     qword ptr [rbp-470H], rsi               ; 5832 _ 48: 89. B5, FFFFFB90
        call    Unnamed_1_5030                          ; 5839 _ E8, FFFFFA32
        mov     rcx, qword ptr [rbp-448H]               ; 583E _ 48: 8B. 8D, FFFFFBB8
        lea     rdx, ptr [?_492]                        ; 5845 _ 48: 8D. 15, 00003020(rel)
        mov     r8, rbx                                 ; 584C _ 49: 89. D8
        mov     r9, r14                                 ; 584F _ 4D: 89. F1
        call    Unnamed_1_4E34                          ; 5852 _ E8, FFFFF81D
        mov     r15, rax                                ; 5857 _ 49: 89. C7
        test    r15, r15                                ; 585A _ 4D: 85. FF
        mov     rsi, r12                                ; 585D _ 4C: 89. E6
        js      Unnamed_1_53B5                          ; 5860 _ 0F 88, FFFFFD8F
        mov     rbx, rdi                                ; 5866 _ 48: 89. FB
        mov     rcx, qword ptr [rbp-448H]               ; 5869 _ 48: 8B. 8D, FFFFFBB8
        mov     rdi, qword ptr [rbp-40H]                ; 5870 _ 48: 8B. 7D, C0
        mov     rdx, rdi                                ; 5874 _ 48: 89. FA
        lea     r8, ptr [?_496]                         ; 5877 _ 4C: 8D. 05, 00003011(rel)
        mov     r9, r14                                 ; 587E _ 4D: 89. F1
        call    Unnamed_1_4E34                          ; 5881 _ E8, FFFFF7EE
        mov     r15, rax                                ; 5886 _ 49: 89. C7
        test    r15, r15                                ; 5889 _ 4D: 85. FF
        js      Unnamed_1_53B5                          ; 588C _ 0F 88, FFFFFD63
        mov     rcx, qword ptr [rbp-40H]                ; 5892 _ 48: 8B. 4D, C0
        call    Unnamed_1_4F34                          ; 5896 _ E8, FFFFF8D9
        cmp     rax, 6                                  ; 589B _ 48: 83. F8, 06
        jnc     Unnamed_1_53B5                          ; 589F _ 0F 83, FFFFFD50
        mov     r12, rbx                                ; 58A5 _ 49: 89. DC
        mov     rcx, qword ptr [rsi]                    ; 58A8 _ 48: 8B. 0E
        mov     rdx, qword ptr [rbp-468H]               ; 58AB _ 48: 8B. 95, FFFFFB98
        mov     rbx, qword ptr [rbp-470H]               ; 58B2 _ 48: 8B. 9D, FFFFFB90
        mov     qword ptr [rcx+rdx], rbx                ; 58B9 _ 48: 89. 1C 11
        mov     dword ptr [rcx+rdx+8H], eax             ; 58BD _ 89. 44 11, 08
        mov     r9, r14                                 ; 58C1 _ 4D: 89. F1
        mov     r14, rdx                                ; 58C4 _ 49: 89. D6
        mov     rcx, qword ptr [rbp-448H]               ; 58C7 _ 48: 8B. 8D, FFFFFBB8
        mov     rdx, rdi                                ; 58CE _ 48: 89. FA
        lea     r8, ptr [?_497]                         ; 58D1 _ 4C: 8D. 05, 00002FC2(rel)
        call    Unnamed_1_4E34                          ; 58D8 _ E8, FFFFF797
        mov     r15, rax                                ; 58DD _ 49: 89. C7
        test    r15, r15                                ; 58E0 _ 4D: 85. FF
        js      Unnamed_1_53B5                          ; 58E3 _ 0F 88, FFFFFD0C
        mov     rcx, qword ptr [rbp-40H]                ; 58E9 _ 48: 8B. 4D, C0
        call    Unnamed_1_4EAF                          ; 58ED _ E8, FFFFF7FD
        mov     rcx, qword ptr [rsi]                    ; 58F2 _ 48: 8B. 0E
        mov     qword ptr [rcx+r14+10H], rax            ; 58F5 _ 4A: 89. 44 31, 10
        mov     rcx, qword ptr [rbp-448H]               ; 58FA _ 48: 8B. 8D, FFFFFBB8
        mov     rdx, rdi                                ; 5901 _ 48: 89. FA
        lea     r8, ptr [?_498]                         ; 5904 _ 4C: 8D. 05, 00002F9D(rel)
        lea     r9, ptr [rbp-40H]                       ; 590B _ 4C: 8D. 4D, C0
        call    Unnamed_1_4E34                          ; 590F _ E8, FFFFF760
        mov     r15, rax                                ; 5914 _ 49: 89. C7
        test    r15, r15                                ; 5917 _ 4D: 85. FF
        mov     rbx, r12                                ; 591A _ 4C: 89. E3
        js      Unnamed_1_53B5                          ; 591D _ 0F 88, FFFFFCD2
        mov     rcx, qword ptr [rbp-40H]                ; 5923 _ 48: 8B. 4D, C0
        mov     rdx, rbx                                ; 5927 _ 48: 89. DA
        call    Unnamed_1_505E                          ; 592A _ E8, FFFFF96F
        mov     r15, rax                                ; 592F _ 49: 89. C7
        test    r15, r15                                ; 5932 _ 4D: 85. FF
        js      Unnamed_1_53B5                          ; 5935 _ 0F 88, FFFFFCBA
        mov     rax, qword ptr [rsi]                    ; 593B _ 48: 8B. 06
        lea     rcx, ptr [rax+r14+18H]                  ; 593E _ 4A: 8D. 4C 30, 18
        mov     rax, qword ptr [?_578]                  ; 5943 _ 48: 8B. 05, 0000535E(rel)
        mov     rdx, rbx                                ; 594A _ 48: 89. DA
        mov     r8d, 16                                 ; 594D _ 41: B8, 00000010
        call    qword ptr [rax+160H]                    ; 5953 _ FF. 90, 00000160
        mov     rax, qword ptr [rsi]                    ; 5959 _ 48: 8B. 06
        mov     rbx, rsi                                ; 595C _ 48: 89. F3
        mov     byte ptr [rax+r14+30H], 0               ; 595F _ 42: C6. 44 30, 30, 00
        mov     rsi, r14                                ; 5965 _ 4C: 89. F6
        mov     rcx, qword ptr [rbp-448H]               ; 5968 _ 48: 8B. 8D, FFFFFBB8
        mov     rdx, rdi                                ; 596F _ 48: 89. FA
        lea     r8, ptr [?_499]                         ; 5972 _ 4C: 8D. 05, 00002F38(rel)
        lea     r14, ptr [rbp-40H]                      ; 5979 _ 4C: 8D. 75, C0
        mov     r9, r14                                 ; 597D _ 4D: 89. F1
        call    Unnamed_1_4E34                          ; 5980 _ E8, FFFFF6EF
        mov     r15, rax                                ; 5985 _ 49: 89. C7
        test    r15, r15                                ; 5988 _ 4D: 85. FF
        js      Unnamed_1_53B5                          ; 598B _ 0F 88, FFFFFC64
        mov     rcx, qword ptr [rbp-40H]                ; 5991 _ 48: 8B. 4D, C0
        call    Unnamed_1_4EAF                          ; 5995 _ E8, FFFFF755
        mov     r12, rbx                                ; 599A _ 49: 89. DC
        mov     rcx, qword ptr [r12]                    ; 599D _ 49: 8B. 0C 24
        mov     rdx, rsi                                ; 59A1 _ 48: 89. F2
        mov     qword ptr [rcx+rdx+28H], rax            ; 59A4 _ 48: 89. 44 11, 28
        xor     esi, esi                                ; 59A9 _ 31. F6
        mov     rbx, rdx                                ; 59AB _ 48: 89. D3
        mov     qword ptr [rbp-468H], rdx               ; 59AE _ 48: 89. 95, FFFFFB98
        lea     r15, ptr [?_501]                        ; 59B5 _ 4C: 8D. 3D, 00002F06(rel)
        jmp     ?_326                                   ; 59BC _ E9, FFFFFD83

?_329:  mov     rdx, qword ptr [rbp-450H]               ; 59C1 _ 48: 8B. 95, FFFFFBB0
        mov     rcx, qword ptr [rbp-448H]               ; 59C8 _ 48: 8B. 8D, FFFFFBB8
        call    Unnamed_1_4D8E                          ; 59CF _ E8, FFFFF5FA
        xor     r15d, r15d                              ; 59D4 _ 45: 31. FF
Unnamed_1_5797:
        mov     rax, r15                                ; 59D7 _ 4C: 89. F8
        add     rsp, 1128                               ; 59DA _ 48: 81. C4, 00000468
        pop     rbx                                     ; 59E1 _ 5B
        pop     rdi                                     ; 59E2 _ 5F
        pop     rsi                                     ; 59E3 _ 5E
        pop     r12                                     ; 59E4 _ 41: 5C
        pop     r13                                     ; 59E6 _ 41: 5D
        pop     r14                                     ; 59E8 _ 41: 5E
        pop     r15                                     ; 59EA _ 41: 5F
        pop     rbp                                     ; 59EC _ 5D
        ret                                             ; 59ED _ C3

?_330   LABEL NEAR
        mov     rdx, qword ptr [rbp-450H]               ; 59EE _ 48: 8B. 95, FFFFFBB0
        mov     rcx, qword ptr [rbp-448H]               ; 59F5 _ 48: 8B. 8D, FFFFFBB8
        call    Unnamed_1_4D8E                          ; 59FC _ E8, FFFFF5CD
        mov     r15, 8000000000000009H                  ; 5A01 _ 49: BF, 8000000000000009
        jmp     Unnamed_1_5797                          ; 5A0B _ EB, CA

?_331   LABEL NEAR
        push    rbp                                     ; 5A0D _ 55
        mov     rbp, rsp                                ; 5A0E _ 48: 89. E5
        push    rsi                                     ; 5A11 _ 56
        sub     rsp, 40                                 ; 5A12 _ 48: 83. EC, 28
        mov     rsi, r8                                 ; 5A16 _ 4C: 89. C6
        mov     rax, 800000000000000AH                  ; 5A19 _ 48: B8, 800000000000000A
        cmp     qword ptr [rcx+20H], rdx                ; 5A23 _ 48: 39. 51, 20
        jnz     ?_332                                   ; 5A27 _ 75, 2C
        mov     rax, qword ptr [?_580]                  ; 5A29 _ 48: 8B. 05, 00005288(rel)
        lea     r8, ptr [rbp-10H]                       ; 5A30 _ 4C: 8D. 45, F0
        call    qword ptr [rax+98H]                     ; 5A34 _ FF. 90, 00000098
        mov     rcx, qword ptr [rbp-10H]                ; 5A3A _ 48: 8B. 4D, F0
        mov     rax, qword ptr [?_578]                  ; 5A3E _ 48: 8B. 05, 00005263(rel)
        lea     rdx, ptr [?_512]                        ; 5A45 _ 48: 8D. 15, 000049D0(rel)
        mov     r8, rsi                                 ; 5A4C _ 49: 89. F0
        call    qword ptr [rax+98H]                     ; 5A4F _ FF. 90, 00000098
?_332:  add     rsp, 40                                 ; 5A55 _ 48: 83. C4, 28
        pop     rsi                                     ; 5A59 _ 5E
        pop     rbp                                     ; 5A5A _ 5D
        ret                                             ; 5A5B _ C3

Unnamed_1_581C LABEL NEAR
        push    rbp                                     ; 5A5C _ 55
        mov     rbp, rsp                                ; 5A5D _ 48: 89. E5
        push    rsi                                     ; 5A60 _ 56
        sub     rsp, 56                                 ; 5A61 _ 48: 83. EC, 38
        mov     esi, ecx                                ; 5A65 _ 89. CE
        mov     qword ptr [rbp-10H], 0                  ; 5A67 _ 48: C7. 45, F0, 00000000
        mov     rax, qword ptr [?_578]                  ; 5A6F _ 48: 8B. 05, 00005232(rel)
        lea     rcx, ptr [?_507]                        ; 5A76 _ 48: 8D. 0D, 0000494F(rel)
        lea     r8, ptr [rbp-10H]                       ; 5A7D _ 4C: 8D. 45, F0
        xor     edx, edx                                ; 5A81 _ 31. D2
        call    qword ptr [rax+140H]                    ; 5A83 _ FF. 90, 00000140
        test    rax, rax                                ; 5A89 _ 48: 85. C0
        js      Unnamed_1_5872                          ; 5A8C _ 78, 24
        mov     rax, qword ptr [rbp-10H]                ; 5A8E _ 48: 8B. 45, F0
        lea     rdx, ptr [rbp-14H]                      ; 5A92 _ 48: 8D. 55, EC
        mov     rcx, rax                                ; 5A96 _ 48: 89. C1
        xor     r8d, r8d                                ; 5A99 _ 45: 31. C0
        xor     r9d, r9d                                ; 5A9C _ 45: 31. C9
        call    qword ptr [rax]                         ; 5A9F _ FF. 10
        cmp     dword ptr [rbp-14H], esi                ; 5AA1 _ 39. 75, EC
        jz      Unnamed_1_5872                          ; 5AA4 _ 74, 0C
        mov     rax, qword ptr [rbp-10H]                ; 5AA6 _ 48: 8B. 45, F0
        mov     rcx, rax                                ; 5AAA _ 48: 89. C1
        mov     edx, esi                                ; 5AAD _ 89. F2
        call    qword ptr [rax+8H]                      ; 5AAF _ FF. 50, 08
Unnamed_1_5872:
        add     rsp, 56                                 ; 5AB2 _ 48: 83. C4, 38
        pop     rsi                                     ; 5AB6 _ 5E
        pop     rbp                                     ; 5AB7 _ 5D
        ret                                             ; 5AB8 _ C3

Unnamed_1_5879 LABEL NEAR
        push    rbp                                     ; 5AB9 _ 55
        mov     rbp, rsp                                ; 5ABA _ 48: 89. E5
        push    rsi                                     ; 5ABD _ 56
        sub     rsp, 120                                ; 5ABE _ 48: 83. EC, 78
        mov     qword ptr [rbp-30H], 0                  ; 5AC2 _ 48: C7. 45, D0, 00000000
        mov     qword ptr [rbp-28H], 0                  ; 5ACA _ 48: C7. 45, D8, 00000000
        mov     qword ptr [rbp-20H], 0                  ; 5AD2 _ 48: C7. 45, E0, 00000000
        mov     byte ptr [rbp-49H], 1                   ; 5ADA _ C6. 45, B7, 01
        call    Unnamed_1_73C                           ; 5ADE _ E8, FFFFAE99
        mov     rsi, rax                                ; 5AE3 _ 48: 89. C6
        test    rsi, rsi                                ; 5AE6 _ 48: 85. F6
        jne     Unnamed_1_5AA0                          ; 5AE9 _ 0F 85, 000001F1
        mov     qword ptr [rbp-48H], 1                  ; 5AEF _ 48: C7. 45, B8, 00000001
        mov     rax, qword ptr [?_579]                  ; 5AF7 _ 48: 8B. 05, 000051B2(rel)
        lea     rcx, ptr [rbp-49H]                      ; 5AFE _ 48: 8D. 4D, B7
        mov     qword ptr [rsp+20H], rcx                ; 5B02 _ 48: 89. 4C 24, 20
        lea     rcx, ptr [?_475]                        ; 5B07 _ 48: 8D. 0D, 00002634(rel)
        lea     rdx, ptr [?_528]                        ; 5B0E _ 48: 8D. 15, 00004A07(rel)
        lea     r9, ptr [rbp-48H]                       ; 5B15 _ 4C: 8D. 4D, B8
        xor     r8d, r8d                                ; 5B19 _ 45: 31. C0
        call    qword ptr [rax+48H]                     ; 5B1C _ FF. 50, 48
        mov     qword ptr [rbp-10H], 0                  ; 5B1F _ 48: C7. 45, F0, 00000000
        lea     rcx, ptr [?_524]                        ; 5B27 _ 48: 8D. 0D, 000049AE(rel)
        lea     r8, ptr [rbp-10H]                       ; 5B2E _ 4C: 8D. 45, F0
        mov     rax, qword ptr [?_578]                  ; 5B32 _ 48: 8B. 05, 0000516F(rel)
        xor     edx, edx                                ; 5B39 _ 31. D2
        call    qword ptr [rax+140H]                    ; 5B3B _ FF. 90, 00000140
        test    rax, rax                                ; 5B41 _ 48: 85. C0
        js      Unnamed_1_5918                          ; 5B44 _ 78, 12
        mov     rax, qword ptr [rbp-10H]                ; 5B46 _ 48: 8B. 45, F0
        test    rax, rax                                ; 5B4A _ 48: 85. C0
        jz      Unnamed_1_5918                          ; 5B4D _ 74, 09
        lea     rcx, ptr [rbp-14H]                      ; 5B4F _ 48: 8D. 4D, EC
        call    qword ptr [rax+8H]                      ; 5B53 _ FF. 50, 08
        jmp     ?_333                                   ; 5B56 _ EB, 22

Unnamed_1_5918:
        mov     dword ptr [rsp+20H], 0                  ; 5B58 _ C7. 44 24, 20, 00000000
        lea     rcx, ptr [rbp-14H]                      ; 5B60 _ 48: 8D. 4D, EC
        mov     edx, 191                                ; 5B64 _ BA, 000000BF
        mov     r8d, 191                                ; 5B69 _ 41: B8, 000000BF
        mov     r9d, 191                                ; 5B6F _ 41: B9, 000000BF
        call    Unnamed_1_A98                           ; 5B75 _ E8, FFFFB15E
?_333:  mov     edx, dword ptr [rbp-14H]                ; 5B7A _ 8B. 55, EC
        lea     rcx, ptr [rbp-30H]                      ; 5B7D _ 48: 8D. 4D, D0
        call    Unnamed_1_930                           ; 5B81 _ E8, FFFFAFEA
        mov     rsi, rax                                ; 5B86 _ 48: 89. C6
        test    rsi, rsi                                ; 5B89 _ 48: 85. F6
        jne     Unnamed_1_5AA0                          ; 5B8C _ 0F 85, 0000014E
        lea     rcx, ptr [?_535]                        ; 5B92 _ 48: 8D. 0D, 000049F3(rel)
        lea     rdx, ptr [rbp-40H]                      ; 5B99 _ 48: 8D. 55, C0
        call    Unnamed_1_9F8                           ; 5B9D _ E8, FFFFB096
        mov     rsi, rax                                ; 5BA2 _ 48: 89. C6
        test    rsi, rsi                                ; 5BA5 _ 48: 85. F6
        jne     Unnamed_1_5AA0                          ; 5BA8 _ 0F 85, 00000132
        mov     rax, qword ptr [rbp-30H]                ; 5BAE _ 48: 8B. 45, D0
        mov     edx, dword ptr [rax+0CH]                ; 5BB2 _ 8B. 50, 0C
        sub     edx, dword ptr [rbp-3CH]                ; 5BB5 _ 2B. 55, C4
        mov     ecx, edx                                ; 5BB8 _ 89. D1
        shr     ecx, 31                                 ; 5BBA _ C1. E9, 1F
        add     ecx, edx                                ; 5BBD _ 01. D1
        sar     ecx, 1                                  ; 5BBF _ D1. F9
        mov     dword ptr [rbp-38H], ecx                ; 5BC1 _ 89. 4D, C8
        lea     rcx, ptr [rbp-20H]                      ; 5BC4 _ 48: 8D. 4D, E0
        lea     rsi, ptr [?_535]                        ; 5BC8 _ 48: 8D. 35, 000049BD(rel)
        lea     r8, ptr [rbp-38H]                       ; 5BCF _ 4C: 8D. 45, C8
        mov     edx, dword ptr [rax+8H]                 ; 5BD3 _ 8B. 50, 08
        sub     edx, dword ptr [rbp-40H]                ; 5BD6 _ 2B. 55, C0
        mov     eax, edx                                ; 5BD9 _ 89. D0
        shr     eax, 31                                 ; 5BDB _ C1. E8, 1F
        add     eax, edx                                ; 5BDE _ 01. D0
        sar     eax, 1                                  ; 5BE0 _ D1. F8
        mov     dword ptr [rbp-34H], eax                ; 5BE2 _ 89. 45, CC
        mov     rdx, rsi                                ; 5BE5 _ 48: 89. F2
        call    Unnamed_1_852                           ; 5BE8 _ E8, FFFFAEA5
        mov     rsi, rax                                ; 5BED _ 48: 89. C6
        test    rsi, rsi                                ; 5BF0 _ 48: 85. F6
        jne     Unnamed_1_5AA0                          ; 5BF3 _ 0F 85, 000000E7
        mov     rdx, qword ptr [rbp-20H]                ; 5BF9 _ 48: 8B. 55, E0
        mov     rcx, qword ptr [rbp-30H]                ; 5BFD _ 48: 8B. 4D, D0
        call    Unnamed_1_96F                           ; 5C01 _ E8, FFFFAFA9
        mov     rsi, rax                                ; 5C06 _ 48: 89. C6
        test    rsi, rsi                                ; 5C09 _ 48: 85. F6
        jne     Unnamed_1_5AA0                          ; 5C0C _ 0F 85, 000000CE
        mov     qword ptr [rbp-20H], 0                  ; 5C12 _ 48: C7. 45, E0, 00000000
        movzx   eax, byte ptr [rbp-49H]                 ; 5C1A _ 0F B6. 45, B7
        mov     qword ptr [rsp+20H], 0                  ; 5C1E _ 48: C7. 44 24, 20, 00000000
        imul    edx, eax, 260                           ; 5C27 _ 69. D0, 00000104
        lea     rcx, ptr [rbp-28H]                      ; 5C2D _ 48: 8D. 4D, D8
        xor     r8d, r8d                                ; 5C31 _ 45: 31. C0
        mov     r9d, 100000                             ; 5C34 _ 41: B9, 000186A0
        call    ?_070                                   ; 5C3A _ E8, FFFFB201
        mov     rsi, rax                                ; 5C3F _ 48: 89. C6
        test    rsi, rsi                                ; 5C42 _ 48: 85. F6
        jne     Unnamed_1_5AA0                          ; 5C45 _ 0F 85, 00000095
        mov     rax, qword ptr [rbp-30H]                ; 5C4B _ 48: 8B. 45, D0
        mov     r8d, dword ptr [rax+0CH]                ; 5C4F _ 44: 8B. 40, 0C
        mov     rcx, qword ptr [rbp-28H]                ; 5C53 _ 48: 8B. 4D, D8
        sub     r8d, dword ptr [rcx+38H]                ; 5C57 _ 44: 2B. 41, 38
        mov     edx, r8d                                ; 5C5B _ 44: 89. C2
        shr     edx, 31                                 ; 5C5E _ C1. EA, 1F
        add     edx, r8d                                ; 5C61 _ 44: 01. C2
        sar     edx, 1                                  ; 5C64 _ D1. FA
        mov     dword ptr [rbp-38H], edx                ; 5C66 _ 89. 55, C8
        lea     rdx, ptr [rbp-38H]                      ; 5C69 _ 48: 8D. 55, C8
        mov     eax, dword ptr [rax+8H]                 ; 5C6D _ 8B. 40, 08
        sub     eax, dword ptr [rcx+34H]                ; 5C70 _ 2B. 41, 34
        movsxd  rax, eax                                ; 5C73 _ 48: 63. C0
        imul    rax, rax, 1374389535                    ; 5C76 _ 48: 69. C0, 51EB851F
        mov     rsi, rax                                ; 5C7D _ 48: 89. C6
        shr     rsi, 63                                 ; 5C80 _ 48: C1. EE, 3F
        sar     rax, 37                                 ; 5C84 _ 48: C1. F8, 25
        add     eax, esi                                ; 5C88 _ 01. F0
        imul    eax, eax, 85                            ; 5C8A _ 6B. C0, 55
        mov     dword ptr [rbp-34H], eax                ; 5C8D _ 89. 45, CC
        call    Unnamed_1_8A6                           ; 5C90 _ E8, FFFFAE51
        mov     rsi, rax                                ; 5C95 _ 48: 89. C6
        test    rsi, rsi                                ; 5C98 _ 48: 85. F6
        jnz     Unnamed_1_5AA0                          ; 5C9B _ 75, 43
        mov     rdx, qword ptr [rbp-28H]                ; 5C9D _ 48: 8B. 55, D8
        mov     rcx, qword ptr [rbp-30H]                ; 5CA1 _ 48: 8B. 4D, D0
        call    Unnamed_1_96F                           ; 5CA5 _ E8, FFFFAF05
        mov     rsi, rax                                ; 5CAA _ 48: 89. C6
        test    rsi, rsi                                ; 5CAD _ 48: 85. F6
        jnz     Unnamed_1_5AA0                          ; 5CB0 _ 75, 2E
        mov     rax, qword ptr [rbp-28H]                ; 5CB2 _ 48: 8B. 45, D8
        mov     qword ptr [?_562], rax                  ; 5CB6 _ 48: 89. 05, 00004F83(rel)
        mov     qword ptr [rbp-28H], 0                  ; 5CBD _ 48: C7. 45, D8, 00000000
        mov     rcx, qword ptr [rbp-30H]                ; 5CC5 _ 48: 8B. 4D, D0
        call    Unnamed_1_990                           ; 5CC9 _ E8, FFFFAF02
        mov     rsi, rax                                ; 5CCE _ 48: 89. C6
        test    rsi, rsi                                ; 5CD1 _ 48: 85. F6
        jnz     Unnamed_1_5AA0                          ; 5CD4 _ 75, 0A
        mov     qword ptr [rbp-30H], 0                  ; 5CD6 _ 48: C7. 45, D0, 00000000
        xor     esi, esi                                ; 5CDE _ 31. F6
Unnamed_1_5AA0:
        mov     rcx, qword ptr [rbp-28H]                ; 5CE0 _ 48: 8B. 4D, D8
        test    rcx, rcx                                ; 5CE4 _ 48: 85. C9
        jz      ?_334                                   ; 5CE7 _ 74, 05
        call    Unnamed_1_888                           ; 5CE9 _ E8, FFFFADDA
?_334:  mov     rcx, qword ptr [rbp-30H]                ; 5CEE _ 48: 8B. 4D, D0
        test    rcx, rcx                                ; 5CF2 _ 48: 85. C9
        jz      ?_335                                   ; 5CF5 _ 74, 05
        call    Unnamed_1_951                           ; 5CF7 _ E8, FFFFAE95
?_335:  mov     rax, rsi                                ; 5CFC _ 48: 89. F0
        add     rsp, 120                                ; 5CFF _ 48: 83. C4, 78
        pop     rsi                                     ; 5D03 _ 5E
        pop     rbp                                     ; 5D04 _ 5D
        ret                                             ; 5D05 _ C3

?_336   LABEL NEAR
        push    rbp                                     ; 5D06 _ 55
        mov     rbp, rsp                                ; 5D07 _ 48: 89. E5
        sub     rsp, 48                                 ; 5D0A _ 48: 83. EC, 30
        test    dl, dl                                  ; 5D0E _ 84. D2
        jz      ?_337                                   ; 5D10 _ 74, 0F
        xor     ecx, ecx                                ; 5D12 _ 31. C9
        call    Unnamed_1_581C                          ; 5D14 _ E8, FFFFFD43
        mov     al, byte ptr [?_583]                    ; 5D19 _ 8A. 05, 00004FA9(rel)
        jmp     ?_340                                   ; 5D1F _ EB, 5B

?_337:  mov     rax, qword ptr [?_578]                  ; 5D21 _ 48: 8B. 05, 00004F80(rel)
        lea     rdx, ptr [?_538]                        ; 5D28 _ 48: 8D. 15, 00004881(rel)
        lea     r8, ptr [rbp-8H]                        ; 5D2F _ 4C: 8D. 45, F8
        call    qword ptr [rax+98H]                     ; 5D33 _ FF. 90, 00000098
        test    rax, rax                                ; 5D39 _ 48: 85. C0
        jns     ?_339                                   ; 5D3C _ 79, 27
        call    Unnamed_1_5879                          ; 5D3E _ E8, FFFFFD76
        test    rax, rax                                ; 5D43 _ 48: 85. C0
        js      ?_338                                   ; 5D46 _ 78, 10
        mov     ecx, 1                                  ; 5D48 _ B9, 00000001
        call    Unnamed_1_581C                          ; 5D4D _ E8, FFFFFD0A
        xor     cl, cl                                  ; 5D52 _ 30. C9
        mov     al, 1                                   ; 5D54 _ B0, 01
        jmp     Unnamed_1_5B30                          ; 5D56 _ EB, 18

?_338:  xor     ecx, ecx                                ; 5D58 _ 31. C9
        call    Unnamed_1_581C                          ; 5D5A _ E8, FFFFFCFD
        xor     al, al                                  ; 5D5F _ 30. C0
        mov     cl, al                                  ; 5D61 _ 88. C1
        jmp     Unnamed_1_5B30                          ; 5D63 _ EB, 0B

?_339:  xor     ecx, ecx                                ; 5D65 _ 31. C9
        call    Unnamed_1_581C                          ; 5D67 _ E8, FFFFFCF0
        mov     cl, 1                                   ; 5D6C _ B1, 01
        xor     al, al                                  ; 5D6E _ 30. C0
Unnamed_1_5B30:
        mov     byte ptr [?_584], cl                    ; 5D70 _ 88. 0D, 00004F53(rel)
        mov     byte ptr [?_583], al                    ; 5D76 _ 88. 05, 00004F4C(rel)
?_340:  movzx   eax, al                                 ; 5D7C _ 0F B6. C0
        add     rsp, 48                                 ; 5D7F _ 48: 83. C4, 30
        pop     rbp                                     ; 5D83 _ 5D
        ret                                             ; 5D84 _ C3

Unnamed_1_5B45 LABEL NEAR
        test    rcx, rcx                                ; 5D85 _ 48: 85. C9
        js      ?_341                                   ; 5D88 _ 78, 07
        mov     qword ptr [?_585], rcx                  ; 5D8A _ 48: 89. 0D, 00004F3F(rel)
?_341:  cmp     byte ptr [?_583], 0                     ; 5D91 _ 80. 3D, 00004F30(rel), 00
        jz      ?_342                                   ; 5D98 _ 74, 0C
        mov     rcx, qword ptr [?_562]                  ; 5D9A _ 48: 8B. 0D, 00004E9F(rel)
        test    rcx, rcx                                ; 5DA1 _ 48: 85. C9
        jnz     ?_343                                   ; 5DA4 _ 75, 01
?_342:  ret                                             ; 5DA6 _ C3

?_343   LABEL NEAR
        mov     rdx, qword ptr [?_585]                  ; 5DA7 _ 48: 8B. 15, 00004F22(rel)
        jmp     ?_141                                   ; 5DAE _ E9, FFFFC09D

Unnamed_1_5B73 LABEL NEAR
        push    rbp                                     ; 5DB3 _ 55
        mov     rbp, rsp                                ; 5DB4 _ 48: 89. E5
        push    rsi                                     ; 5DB7 _ 56
        sub     rsp, 72                                 ; 5DB8 _ 48: 83. EC, 48
        mov     esi, ecx                                ; 5DBC _ 89. CE
; Note: Memory operand is misaligned. Performance penalty
        mov     rax, qword ptr [?_477]                  ; 5DBE _ 48: 8B. 05, 00002397(rel)
        mov     qword ptr [rbp-18H], rax                ; 5DC5 _ 48: 89. 45, E8
; Note: Memory operand is misaligned. Performance penalty
        mov     rax, qword ptr [?_476]                  ; 5DC9 _ 48: 8B. 05, 00002384(rel)
        mov     qword ptr [rbp-20H], rax                ; 5DD0 _ 48: 89. 45, E0
        mov     rax, qword ptr [?_578]                  ; 5DD4 _ 48: 8B. 05, 00004ECD(rel)
        lea     rcx, ptr [rbp-20H]                      ; 5DDB _ 48: 8D. 4D, E0
        lea     r8, ptr [rbp-28H]                       ; 5DDF _ 4C: 8D. 45, D8
        xor     edx, edx                                ; 5DE3 _ 31. D2
        call    qword ptr [rax+140H]                    ; 5DE5 _ FF. 90, 00000140
        test    rax, rax                                ; 5DEB _ 48: 85. C0
        js      ?_345                                   ; 5DEE _ 78, 20
        mov     rax, qword ptr [rbp-28H]                ; 5DF0 _ 48: 8B. 45, D8
        test    sil, sil                                ; 5DF4 _ 40: 84. F6
        jz      ?_344                                   ; 5DF7 _ 74, 08
        mov     rcx, rax                                ; 5DF9 _ 48: 89. C1
        call    qword ptr [rax+8H]                      ; 5DFC _ FF. 50, 08
        jmp     Unnamed_1_5BE1                          ; 5DFF _ EB, 20

?_344:  lea     rdx, ptr [rbp-0CH]                      ; 5E01 _ 48: 8D. 55, F4
        lea     r8, ptr [rbp-10H]                       ; 5E05 _ 4C: 8D. 45, F0
        mov     rcx, rax                                ; 5E09 _ 48: 89. C1
        call    qword ptr [rax]                         ; 5E0C _ FF. 10
        jmp     Unnamed_1_5BE1                          ; 5E0E _ EB, 11

?_345:  mov     rcx, 800000000000000EH                  ; 5E10 _ 48: B9, 800000000000000E
        cmp     rax, rcx                                ; 5E1A _ 48: 39. C8
        jnz     Unnamed_1_5BE1                          ; 5E1D _ 75, 02
        xor     eax, eax                                ; 5E1F _ 31. C0
Unnamed_1_5BE1:
        add     rsp, 72                                 ; 5E21 _ 48: 83. C4, 48
        pop     rsi                                     ; 5E25 _ 5E
        pop     rbp                                     ; 5E26 _ 5D
        ret                                             ; 5E27 _ C3

Unnamed_1_5BE8 LABEL NEAR
        push    rbp                                     ; 5E28 _ 55
        mov     rbp, rsp                                ; 5E29 _ 48: 89. E5
        push    r15                                     ; 5E2C _ 41: 57
        push    r14                                     ; 5E2E _ 41: 56
        push    r13                                     ; 5E30 _ 41: 55
        push    r12                                     ; 5E32 _ 41: 54
        push    rsi                                     ; 5E34 _ 56
        push    rdi                                     ; 5E35 _ 57
        push    rbx                                     ; 5E36 _ 53
        sub     rsp, 120                                ; 5E37 _ 48: 83. EC, 78
        mov     qword ptr [rbp-88H], r8                 ; 5E3B _ 4C: 89. 85, FFFFFF78
        mov     qword ptr [rbp-70H], rdx                ; 5E42 _ 48: 89. 55, 90
        mov     rax, qword ptr [rcx+10H]                ; 5E46 _ 48: 8B. 41, 10
        mov     qword ptr [rbp-68H], rcx                ; 5E4A _ 48: 89. 4D, 98
        mov     qword ptr [rbp-40H], rax                ; 5E4E _ 48: 89. 45, C0
        mov     rax, qword ptr [?_563]                  ; 5E52 _ 48: 8B. 05, 00004DEF(rel)
        test    rax, rax                                ; 5E59 _ 48: 85. C0
        jnz     ?_346                                   ; 5E5C _ 75, 1F
        call    Unnamed_1_65BE                          ; 5E5E _ E8, 0000099B
        mov     qword ptr [?_563], rax                  ; 5E63 _ 48: 89. 05, 00004DDE(rel)
        mov     rdi, 800000000000000EH                  ; 5E6A _ 48: BF, 800000000000000E
        test    rax, rax                                ; 5E74 _ 48: 85. C0
        je      Unnamed_1_5E55                          ; 5E77 _ 0F 84, 00000218
?_346:  mov     ecx, dword ptr [rax+10H]                ; 5E7D _ 8B. 48, 10
        mov     qword ptr [rbp-50H], rcx                ; 5E80 _ 48: 89. 4D, B0
        call    Unnamed_1_CB                            ; 5E84 _ E8, FFFFA482
        mov     rdi, 8000000000000009H                  ; 5E89 _ 48: BF, 8000000000000009
        test    rax, rax                                ; 5E93 _ 48: 85. C0
        mov     qword ptr [rbp-58H], rax                ; 5E96 _ 48: 89. 45, A8
        je      Unnamed_1_5E55                          ; 5E9A _ 0F 84, 000001F5
        mov     rax, qword ptr [rbp-40H]                ; 5EA0 _ 48: 8B. 45, C0
        mov     rcx, qword ptr [rbp-88H]                ; 5EA4 _ 48: 8B. 8D, FFFFFF78
        lea     r15, ptr [rcx+rax-1H]                   ; 5EAB _ 4C: 8D. 7C 01, FF
        mov     qword ptr [rbp-90H], r15                ; 5EB0 _ 4C: 89. BD, FFFFFF70
        xor     edi, edi                                ; 5EB7 _ 31. FF
        mov     eax, 4294967295                         ; 5EB9 _ B8, FFFFFFFF
        cmp     r15, rax                                ; 5EBE _ 49: 39. C7
        mov     qword ptr [rbp-60H], rdi                ; 5EC1 _ 48: 89. 7D, A0
        jnz     Unnamed_1_5CE3                          ; 5EC5 _ 75, 5C
        mov     qword ptr [rbp-60H], 0                  ; 5EC7 _ 48: C7. 45, A0, 00000000
        cmp     byte ptr [?_581], 0                     ; 5ECF _ 80. 3D, 00004DEA(rel), 00
        jz      Unnamed_1_5CE3                          ; 5ED6 _ 74, 4B
        mov     eax, dword ptr [?_582]                  ; 5ED8 _ 8B. 05, 00004DE6(rel)
        test    eax, eax                                ; 5EDE _ 85. C0
        jz      Unnamed_1_5CE3                          ; 5EE0 _ 74, 41
        mov     rax, qword ptr [rbp-68H]                ; 5EE2 _ 48: 8B. 45, 98
        lea     rcx, ptr [rax+18H]                      ; 5EE6 _ 48: 8D. 48, 18
        lea     rdx, ptr [?_526]                        ; 5EEA _ 48: 8D. 15, 0000460B(rel)
        call    Unnamed_1_1FD                           ; 5EF1 _ E8, FFFFA547
        mov     qword ptr [rbp-60H], 0                  ; 5EF6 _ 48: C7. 45, A0, 00000000
        test    al, al                                  ; 5EFE _ 84. C0
        jz      Unnamed_1_5CE3                          ; 5F00 _ 74, 21
        mov     eax, dword ptr [?_582]                  ; 5F02 _ 8B. 05, 00004DBC(rel)
        mov     rsi, r15                                ; 5F08 _ 4C: 89. FE
        sub     rsi, rax                                ; 5F0B _ 48: 29. C6
        inc     rsi                                     ; 5F0E _ 48: FF. C6
        lea     rcx, ptr [?_478]                        ; 5F11 _ 48: 8D. 0D, 0000224C(rel)
        mov     edx, esi                                ; 5F18 _ 89. F2
        mov     qword ptr [rbp-60H], rsi                ; 5F1A _ 48: 89. 75, A0
        call    Unnamed_1_B95                           ; 5F1E _ E8, FFFFAEB2
Unnamed_1_5CE3:
        mov     rsi, qword ptr [rbp-50H]                ; 5F23 _ 48: 8B. 75, B0
        neg     rsi                                     ; 5F27 _ 48: F7. DE
        and     rsi, qword ptr [rbp-40H]                ; 5F2A _ 48: 23. 75, C0
        cmp     rsi, r15                                ; 5F2E _ 4C: 39. FE
        ja      Unnamed_1_5E47                          ; 5F31 _ 0F 87, 00000150
        mov     rax, qword ptr [rbp-88H]                ; 5F37 _ 48: 8B. 85, FFFFFF78
        add     rax, qword ptr [rbp-40H]                ; 5F3E _ 48: 03. 45, C0
        mov     qword ptr [rbp-88H], rax                ; 5F42 _ 48: 89. 85, FFFFFF78
        mov     r13, rsi                                ; 5F49 _ 49: 89. F5
        neg     r13                                     ; 5F4C _ 49: F7. DD
        xor     r14d, r14d                              ; 5F4F _ 45: 31. F6
        mov     byte ptr [rbp-41H], 0                   ; 5F52 _ C6. 45, BF, 00
?_347:  mov     rax, qword ptr [rbp-88H]                ; 5F56 _ 48: 8B. 85, FFFFFF78
        lea     r12, ptr [rax+r13]                      ; 5F5D _ 4E: 8D. 24 28
        mov     rdi, qword ptr [rbp-50H]                ; 5F61 _ 48: 8B. 7D, B0
        lea     rax, ptr [rdi+rsi]                      ; 5F65 _ 48: 8D. 04 37
        cmp     r15, rax                                ; 5F69 _ 49: 39. C7
        mov     qword ptr [rbp-80H], rax                ; 5F6C _ 48: 89. 45, 80
        cmovnc  r12, rdi                                ; 5F70 _ 4C: 0F 43. E7
        lea     rax, ptr [r12+rsi]                      ; 5F74 _ 49: 8D. 04 34
        mov     r15, rax                                ; 5F78 _ 49: 89. C7
        mov     qword ptr [rbp-78H], rax                ; 5F7B _ 48: 89. 45, 88
        mov     rbx, qword ptr [rbp-40H]                ; 5F7F _ 48: 8B. 5D, C0
        sub     r15, rbx                                ; 5F83 _ 49: 29. DF
        mov     rcx, rsi                                ; 5F86 _ 48: 89. F1
        mov     rdx, r15                                ; 5F89 _ 4C: 89. FA
        call    Unnamed_1_4204                          ; 5F8C _ E8, FFFFE4B3
        mov     rax, rbx                                ; 5F91 _ 48: 89. D8
        sub     rax, r12                                ; 5F94 _ 4C: 29. E0
        add     rax, rdi                                ; 5F97 _ 48: 01. F8
        cmp     rax, rsi                                ; 5F9A _ 48: 39. F0
        jnz     ?_348                                   ; 5F9D _ 75, 34
        cmp     byte ptr [rbp-41H], 0                   ; 5F9F _ 80. 7D, BF, 00
        jnz     Unnamed_1_5D7E                          ; 5FA3 _ 75, 19
        cmp     rsi, qword ptr [rbp-60H]                ; 5FA5 _ 48: 3B. 75, A0
        jc      Unnamed_1_5D7E                          ; 5FA9 _ 72, 13
        mov     al, byte ptr [?_581]                    ; 5FAB _ 8A. 05, 00004D0F(rel)
        test    al, al                                  ; 5FB1 _ 84. C0
        jz      Unnamed_1_5D7E                          ; 5FB3 _ 74, 09
        call    Unnamed_1_6530                          ; 5FB5 _ E8, 000007B6
        mov     byte ptr [rbp-41H], 1                   ; 5FBA _ C6. 45, BF, 01
Unnamed_1_5D7E:
        mov     rax, qword ptr [rbp-70H]                ; 5FBE _ 48: 8B. 45, 90
        lea     r9, ptr [rax+r14]                       ; 5FC2 _ 4E: 8D. 0C 30
        mov     rcx, qword ptr [rbp-68H]                ; 5FC6 _ 48: 8B. 4D, 98
        mov     rdx, rsi                                ; 5FCA _ 48: 89. F2
        mov     r8, qword ptr [rbp-50H]                 ; 5FCD _ 4C: 8B. 45, B0
        jmp     ?_349                                   ; 5FD1 _ EB, 6C

?_348:  mov     rax, qword ptr [?_563]                  ; 5FD3 _ 48: 8B. 05, 00004C6E(rel)
        mov     rcx, rsi                                ; 5FDA _ 48: 89. F1
        mov     rdx, qword ptr [rbp-58H]                ; 5FDD _ 48: 8B. 55, A8
        call    qword ptr [rax+28H]                     ; 5FE1 _ FF. 50, 28
        mov     rdi, rax                                ; 5FE4 _ 48: 89. C7
        test    rdi, rdi                                ; 5FE7 _ 48: 85. FF
        jnz     ?_350                                   ; 5FEA _ 75, 5B
        mov     rax, qword ptr [rbp-70H]                ; 5FEC _ 48: 8B. 45, 90
        lea     rdx, ptr [rax+r14]                      ; 5FF0 _ 4A: 8D. 14 30
        mov     rax, qword ptr [rbp-40H]                ; 5FF4 _ 48: 8B. 45, C0
        lea     rcx, ptr [r13+rax]                      ; 5FF8 _ 49: 8D. 4C 05, 00
        add     rcx, qword ptr [rbp-58H]                ; 5FFD _ 48: 03. 4D, A8
        mov     rax, qword ptr [?_578]                  ; 6001 _ 48: 8B. 05, 00004CA0(rel)
        mov     r8, r15                                 ; 6008 _ 4D: 89. F8
        call    qword ptr [rax+160H]                    ; 600B _ FF. 90, 00000160
        cmp     byte ptr [rbp-41H], 0                   ; 6011 _ 80. 7D, BF, 00
        jnz     Unnamed_1_5DF0                          ; 6015 _ 75, 19
        cmp     rsi, qword ptr [rbp-60H]                ; 6017 _ 48: 3B. 75, A0
        jc      Unnamed_1_5DF0                          ; 601B _ 72, 13
        mov     al, byte ptr [?_581]                    ; 601D _ 8A. 05, 00004C9D(rel)
        test    al, al                                  ; 6023 _ 84. C0
        jz      Unnamed_1_5DF0                          ; 6025 _ 74, 09
        call    Unnamed_1_6530                          ; 6027 _ E8, 00000744
        mov     byte ptr [rbp-41H], 1                   ; 602C _ C6. 45, BF, 01
Unnamed_1_5DF0:
        mov     rcx, qword ptr [rbp-68H]                ; 6030 _ 48: 8B. 4D, 98
        mov     rdx, rsi                                ; 6034 _ 48: 89. F2
        mov     r8, qword ptr [rbp-50H]                 ; 6037 _ 4C: 8B. 45, B0
        mov     r9, qword ptr [rbp-58H]                 ; 603B _ 4C: 8B. 4D, A8
?_349:  call    ?_352                                   ; 603F _ E8, 00000065
        mov     rdi, rax                                ; 6044 _ 48: 89. C7
?_350:  test    rdi, rdi                                ; 6047 _ 48: 85. FF
        mov     r15, qword ptr [rbp-90H]                ; 604A _ 4C: 8B. BD, FFFFFF70
        jnz     ?_351                                   ; 6051 _ 75, 29
        add     r12, r14                                ; 6053 _ 4D: 01. F4
        sub     rsi, qword ptr [rbp-40H]                ; 6056 _ 48: 2B. 75, C0
        mov     r14, rsi                                ; 605A _ 49: 89. F6
        add     r14, r12                                ; 605D _ 4D: 01. E6
        sub     r13, qword ptr [rbp-50H]                ; 6060 _ 4C: 2B. 6D, B0
        mov     rax, qword ptr [rbp-80H]                ; 6064 _ 48: 8B. 45, 80
        cmp     rax, r15                                ; 6068 _ 4C: 39. F8
        mov     rsi, rax                                ; 606B _ 48: 89. C6
        mov     rax, qword ptr [rbp-78H]                ; 606E _ 48: 8B. 45, 88
        mov     qword ptr [rbp-40H], rax                ; 6072 _ 48: 89. 45, C0
        jbe     ?_347                                   ; 6076 _ 0F 86, FFFFFEDA
?_351:  cmp     byte ptr [rbp-41H], 0                   ; 607C _ 80. 7D, BF, 00
        jz      Unnamed_1_5E47                          ; 6080 _ 74, 05
        call    Unnamed_1_6530                          ; 6082 _ E8, 000006E9
Unnamed_1_5E47:
        mov     rax, qword ptr [?_578]                  ; 6087 _ 48: 8B. 05, 00004C1A(rel)
        mov     rcx, qword ptr [rbp-58H]                ; 608E _ 48: 8B. 4D, A8
        call    qword ptr [rax+48H]                     ; 6092 _ FF. 50, 48
Unnamed_1_5E55:
        mov     rax, rdi                                ; 6095 _ 48: 89. F8
        add     rsp, 120                                ; 6098 _ 48: 83. C4, 78
        pop     rbx                                     ; 609C _ 5B
        pop     rdi                                     ; 609D _ 5F
        pop     rsi                                     ; 609E _ 5E
        pop     r12                                     ; 609F _ 41: 5C
        pop     r13                                     ; 60A1 _ 41: 5D
        pop     r14                                     ; 60A3 _ 41: 5E
        pop     r15                                     ; 60A5 _ 41: 5F
        pop     rbp                                     ; 60A7 _ 5D
        ret                                             ; 60A8 _ C3

?_352   LABEL NEAR
        push    rbp                                     ; 60A9 _ 55
        mov     rbp, rsp                                ; 60AA _ 48: 89. E5
        push    r15                                     ; 60AD _ 41: 57
        push    r14                                     ; 60AF _ 41: 56
        push    rsi                                     ; 60B1 _ 56
        push    rdi                                     ; 60B2 _ 57
        push    rbx                                     ; 60B3 _ 53
        sub     rsp, 40                                 ; 60B4 _ 48: 83. EC, 28
        mov     r15, r9                                 ; 60B8 _ 4D: 89. CF
        mov     rdi, rdx                                ; 60BB _ 48: 89. D7
        mov     r14, rcx                                ; 60BE _ 49: 89. CE
        mov     ebx, r8d                                ; 60C1 _ 44: 89. C3
        mov     rcx, rbx                                ; 60C4 _ 48: 89. D9
        call    Unnamed_1_CB                            ; 60C7 _ E8, FFFFA23F
        mov     rsi, rax                                ; 60CC _ 48: 89. C6
        mov     rax, 8000000000000009H                  ; 60CF _ 48: B8, 8000000000000009
        test    rsi, rsi                                ; 60D9 _ 48: 85. F6
        jz      Unnamed_1_5ED1                          ; 60DC _ 74, 33
        mov     rax, qword ptr [?_563]                  ; 60DE _ 48: 8B. 05, 00004B63(rel)
        mov     rcx, rdi                                ; 60E5 _ 48: 89. F9
        mov     rdx, rsi                                ; 60E8 _ 48: 89. F2
        call    qword ptr [rax+28H]                     ; 60EB _ FF. 50, 28
        test    rax, rax                                ; 60EE _ 48: 85. C0
        jnz     Unnamed_1_5ED1                          ; 60F1 _ 75, 1E
        mov     qword ptr [rsp+20H], r14                ; 60F3 _ 4C: 89. 74 24, 20
        mov     rcx, rdi                                ; 60F8 _ 48: 89. F9
        mov     rdx, rbx                                ; 60FB _ 48: 89. DA
        mov     r8, r15                                 ; 60FE _ 4D: 89. F8
        mov     r9, rsi                                 ; 6101 _ 49: 89. F1
        call    Unnamed_1_42C9                          ; 6104 _ E8, FFFFE400
        mov     cl, al                                  ; 6109 _ 88. C1
        xor     eax, eax                                ; 610B _ 31. C0
        test    cl, cl                                  ; 610D _ 84. C9
        jz      ?_353                                   ; 610F _ 74, 0D
Unnamed_1_5ED1:
        add     rsp, 40                                 ; 6111 _ 48: 83. C4, 28
        pop     rbx                                     ; 6115 _ 5B
        pop     rdi                                     ; 6116 _ 5F
        pop     rsi                                     ; 6117 _ 5E
        pop     r14                                     ; 6118 _ 41: 5E
        pop     r15                                     ; 611A _ 41: 5F
        pop     rbp                                     ; 611C _ 5D
        ret                                             ; 611D _ C3

?_353   LABEL NEAR
        mov     ecx, 1                                  ; 611E _ B9, 00000001
        call    Unnamed_1_4705                          ; 6123 _ E8, FFFFE81D
        mov     rax, qword ptr [?_563]                  ; 6128 _ 48: 8B. 05, 00004B19(rel)
        mov     rax, qword ptr [rax+40H]                ; 612F _ 48: 8B. 40, 40
        mov     rcx, rdi                                ; 6133 _ 48: 89. F9
        mov     rdx, r15                                ; 6136 _ 4C: 89. FA
        add     rsp, 40                                 ; 6139 _ 48: 83. C4, 28
        pop     rbx                                     ; 613D _ 5B
        pop     rdi                                     ; 613E _ 5F
        pop     rsi                                     ; 613F _ 5E
        pop     r14                                     ; 6140 _ 41: 5E
        pop     r15                                     ; 6142 _ 41: 5F
        pop     rbp                                     ; 6144 _ 5D
        jmp     rax                                     ; 6145 _ FF. E0

Unnamed_1_5F07 LABEL NEAR
        push    rbp                                     ; 6147 _ 55
        mov     rbp, rsp                                ; 6148 _ 48: 89. E5
        push    r15                                     ; 614B _ 41: 57
        push    r14                                     ; 614D _ 41: 56
        push    r13                                     ; 614F _ 41: 55
        push    r12                                     ; 6151 _ 41: 54
        push    rsi                                     ; 6153 _ 56
        push    rdi                                     ; 6154 _ 57
        push    rbx                                     ; 6155 _ 53
        sub     rsp, 40                                 ; 6156 _ 48: 83. EC, 28
        mov     rsi, rdx                                ; 615A _ 48: 89. D6
        mov     r15, rcx                                ; 615D _ 49: 89. CF
        mov     rcx, qword ptr [?_563]                  ; 6160 _ 48: 8B. 0D, 00004AE1(rel)
        test    rcx, rcx                                ; 6167 _ 48: 85. C9
        jnz     ?_354                                   ; 616A _ 75, 16
        call    Unnamed_1_65BE                          ; 616C _ E8, 0000068D
        mov     rcx, rax                                ; 6171 _ 48: 89. C1
        mov     qword ptr [?_563], rcx                  ; 6174 _ 48: 89. 0D, 00004ACD(rel)
        xor     eax, eax                                ; 617B _ 31. C0
        test    rcx, rcx                                ; 617D _ 48: 85. C9
        jz      Unnamed_1_5FC0                          ; 6180 _ 74, 7E
?_354:  mov     r12d, dword ptr [rcx+10H]               ; 6182 _ 44: 8B. 61, 10
        lea     rcx, ptr [r12+rsi]                      ; 6186 _ 49: 8D. 0C 34
        call    Unnamed_1_CB                            ; 618A _ E8, FFFFA17C
        mov     r13, rax                                ; 618F _ 49: 89. C5
        xor     eax, eax                                ; 6192 _ 31. C0
        test    r13, r13                                ; 6194 _ 4D: 85. ED
        jz      Unnamed_1_5FC0                          ; 6197 _ 74, 67
        lea     rdi, ptr [r15+rsi-1H]                   ; 6199 _ 49: 8D. 7C 37, FF
        mov     qword ptr [rbp-40H], rsi                ; 619E _ 48: 89. 75, C0
        mov     rsi, r12                                ; 61A2 _ 4C: 89. E6
        neg     rsi                                     ; 61A5 _ 48: F7. DE
        and     rsi, r15                                ; 61A8 _ 4C: 21. FE
        cmp     rsi, rdi                                ; 61AB _ 48: 39. FE
        ja      Unnamed_1_5F9B                          ; 61AE _ 77, 2B
        lea     rbx, ptr [rsi+r12]                      ; 61B0 _ 4A: 8D. 1C 26
        xor     r14d, r14d                              ; 61B4 _ 45: 31. F6
?_355:  lea     rcx, ptr [rsi+r14]                      ; 61B7 _ 4A: 8D. 0C 36
        lea     rdx, ptr [r13+r14]                      ; 61BB _ 4B: 8D. 54 35, 00
        mov     rax, qword ptr [?_563]                  ; 61C0 _ 48: 8B. 05, 00004A81(rel)
        call    qword ptr [rax+28H]                     ; 61C7 _ FF. 50, 28
        test    rax, rax                                ; 61CA _ 48: 85. C0
        jnz     Unnamed_1_5F9B                          ; 61CD _ 75, 0C
        lea     rax, ptr [rbx+r14]                      ; 61CF _ 4A: 8D. 04 33
        add     r14, r12                                ; 61D3 _ 4D: 01. E6
        cmp     rax, rdi                                ; 61D6 _ 48: 39. F8
        jbe     ?_355                                   ; 61D9 _ 76, DC
Unnamed_1_5F9B:
        cmp     rsi, r15                                ; 61DB _ 4C: 39. FE
        jz      ?_356                                   ; 61DE _ 74, 1D
        sub     r15, rsi                                ; 61E0 _ 49: 29. F7
        add     r15, r13                                ; 61E3 _ 4D: 01. EF
        mov     rax, qword ptr [?_578]                  ; 61E6 _ 48: 8B. 05, 00004ABB(rel)
        mov     rcx, r13                                ; 61ED _ 4C: 89. E9
        mov     rdx, r15                                ; 61F0 _ 4C: 89. FA
        mov     r8, qword ptr [rbp-40H]                 ; 61F3 _ 4C: 8B. 45, C0
        call    qword ptr [rax+160H]                    ; 61F7 _ FF. 90, 00000160
?_356:  mov     rax, r13                                ; 61FD _ 4C: 89. E8
Unnamed_1_5FC0:
        add     rsp, 40                                 ; 6200 _ 48: 83. C4, 28
        pop     rbx                                     ; 6204 _ 5B
        pop     rdi                                     ; 6205 _ 5F
        pop     rsi                                     ; 6206 _ 5E
        pop     r12                                     ; 6207 _ 41: 5C
        pop     r13                                     ; 6209 _ 41: 5D
        pop     r14                                     ; 620B _ 41: 5E
        pop     r15                                     ; 620D _ 41: 5F
        pop     rbp                                     ; 620F _ 5D
        ret                                             ; 6210 _ C3

Unnamed_1_5FD1 LABEL NEAR
        push    rbp                                     ; 6211 _ 55
        mov     rbp, rsp                                ; 6212 _ 48: 89. E5
        push    r15                                     ; 6215 _ 41: 57
        push    r14                                     ; 6217 _ 41: 56
        push    r12                                     ; 6219 _ 41: 54
        push    rsi                                     ; 621B _ 56
        push    rdi                                     ; 621C _ 57
        push    rbx                                     ; 621D _ 53
        sub     rsp, 32                                 ; 621E _ 48: 83. EC, 20
        mov     r12, r8                                 ; 6222 _ 4D: 89. C4
        mov     r14, rdx                                ; 6225 _ 49: 89. D6
        mov     rbx, rcx                                ; 6228 _ 48: 89. CB
        mov     rcx, qword ptr [rbx+10H]                ; 622B _ 48: 8B. 4B, 10
        mov     rdx, r12                                ; 622F _ 4C: 89. E2
        call    Unnamed_1_5F07                          ; 6232 _ E8, FFFFFF10
        mov     rdi, rax                                ; 6237 _ 48: 89. C7
        test    rdi, rdi                                ; 623A _ 48: 85. FF
        jz      ?_357                                   ; 623D _ 74, 31
        lea     rsi, ptr [rbx+34H]                      ; 623F _ 48: 8D. 73, 34
        mov     rcx, r14                                ; 6243 _ 4C: 89. F1
        mov     rdx, rsi                                ; 6246 _ 48: 89. F2
        call    Unnamed_1_6069                          ; 6249 _ E8, 0000005B
        mov     r15d, eax                               ; 624E _ 41: 89. C7
        mov     rcx, rdi                                ; 6251 _ 48: 89. F9
        mov     rdx, rsi                                ; 6254 _ 48: 89. F2
        call    Unnamed_1_6069                          ; 6257 _ E8, 0000004D
        mov     esi, eax                                ; 625C _ 89. C6
        mov     rax, qword ptr [?_578]                  ; 625E _ 48: 8B. 05, 00004A43(rel)
        mov     rcx, rdi                                ; 6265 _ 48: 89. F9
        call    qword ptr [rax+48H]                     ; 6268 _ FF. 50, 48
        cmp     r15d, esi                               ; 626B _ 41: 39. F7
        jnz     ?_358                                   ; 626E _ 75, 1D
?_357:  mov     rcx, qword ptr [rbx+10H]                ; 6270 _ 48: 8B. 4B, 10
        mov     rdx, r12                                ; 6274 _ 4C: 89. E2
        call    Unnamed_1_4204                          ; 6277 _ E8, FFFFE1C8
        xor     eax, eax                                ; 627C _ 31. C0
        add     rsp, 32                                 ; 627E _ 48: 83. C4, 20
        pop     rbx                                     ; 6282 _ 5B
        pop     rdi                                     ; 6283 _ 5F
        pop     rsi                                     ; 6284 _ 5E
        pop     r12                                     ; 6285 _ 41: 5C
        pop     r14                                     ; 6287 _ 41: 5E
        pop     r15                                     ; 6289 _ 41: 5F
        pop     rbp                                     ; 628B _ 5D
        ret                                             ; 628C _ C3

?_358   LABEL NEAR
        mov     rcx, rbx                                ; 628D _ 48: 89. D9
        mov     rdx, r14                                ; 6290 _ 4C: 89. F2
        mov     r8, r12                                 ; 6293 _ 4D: 89. E0
        add     rsp, 32                                 ; 6296 _ 48: 83. C4, 20
        pop     rbx                                     ; 629A _ 5B
        pop     rdi                                     ; 629B _ 5F
        pop     rsi                                     ; 629C _ 5E
        pop     r12                                     ; 629D _ 41: 5C
        pop     r14                                     ; 629F _ 41: 5E
        pop     r15                                     ; 62A1 _ 41: 5F
        pop     rbp                                     ; 62A3 _ 5D
        jmp     Unnamed_1_5BE8                          ; 62A4 _ E9, FFFFFB7F

Unnamed_1_6069 LABEL NEAR
        push    rbp                                     ; 62A9 _ 55
        mov     rbp, rsp                                ; 62AA _ 48: 89. E5
        push    r15                                     ; 62AD _ 41: 57
        push    r14                                     ; 62AF _ 41: 56
        push    r12                                     ; 62B1 _ 41: 54
        push    rsi                                     ; 62B3 _ 56
        push    rdi                                     ; 62B4 _ 57
        push    rbx                                     ; 62B5 _ 53
        sub     rsp, 32                                 ; 62B6 _ 48: 83. EC, 20
        mov     r14, rdx                                ; 62BA _ 49: 89. D6
        mov     rsi, rcx                                ; 62BD _ 48: 89. CE
        movzx   r15d, word ptr [rsi+30H]                ; 62C0 _ 44: 0F B7. 7E, 30
        jmp     ?_360                                   ; 62C5 _ EB, 14

Unnamed_1_6087:
        mov     ecx, 8                                  ; 62C7 _ B9, 00000008
        sub     ecx, r12d                               ; 62CC _ 44: 29. E1
        add     ecx, ebx                                ; 62CF _ 01. D9
?_359:  xor     r8d, r8d                                ; 62D1 _ 45: 31. C0
        test    ecx, ecx                                ; 62D4 _ 85. C9
        jz      Unnamed_1_6111                          ; 62D6 _ 74, 79
        add     r15d, ecx                               ; 62D8 _ 41: 01. CF
?_360:  mov     edi, r15d                               ; 62DB _ 44: 89. FF
        xor     r8d, r8d                                ; 62DE _ 45: 31. C0
        cmp     rdi, qword ptr [rsi+20H]                ; 62E1 _ 48: 3B. 7E, 20
        jnc     Unnamed_1_6111                          ; 62E5 _ 73, 6A
        mov     r12d, dword ptr [rdi+rsi+14H]           ; 62E7 _ 44: 8B. 64 37, 14
        mov     ebx, r12d                               ; 62EC _ 44: 89. E3
        and     ebx, 0FFFFFFH                           ; 62EF _ 81. E3, 00FFFFFF
        lea     rcx, ptr [rdi+rsi]                      ; 62F5 _ 48: 8D. 0C 37
        mov     rdx, r14                                ; 62F9 _ 4C: 89. F2
        call    Unnamed_1_1FD                           ; 62FC _ E8, FFFFA13C
        test    al, al                                  ; 6301 _ 84. C0
        jnz     ?_361                                   ; 6303 _ 75, 0A
        and     r12d, 07H                               ; 6305 _ 41: 83. E4, 07
        jnz     Unnamed_1_6087                          ; 6309 _ 75, BC
        mov     ecx, ebx                                ; 630B _ 89. D9
        jmp     ?_359                                   ; 630D _ EB, C2

?_361:  xor     r8d, r8d                                ; 630F _ 45: 31. C0
        test    ebx, ebx                                ; 6312 _ 85. DB
        jz      Unnamed_1_6111                          ; 6314 _ 74, 3B
        lea     rcx, ptr [rsi+rdi+3EH]                  ; 6316 _ 48: 8D. 4C 3E, 3E
        xor     r8d, r8d                                ; 631B _ 45: 31. C0
        xor     edx, edx                                ; 631E _ 31. D2
?_362:  lea     rax, ptr [rdx-4H]                       ; 6320 _ 48: 8D. 42, FC
        cmp     rax, 2                                  ; 6324 _ 48: 83. F8, 02
        jc      ?_364                                   ; 6328 _ 72, 1E
        mov     al, byte ptr [rcx+rdx*2]                ; 632A _ 8A. 04 51
        mov     r9b, al                                 ; 632D _ 41: 88. C1
        add     r9b, -55                                ; 6330 _ 41: 80. C1, C9
        add     al, -48                                 ; 6334 _ 04, D0
        cmp     al, 9                                   ; 6336 _ 3C, 09
        ja      ?_363                                   ; 6338 _ 77, 03
        mov     r9b, al                                 ; 633A _ 41: 88. C1
?_363:  movzx   eax, r9b                                ; 633D _ 41: 0F B6. C1
        shl     r8d, 4                                  ; 6341 _ 41: C1. E0, 04
        or      r8d, eax                                ; 6345 _ 41: 09. C0
?_364:  inc     rdx                                     ; 6348 _ 48: FF. C2
        cmp     rdx, 8                                  ; 634B _ 48: 83. FA, 08
        jnz     ?_362                                   ; 634F _ 75, CF
Unnamed_1_6111:
        mov     eax, r8d                                ; 6351 _ 44: 89. C0
        add     rsp, 32                                 ; 6354 _ 48: 83. C4, 20
        pop     rbx                                     ; 6358 _ 5B
        pop     rdi                                     ; 6359 _ 5F
        pop     rsi                                     ; 635A _ 5E
        pop     r12                                     ; 635B _ 41: 5C
        pop     r14                                     ; 635D _ 41: 5E
        pop     r15                                     ; 635F _ 41: 5F
        pop     rbp                                     ; 6361 _ 5D
        ret                                             ; 6362 _ C3

Unnamed_1_6123 LABEL NEAR
        push    rbp                                     ; 6363 _ 55
        mov     rbp, rsp                                ; 6364 _ 48: 89. E5
        push    r14                                     ; 6367 _ 41: 56
        push    rsi                                     ; 6369 _ 56
        push    rdi                                     ; 636A _ 57
        push    rbx                                     ; 636B _ 53
        sub     rsp, 32                                 ; 636C _ 48: 83. EC, 20
        mov     r14, r8                                 ; 6370 _ 4D: 89. C6
        mov     rdi, rdx                                ; 6373 _ 48: 89. D7
        mov     rbx, rcx                                ; 6376 _ 48: 89. CB
        xor     ecx, ecx                                ; 6379 _ 31. C9
        call    Unnamed_1_5B73                          ; 637B _ E8, FFFFFA33
        mov     rsi, rax                                ; 6380 _ 48: 89. C6
        test    rsi, rsi                                ; 6383 _ 48: 85. F6
        jz      ?_365                                   ; 6386 _ 74, 11
        lea     rcx, ptr [?_479]                        ; 6388 _ 48: 8D. 0D, 00001E19(rel)
        mov     rdx, rsi                                ; 638F _ 48: 89. F2
        call    Unnamed_1_B95                           ; 6392 _ E8, FFFFAA3E
        jmp     ?_366                                   ; 6397 _ EB, 20

?_365:  call    ?_378                                   ; 6399 _ E8, 00000302
        mov     rcx, rbx                                ; 639E _ 48: 89. D9
        mov     rdx, rdi                                ; 63A1 _ 48: 89. FA
        mov     r8, r14                                 ; 63A4 _ 4D: 89. F0
        call    Unnamed_1_5BE8                          ; 63A7 _ E8, FFFFFA7C
        mov     rsi, rax                                ; 63AC _ 48: 89. C6
        mov     ecx, 1                                  ; 63AF _ B9, 00000001
        call    Unnamed_1_5B73                          ; 63B4 _ E8, FFFFF9FA
?_366:  mov     rax, rsi                                ; 63B9 _ 48: 89. F0
        add     rsp, 32                                 ; 63BC _ 48: 83. C4, 20
        pop     rbx                                     ; 63C0 _ 5B
        pop     rdi                                     ; 63C1 _ 5F
        pop     rsi                                     ; 63C2 _ 5E
        pop     r14                                     ; 63C3 _ 41: 5E
        pop     rbp                                     ; 63C5 _ 5D
        ret                                             ; 63C6 _ C3

Unnamed_1_6187 LABEL NEAR
        push    rbp                                     ; 63C7 _ 55
        mov     rbp, rsp                                ; 63C8 _ 48: 89. E5
        sub     rsp, 32                                 ; 63CB _ 48: 83. EC, 20
        mov     eax, dword ptr [rcx+8H]                 ; 63CF _ 8B. 41, 08
        cmp     eax, 5                                  ; 63D2 _ 83. F8, 05
        jz      ?_368                                   ; 63D5 _ 74, 1E
        cmp     eax, 4                                  ; 63D7 _ 83. F8, 04
        jz      ?_367                                   ; 63DA _ 74, 0F
        cmp     eax, 3                                  ; 63DC _ 83. F8, 03
        jnz     ?_369                                   ; 63DF _ 75, 1E
        add     rsp, 32                                 ; 63E1 _ 48: 83. C4, 20
        pop     rbp                                     ; 63E5 _ 5D
        jmp     Unnamed_1_5BE8                          ; 63E6 _ E9, FFFFFA3D

?_367:  add     rsp, 32                                 ; 63EB _ 48: 83. C4, 20
        pop     rbp                                     ; 63EF _ 5D
        jmp     Unnamed_1_5FD1                          ; 63F0 _ E9, FFFFFE1C

?_368:  add     rsp, 32                                 ; 63F5 _ 48: 83. C4, 20
        pop     rbp                                     ; 63F9 _ 5D
        jmp     Unnamed_1_6123                          ; 63FA _ E9, FFFFFF64

?_369   LABEL NEAR
        lea     rcx, ptr [?_480]                        ; 63FF _ 48: 8D. 0D, 00001E1C(rel)
        call    Unnamed_1_B95                           ; 6406 _ E8, FFFFA9CA
        mov     rax, 8000000000000002H                  ; 640B _ 48: B8, 8000000000000002
        add     rsp, 32                                 ; 6415 _ 48: 83. C4, 20
        pop     rbp                                     ; 6419 _ 5D
        ret                                             ; 641A _ C3

        nop                                             ; 641B _ 90

Unnamed_1_61DC LABEL NEAR
        push    rbp                                     ; 641C _ 55
        mov     rbp, rsp                                ; 641D _ 48: 89. E5
        push    r15                                     ; 6420 _ 41: 57
        push    r14                                     ; 6422 _ 41: 56
        push    r13                                     ; 6424 _ 41: 55
        push    r12                                     ; 6426 _ 41: 54
        push    rsi                                     ; 6428 _ 56
        push    rdi                                     ; 6429 _ 57
        push    rbx                                     ; 642A _ 53
        sub     rsp, 104                                ; 642B _ 48: 83. EC, 68
        mov     dword ptr [rbp-74H], 0                  ; 642F _ C7. 45, 8C, 00000000
        mov     rax, qword ptr [?_578]                  ; 6436 _ 48: 8B. 05, 0000486B(rel)
        lea     rcx, ptr [rbp-48H]                      ; 643D _ 48: 8D. 4D, B8
        mov     qword ptr [rsp+20H], rcx                ; 6441 _ 48: 89. 4C 24, 20
        lea     rdx, ptr [?_516]                        ; 6446 _ 48: 8D. 15, 0000400F(rel)
        xor     ebx, ebx                                ; 644D _ 31. DB
        lea     r9, ptr [rbp-40H]                       ; 644F _ 4C: 8D. 4D, C0
        mov     ecx, 2                                  ; 6453 _ B9, 00000002
        xor     r8d, r8d                                ; 6458 _ 45: 31. C0
        call    qword ptr [rax+138H]                    ; 645B _ FF. 90, 00000138
        test    rax, rax                                ; 6461 _ 48: 85. C0
        js      Unnamed_1_62F8                          ; 6464 _ 0F 88, 000000CE
        mov     qword ptr [rbp-50H], 0                  ; 646A _ 48: C7. 45, B0, 00000000
        lea     r14, ptr [?_516]                        ; 6472 _ 4C: 8D. 35, 00003FE3(rel)
        lea     r15, ptr [rbp-50H]                      ; 6479 _ 4C: 8D. 7D, B0
        lea     r13, ptr [rbp-70H]                      ; 647D _ 4C: 8D. 6D, 90
        lea     r12, ptr [rbp-58H]                      ; 6481 _ 4C: 8D. 65, A8
        lea     rsi, ptr [rbp-60H]                      ; 6485 _ 48: 8D. 75, A0
        lea     rdi, ptr [rbp-68H]                      ; 6489 _ 48: 8D. 7D, 98
        jmp     ?_370                                   ; 648D _ EB, 03

Unnamed_1_624F:
        inc     rbx                                     ; 648F _ 48: FF. C3
?_370:  cmp     rbx, qword ptr [rbp-40H]                ; 6492 _ 48: 3B. 5D, C0
        jnc     ?_371                                   ; 6496 _ 73, 5D
        mov     rax, qword ptr [rbp-48H]                ; 6498 _ 48: 8B. 45, B8
        mov     rcx, qword ptr [rax+rbx*8]              ; 649C _ 48: 8B. 0C D8
        mov     rax, qword ptr [?_578]                  ; 64A0 _ 48: 8B. 05, 00004801(rel)
        mov     rdx, r14                                ; 64A7 _ 4C: 89. F2
        mov     r8, r15                                 ; 64AA _ 4D: 89. F8
        call    qword ptr [rax+98H]                     ; 64AD _ FF. 90, 00000098
        test    rax, rax                                ; 64B3 _ 48: 85. C0
        js      Unnamed_1_624F                          ; 64B6 _ 78, D7
        mov     rax, qword ptr [rbp-50H]                ; 64B8 _ 48: 8B. 45, B0
        mov     qword ptr [rsp+20H], r13                ; 64BC _ 4C: 89. 6C 24, 20
        mov     rcx, rax                                ; 64C1 _ 48: 89. C1
        mov     rdx, r12                                ; 64C4 _ 4C: 89. E2
        mov     r8, rsi                                 ; 64C7 _ 49: 89. F0
        mov     r9, rdi                                 ; 64CA _ 49: 89. F9
        call    qword ptr [rax+70H]                     ; 64CD _ FF. 50, 70
        test    rax, rax                                ; 64D0 _ 48: 85. C0
        js      Unnamed_1_624F                          ; 64D3 _ 78, BA
        mov     rax, qword ptr [rbp-58H]                ; 64D5 _ 48: 8B. 45, A8
        test    rax, rax                                ; 64D9 _ 48: 85. C0
        jnz     Unnamed_1_624F                          ; 64DC _ 75, B1
        mov     rax, qword ptr [rbp-60H]                ; 64DE _ 48: 8B. 45, A0
        test    rax, rax                                ; 64E2 _ 48: 85. C0
        jnz     Unnamed_1_624F                          ; 64E5 _ 75, A8
        cmp     qword ptr [rbp-68H], 31                 ; 64E7 _ 48: 83. 7D, 98, 1F
        jnz     Unnamed_1_624F                          ; 64EC _ 75, A1
        cmp     qword ptr [rbp-70H], 0                  ; 64EE _ 48: 83. 7D, 90, 00
        jnz     Unnamed_1_624F                          ; 64F3 _ 75, 9A
?_371:  mov     rcx, qword ptr [rbp-48H]                ; 64F5 _ 48: 8B. 4D, B8
        mov     rax, qword ptr [?_578]                  ; 64F9 _ 48: 8B. 05, 000047A8(rel)
        call    qword ptr [rax+48H]                     ; 6500 _ FF. 50, 48
        mov     rax, qword ptr [rbp-50H]                ; 6503 _ 48: 8B. 45, B0
        test    rax, rax                                ; 6507 _ 48: 85. C0
        jz      Unnamed_1_62F8                          ; 650A _ 74, 2C
        lea     rcx, ptr [rbp-74H]                      ; 650C _ 48: 8D. 4D, 8C
        mov     qword ptr [rsp+20H], rcx                ; 6510 _ 48: 89. 4C 24, 20
        mov     rcx, rax                                ; 6515 _ 48: 89. C1
        mov     edx, 2                                  ; 6518 _ BA, 00000002
        mov     r8d, 240                                ; 651D _ 41: B8, 000000F0
        mov     r9d, 1                                  ; 6523 _ 41: B9, 00000001
        call    qword ptr [rax+30H]                     ; 6529 _ FF. 50, 30
        test    rax, rax                                ; 652C _ 48: 85. C0
        js      Unnamed_1_62F8                          ; 652F _ 78, 07
        and     dword ptr [rbp-74H], 0FFFFC000H         ; 6531 _ 81. 65, 8C, FFFFC000
Unnamed_1_62F8:
        mov     eax, dword ptr [rbp-74H]                ; 6538 _ 8B. 45, 8C
        add     rsp, 104                                ; 653B _ 48: 83. C4, 68
        pop     rbx                                     ; 653F _ 5B
        pop     rdi                                     ; 6540 _ 5F
        pop     rsi                                     ; 6541 _ 5E
        pop     r12                                     ; 6542 _ 41: 5C
        pop     r13                                     ; 6544 _ 41: 5D
        pop     r14                                     ; 6546 _ 41: 5E
        pop     r15                                     ; 6548 _ 41: 5F
        pop     rbp                                     ; 654A _ 5D
        ret                                             ; 654B _ C3

Unnamed_1_630C LABEL NEAR
        push    rbp                                     ; 654C _ 55
        mov     rbp, rsp                                ; 654D _ 48: 89. E5
        sub     rsp, 64                                 ; 6550 _ 48: 83. EC, 40
        mov     rax, qword ptr [?_564]                  ; 6554 _ 48: 8B. 05, 000046F5(rel)
        test    rax, rax                                ; 655B _ 48: 85. C0
        jne     ?_374                                   ; 655E _ 0F 85, 0000008D
        mov     qword ptr [rbp-10H], 0                  ; 6564 _ 48: C7. 45, F0, 00000000
        mov     rax, qword ptr [?_578]                  ; 656C _ 48: 8B. 05, 00004735(rel)
        lea     rcx, ptr [rbp-10H]                      ; 6573 _ 48: 8D. 4D, F0
        mov     qword ptr [rsp+20H], rcx                ; 6577 _ 48: 89. 4C 24, 20
        lea     rdx, ptr [?_517]                        ; 657C _ 48: 8D. 15, 00003EE9(rel)
        lea     r9, ptr [rbp-8H]                        ; 6583 _ 4C: 8D. 4D, F8
        mov     ecx, 2                                  ; 6587 _ B9, 00000002
        xor     r8d, r8d                                ; 658C _ 45: 31. C0
        call    qword ptr [rax+138H]                    ; 658F _ FF. 90, 00000138
        test    rax, rax                                ; 6595 _ 48: 85. C0
        js      Unnamed_1_638B                          ; 6598 _ 78, 31
        mov     rax, qword ptr [rbp-8H]                 ; 659A _ 48: 8B. 45, F8
        cmp     rax, 1                                  ; 659E _ 48: 83. F8, 01
        jnz     Unnamed_1_638B                          ; 65A2 _ 75, 27
        mov     rax, qword ptr [rbp-10H]                ; 65A4 _ 48: 8B. 45, F0
        mov     rcx, qword ptr [rax]                    ; 65A8 _ 48: 8B. 08
        mov     rax, qword ptr [?_578]                  ; 65AB _ 48: 8B. 05, 000046F6(rel)
        lea     rdx, ptr [?_517]                        ; 65B2 _ 48: 8D. 15, 00003EB3(rel)
        lea     r8, ptr [?_564]                         ; 65B9 _ 4C: 8D. 05, 00004690(rel)
        call    qword ptr [rax+98H]                     ; 65C0 _ FF. 90, 00000098
        test    rax, rax                                ; 65C6 _ 48: 85. C0
        jz      ?_372                                   ; 65C9 _ 74, 0C
Unnamed_1_638B:
        lea     rcx, ptr [?_481]                        ; 65CB _ 48: 8D. 0D, 00001CA6(rel)
        call    Unnamed_1_B95                           ; 65D2 _ E8, FFFFA7FE
?_372:  mov     rcx, qword ptr [rbp-10H]                ; 65D7 _ 48: 8B. 4D, F0
        test    rcx, rcx                                ; 65DB _ 48: 85. C9
        jz      ?_373                                   ; 65DE _ 74, 0A
        mov     rax, qword ptr [?_578]                  ; 65E0 _ 48: 8B. 05, 000046C1(rel)
        call    qword ptr [rax+48H]                     ; 65E7 _ FF. 50, 48
?_373:  mov     rax, qword ptr [?_564]                  ; 65EA _ 48: 8B. 05, 0000465F(rel)
?_374:  add     rsp, 64                                 ; 65F1 _ 48: 83. C4, 40
        pop     rbp                                     ; 65F5 _ 5D
        ret                                             ; 65F6 _ C3

Unnamed_1_63B7 LABEL NEAR
        push    rbp                                     ; 65F7 _ 55
        mov     rbp, rsp                                ; 65F8 _ 48: 89. E5
        sub     rsp, 48                                 ; 65FB _ 48: 83. EC, 30
        cmp     dword ptr [?_565], 0                    ; 65FF _ 83. 3D, 00004652(rel), 00
        jnz     Unnamed_1_6403                          ; 6606 _ 75, 3B
        call    Unnamed_1_630C                          ; 6608 _ E8, FFFFFF3F
        test    rax, rax                                ; 660D _ 48: 85. C0
        jnz     ?_375                                   ; 6610 _ 75, 0E
        lea     rcx, ptr [?_487]                        ; 6612 _ 48: 8D. 0D, 00001F33(rel)
        call    Unnamed_1_B95                           ; 6619 _ E8, FFFFA7B7
        jmp     Unnamed_1_6403                          ; 661E _ EB, 23

?_375:  lea     rcx, ptr [?_565]                        ; 6620 _ 48: 8D. 0D, 00004631(rel)
        mov     qword ptr [rsp+20H], rcx                ; 6627 _ 48: 89. 4C 24, 20
        mov     rcx, rax                                ; 662C _ 48: 89. C1
        mov     edx, 2                                  ; 662F _ BA, 00000002
        mov     r8d, 2031616                            ; 6634 _ 41: B8, 001F0000
        mov     r9d, 1                                  ; 663A _ 41: B9, 00000001
        call    qword ptr [rax+38H]                     ; 6640 _ FF. 50, 38
Unnamed_1_6403:
        mov     ecx, dword ptr [?_565]                  ; 6643 _ 8B. 0D, 0000460F(rel)
        mov     edx, ecx                                ; 6649 _ 89. CA
        and     edx, 0F000FFFFH                         ; 664B _ 81. E2, F000FFFF
        xor     eax, eax                                ; 6651 _ 31. C0
        cmp     edx, -1879015291                        ; 6653 _ 81. FA, 90008085
        jg      ?_376                                   ; 6659 _ 7F, 0A
        cmp     edx, -2147450746                        ; 665B _ 81. FA, 80008086
        jz      Unnamed_1_644F                          ; 6661 _ 74, 2C
        jmp     Unnamed_1_6458                          ; 6663 _ EB, 33

?_376:  cmp     edx, 268468357                          ; 6665 _ 81. FA, 10008085
        jg      ?_377                                   ; 666B _ 7F, 0A
        cmp     edx, -1879015290                        ; 666D _ 81. FA, 90008086
        jz      Unnamed_1_644F                          ; 6673 _ 74, 1A
        jmp     Unnamed_1_6458                          ; 6675 _ EB, 21

?_377:  cmp     edx, 268468358                          ; 6677 _ 81. FA, 10008086
        jz      Unnamed_1_644F                          ; 667D _ 74, 10
        cmp     edx, 536903814                          ; 667F _ 81. FA, 20008086
        jz      Unnamed_1_644F                          ; 6685 _ 74, 08
        cmp     edx, 805339270                          ; 6687 _ 81. FA, 30008086
        jnz     Unnamed_1_6458                          ; 668D _ 75, 09
Unnamed_1_644F:
        shr     ecx, 24                                 ; 668F _ C1. E9, 18
        and     ecx, 0FH                                ; 6692 _ 83. E1, 0F
        mov     rax, rcx                                ; 6695 _ 48: 89. C8
Unnamed_1_6458:
        add     rsp, 48                                 ; 6698 _ 48: 83. C4, 30
        pop     rbp                                     ; 669C _ 5D
        ret                                             ; 669D _ C3

        nop                                             ; 669E _ 90
        nop                                             ; 669F _ 90

?_378   LABEL NEAR
        push    rbp                                     ; 66A0 _ 55
        mov     rbp, rsp                                ; 66A1 _ 48: 89. E5
        sub     rsp, 48                                 ; 66A4 _ 48: 83. EC, 30
        mov     rax, qword ptr [?_579]                  ; 66A8 _ 48: 8B. 05, 00004601(rel)
        mov     qword ptr [rsp+20H], 0                  ; 66AF _ 48: C7. 44 24, 20, 00000000
        lea     rcx, ptr [?_482]                        ; 66B8 _ 48: 8D. 0D, 00001CBB(rel)
        lea     rdx, ptr [?_518]                        ; 66BF _ 48: 8D. 15, 00003DB6(rel)
        mov     r8d, 7                                  ; 66C6 _ 41: B8, 00000007
        xor     r9d, r9d                                ; 66CC _ 45: 31. C9
        call    qword ptr [rax+58H]                     ; 66CF _ FF. 50, 58
        mov     rcx, 800000000000000EH                  ; 66D2 _ 48: B9, 800000000000000E
        cmp     rax, rcx                                ; 66DC _ 48: 39. C8
        jz      Unnamed_1_64B5                          ; 66DF _ 74, 14
        test    rax, rax                                ; 66E1 _ 48: 85. C0
        jz      Unnamed_1_64B5                          ; 66E4 _ 74, 0F
        lea     rcx, ptr [?_483]                        ; 66E6 _ 48: 8D. 0D, 00001CAF(rel)
        mov     rdx, rax                                ; 66ED _ 48: 89. C2
        call    Unnamed_1_B95                           ; 66F0 _ E8, FFFFA6E0
Unnamed_1_64B5:
        add     rsp, 48                                 ; 66F5 _ 48: 83. C4, 30
        pop     rbp                                     ; 66F9 _ 5D
        ret                                             ; 66FA _ C3

?_379   LABEL NEAR
        push    rbp                                     ; 66FB _ 55
        mov     rbp, rsp                                ; 66FC _ 48: 89. E5
        push    rsi                                     ; 66FF _ 56
        sub     rsp, 40                                 ; 6700 _ 48: 83. EC, 28
        xor     esi, esi                                ; 6704 _ 31. F6
        xor     edx, edx                                ; 6706 _ 31. D2
        call    ?_397                                   ; 6708 _ E8, 00000260
        shr     eax, 29                                 ; 670D _ C1. E8, 1D
        cmp     eax, 4                                  ; 6710 _ 83. F8, 04
        ja      ?_384                                   ; 6713 _ 77, 31
        mov     esi, 65536                              ; 6715 _ BE, 00010000
        lea     rcx, ptr [?_385]                        ; 671A _ 48: 8D. 0D, 0000003B(rel)
        movsxd  rax, dword ptr [rcx+rax*4]              ; 6721 _ 48: 63. 04 81
        add     rax, rcx                                ; 6725 _ 48: 01. C8
        jmp     rax                                     ; 6728 _ FF. E0

?_380   LABEL NEAR
        mov     esi, 131072                             ; 672A _ BE, 00020000
        jmp     Unnamed_1_6512                          ; 672F _ EB, 21

?_381   LABEL NEAR
        mov     esi, 262144                             ; 6731 _ BE, 00040000
        jmp     Unnamed_1_6512                          ; 6736 _ EB, 1A

?_382   LABEL NEAR
        mov     esi, 524288                             ; 6738 _ BE, 00080000
        jmp     Unnamed_1_6512                          ; 673D _ EB, 13

?_383   LABEL NEAR
        mov     esi, 1048576                            ; 673F _ BE, 00100000
        jmp     Unnamed_1_6512                          ; 6744 _ EB, 0C

?_384:  lea     rcx, ptr [?_484]                        ; 6746 _ 48: 8D. 0D, 00001CA9(rel)
        call    Unnamed_1_B95                           ; 674D _ E8, FFFFA683

Unnamed_1_6512 LABEL NEAR
        mov     eax, esi                                ; 6752 _ 89. F0
        add     rsp, 40                                 ; 6754 _ 48: 83. C4, 28
        pop     rsi                                     ; 6758 _ 5E
        pop     rbp                                     ; 6759 _ 5D
        ret                                             ; 675A _ C3

        nop                                             ; 675B _ 90

?_385   label dword                                     ; switch/case jump table
        dd Unnamed_1_6512-?_385                         ; 675C _ FFFFFFF6 (refpoint)
        dd ?_380-?_385                                  ; 6760 _ FFFFFFCE (refpoint)
        dd ?_381-?_385                                  ; 6764 _ FFFFFFD5 (refpoint)
        dd ?_382-?_385                                  ; 6768 _ FFFFFFDC (refpoint)
        dd ?_383-?_385                                  ; 676C _ FFFFFFE3 (refpoint)

Unnamed_1_6530 LABEL NEAR
        push    rbp                                     ; 6770 _ 55
        mov     rbp, rsp                                ; 6771 _ 48: 89. E5
        sub     rsp, 32                                 ; 6774 _ 48: 83. EC, 20
        call    Unnamed_1_61DC                          ; 6778 _ E8, FFFFFC9F
        add     eax, 13332                              ; 677D _ 05, 00003414
        mov     cl, byte ptr [rax]                      ; 6782 _ 8A. 08
        test    cl, 01H                                 ; 6784 _ F6. C1, 01
        jz      ?_387                                   ; 6787 _ 74, 17
        and     cl, 0FFFFFFFEH                          ; 6789 _ 80. E1, FE
        mov     byte ptr [rax], cl                      ; 678C _ 88. 08
        lea     rcx, ptr [?_485]                        ; 678E _ 48: 8D. 0D, 00001CA1(rel)
?_386:  call    Unnamed_1_B95                           ; 6795 _ E8, FFFFA63B
        add     rsp, 32                                 ; 679A _ 48: 83. C4, 20
        pop     rbp                                     ; 679E _ 5D
        ret                                             ; 679F _ C3

?_387   LABEL NEAR
        or      cl, 01H                                 ; 67A0 _ 80. C9, 01
        mov     byte ptr [rax], cl                      ; 67A3 _ 88. 08
        lea     rcx, ptr [?_486]                        ; 67A5 _ 48: 8D. 0D, 00001D16(rel)
        jmp     ?_386                                   ; 67AC _ EB, E7

Unnamed_1_656E LABEL NEAR
        push    rbp                                     ; 67AE _ 55
        mov     rbp, rsp                                ; 67AF _ 48: 89. E5
        sub     rsp, 48                                 ; 67B2 _ 48: 83. EC, 30
        mov     qword ptr [rbp-8H], 0                   ; 67B6 _ 48: C7. 45, F8, 00000000
        mov     rax, qword ptr [?_578]                  ; 67BE _ 48: 8B. 05, 000044E3(rel)
        lea     rcx, ptr [?_539]                        ; 67C5 _ 48: 8D. 0D, 00003DF4(rel)
        lea     r8, ptr [rbp-8H]                        ; 67CC _ 4C: 8D. 45, F8
        xor     edx, edx                                ; 67D0 _ 31. D2
        call    qword ptr [rax+140H]                    ; 67D2 _ FF. 90, 00000140
        test    rax, rax                                ; 67D8 _ 48: 85. C0
        jnz     Unnamed_1_65B8                          ; 67DB _ 75, 1B
        mov     r8, qword ptr [rbp-8H]                  ; 67DD _ 4C: 8B. 45, F8
        cmp     dword ptr [r8], 2                       ; 67E1 _ 41: 83. 38, 02
        mov     eax, 0                                  ; 67E5 _ B8, 00000000
        jc      Unnamed_1_65B8                          ; 67EA _ 72, 0C
        mov     rcx, r8                                 ; 67EC _ 4C: 89. C1
        mov     edx, 1                                  ; 67EF _ BA, 00000001
        call    qword ptr [r8+28H]                      ; 67F4 _ 41: FF. 50, 28
Unnamed_1_65B8:
        add     rsp, 48                                 ; 67F8 _ 48: 83. C4, 30
        pop     rbp                                     ; 67FC _ 5D
        ret                                             ; 67FD _ C3

Unnamed_1_65BE LABEL NEAR
; Note: Immediate operand could be made smaller by sign extension
        jmp     ?_389                                   ; 67FE _ E9, 00000005

?_388   LABEL NEAR
; Note: Immediate operand could be made smaller by sign extension
        jmp     Unnamed_1_656E                          ; 6803 _ E9, FFFFFFA6

?_389   LABEL NEAR
        push    rbp                                     ; 6808 _ 55
        mov     rbp, rsp                                ; 6809 _ 48: 89. E5
        sub     rsp, 32                                 ; 680C _ 48: 83. EC, 20
        call    ?_400                                   ; 6810 _ E8, 00000183
        test    rax, rax                                ; 6815 _ 48: 85. C0
        jnz     Unnamed_1_65EE                          ; 6818 _ 75, 14
        call    ?_413                                   ; 681A _ E8, 0000073B
        test    rax, rax                                ; 681F _ 48: 85. C0
        jnz     Unnamed_1_65EE                          ; 6822 _ 75, 0A
        call    ?_425                                   ; 6824 _ E8, 00000C79
        test    rax, rax                                ; 6829 _ 48: 85. C0
        jz      ?_390                                   ; 682C _ 74, 06
Unnamed_1_65EE:
        add     rsp, 32                                 ; 682E _ 48: 83. C4, 20
        pop     rbp                                     ; 6832 _ 5D
        ret                                             ; 6833 _ C3

?_390   LABEL NEAR
        add     rsp, 32                                 ; 6834 _ 48: 83. C4, 20
        pop     rbp                                     ; 6838 _ 5D
        jmp     ?_435                                   ; 6839 _ E9, 000010C7

Unnamed_1_65FE LABEL NEAR
        push    rbp                                     ; 683E _ 55
        mov     rbp, rsp                                ; 683F _ 48: 89. E5
        push    rsi                                     ; 6842 _ 56
        sub     rsp, 40                                 ; 6843 _ 48: 83. EC, 28
        cmp     dword ptr [?_566], 0                    ; 6847 _ 83. 3D, 0000440E(rel), 00
        jnz     Unnamed_1_663E                          ; 684E _ 75, 2E
        call    Unnamed_1_61DC                          ; 6850 _ E8, FFFFFBC7
        mov     esi, eax                                ; 6855 _ 89. C6
        lea     eax, ptr [rsi+3020H]                    ; 6857 _ 8D. 86, 00003020
        mov     dword ptr [?_566], eax                  ; 685D _ 89. 05, 000043F9(rel)
        call    Unnamed_1_63B7                          ; 6863 _ E8, FFFFFD8F
        add     rax, -9                                 ; 6868 _ 48: 83. C0, F7
        cmp     rax, 5                                  ; 686C _ 48: 83. F8, 05
        ja      Unnamed_1_663E                          ; 6870 _ 77, 0C
        add     esi, 14336                              ; 6872 _ 81. C6, 00003800
        mov     dword ptr [?_566], esi                  ; 6878 _ 89. 35, 000043DE(rel)
Unnamed_1_663E:
        add     rsp, 40                                 ; 687E _ 48: 83. C4, 28
        pop     rsi                                     ; 6882 _ 5E
        pop     rbp                                     ; 6883 _ 5D
        ret                                             ; 6884 _ C3

Unnamed_1_6645 LABEL NEAR
        push    rbp                                     ; 6885 _ 55
        mov     rbp, rsp                                ; 6886 _ 48: 89. E5
        push    rsi                                     ; 6889 _ 56
        sub     rsp, 40                                 ; 688A _ 48: 83. EC, 28
        mov     rsi, rcx                                ; 688E _ 48: 89. CE
        call    Unnamed_1_65FE                          ; 6891 _ E8, FFFFFFA8
        mov     eax, dword ptr [?_566]                  ; 6896 _ 8B. 05, 000043C0(rel)
        movzx   eax, byte ptr [rax+rsi]                 ; 689C _ 0F B6. 04 30
        add     rsp, 40                                 ; 68A0 _ 48: 83. C4, 28
        pop     rsi                                     ; 68A4 _ 5E
        pop     rbp                                     ; 68A5 _ 5D
        ret                                             ; 68A6 _ C3

Unnamed_1_6667 LABEL NEAR
        push    rbp                                     ; 68A7 _ 55
        mov     rbp, rsp                                ; 68A8 _ 48: 89. E5
        sub     rsp, 32                                 ; 68AB _ 48: 83. EC, 20
        call    Unnamed_1_63B7                          ; 68AF _ E8, FFFFFD43
        cmp     rax, 8                                  ; 68B4 _ 48: 83. F8, 08
        jnc     ?_391                                   ; 68B8 _ 73, 04
        xor     al, al                                  ; 68BA _ 30. C0
        jmp     ?_392                                   ; 68BC _ EB, 14

?_391:  call    Unnamed_1_65FE                          ; 68BE _ E8, FFFFFF7B
        mov     eax, dword ptr [?_566]                  ; 68C3 _ 8B. 05, 00004393(rel)
        movzx   eax, word ptr [rax+4H]                  ; 68C9 _ 0F B7. 40, 04
        shr     eax, 14                                 ; 68CD _ C1. E8, 0E
        and     al, 01H                                 ; 68D0 _ 24, 01
?_392:  movzx   eax, al                                 ; 68D2 _ 0F B6. C0
        add     rsp, 32                                 ; 68D5 _ 48: 83. C4, 20
        pop     rbp                                     ; 68D9 _ 5D
        ret                                             ; 68DA _ C3

Unnamed_1_669B LABEL NEAR
        push    rbp                                     ; 68DB _ 55
        mov     rbp, rsp                                ; 68DC _ 48: 89. E5
        push    rsi                                     ; 68DF _ 56
        sub     rsp, 40                                 ; 68E0 _ 48: 83. EC, 28
        call    Unnamed_1_63B7                          ; 68E4 _ E8, FFFFFD0E
        xor     ecx, ecx                                ; 68E9 _ 31. C9
        test    rax, rax                                ; 68EB _ 48: 85. C0
        jz      Unnamed_1_66F8                          ; 68EE _ 74, 48
        mov     esi, 96                                 ; 68F0 _ BE, 00000060
        cmp     rax, 7                                  ; 68F5 _ 48: 83. F8, 07
        jz      ?_393                                   ; 68F9 _ 74, 0F
        add     rax, -8                                 ; 68FB _ 48: 83. C0, F8
        cmp     rax, 6                                  ; 68FF _ 48: 83. F8, 06
        ja      ?_394                                   ; 6903 _ 77, 3D
        mov     esi, 116                                ; 6905 _ BE, 00000074
?_393:  call    Unnamed_1_65FE                          ; 690A _ E8, FFFFFF2F
        mov     eax, dword ptr [?_566]                  ; 690F _ 8B. 05, 00004347(rel)
        mov     ecx, dword ptr [rax+rsi]                ; 6915 _ 8B. 0C 30
        test    ecx, 7FFFFFFFH                          ; 6918 _ F7. C1, 7FFFFFFF
        sete    al                                      ; 691E _ 0F 94. C0
        test    ecx, ecx                                ; 6921 _ 85. C9
        setns   cl                                      ; 6923 _ 0F 99. C1
        xor     edx, edx                                ; 6926 _ 31. D2
        or      cl, al                                  ; 6928 _ 08. C1
        mov     rcx, 8000000000000008H                  ; 692A _ 48: B9, 8000000000000008
        cmovne  rcx, rdx                                ; 6934 _ 48: 0F 45. CA
Unnamed_1_66F8:
        mov     rax, rcx                                ; 6938 _ 48: 89. C8
        add     rsp, 40                                 ; 693B _ 48: 83. C4, 28
        pop     rsi                                     ; 693F _ 5E
        pop     rbp                                     ; 6940 _ 5D
        ret                                             ; 6941 _ C3

?_394:  mov     rcx, 800000000000000EH                  ; 6942 _ 48: B9, 800000000000000E
        jmp     Unnamed_1_66F8                          ; 694C _ EB, EA

Unnamed_1_670E LABEL NEAR
        lea     rdx, ptr [?_540]                        ; 694E _ 48: 8D. 15, 00003C7B(rel)
        jmp     ?_395                                   ; 6955 _ EB, 04

Unnamed_1_6717:
        add     rdx, 80                                 ; 6957 _ 48: 83. C2, 50
?_395:  xor     eax, eax                                ; 695B _ 31. C0
        cmp     qword ptr [rdx], 0                      ; 695D _ 48: 83. 3A, 00
        jz      ?_396                                   ; 6961 _ 74, 09
        cmp     word ptr [rdx+8H], cx                   ; 6963 _ 66: 39. 4A, 08
        mov     rax, rdx                                ; 6967 _ 48: 89. D0
        jnz     Unnamed_1_6717                          ; 696A _ 75, EB
?_396:  ret                                             ; 696C _ C3

?_397   LABEL NEAR
        cmp     dword ptr [rcx], 267429210              ; 696D _ 81. 39, 0FF0A55A
        mov     rax, rcx                                ; 6973 _ 48: 89. C8
        jz      ?_398                                   ; 6976 _ 74, 0F
        xor     eax, eax                                ; 6978 _ 31. C0
        cmp     dword ptr [rcx+10H], 267429210          ; 697A _ 81. 79, 10, 0FF0A55A
        jnz     ?_399                                   ; 6981 _ 75, 14
        lea     rax, ptr [rcx+10H]                      ; 6983 _ 48: 8D. 41, 10
?_398:  mov     eax, dword ptr [rax+8H]                 ; 6987 _ 8B. 40, 08
        shr     eax, 12                                 ; 698A _ C1. E8, 0C
        and     eax, 0FF0H                              ; 698D _ 25, 00000FF0
        add     eax, edx                                ; 6992 _ 01. D0
        mov     eax, dword ptr [rcx+rax]                ; 6994 _ 8B. 04 01
?_399:  ret                                             ; 6997 _ C3

?_400   LABEL NEAR
        push    rbp                                     ; 6998 _ 55
        mov     rbp, rsp                                ; 6999 _ 48: 89. E5
        push    rsi                                     ; 699C _ 56
        push    rdi                                     ; 699D _ 57
        sub     rsp, 96                                 ; 699E _ 48: 83. EC, 60
        call    Unnamed_1_63B7                          ; 69A2 _ E8, FFFFFC50
        xor     edi, edi                                ; 69A7 _ 31. FF
        test    rax, rax                                ; 69A9 _ 48: 85. C0
        jne     Unnamed_1_68AA                          ; 69AC _ 0F 85, 00000138
        mov     rax, qword ptr [?_578]                  ; 69B2 _ 48: 8B. 05, 000042EF(rel)
        lea     rcx, ptr [?_541]                        ; 69B9 _ 48: 8D. 0D, 000041B0(rel)
        xor     edi, edi                                ; 69C0 _ 31. FF
        lea     r8, ptr [?_567]                         ; 69C2 _ 4C: 8D. 05, 00004297(rel)
        xor     edx, edx                                ; 69C9 _ 31. D2
        call    qword ptr [rax+140H]                    ; 69CB _ FF. 90, 00000140
        test    rax, rax                                ; 69D1 _ 48: 85. C0
        jne     Unnamed_1_68AA                          ; 69D4 _ 0F 85, 00000110
        mov     rax, qword ptr [?_567]                  ; 69DA _ 48: 8B. 05, 0000427F(rel)
        lea     rcx, ptr [rbp-1CH]                      ; 69E1 _ 48: 8D. 4D, E4
        mov     qword ptr [rsp+40H], rcx                ; 69E5 _ 48: 89. 4C 24, 40
        mov     dword ptr [rsp+38H], 3                  ; 69EA _ C7. 44 24, 38, 00000003
        mov     dword ptr [rsp+30H], 0                  ; 69F2 _ C7. 44 24, 30, 00000000
        mov     dword ptr [rsp+28H], 0                  ; 69FA _ C7. 44 24, 28, 00000000
        mov     dword ptr [rsp+20H], 0                  ; 6A02 _ C7. 44 24, 20, 00000000
        mov     rcx, rax                                ; 6A0A _ 48: 89. C1
        xor     edx, edx                                ; 6A0D _ 31. D2
        xor     r8d, r8d                                ; 6A0F _ 45: 31. C0
        mov     r9d, 1                                  ; 6A12 _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 6A18 _ FF. 50, 10
        xor     edi, edi                                ; 6A1B _ 31. FF
        test    rax, rax                                ; 6A1D _ 48: 85. C0
        jne     Unnamed_1_68AA                          ; 6A20 _ 0F 85, 000000C4
        movzx   eax, byte ptr [rbp-1CH]                 ; 6A26 _ 0F B6. 45, E4
        shl     eax, 8                                  ; 6A2A _ C1. E0, 08
        movzx   ecx, byte ptr [rbp-1AH]                 ; 6A2D _ 0F B6. 4D, E6
        or      ecx, eax                                ; 6A31 _ 09. C1
        movzx   ecx, cx                                 ; 6A33 _ 0F B7. C9
        call    Unnamed_1_670E                          ; 6A36 _ E8, FFFFFF13
        mov     rsi, rax                                ; 6A3B _ 48: 89. C6
        xor     edi, edi                                ; 6A3E _ 31. FF
        test    rsi, rsi                                ; 6A40 _ 48: 85. F6
        je      Unnamed_1_68AA                          ; 6A43 _ 0F 84, 000000A1
        mov     eax, dword ptr [rsi+10H]                ; 6A49 _ 8B. 46, 10
        mov     dword ptr [?_542], eax                  ; 6A4C _ 89. 05, 0000412E(rel)
        mov     rax, qword ptr [?_578]                  ; 6A52 _ 48: 8B. 05, 0000424F(rel)
        lea     rcx, ptr [?_523]                        ; 6A59 _ 48: 8D. 0D, 00003A6C(rel)
        lea     r8, ptr [rbp-18H]                       ; 6A60 _ 4C: 8D. 45, E8
        xor     edx, edx                                ; 6A64 _ 31. D2
        call    qword ptr [rax+140H]                    ; 6A66 _ FF. 90, 00000140
        mov     ecx, 1                                  ; 6A6C _ B9, 00000001
        test    rax, rax                                ; 6A71 _ 48: 85. C0
        jnz     Unnamed_1_684D                          ; 6A74 _ 75, 17
        mov     ecx, 1                                  ; 6A76 _ B9, 00000001
        mov     rax, qword ptr [rbp-18H]                ; 6A7B _ 48: 8B. 45, E8
        cmp     dword ptr [rax], 3                      ; 6A7F _ 83. 38, 03
        jc      Unnamed_1_684D                          ; 6A82 _ 72, 09
        mov     rcx, rax                                ; 6A84 _ 48: 89. C1
        call    qword ptr [rax+30H]                     ; 6A87 _ FF. 50, 30
        movzx   ecx, ax                                 ; 6A8A _ 0F B7. C8
Unnamed_1_684D:
        mov     rax, qword ptr [rsi+18H]                ; 6A8D _ 48: 8B. 46, 18
        cmp     rax, rcx                                ; 6A91 _ 48: 39. C8
        cmova   rax, rcx                                ; 6A94 _ 48: 0F 47. C1
        mov     qword ptr [?_543], rax                  ; 6A98 _ 48: 89. 05, 000040E9(rel)
        cmp     rax, 64                                 ; 6A9F _ 48: 83. F8, 40
        jnz     ?_401                                   ; 6AA3 _ 75, 07
        mov     byte ptr [?_568], 1                     ; 6AA5 _ C6. 05, 000041BC(rel), 01
?_401:  lea     rax, ptr [?_402]                        ; 6AAC _ 48: 8D. 05, 00000042(rel)
        mov     qword ptr [rsi+28H], rax                ; 6AB3 _ 48: 89. 46, 28
        lea     rax, ptr [Unnamed_1_6903]               ; 6AB7 _ 48: 8D. 05, 00000085(rel)
        mov     qword ptr [rsi+30H], rax                ; 6ABE _ 48: 89. 46, 30
        lea     rax, ptr [Unnamed_1_69C8]               ; 6AC2 _ 48: 8D. 05, 0000013F(rel)
        mov     qword ptr [rsi+38H], rax                ; 6AC9 _ 48: 89. 46, 38
        lea     rax, ptr [?_407]                        ; 6ACD _ 48: 8D. 05, 000001CD(rel)
        mov     qword ptr [rsi+40H], rax                ; 6AD4 _ 48: 89. 46, 40
        lea     rax, ptr [?_409]                        ; 6AD8 _ 48: 8D. 05, 000001F9(rel)
        mov     qword ptr [rsi+48H], rax                ; 6ADF _ 48: 89. 46, 48
        and     byte ptr [rsi+20H], 0FFFFFFFEH          ; 6AE3 _ 80. 66, 20, FE
        mov     rdi, rsi                                ; 6AE7 _ 48: 89. F7
Unnamed_1_68AA:
        mov     rax, rdi                                ; 6AEA _ 48: 89. F8
        add     rsp, 96                                 ; 6AED _ 48: 83. C4, 60
        pop     rdi                                     ; 6AF1 _ 5F
        pop     rsi                                     ; 6AF2 _ 5E
        pop     rbp                                     ; 6AF3 _ 5D
        ret                                             ; 6AF4 _ C3

?_402   LABEL NEAR
        push    rbp                                     ; 6AF5 _ 55
        mov     rbp, rsp                                ; 6AF6 _ 48: 89. E5
        sub     rsp, 80                                 ; 6AF9 _ 48: 83. EC, 50
        mov     rax, qword ptr [?_567]                  ; 6AFD _ 48: 8B. 05, 0000415C(rel)
        mov     r8d, dword ptr [?_542]                  ; 6B04 _ 44: 8B. 05, 00004075(rel)
        mov     qword ptr [rsp+40H], rdx                ; 6B0B _ 48: 89. 54 24, 40
        mov     dword ptr [rsp+38H], r8d                ; 6B10 _ 44: 89. 44 24, 38
        mov     dword ptr [rsp+30H], ecx                ; 6B15 _ 89. 4C 24, 30
        mov     dword ptr [rsp+28H], 0                  ; 6B19 _ C7. 44 24, 28, 00000000
        mov     dword ptr [rsp+20H], 0                  ; 6B21 _ C7. 44 24, 20, 00000000
        mov     rcx, rax                                ; 6B29 _ 48: 89. C1
        mov     edx, 1                                  ; 6B2C _ BA, 00000001
        xor     r8d, r8d                                ; 6B31 _ 45: 31. C0
        mov     r9d, 1                                  ; 6B34 _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 6B3A _ FF. 50, 10
        add     rsp, 80                                 ; 6B3D _ 48: 83. C4, 50
        pop     rbp                                     ; 6B41 _ 5D
        ret                                             ; 6B42 _ C3

Unnamed_1_6903 LABEL NEAR
        push    rbp                                     ; 6B43 _ 55
        mov     rbp, rsp                                ; 6B44 _ 48: 89. E5
        push    r15                                     ; 6B47 _ 41: 57
        push    r14                                     ; 6B49 _ 41: 56
        push    rsi                                     ; 6B4B _ 56
        push    rdi                                     ; 6B4C _ 57
        push    rbx                                     ; 6B4D _ 53
        sub     rsp, 40                                 ; 6B4E _ 48: 83. EC, 28
        mov     r15, rdx                                ; 6B52 _ 49: 89. D7
        mov     rdi, rcx                                ; 6B55 _ 48: 89. CF
        xor     ecx, ecx                                ; 6B58 _ 31. C9
        call    Unnamed_1_6ABB                          ; 6B5A _ E8, 0000019C
        mov     rbx, rax                                ; 6B5F _ 48: 89. C3
        test    rbx, rbx                                ; 6B62 _ 48: 85. DB
        js      Unnamed_1_69B8                          ; 6B65 _ 0F 88, 0000008D
        movzx   r9d, byte ptr [?_568]                   ; 6B6B _ 44: 0F B6. 0D, 000040F5(rel)
        mov     r8d, dword ptr [?_542]                  ; 6B73 _ 44: 8B. 05, 00004006(rel)
        mov     rcx, rdi                                ; 6B7A _ 48: 89. F9
        mov     rdx, r15                                ; 6B7D _ 4C: 89. FA
        call    Unnamed_1_6C49                          ; 6B80 _ E8, 00000304
        mov     rbx, rax                                ; 6B85 _ 48: 89. C3
        test    rbx, rbx                                ; 6B88 _ 48: 85. DB
        js      Unnamed_1_69B8                          ; 6B8B _ 78, 6B
        mov     al, byte ptr [?_568]                    ; 6B8D _ 8A. 05, 000040D5(rel)
        test    al, al                                  ; 6B93 _ 84. C0
        jnz     Unnamed_1_69A9                          ; 6B95 _ 75, 52
        mov     r14d, dword ptr [?_542]                 ; 6B97 _ 44: 8B. 35, 00003FE2(rel)
        call    Unnamed_1_6B98                          ; 6B9E _ E8, 00000235
        mov     rbx, rax                                ; 6BA3 _ 48: 89. C3
        test    rbx, rbx                                ; 6BA6 _ 48: 85. DB
        js      Unnamed_1_69B8                          ; 6BA9 _ 78, 4D
        test    r14d, r14d                              ; 6BAB _ 45: 85. F6
        jz      Unnamed_1_69A9                          ; 6BAE _ 74, 39
        xor     esi, esi                                ; 6BB0 _ 31. F6
?_403:  mov     al, byte ptr [rdi+rsi]                  ; 6BB2 _ 8A. 04 37
        cmp     al, byte ptr [r15+rsi]                  ; 6BB5 _ 41: 3A. 04 37
        jz      ?_404                                   ; 6BB9 _ 74, 1C
        lea     rcx, ptr [rdi+rsi]                      ; 6BBB _ 48: 8D. 0C 37
        lea     rdx, ptr [r15+rsi]                      ; 6BBF _ 49: 8D. 14 37
        mov     r8d, 1                                  ; 6BC3 _ 41: B8, 00000001
        mov     r9d, 1                                  ; 6BC9 _ 41: B9, 00000001
        call    Unnamed_1_6C49                          ; 6BCF _ E8, 000002B5
        mov     rbx, rax                                ; 6BD4 _ 48: 89. C3
?_404:  test    rbx, rbx                                ; 6BD7 _ 48: 85. DB
        js      ?_405                                   ; 6BDA _ 78, 08
        inc     rsi                                     ; 6BDC _ 48: FF. C6
        cmp     rsi, r14                                ; 6BDF _ 4C: 39. F6
        jc      ?_403                                   ; 6BE2 _ 72, CE
?_405:  test    rbx, rbx                                ; 6BE4 _ 48: 85. DB
        js      Unnamed_1_69B8                          ; 6BE7 _ 78, 0F
Unnamed_1_69A9:
        mov     ecx, 1                                  ; 6BE9 _ B9, 00000001
        call    Unnamed_1_6ABB                          ; 6BEE _ E8, 00000108
        call    Unnamed_1_1AE                           ; 6BF3 _ E8, FFFF97F6
Unnamed_1_69B8:
        mov     rax, rbx                                ; 6BF8 _ 48: 89. D8
        add     rsp, 40                                 ; 6BFB _ 48: 83. C4, 28
        pop     rbx                                     ; 6BFF _ 5B
        pop     rdi                                     ; 6C00 _ 5F
        pop     rsi                                     ; 6C01 _ 5E
        pop     r14                                     ; 6C02 _ 41: 5E
        pop     r15                                     ; 6C04 _ 41: 5F
        pop     rbp                                     ; 6C06 _ 5D
        ret                                             ; 6C07 _ C3

Unnamed_1_69C8 LABEL NEAR
        push    rbp                                     ; 6C08 _ 55
        mov     rbp, rsp                                ; 6C09 _ 48: 89. E5
        push    rsi                                     ; 6C0C _ 56
        push    rdi                                     ; 6C0D _ 57
        sub     rsp, 80                                 ; 6C0E _ 48: 83. EC, 50
        mov     rsi, rcx                                ; 6C12 _ 48: 89. CE
        xor     ecx, ecx                                ; 6C15 _ 31. C9
        call    Unnamed_1_6ABB                          ; 6C17 _ E8, 000000DF
        mov     rdi, rax                                ; 6C1C _ 48: 89. C7
        test    rdi, rdi                                ; 6C1F _ 48: 85. FF
        js      ?_406                                   ; 6C22 _ 78, 72
        cmp     dword ptr [?_542], 4096                 ; 6C24 _ 81. 3D, 00003F52(rel), 00001000
        setne   cl                                      ; 6C2E _ 0F 95. C1
        mov     rax, qword ptr [?_567]                  ; 6C31 _ 48: 8B. 05, 00004028(rel)
        and     esi, 0FFFFFFH                           ; 6C38 _ 81. E6, 00FFFFFF
        mov     dword ptr [rsp+30H], esi                ; 6C3E _ 89. 74 24, 30
        mov     dword ptr [rsp+20H], 1                  ; 6C42 _ C7. 44 24, 20, 00000001
        mov     dword ptr [rsp+28H], 0                  ; 6C4A _ C7. 44 24, 28, 00000000
        mov     dword ptr [rsp+38H], 0                  ; 6C52 _ C7. 44 24, 38, 00000000
        mov     qword ptr [rsp+40H], 0                  ; 6C5A _ 48: C7. 44 24, 40, 00000000
        or      cl, 04H                                 ; 6C63 _ 80. C9, 04
        movzx   edx, cl                                 ; 6C66 _ 0F B6. D1
        mov     rcx, rax                                ; 6C69 _ 48: 89. C1
        xor     r8d, r8d                                ; 6C6C _ 45: 31. C0
        xor     r9d, r9d                                ; 6C6F _ 45: 31. C9
        call    qword ptr [rax+10H]                     ; 6C72 _ FF. 50, 10
        mov     rsi, rax                                ; 6C75 _ 48: 89. C6
        call    Unnamed_1_6B98                          ; 6C78 _ E8, 0000015B
        mov     rdi, rax                                ; 6C7D _ 48: 89. C7
        mov     ecx, 1                                  ; 6C80 _ B9, 00000001
        call    Unnamed_1_6ABB                          ; 6C85 _ E8, 00000071
        test    rsi, rsi                                ; 6C8A _ 48: 85. F6
        cmovne  rdi, rsi                                ; 6C8D _ 48: 0F 45. FE
        call    Unnamed_1_1AE                           ; 6C91 _ E8, FFFF9758
?_406:  mov     rax, rdi                                ; 6C96 _ 48: 89. F8
        add     rsp, 80                                 ; 6C99 _ 48: 83. C4, 50
        pop     rdi                                     ; 6C9D _ 5F
        pop     rsi                                     ; 6C9E _ 5E
        pop     rbp                                     ; 6C9F _ 5D
        ret                                             ; 6CA0 _ C3

?_407   LABEL NEAR
        push    rbp                                     ; 6CA1 _ 55
        mov     rbp, rsp                                ; 6CA2 _ 48: 89. E5
        push    rsi                                     ; 6CA5 _ 56
        push    rdi                                     ; 6CA6 _ 57
        sub     rsp, 32                                 ; 6CA7 _ 48: 83. EC, 20
        mov     rsi, rdx                                ; 6CAB _ 48: 89. D6
        mov     rdi, rcx                                ; 6CAE _ 48: 89. CF
        mov     rcx, rdi                                ; 6CB1 _ 48: 89. F9
        call    Unnamed_1_69C8                          ; 6CB4 _ E8, FFFFFF4F
        test    rax, rax                                ; 6CB9 _ 48: 85. C0
        jz      ?_408                                   ; 6CBC _ 74, 08
        add     rsp, 32                                 ; 6CBE _ 48: 83. C4, 20
        pop     rdi                                     ; 6CC2 _ 5F
        pop     rsi                                     ; 6CC3 _ 5E
        pop     rbp                                     ; 6CC4 _ 5D
        ret                                             ; 6CC5 _ C3

?_408:  mov     rcx, rdi                                ; 6CC6 _ 48: 89. F9
        mov     rdx, rsi                                ; 6CC9 _ 48: 89. F2
        add     rsp, 32                                 ; 6CCC _ 48: 83. C4, 20
        pop     rdi                                     ; 6CD0 _ 5F
        pop     rsi                                     ; 6CD1 _ 5E
        pop     rbp                                     ; 6CD2 _ 5D
        jmp     Unnamed_1_6903                          ; 6CD3 _ E9, FFFFFE6B

?_409   LABEL NEAR
        mov     dword ptr [?_542], 65536                ; 6CD8 _ C7. 05, 00003E9E(rel), 00010000
        mov     qword ptr [?_543], 1                    ; 6CE2 _ 48: C7. 05, 00003E9B(rel), 00000001
        mov     qword ptr [?_567], 0                    ; 6CED _ 48: C7. 05, 00003F68(rel), 00000000
        xor     eax, eax                                ; 6CF8 _ 31. C0
        ret                                             ; 6CFA _ C3

Unnamed_1_6ABB LABEL NEAR
        push    rbp                                     ; 6CFB _ 55
        mov     rbp, rsp                                ; 6CFC _ 48: 89. E5
        push    rsi                                     ; 6CFF _ 56
        sub     rsp, 88                                 ; 6D00 _ 48: 83. EC, 58
        mov     esi, ecx                                ; 6D04 _ 89. CE
        call    Unnamed_1_6B98                          ; 6D06 _ E8, 000000CD
        test    rax, rax                                ; 6D0B _ 48: 85. C0
        jne     Unnamed_1_6B91                          ; 6D0E _ 0F 85, 000000BD
        mov     al, 28                                  ; 6D14 _ B0, 1C
        test    sil, sil                                ; 6D16 _ 40: 84. F6
        jnz     ?_410                                   ; 6D19 _ 75, 02
        xor     al, al                                  ; 6D1B _ 30. C0
?_410:  mov     byte ptr [rbp-9H], al                   ; 6D1D _ 88. 45, F7
        mov     rax, qword ptr [?_567]                  ; 6D20 _ 48: 8B. 05, 00003F39(rel)
        lea     rcx, ptr [rbp-9H]                       ; 6D27 _ 48: 8D. 4D, F7
        mov     qword ptr [rsp+40H], rcx                ; 6D2B _ 48: 89. 4C 24, 40
        mov     dword ptr [rsp+38H], 1                  ; 6D30 _ C7. 44 24, 38, 00000001
        mov     dword ptr [rsp+30H], 0                  ; 6D38 _ C7. 44 24, 30, 00000000
        mov     dword ptr [rsp+28H], 1                  ; 6D40 _ C7. 44 24, 28, 00000001
        mov     dword ptr [rsp+20H], 1                  ; 6D48 _ C7. 44 24, 20, 00000001
        mov     rcx, rax                                ; 6D50 _ 48: 89. C1
        mov     edx, 7                                  ; 6D53 _ BA, 00000007
        xor     r8d, r8d                                ; 6D58 _ 45: 31. C0
        mov     r9d, 1                                  ; 6D5B _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 6D61 _ FF. 50, 10
        test    rax, rax                                ; 6D64 _ 48: 85. C0
        js      Unnamed_1_6B91                          ; 6D67 _ 78, 68
        call    Unnamed_1_6B98                          ; 6D69 _ E8, 0000006A
        test    rax, rax                                ; 6D6E _ 48: 85. C0
        jnz     Unnamed_1_6B91                          ; 6D71 _ 75, 5E
        mov     rax, qword ptr [?_567]                  ; 6D73 _ 48: 8B. 05, 00003EE6(rel)
        lea     rcx, ptr [rbp-0AH]                      ; 6D7A _ 48: 8D. 4D, F6
        mov     qword ptr [rsp+40H], rcx                ; 6D7E _ 48: 89. 4C 24, 40
        mov     dword ptr [rsp+38H], 1                  ; 6D83 _ C7. 44 24, 38, 00000001
        mov     dword ptr [rsp+30H], 0                  ; 6D8B _ C7. 44 24, 30, 00000000
        mov     dword ptr [rsp+28H], 0                  ; 6D93 _ C7. 44 24, 28, 00000000
        mov     dword ptr [rsp+20H], 0                  ; 6D9B _ C7. 44 24, 20, 00000000
        mov     rcx, rax                                ; 6DA3 _ 48: 89. C1
        mov     edx, 2                                  ; 6DA6 _ BA, 00000002
        xor     r8d, r8d                                ; 6DAB _ 45: 31. C0
        mov     r9d, 1                                  ; 6DAE _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 6DB4 _ FF. 50, 10
        test    rax, rax                                ; 6DB7 _ 48: 85. C0
        js      Unnamed_1_6B91                          ; 6DBA _ 78, 15
        mov     cl, byte ptr [rbp-9H]                   ; 6DBC _ 8A. 4D, F7
        xor     cl, byte ptr [rbp-0AH]                  ; 6DBF _ 32. 4D, F6
        test    cl, 1CH                                 ; 6DC2 _ F6. C1, 1C
        jz      Unnamed_1_6B91                          ; 6DC5 _ 74, 0A
        mov     rax, 8000000000000007H                  ; 6DC7 _ 48: B8, 8000000000000007
Unnamed_1_6B91:
        add     rsp, 88                                 ; 6DD1 _ 48: 83. C4, 58
        pop     rsi                                     ; 6DD5 _ 5E
        pop     rbp                                     ; 6DD6 _ 5D
        ret                                             ; 6DD7 _ C3

Unnamed_1_6B98 LABEL NEAR
        push    rbp                                     ; 6DD8 _ 55
        mov     rbp, rsp                                ; 6DD9 _ 48: 89. E5
        push    rsi                                     ; 6DDC _ 56
        push    rdi                                     ; 6DDD _ 57
        push    rbx                                     ; 6DDE _ 53
        sub     rsp, 88                                 ; 6DDF _ 48: 83. EC, 58
        mov     byte ptr [rbp-19H], 1                   ; 6DE3 _ C6. 45, E7, 01
        mov     rsi, 8000000000000006H                  ; 6DE7 _ 48: BE, 8000000000000006
        mov     edi, 4294967295                         ; 6DF1 _ BF, FFFFFFFF
        lea     rbx, ptr [rbp-19H]                      ; 6DF6 _ 48: 8D. 5D, E7
        jmp     ?_411                                   ; 6DFA _ EB, 12

Unnamed_1_6BBC:
        mov     rax, qword ptr [?_578]                  ; 6DFC _ 48: 8B. 05, 00003EA5(rel)
        mov     ecx, 10                                 ; 6E03 _ B9, 0000000A
        call    qword ptr [rax+0F8H]                    ; 6E08 _ FF. 90, 000000F8
?_411:  inc     edi                                     ; 6E0E _ FF. C7
        cmp     edi, 99999                              ; 6E10 _ 81. FF, 0001869F
        ja      ?_412                                   ; 6E16 _ 77, 4E
        mov     rax, qword ptr [?_567]                  ; 6E18 _ 48: 8B. 05, 00003E41(rel)
        mov     qword ptr [rsp+40H], rbx                ; 6E1F _ 48: 89. 5C 24, 40
        mov     dword ptr [rsp+38H], 1                  ; 6E24 _ C7. 44 24, 38, 00000001
        mov     dword ptr [rsp+30H], 0                  ; 6E2C _ C7. 44 24, 30, 00000000
        mov     dword ptr [rsp+28H], 0                  ; 6E34 _ C7. 44 24, 28, 00000000
        mov     dword ptr [rsp+20H], 0                  ; 6E3C _ C7. 44 24, 20, 00000000
        mov     rcx, rax                                ; 6E44 _ 48: 89. C1
        mov     edx, 2                                  ; 6E47 _ BA, 00000002
        xor     r8d, r8d                                ; 6E4C _ 45: 31. C0
        mov     r9d, 1                                  ; 6E4F _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 6E55 _ FF. 50, 10
        mov     rsi, rax                                ; 6E58 _ 48: 89. C6
        test    rsi, rsi                                ; 6E5B _ 48: 85. F6
        js      Unnamed_1_6C3D                          ; 6E5E _ 78, 1D
        test    byte ptr [rbp-19H], 01H                 ; 6E60 _ F6. 45, E7, 01
        jnz     Unnamed_1_6BBC                          ; 6E64 _ 75, 96
?_412:  test    rsi, rsi                                ; 6E66 _ 48: 85. F6
        jnz     Unnamed_1_6C3D                          ; 6E69 _ 75, 12
        xor     esi, esi                                ; 6E6B _ 31. F6
        test    byte ptr [rbp-19H], 01H                 ; 6E6D _ F6. 45, E7, 01
        jz      Unnamed_1_6C3D                          ; 6E71 _ 74, 0A
        mov     rsi, 8000000000000012H                  ; 6E73 _ 48: BE, 8000000000000012
Unnamed_1_6C3D:
        mov     rax, rsi                                ; 6E7D _ 48: 89. F0
        add     rsp, 88                                 ; 6E80 _ 48: 83. C4, 58
        pop     rbx                                     ; 6E84 _ 5B
        pop     rdi                                     ; 6E85 _ 5F
        pop     rsi                                     ; 6E86 _ 5E
        pop     rbp                                     ; 6E87 _ 5D
        ret                                             ; 6E88 _ C3

Unnamed_1_6C49 LABEL NEAR
        push    rbp                                     ; 6E89 _ 55
        mov     rbp, rsp                                ; 6E8A _ 48: 89. E5
        push    r15                                     ; 6E8D _ 41: 57
        push    r14                                     ; 6E8F _ 41: 56
        push    r12                                     ; 6E91 _ 41: 54
        push    rsi                                     ; 6E93 _ 56
        push    rdi                                     ; 6E94 _ 57
        push    rbx                                     ; 6E95 _ 53
        sub     rsp, 80                                 ; 6E96 _ 48: 83. EC, 50
        mov     esi, r9d                                ; 6E9A _ 44: 89. CE
        mov     r14, r8                                 ; 6E9D _ 4D: 89. C6
        mov     r15, rdx                                ; 6EA0 _ 49: 89. D7
        mov     r12, rcx                                ; 6EA3 _ 49: 89. CC
        xor     ebx, ebx                                ; 6EA6 _ 31. DB
        test    r14, r14                                ; 6EA8 _ 4D: 85. F6
        je      Unnamed_1_6D08                          ; 6EAB _ 0F 84, 00000097
        add     r15, r14                                ; 6EB1 _ 4D: 01. F7
        and     r12, 0FFFFFFH                           ; 6EB4 _ 49: 81. E4, 00FFFFFF
        add     r12, r14                                ; 6EBB _ 4D: 01. F4
        xor     ebx, ebx                                ; 6EBE _ 31. DB
        jmp     Unnamed_1_6C94                          ; 6EC0 _ EB, 12

Unnamed_1_6C82:
        mov     rax, qword ptr [?_578]                  ; 6EC2 _ 48: 8B. 05, 00003DDF(rel)
        mov     ecx, 15                                 ; 6EC9 _ B9, 0000000F
        call    qword ptr [rax+0F8H]                    ; 6ECE _ FF. 90, 000000F8
Unnamed_1_6C94:
        test    r14, r14                                ; 6ED4 _ 4D: 85. F6
        jz      Unnamed_1_6D08                          ; 6ED7 _ 74, 6F
        test    rbx, rbx                                ; 6ED9 _ 48: 85. DB
        js      Unnamed_1_6D08                          ; 6EDC _ 78, 6A
        mov     rdi, qword ptr [?_543]                  ; 6EDE _ 48: 8B. 3D, 00003CA3(rel)
        cmp     r14, rdi                                ; 6EE5 _ 49: 39. FE
        cmovbe  rdi, r14                                ; 6EE8 _ 49: 0F 46. FE
        sub     r12, rdi                                ; 6EEC _ 49: 29. FC
        sub     r15, rdi                                ; 6EEF _ 49: 29. FF
        mov     rax, qword ptr [?_567]                  ; 6EF2 _ 48: 8B. 05, 00003D67(rel)
        mov     qword ptr [rsp+40H], r15                ; 6EF9 _ 4C: 89. 7C 24, 40
        mov     dword ptr [rsp+38H], edi                ; 6EFE _ 89. 7C 24, 38
        mov     dword ptr [rsp+30H], r12d               ; 6F02 _ 44: 89. 64 24, 30
        mov     dword ptr [rsp+28H], 1                  ; 6F07 _ C7. 44 24, 28, 00000001
        mov     dword ptr [rsp+20H], 1                  ; 6F0F _ C7. 44 24, 20, 00000001
        mov     rcx, rax                                ; 6F17 _ 48: 89. C1
        mov     edx, 6                                  ; 6F1A _ BA, 00000006
        xor     r8d, r8d                                ; 6F1F _ 45: 31. C0
        mov     r9d, 1                                  ; 6F22 _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 6F28 _ FF. 50, 10
        mov     rbx, rax                                ; 6F2B _ 48: 89. C3
        test    rbx, rbx                                ; 6F2E _ 48: 85. DB
        js      Unnamed_1_6D08                          ; 6F31 _ 78, 15
        sub     r14, rdi                                ; 6F33 _ 49: 29. FE
        test    sil, sil                                ; 6F36 _ 40: 84. F6
        jz      Unnamed_1_6C82                          ; 6F39 _ 74, 87
        call    Unnamed_1_6B98                          ; 6F3B _ E8, FFFFFE98
        mov     rbx, rax                                ; 6F40 _ 48: 89. C3
        test    rbx, rbx                                ; 6F43 _ 48: 85. DB
        jns     Unnamed_1_6C94                          ; 6F46 _ 79, 8C
Unnamed_1_6D08:
        mov     rax, rbx                                ; 6F48 _ 48: 89. D8
        add     rsp, 80                                 ; 6F4B _ 48: 83. C4, 50
        pop     rbx                                     ; 6F4F _ 5B
        pop     rdi                                     ; 6F50 _ 5F
        pop     rsi                                     ; 6F51 _ 5E
        pop     r12                                     ; 6F52 _ 41: 5C
        pop     r14                                     ; 6F54 _ 41: 5E
        pop     r15                                     ; 6F56 _ 41: 5F
        pop     rbp                                     ; 6F58 _ 5D
        ret                                             ; 6F59 _ C3

?_413   LABEL NEAR
        push    rbp                                     ; 6F5A _ 55
        mov     rbp, rsp                                ; 6F5B _ 48: 89. E5
        push    rsi                                     ; 6F5E _ 56
        push    rdi                                     ; 6F5F _ 57
        sub     rsp, 80                                 ; 6F60 _ 48: 83. EC, 50
        call    Unnamed_1_63B7                          ; 6F64 _ E8, FFFFF68E
        add     rax, -7                                 ; 6F69 _ 48: 83. C0, F9
        xor     edi, edi                                ; 6F6D _ 31. FF
        cmp     rax, 1                                  ; 6F6F _ 48: 83. F8, 01
        ja      Unnamed_1_6E5A                          ; 6F73 _ 0F 87, 00000121
        mov     rax, qword ptr [?_578]                  ; 6F79 _ 48: 8B. 05, 00003D28(rel)
        lea     rcx, ptr [?_544]                        ; 6F80 _ 48: 8D. 0D, 00003C09(rel)
        xor     edi, edi                                ; 6F87 _ 31. FF
        lea     r8, ptr [?_569]                         ; 6F89 _ 4C: 8D. 05, 00003CE0(rel)
        xor     edx, edx                                ; 6F90 _ 31. D2
        call    qword ptr [rax+140H]                    ; 6F92 _ FF. 90, 00000140
        test    rax, rax                                ; 6F98 _ 48: 85. C0
        jne     Unnamed_1_6E5A                          ; 6F9B _ 0F 85, 000000F9
        mov     rax, qword ptr [?_569]                  ; 6FA1 _ 48: 8B. 05, 00003CC8(rel)
        lea     rcx, ptr [rbp-14H]                      ; 6FA8 _ 48: 8D. 4D, EC
        mov     qword ptr [rsp+40H], rcx                ; 6FAC _ 48: 89. 4C 24, 40
        mov     dword ptr [rsp+38H], 3                  ; 6FB1 _ C7. 44 24, 38, 00000003
        mov     dword ptr [rsp+30H], 0                  ; 6FB9 _ C7. 44 24, 30, 00000000
        mov     dword ptr [rsp+28H], 0                  ; 6FC1 _ C7. 44 24, 28, 00000000
        mov     dword ptr [rsp+20H], 0                  ; 6FC9 _ C7. 44 24, 20, 00000000
        mov     rcx, rax                                ; 6FD1 _ 48: 89. C1
        xor     edx, edx                                ; 6FD4 _ 31. D2
        xor     r8d, r8d                                ; 6FD6 _ 45: 31. C0
        mov     r9d, 1                                  ; 6FD9 _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 6FDF _ FF. 50, 10
        xor     edi, edi                                ; 6FE2 _ 31. FF
        test    rax, rax                                ; 6FE4 _ 48: 85. C0
        jne     Unnamed_1_6E5A                          ; 6FE7 _ 0F 85, 000000AD
        movzx   eax, byte ptr [rbp-14H]                 ; 6FED _ 0F B6. 45, EC
        shl     eax, 8                                  ; 6FF1 _ C1. E0, 08
        movzx   ecx, byte ptr [rbp-12H]                 ; 6FF4 _ 0F B6. 4D, EE
        or      ecx, eax                                ; 6FF8 _ 09. C1
        movzx   ecx, cx                                 ; 6FFA _ 0F B7. C9
        call    Unnamed_1_670E                          ; 6FFD _ E8, FFFFF94C
        mov     rsi, rax                                ; 7002 _ 48: 89. C6
        xor     edi, edi                                ; 7005 _ 31. FF
        test    rsi, rsi                                ; 7007 _ 48: 85. F6
        je      Unnamed_1_6E5A                          ; 700A _ 0F 84, 0000008A
        mov     ecx, 93                                 ; 7010 _ B9, 0000005D
        call    Unnamed_1_6645                          ; 7015 _ E8, FFFFF86B
        mov     rax, qword ptr [rsi+18H]                ; 701A _ 48: 8B. 46, 18
        mov     qword ptr [?_545], rax                  ; 701E _ 48: 89. 05, 00003B7B(rel)
        call    Unnamed_1_669B                          ; 7025 _ E8, FFFFF8B1
        test    rax, rax                                ; 702A _ 48: 85. C0
        setne   byte ptr [?_570]                        ; 702D _ 0F 95. 05, 00003C44(rel)
        call    Unnamed_1_6667                          ; 7034 _ E8, FFFFF86E
        lea     r8, ptr [?_421]                         ; 7039 _ 4C: 8D. 05, 0000029E(rel)
        lea     r9, ptr [?_419]                         ; 7040 _ 4C: 8D. 0D, 00000260(rel)
        lea     rdi, ptr [Unnamed_1_6FC9]               ; 7047 _ 48: 8D. 3D, 000001BB(rel)
        lea     rcx, ptr [Unnamed_1_6ED6]               ; 704E _ 48: 8D. 0D, 000000C1(rel)
        lea     rdx, ptr [?_415]                        ; 7055 _ 48: 8D. 15, 00000049(rel)
        mov     byte ptr [?_571], al                    ; 705C _ 88. 05, 00003C17(rel)
        mov     qword ptr [rsi+28H], rdx                ; 7062 _ 48: 89. 56, 28
        mov     qword ptr [rsi+30H], rcx                ; 7066 _ 48: 89. 4E, 30
        mov     qword ptr [rsi+38H], rdi                ; 706A _ 48: 89. 7E, 38
        mov     qword ptr [rsi+40H], r9                 ; 706E _ 4C: 89. 4E, 40
        mov     qword ptr [rsi+48H], r8                 ; 7072 _ 4C: 89. 46, 48
        mov     dword ptr [rsi+10H], 65536              ; 7076 _ C7. 46, 10, 00010000
        mov     eax, dword ptr [rsi+20H]                ; 707D _ 8B. 46, 20
        mov     ecx, eax                                ; 7080 _ 89. C1
        and     ecx, 0FFFFFFFEH                         ; 7082 _ 83. E1, FE
        mov     dword ptr [rsi+20H], ecx                ; 7085 _ 89. 4E, 20
        cmp     byte ptr [?_570], 0                     ; 7088 _ 80. 3D, 00003BE9(rel), 00
        jz      ?_414                                   ; 708F _ 74, 06
        or      eax, 01H                                ; 7091 _ 83. C8, 01
        mov     dword ptr [rsi+20H], eax                ; 7094 _ 89. 46, 20
?_414:  mov     rdi, rsi                                ; 7097 _ 48: 89. F7
Unnamed_1_6E5A:
        mov     rax, rdi                                ; 709A _ 48: 89. F8
        add     rsp, 80                                 ; 709D _ 48: 83. C4, 50
        pop     rdi                                     ; 70A1 _ 5F
        pop     rsi                                     ; 70A2 _ 5E
        pop     rbp                                     ; 70A3 _ 5D
        ret                                             ; 70A4 _ C3

?_415   LABEL NEAR
        push    rbp                                     ; 70A5 _ 55
        mov     rbp, rsp                                ; 70A6 _ 48: 89. E5
        push    rsi                                     ; 70A9 _ 56
        push    rdi                                     ; 70AA _ 57
        push    rbx                                     ; 70AB _ 53
        sub     rsp, 72                                 ; 70AC _ 48: 83. EC, 48
        mov     rsi, rdx                                ; 70B0 _ 48: 89. D6
        mov     rdi, rcx                                ; 70B3 _ 48: 89. CF
        xor     ebx, ebx                                ; 70B6 _ 31. DB
?_416:  lea     rcx, ptr [rsi+rbx]                      ; 70B8 _ 48: 8D. 0C 1E
        mov     rax, qword ptr [?_569]                  ; 70BC _ 48: 8B. 05, 00003BAD(rel)
        mov     qword ptr [rsp+40H], rcx                ; 70C3 _ 48: 89. 4C 24, 40
        lea     ecx, ptr [rdi+rbx]                      ; 70C8 _ 8D. 0C 1F
        mov     dword ptr [rsp+30H], ecx                ; 70CB _ 89. 4C 24, 30
        mov     dword ptr [rsp+38H], 64                 ; 70CF _ C7. 44 24, 38, 00000040
        mov     dword ptr [rsp+28H], 0                  ; 70D7 _ C7. 44 24, 28, 00000000
        mov     dword ptr [rsp+20H], 0                  ; 70DF _ C7. 44 24, 20, 00000000
        mov     rcx, rax                                ; 70E7 _ 48: 89. C1
        mov     edx, 1                                  ; 70EA _ BA, 00000001
        xor     r8d, r8d                                ; 70EF _ 45: 31. C0
        mov     r9d, 1                                  ; 70F2 _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 70F8 _ FF. 50, 10
        test    rax, rax                                ; 70FB _ 48: 85. C0
        jnz     ?_417                                   ; 70FE _ 75, 0D
        add     rbx, 64                                 ; 7100 _ 48: 83. C3, 40
        cmp     rbx, 65536                              ; 7104 _ 48: 81. FB, 00010000
        jc      ?_416                                   ; 710B _ 72, AB
?_417:  add     rsp, 72                                 ; 710D _ 48: 83. C4, 48
        pop     rbx                                     ; 7111 _ 5B
        pop     rdi                                     ; 7112 _ 5F
        pop     rsi                                     ; 7113 _ 5E
        pop     rbp                                     ; 7114 _ 5D
        ret                                             ; 7115 _ C3

Unnamed_1_6ED6 LABEL NEAR
        push    rbp                                     ; 7116 _ 55
        mov     rbp, rsp                                ; 7117 _ 48: 89. E5
        push    r15                                     ; 711A _ 41: 57
        push    r14                                     ; 711C _ 41: 56
        push    r12                                     ; 711E _ 41: 54
        push    rsi                                     ; 7120 _ 56
        push    rdi                                     ; 7121 _ 57
        push    rbx                                     ; 7122 _ 53
        sub     rsp, 80                                 ; 7123 _ 48: 83. EC, 50
        mov     r14, rdx                                ; 7127 _ 49: 89. D6
        mov     r15, rcx                                ; 712A _ 49: 89. CF
        mov     rbx, 8000000000000008H                  ; 712D _ 48: BB, 8000000000000008
        cmp     byte ptr [?_570], 0                     ; 7137 _ 80. 3D, 00003B3A(rel), 00
        jne     Unnamed_1_6FB7                          ; 713E _ 0F 85, 000000B3
        xor     ecx, ecx                                ; 7144 _ 31. C9
        call    Unnamed_1_70C5                          ; 7146 _ E8, 000001BA
        mov     rbx, rax                                ; 714B _ 48: 89. C3
        test    rbx, rbx                                ; 714E _ 48: 85. DB
        js      Unnamed_1_6FB7                          ; 7151 _ 0F 88, 000000A0
        mov     esi, 65536                              ; 7157 _ BE, 00010000
        mov     r12, qword ptr [?_545]                  ; 715C _ 4C: 8B. 25, 00003A3D(rel)
        cmp     r12, 65536                              ; 7163 _ 49: 81. FC, 00010000
        cmovnc  r12, rsi                                ; 716A _ 4C: 0F 43. E6
        and     r15, 0FFFFFFH                           ; 716E _ 49: 81. E7, 00FFFFFF
?_418:  test    rsi, rsi                                ; 7175 _ 48: 85. F6
        jz      Unnamed_1_6FA8                          ; 7178 _ 74, 6E
        test    rbx, rbx                                ; 717A _ 48: 85. DB
        js      Unnamed_1_6FA8                          ; 717D _ 78, 69
        mov     rax, qword ptr [?_569]                  ; 717F _ 48: 8B. 05, 00003AEA(rel)
        mov     qword ptr [rsp+40H], r14                ; 7186 _ 4C: 89. 74 24, 40
        mov     dword ptr [rsp+38H], r12d               ; 718B _ 44: 89. 64 24, 38
        mov     dword ptr [rsp+30H], r15d               ; 7190 _ 44: 89. 7C 24, 30
        mov     dword ptr [rsp+28H], 1                  ; 7195 _ C7. 44 24, 28, 00000001
        mov     dword ptr [rsp+20H], 1                  ; 719D _ C7. 44 24, 20, 00000001
        mov     rcx, rax                                ; 71A5 _ 48: 89. C1
        mov     edx, 6                                  ; 71A8 _ BA, 00000006
        xor     r8d, r8d                                ; 71AD _ 45: 31. C0
        mov     r9d, 1                                  ; 71B0 _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 71B6 _ FF. 50, 10
        mov     rbx, rax                                ; 71B9 _ 48: 89. C3
        test    rbx, rbx                                ; 71BC _ 48: 85. DB
        js      Unnamed_1_6FA8                          ; 71BF _ 78, 27
        sub     rsi, r12                                ; 71C1 _ 4C: 29. E6
        mov     rdi, qword ptr [?_545]                  ; 71C4 _ 48: 8B. 3D, 000039D5(rel)
        cmp     rsi, rdi                                ; 71CB _ 48: 39. FE
        cmovbe  rdi, rsi                                ; 71CE _ 48: 0F 46. FE
        add     r14, r12                                ; 71D2 _ 4D: 01. E6
        add     r15, r12                                ; 71D5 _ 4D: 01. E7
        call    Unnamed_1_71A2                          ; 71D8 _ E8, 00000205
        mov     rbx, rax                                ; 71DD _ 48: 89. C3
        test    rbx, rbx                                ; 71E0 _ 48: 85. DB
        mov     r12, rdi                                ; 71E3 _ 49: 89. FC
        jns     ?_418                                   ; 71E6 _ 79, 8D
Unnamed_1_6FA8:
        mov     ecx, 1                                  ; 71E8 _ B9, 00000001
        call    Unnamed_1_70C5                          ; 71ED _ E8, 00000113
        call    Unnamed_1_1AE                           ; 71F2 _ E8, FFFF91F7
Unnamed_1_6FB7:
        mov     rax, rbx                                ; 71F7 _ 48: 89. D8
        add     rsp, 80                                 ; 71FA _ 48: 83. C4, 50
        pop     rbx                                     ; 71FE _ 5B
        pop     rdi                                     ; 71FF _ 5F
        pop     rsi                                     ; 7200 _ 5E
        pop     r12                                     ; 7201 _ 41: 5C
        pop     r14                                     ; 7203 _ 41: 5E
        pop     r15                                     ; 7205 _ 41: 5F
        pop     rbp                                     ; 7207 _ 5D
        ret                                             ; 7208 _ C3

Unnamed_1_6FC9 LABEL NEAR
        push    rbp                                     ; 7209 _ 55
        mov     rbp, rsp                                ; 720A _ 48: 89. E5
        push    rsi                                     ; 720D _ 56
        push    rdi                                     ; 720E _ 57
        sub     rsp, 80                                 ; 720F _ 48: 83. EC, 50
        mov     rsi, rcx                                ; 7213 _ 48: 89. CE
        mov     rdi, 8000000000000008H                  ; 7216 _ 48: BF, 8000000000000008
        cmp     byte ptr [?_570], 0                     ; 7220 _ 80. 3D, 00003A51(rel), 00
        jnz     Unnamed_1_705C                          ; 7227 _ 75, 73
        xor     ecx, ecx                                ; 7229 _ 31. C9
        call    Unnamed_1_70C5                          ; 722B _ E8, 000000D5
        mov     rdi, rax                                ; 7230 _ 48: 89. C7
        test    rdi, rdi                                ; 7233 _ 48: 85. FF
        js      Unnamed_1_705C                          ; 7236 _ 78, 64
        mov     rax, qword ptr [?_569]                  ; 7238 _ 48: 8B. 05, 00003A31(rel)
        and     esi, 0FFFFFFH                           ; 723F _ 81. E6, 00FFFFFF
        mov     dword ptr [rsp+30H], esi                ; 7245 _ 89. 74 24, 30
        mov     qword ptr [rsp+40H], 0                  ; 7249 _ 48: C7. 44 24, 40, 00000000
        mov     dword ptr [rsp+38H], 0                  ; 7252 _ C7. 44 24, 38, 00000000
        mov     dword ptr [rsp+28H], 0                  ; 725A _ C7. 44 24, 28, 00000000
        mov     dword ptr [rsp+20H], 1                  ; 7262 _ C7. 44 24, 20, 00000001
        mov     rcx, rax                                ; 726A _ 48: 89. C1
        mov     edx, 5                                  ; 726D _ BA, 00000005
        xor     r8d, r8d                                ; 7272 _ 45: 31. C0
        xor     r9d, r9d                                ; 7275 _ 45: 31. C9
        call    qword ptr [rax+10H]                     ; 7278 _ FF. 50, 10
        mov     rsi, rax                                ; 727B _ 48: 89. C6
        call    Unnamed_1_71A2                          ; 727E _ E8, 0000015F
        mov     rdi, rax                                ; 7283 _ 48: 89. C7
        mov     ecx, 1                                  ; 7286 _ B9, 00000001
        call    Unnamed_1_70C5                          ; 728B _ E8, 00000075
        test    rsi, rsi                                ; 7290 _ 48: 85. F6
        cmovne  rdi, rsi                                ; 7293 _ 48: 0F 45. FE
        call    Unnamed_1_1AE                           ; 7297 _ E8, FFFF9152
Unnamed_1_705C:
        mov     rax, rdi                                ; 729C _ 48: 89. F8
        add     rsp, 80                                 ; 729F _ 48: 83. C4, 50
        pop     rdi                                     ; 72A3 _ 5F
        pop     rsi                                     ; 72A4 _ 5E
        pop     rbp                                     ; 72A5 _ 5D
        ret                                             ; 72A6 _ C3

?_419   LABEL NEAR
        push    rbp                                     ; 72A7 _ 55
        mov     rbp, rsp                                ; 72A8 _ 48: 89. E5
        push    rsi                                     ; 72AB _ 56
        push    rdi                                     ; 72AC _ 57
        sub     rsp, 32                                 ; 72AD _ 48: 83. EC, 20
        mov     rsi, rdx                                ; 72B1 _ 48: 89. D6
        mov     rdi, rcx                                ; 72B4 _ 48: 89. CF
        mov     rcx, rdi                                ; 72B7 _ 48: 89. F9
        call    Unnamed_1_6FC9                          ; 72BA _ E8, FFFFFF4A
        test    rax, rax                                ; 72BF _ 48: 85. C0
        jz      ?_420                                   ; 72C2 _ 74, 08
        add     rsp, 32                                 ; 72C4 _ 48: 83. C4, 20
        pop     rdi                                     ; 72C8 _ 5F
        pop     rsi                                     ; 72C9 _ 5E
        pop     rbp                                     ; 72CA _ 5D
        ret                                             ; 72CB _ C3

?_420:  mov     rcx, rdi                                ; 72CC _ 48: 89. F9
        mov     rdx, rsi                                ; 72CF _ 48: 89. F2
        add     rsp, 32                                 ; 72D2 _ 48: 83. C4, 20
        pop     rdi                                     ; 72D6 _ 5F
        pop     rsi                                     ; 72D7 _ 5E
        pop     rbp                                     ; 72D8 _ 5D
        jmp     Unnamed_1_6ED6                          ; 72D9 _ E9, FFFFFE38

?_421   LABEL NEAR
        mov     qword ptr [?_545], 1                    ; 72DE _ 48: C7. 05, 000038B7(rel), 00000001
        mov     qword ptr [?_569], 0                    ; 72E9 _ 48: C7. 05, 0000397C(rel), 00000000
        mov     byte ptr [?_571], 0                     ; 72F4 _ C6. 05, 0000397E(rel), 00
        mov     byte ptr [?_570], 0                     ; 72FB _ C6. 05, 00003976(rel), 00
        xor     eax, eax                                ; 7302 _ 31. C0
        ret                                             ; 7304 _ C3

Unnamed_1_70C5 LABEL NEAR
        push    rbp                                     ; 7305 _ 55
        mov     rbp, rsp                                ; 7306 _ 48: 89. E5
        push    rsi                                     ; 7309 _ 56
        sub     rsp, 88                                 ; 730A _ 48: 83. EC, 58
        mov     esi, ecx                                ; 730E _ 89. CE
        call    Unnamed_1_71A2                          ; 7310 _ E8, 000000CD
        test    rax, rax                                ; 7315 _ 48: 85. C0
        jne     Unnamed_1_719B                          ; 7318 _ 0F 85, 000000BD
        mov     al, 28                                  ; 731E _ B0, 1C
        test    sil, sil                                ; 7320 _ 40: 84. F6
        jnz     ?_422                                   ; 7323 _ 75, 02
        xor     al, al                                  ; 7325 _ 30. C0
?_422:  mov     byte ptr [rbp-9H], al                   ; 7327 _ 88. 45, F7
        mov     rax, qword ptr [?_569]                  ; 732A _ 48: 8B. 05, 0000393F(rel)
        lea     rcx, ptr [rbp-9H]                       ; 7331 _ 48: 8D. 4D, F7
        mov     qword ptr [rsp+40H], rcx                ; 7335 _ 48: 89. 4C 24, 40
        mov     dword ptr [rsp+38H], 1                  ; 733A _ C7. 44 24, 38, 00000001
        mov     dword ptr [rsp+30H], 0                  ; 7342 _ C7. 44 24, 30, 00000000
        mov     dword ptr [rsp+28H], 1                  ; 734A _ C7. 44 24, 28, 00000001
        mov     dword ptr [rsp+20H], 1                  ; 7352 _ C7. 44 24, 20, 00000001
        mov     rcx, rax                                ; 735A _ 48: 89. C1
        mov     edx, 7                                  ; 735D _ BA, 00000007
        xor     r8d, r8d                                ; 7362 _ 45: 31. C0
        mov     r9d, 1                                  ; 7365 _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 736B _ FF. 50, 10
        test    rax, rax                                ; 736E _ 48: 85. C0
        js      Unnamed_1_719B                          ; 7371 _ 78, 68
        call    Unnamed_1_71A2                          ; 7373 _ E8, 0000006A
        test    rax, rax                                ; 7378 _ 48: 85. C0
        jnz     Unnamed_1_719B                          ; 737B _ 75, 5E
        mov     rax, qword ptr [?_569]                  ; 737D _ 48: 8B. 05, 000038EC(rel)
        lea     rcx, ptr [rbp-0AH]                      ; 7384 _ 48: 8D. 4D, F6
        mov     qword ptr [rsp+40H], rcx                ; 7388 _ 48: 89. 4C 24, 40
        mov     dword ptr [rsp+38H], 1                  ; 738D _ C7. 44 24, 38, 00000001
        mov     dword ptr [rsp+30H], 0                  ; 7395 _ C7. 44 24, 30, 00000000
        mov     dword ptr [rsp+28H], 0                  ; 739D _ C7. 44 24, 28, 00000000
        mov     dword ptr [rsp+20H], 0                  ; 73A5 _ C7. 44 24, 20, 00000000
        mov     rcx, rax                                ; 73AD _ 48: 89. C1
        mov     edx, 2                                  ; 73B0 _ BA, 00000002
        xor     r8d, r8d                                ; 73B5 _ 45: 31. C0
        mov     r9d, 1                                  ; 73B8 _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 73BE _ FF. 50, 10
        test    rax, rax                                ; 73C1 _ 48: 85. C0
        js      Unnamed_1_719B                          ; 73C4 _ 78, 15
        mov     cl, byte ptr [rbp-9H]                   ; 73C6 _ 8A. 4D, F7
        xor     cl, byte ptr [rbp-0AH]                  ; 73C9 _ 32. 4D, F6
        test    cl, 1CH                                 ; 73CC _ F6. C1, 1C
        jz      Unnamed_1_719B                          ; 73CF _ 74, 0A
        mov     rax, 8000000000000007H                  ; 73D1 _ 48: B8, 8000000000000007
Unnamed_1_719B:
        add     rsp, 88                                 ; 73DB _ 48: 83. C4, 58
        pop     rsi                                     ; 73DF _ 5E
        pop     rbp                                     ; 73E0 _ 5D
        ret                                             ; 73E1 _ C3

Unnamed_1_71A2 LABEL NEAR
        push    rbp                                     ; 73E2 _ 55
        mov     rbp, rsp                                ; 73E3 _ 48: 89. E5
        push    rsi                                     ; 73E6 _ 56
        push    rdi                                     ; 73E7 _ 57
        push    rbx                                     ; 73E8 _ 53
        sub     rsp, 88                                 ; 73E9 _ 48: 83. EC, 58
        xor     esi, esi                                ; 73ED _ 31. F6
        cmp     byte ptr [?_571], 0                     ; 73EF _ 80. 3D, 00003883(rel), 00
        jne     Unnamed_1_7256                          ; 73F6 _ 0F 85, 0000009A
        mov     byte ptr [rbp-19H], 1                   ; 73FC _ C6. 45, E7, 01
        mov     rsi, 8000000000000006H                  ; 7400 _ 48: BE, 8000000000000006
        mov     edi, 4294967295                         ; 740A _ BF, FFFFFFFF
        lea     rbx, ptr [rbp-19H]                      ; 740F _ 48: 8D. 5D, E7
        jmp     ?_423                                   ; 7413 _ EB, 12

Unnamed_1_71D5:
        mov     rax, qword ptr [?_578]                  ; 7415 _ 48: 8B. 05, 0000388C(rel)
        mov     ecx, 10                                 ; 741C _ B9, 0000000A
        call    qword ptr [rax+0F8H]                    ; 7421 _ FF. 90, 000000F8
?_423:  inc     edi                                     ; 7427 _ FF. C7
        cmp     edi, 99999                              ; 7429 _ 81. FF, 0001869F
        ja      ?_424                                   ; 742F _ 77, 4E
        mov     rax, qword ptr [?_569]                  ; 7431 _ 48: 8B. 05, 00003838(rel)
        mov     qword ptr [rsp+40H], rbx                ; 7438 _ 48: 89. 5C 24, 40
        mov     dword ptr [rsp+38H], 1                  ; 743D _ C7. 44 24, 38, 00000001
        mov     dword ptr [rsp+30H], 0                  ; 7445 _ C7. 44 24, 30, 00000000
        mov     dword ptr [rsp+28H], 0                  ; 744D _ C7. 44 24, 28, 00000000
        mov     dword ptr [rsp+20H], 0                  ; 7455 _ C7. 44 24, 20, 00000000
        mov     rcx, rax                                ; 745D _ 48: 89. C1
        mov     edx, 2                                  ; 7460 _ BA, 00000002
        xor     r8d, r8d                                ; 7465 _ 45: 31. C0
        mov     r9d, 1                                  ; 7468 _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 746E _ FF. 50, 10
        mov     rsi, rax                                ; 7471 _ 48: 89. C6
        test    rsi, rsi                                ; 7474 _ 48: 85. F6
        js      Unnamed_1_7256                          ; 7477 _ 78, 1D
        test    byte ptr [rbp-19H], 01H                 ; 7479 _ F6. 45, E7, 01
        jnz     Unnamed_1_71D5                          ; 747D _ 75, 96
?_424:  test    rsi, rsi                                ; 747F _ 48: 85. F6
        jnz     Unnamed_1_7256                          ; 7482 _ 75, 12
        xor     esi, esi                                ; 7484 _ 31. F6
        test    byte ptr [rbp-19H], 01H                 ; 7486 _ F6. 45, E7, 01
        jz      Unnamed_1_7256                          ; 748A _ 74, 0A
        mov     rsi, 8000000000000012H                  ; 748C _ 48: BE, 8000000000000012
Unnamed_1_7256:
        mov     rax, rsi                                ; 7496 _ 48: 89. F0
        add     rsp, 88                                 ; 7499 _ 48: 83. C4, 58
        pop     rbx                                     ; 749D _ 5B
        pop     rdi                                     ; 749E _ 5F
        pop     rsi                                     ; 749F _ 5E
        pop     rbp                                     ; 74A0 _ 5D
        ret                                             ; 74A1 _ C3

?_425   LABEL NEAR
        push    rbp                                     ; 74A2 _ 55
        mov     rbp, rsp                                ; 74A3 _ 48: 89. E5
        push    rsi                                     ; 74A6 _ 56
        push    rdi                                     ; 74A7 _ 57
        sub     rsp, 96                                 ; 74A8 _ 48: 83. EC, 60
        call    Unnamed_1_63B7                          ; 74AC _ E8, FFFFF146
        add     rax, -9                                 ; 74B1 _ 48: 83. C0, F7
        xor     edi, edi                                ; 74B5 _ 31. FF
        cmp     rax, 1                                  ; 74B7 _ 48: 83. F8, 01
        ja      Unnamed_1_7397                          ; 74BB _ 0F 87, 00000116
        mov     rax, qword ptr [?_578]                  ; 74C1 _ 48: 8B. 05, 000037E0(rel)
        lea     rcx, ptr [?_546]                        ; 74C8 _ 48: 8D. 0D, 000036D9(rel)
        xor     edi, edi                                ; 74CF _ 31. FF
        lea     r8, ptr [?_572]                         ; 74D1 _ 4C: 8D. 05, 000037A8(rel)
        xor     edx, edx                                ; 74D8 _ 31. D2
        call    qword ptr [rax+140H]                    ; 74DA _ FF. 90, 00000140
        test    rax, rax                                ; 74E0 _ 48: 85. C0
        jne     Unnamed_1_7397                          ; 74E3 _ 0F 85, 000000EE
        mov     rax, qword ptr [?_572]                  ; 74E9 _ 48: 8B. 05, 00003790(rel)
        lea     rcx, ptr [rbp-14H]                      ; 74F0 _ 48: 8D. 4D, EC
        mov     qword ptr [rsp+40H], rcx                ; 74F4 _ 48: 89. 4C 24, 40
        mov     dword ptr [rsp+48H], 0                  ; 74F9 _ C7. 44 24, 48, 00000000
        mov     dword ptr [rsp+38H], 3                  ; 7501 _ C7. 44 24, 38, 00000003
        mov     qword ptr [rsp+30H], 0                  ; 7509 _ 48: C7. 44 24, 30, 00000000
        mov     dword ptr [rsp+28H], 0                  ; 7512 _ C7. 44 24, 28, 00000000
        mov     dword ptr [rsp+20H], 0                  ; 751A _ C7. 44 24, 20, 00000000
        mov     rcx, rax                                ; 7522 _ 48: 89. C1
        xor     edx, edx                                ; 7525 _ 31. D2
        xor     r8d, r8d                                ; 7527 _ 45: 31. C0
        mov     r9d, 1                                  ; 752A _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 7530 _ FF. 50, 10
        xor     edi, edi                                ; 7533 _ 31. FF
        test    rax, rax                                ; 7535 _ 48: 85. C0
        jne     Unnamed_1_7397                          ; 7538 _ 0F 85, 00000099
        movzx   eax, byte ptr [rbp-14H]                 ; 753E _ 0F B6. 45, EC
        shl     eax, 8                                  ; 7542 _ C1. E0, 08
        movzx   ecx, byte ptr [rbp-12H]                 ; 7545 _ 0F B6. 4D, EE
        or      ecx, eax                                ; 7549 _ 09. C1
        movzx   ecx, cx                                 ; 754B _ 0F B7. C9
        call    Unnamed_1_670E                          ; 754E _ E8, FFFFF3FB
        mov     rsi, rax                                ; 7553 _ 48: 89. C6
        xor     edi, edi                                ; 7556 _ 31. FF
        test    rsi, rsi                                ; 7558 _ 48: 85. F6
        jz      Unnamed_1_7397                          ; 755B _ 74, 7A
        mov     rax, qword ptr [rsi+18H]                ; 755D _ 48: 8B. 46, 18
        mov     qword ptr [?_547], rax                  ; 7561 _ 48: 89. 05, 00003650(rel)
        call    Unnamed_1_669B                          ; 7568 _ E8, FFFFF36E
        test    rax, rax                                ; 756D _ 48: 85. C0
        setne   byte ptr [?_573]                        ; 7570 _ 0F 95. 05, 00003711(rel)
        call    Unnamed_1_6667                          ; 7577 _ E8, FFFFF32B
        lea     r8, ptr [?_433]                         ; 757C _ 4C: 8D. 05, 00000290(rel)
        lea     rcx, ptr [?_431]                        ; 7583 _ 48: 8D. 0D, 00000252(rel)
        lea     rdx, ptr [Unnamed_1_7508]               ; 758A _ 48: 8D. 15, 000001B7(rel)
        lea     rdi, ptr [Unnamed_1_741D]               ; 7591 _ 48: 8D. 3D, 000000C5(rel)
        lea     rax, ptr [?_427]                        ; 7598 _ 48: 8D. 05, 00000043(rel)
        mov     qword ptr [rsi+28H], rax                ; 759F _ 48: 89. 46, 28
        mov     qword ptr [rsi+30H], rdi                ; 75A3 _ 48: 89. 7E, 30
        mov     qword ptr [rsi+38H], rdx                ; 75A7 _ 48: 89. 56, 38
        mov     qword ptr [rsi+40H], rcx                ; 75AB _ 48: 89. 4E, 40
        mov     qword ptr [rsi+48H], r8                 ; 75AF _ 4C: 89. 46, 48
        mov     dword ptr [rsi+10H], 65536              ; 75B3 _ C7. 46, 10, 00010000
        mov     eax, dword ptr [rsi+20H]                ; 75BA _ 8B. 46, 20
        mov     ecx, eax                                ; 75BD _ 89. C1
        and     ecx, 0FFFFFFFEH                         ; 75BF _ 83. E1, FE
        mov     dword ptr [rsi+20H], ecx                ; 75C2 _ 89. 4E, 20
        cmp     byte ptr [?_573], 0                     ; 75C5 _ 80. 3D, 000036BC(rel), 00
        jz      ?_426                                   ; 75CC _ 74, 06
        or      eax, 01H                                ; 75CE _ 83. C8, 01
        mov     dword ptr [rsi+20H], eax                ; 75D1 _ 89. 46, 20
?_426:  mov     rdi, rsi                                ; 75D4 _ 48: 89. F7
Unnamed_1_7397:
        mov     rax, rdi                                ; 75D7 _ 48: 89. F8
        add     rsp, 96                                 ; 75DA _ 48: 83. C4, 60
        pop     rdi                                     ; 75DE _ 5F
        pop     rsi                                     ; 75DF _ 5E
        pop     rbp                                     ; 75E0 _ 5D
        ret                                             ; 75E1 _ C3

?_427   LABEL NEAR
        push    rbp                                     ; 75E2 _ 55
        mov     rbp, rsp                                ; 75E3 _ 48: 89. E5
        push    rsi                                     ; 75E6 _ 56
        push    rdi                                     ; 75E7 _ 57
        push    rbx                                     ; 75E8 _ 53
        sub     rsp, 88                                 ; 75E9 _ 48: 83. EC, 58
        mov     rsi, rdx                                ; 75ED _ 48: 89. D6
        mov     rdi, rcx                                ; 75F0 _ 48: 89. CF
        xor     ebx, ebx                                ; 75F3 _ 31. DB
?_428:  lea     rcx, ptr [rdi+rbx]                      ; 75F5 _ 48: 8D. 0C 1F
        lea     rdx, ptr [rsi+rbx]                      ; 75F9 _ 48: 8D. 14 1E
        mov     rax, qword ptr [?_572]                  ; 75FD _ 48: 8B. 05, 0000367C(rel)
        mov     qword ptr [rsp+40H], rdx                ; 7604 _ 48: 89. 54 24, 40
        mov     qword ptr [rsp+30H], rcx                ; 7609 _ 48: 89. 4C 24, 30
        mov     dword ptr [rsp+48H], 0                  ; 760E _ C7. 44 24, 48, 00000000
        mov     dword ptr [rsp+38H], 64                 ; 7616 _ C7. 44 24, 38, 00000040
        mov     dword ptr [rsp+28H], 0                  ; 761E _ C7. 44 24, 28, 00000000
        mov     dword ptr [rsp+20H], 0                  ; 7626 _ C7. 44 24, 20, 00000000
        mov     rcx, rax                                ; 762E _ 48: 89. C1
        mov     edx, 4                                  ; 7631 _ BA, 00000004
        xor     r8d, r8d                                ; 7636 _ 45: 31. C0
        mov     r9d, 1                                  ; 7639 _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 763F _ FF. 50, 10
        test    rax, rax                                ; 7642 _ 48: 85. C0
        jnz     ?_429                                   ; 7645 _ 75, 0D
        add     rbx, 64                                 ; 7647 _ 48: 83. C3, 40
        cmp     rbx, 65536                              ; 764B _ 48: 81. FB, 00010000
        jc      ?_428                                   ; 7652 _ 72, A1
?_429:  add     rsp, 88                                 ; 7654 _ 48: 83. C4, 58
        pop     rbx                                     ; 7658 _ 5B
        pop     rdi                                     ; 7659 _ 5F
        pop     rsi                                     ; 765A _ 5E
        pop     rbp                                     ; 765B _ 5D
        ret                                             ; 765C _ C3

Unnamed_1_741D LABEL NEAR
        push    rbp                                     ; 765D _ 55
        mov     rbp, rsp                                ; 765E _ 48: 89. E5
        push    r15                                     ; 7661 _ 41: 57
        push    r14                                     ; 7663 _ 41: 56
        push    rsi                                     ; 7665 _ 56
        push    rdi                                     ; 7666 _ 57
        push    rbx                                     ; 7667 _ 53
        sub     rsp, 88                                 ; 7668 _ 48: 83. EC, 58
        mov     r14, rdx                                ; 766C _ 49: 89. D6
        mov     r15, rcx                                ; 766F _ 49: 89. CF
        mov     rbx, 8000000000000008H                  ; 7672 _ 48: BB, 8000000000000008
        cmp     byte ptr [?_573], 0                     ; 767C _ 80. 3D, 00003605(rel), 00
        jne     Unnamed_1_74F8                          ; 7683 _ 0F 85, 000000AF
        xor     ecx, ecx                                ; 7689 _ 31. C9
        call    Unnamed_1_75F3                          ; 768B _ E8, 000001A3
        mov     rbx, rax                                ; 7690 _ 48: 89. C3
        test    rbx, rbx                                ; 7693 _ 48: 85. DB
        js      Unnamed_1_74F8                          ; 7696 _ 0F 88, 0000009C
        mov     esi, 65536                              ; 769C _ BE, 00010000
        mov     rdi, qword ptr [?_547]                  ; 76A1 _ 48: 8B. 3D, 00003510(rel)
        cmp     rdi, 65536                              ; 76A8 _ 48: 81. FF, 00010000
        cmovnc  rdi, rsi                                ; 76AF _ 48: 0F 43. FE
        and     r15, 0FFFFFFH                           ; 76B3 _ 49: 81. E7, 00FFFFFF
        jmp     ?_430                                   ; 76BA _ EB, 1A

Unnamed_1_747C:
        sub     rsi, rdi                                ; 76BC _ 48: 29. FE
        mov     rax, qword ptr [?_547]                  ; 76BF _ 48: 8B. 05, 000034F2(rel)
        cmp     rsi, rax                                ; 76C6 _ 48: 39. C6
        cmovbe  rax, rsi                                ; 76C9 _ 48: 0F 46. C6
        add     r14, rdi                                ; 76CD _ 49: 01. FE
        add     r15, rdi                                ; 76D0 _ 49: 01. FF
        mov     rdi, rax                                ; 76D3 _ 48: 89. C7
?_430:  test    rsi, rsi                                ; 76D6 _ 48: 85. F6
        jz      Unnamed_1_74E9                          ; 76D9 _ 74, 4E
        test    rbx, rbx                                ; 76DB _ 48: 85. DB
        js      Unnamed_1_74E9                          ; 76DE _ 78, 49
        mov     rax, qword ptr [?_572]                  ; 76E0 _ 48: 8B. 05, 00003599(rel)
        mov     qword ptr [rsp+40H], r14                ; 76E7 _ 4C: 89. 74 24, 40
        mov     dword ptr [rsp+38H], edi                ; 76EC _ 89. 7C 24, 38
        mov     qword ptr [rsp+30H], r15                ; 76F0 _ 4C: 89. 7C 24, 30
        mov     dword ptr [rsp+48H], 0                  ; 76F5 _ C7. 44 24, 48, 00000000
        mov     dword ptr [rsp+28H], 1                  ; 76FD _ C7. 44 24, 28, 00000001
        mov     dword ptr [rsp+20H], 1                  ; 7705 _ C7. 44 24, 20, 00000001
        mov     rcx, rax                                ; 770D _ 48: 89. C1
        mov     edx, 3                                  ; 7710 _ BA, 00000003
        xor     r8d, r8d                                ; 7715 _ 45: 31. C0
        mov     r9d, 1                                  ; 7718 _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 771E _ FF. 50, 10
        mov     rbx, rax                                ; 7721 _ 48: 89. C3
        test    rbx, rbx                                ; 7724 _ 48: 85. DB
        jns     Unnamed_1_747C                          ; 7727 _ 79, 93
Unnamed_1_74E9:
        mov     ecx, 1                                  ; 7729 _ B9, 00000001
        call    Unnamed_1_75F3                          ; 772E _ E8, 00000100
        call    Unnamed_1_1AE                           ; 7733 _ E8, FFFF8CB6
Unnamed_1_74F8:
        mov     rax, rbx                                ; 7738 _ 48: 89. D8
        add     rsp, 88                                 ; 773B _ 48: 83. C4, 58
        pop     rbx                                     ; 773F _ 5B
        pop     rdi                                     ; 7740 _ 5F
        pop     rsi                                     ; 7741 _ 5E
        pop     r14                                     ; 7742 _ 41: 5E
        pop     r15                                     ; 7744 _ 41: 5F
        pop     rbp                                     ; 7746 _ 5D
        ret                                             ; 7747 _ C3

Unnamed_1_7508 LABEL NEAR
        push    rbp                                     ; 7748 _ 55
        mov     rbp, rsp                                ; 7749 _ 48: 89. E5
        push    rsi                                     ; 774C _ 56
        sub     rsp, 88                                 ; 774D _ 48: 83. EC, 58
        mov     rsi, rcx                                ; 7751 _ 48: 89. CE
        mov     rax, 8000000000000008H                  ; 7754 _ 48: B8, 8000000000000008
        cmp     byte ptr [?_573], 0                     ; 775E _ 80. 3D, 00003523(rel), 00
        jnz     Unnamed_1_7595                          ; 7765 _ 75, 6E
        xor     ecx, ecx                                ; 7767 _ 31. C9
        call    Unnamed_1_75F3                          ; 7769 _ E8, 000000C5
        test    rax, rax                                ; 776E _ 48: 85. C0
        js      Unnamed_1_7595                          ; 7771 _ 78, 62
        mov     rax, qword ptr [?_572]                  ; 7773 _ 48: 8B. 05, 00003506(rel)
        and     rsi, 0FFFFFFH                           ; 777A _ 48: 81. E6, 00FFFFFF
        mov     qword ptr [rsp+30H], rsi                ; 7781 _ 48: 89. 74 24, 30
        mov     dword ptr [rsp+48H], 0                  ; 7786 _ C7. 44 24, 48, 00000000
        mov     qword ptr [rsp+40H], 0                  ; 778E _ 48: C7. 44 24, 40, 00000000
        mov     dword ptr [rsp+38H], 0                  ; 7797 _ C7. 44 24, 38, 00000000
        mov     dword ptr [rsp+28H], 0                  ; 779F _ C7. 44 24, 28, 00000000
        mov     dword ptr [rsp+20H], 1                  ; 77A7 _ C7. 44 24, 20, 00000001
        mov     rcx, rax                                ; 77AF _ 48: 89. C1
        mov     edx, 5                                  ; 77B2 _ BA, 00000005
        xor     r8d, r8d                                ; 77B7 _ 45: 31. C0
        xor     r9d, r9d                                ; 77BA _ 45: 31. C9
        call    qword ptr [rax+10H]                     ; 77BD _ FF. 50, 10
        mov     rsi, rax                                ; 77C0 _ 48: 89. C6
        mov     ecx, 1                                  ; 77C3 _ B9, 00000001
        call    Unnamed_1_75F3                          ; 77C8 _ E8, 00000066
        call    Unnamed_1_1AE                           ; 77CD _ E8, FFFF8C1C
        mov     rax, rsi                                ; 77D2 _ 48: 89. F0
Unnamed_1_7595:
        add     rsp, 88                                 ; 77D5 _ 48: 83. C4, 58
        pop     rsi                                     ; 77D9 _ 5E
        pop     rbp                                     ; 77DA _ 5D
        ret                                             ; 77DB _ C3

?_431   LABEL NEAR
        push    rbp                                     ; 77DC _ 55
        mov     rbp, rsp                                ; 77DD _ 48: 89. E5
        push    rsi                                     ; 77E0 _ 56
        push    rdi                                     ; 77E1 _ 57
        sub     rsp, 32                                 ; 77E2 _ 48: 83. EC, 20
        mov     rsi, rdx                                ; 77E6 _ 48: 89. D6
        mov     rdi, rcx                                ; 77E9 _ 48: 89. CF
        mov     rcx, rdi                                ; 77EC _ 48: 89. F9
        call    Unnamed_1_7508                          ; 77EF _ E8, FFFFFF54
        test    rax, rax                                ; 77F4 _ 48: 85. C0
        jz      ?_432                                   ; 77F7 _ 74, 08
        add     rsp, 32                                 ; 77F9 _ 48: 83. C4, 20
        pop     rdi                                     ; 77FD _ 5F
        pop     rsi                                     ; 77FE _ 5E
        pop     rbp                                     ; 77FF _ 5D
        ret                                             ; 7800 _ C3

?_432:  mov     rcx, rdi                                ; 7801 _ 48: 89. F9
        mov     rdx, rsi                                ; 7804 _ 48: 89. F2
        add     rsp, 32                                 ; 7807 _ 48: 83. C4, 20
        pop     rdi                                     ; 780B _ 5F
        pop     rsi                                     ; 780C _ 5E
        pop     rbp                                     ; 780D _ 5D
        jmp     Unnamed_1_741D                          ; 780E _ E9, FFFFFE4A

?_433   LABEL NEAR
        mov     qword ptr [?_547], 1                    ; 7813 _ 48: C7. 05, 0000339A(rel), 00000001
        mov     qword ptr [?_572], 0                    ; 781E _ 48: C7. 05, 00003457(rel), 00000000
        mov     byte ptr [?_573], 0                     ; 7829 _ C6. 05, 00003458(rel), 00
        xor     eax, eax                                ; 7830 _ 31. C0
        ret                                             ; 7832 _ C3

Unnamed_1_75F3 LABEL NEAR
        push    rbp                                     ; 7833 _ 55
        mov     rbp, rsp                                ; 7834 _ 48: 89. E5
        sub     rsp, 96                                 ; 7837 _ 48: 83. EC, 60
        mov     al, 28                                  ; 783B _ B0, 1C
        test    cl, cl                                  ; 783D _ 84. C9
        jnz     ?_434                                   ; 783F _ 75, 02
        xor     al, al                                  ; 7841 _ 30. C0
?_434:  mov     byte ptr [rbp-1H], al                   ; 7843 _ 88. 45, FF
        mov     rax, qword ptr [?_572]                  ; 7846 _ 48: 8B. 05, 00003433(rel)
        lea     rcx, ptr [rbp-1H]                       ; 784D _ 48: 8D. 4D, FF
        mov     qword ptr [rsp+40H], rcx                ; 7851 _ 48: 89. 4C 24, 40
        mov     dword ptr [rsp+48H], 0                  ; 7856 _ C7. 44 24, 48, 00000000
        mov     dword ptr [rsp+38H], 1                  ; 785E _ C7. 44 24, 38, 00000001
        mov     qword ptr [rsp+30H], 0                  ; 7866 _ 48: C7. 44 24, 30, 00000000
        mov     dword ptr [rsp+28H], 1                  ; 786F _ C7. 44 24, 28, 00000001
        mov     dword ptr [rsp+20H], 1                  ; 7877 _ C7. 44 24, 20, 00000001
        mov     rcx, rax                                ; 787F _ 48: 89. C1
        mov     edx, 2                                  ; 7882 _ BA, 00000002
        xor     r8d, r8d                                ; 7887 _ 45: 31. C0
        mov     r9d, 1                                  ; 788A _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 7890 _ FF. 50, 10
        test    rax, rax                                ; 7893 _ 48: 85. C0
        js      Unnamed_1_76BF                          ; 7896 _ 78, 67
        mov     rax, qword ptr [?_572]                  ; 7898 _ 48: 8B. 05, 000033E1(rel)
        lea     rcx, ptr [rbp-2H]                       ; 789F _ 48: 8D. 4D, FE
        mov     qword ptr [rsp+40H], rcx                ; 78A3 _ 48: 89. 4C 24, 40
        mov     dword ptr [rsp+48H], 0                  ; 78A8 _ C7. 44 24, 48, 00000000
        mov     dword ptr [rsp+38H], 1                  ; 78B0 _ C7. 44 24, 38, 00000001
        mov     qword ptr [rsp+30H], 0                  ; 78B8 _ 48: C7. 44 24, 30, 00000000
        mov     dword ptr [rsp+28H], 0                  ; 78C1 _ C7. 44 24, 28, 00000000
        mov     dword ptr [rsp+20H], 0                  ; 78C9 _ C7. 44 24, 20, 00000000
        mov     rcx, rax                                ; 78D1 _ 48: 89. C1
        mov     edx, 6                                  ; 78D4 _ BA, 00000006
        xor     r8d, r8d                                ; 78D9 _ 45: 31. C0
        mov     r9d, 1                                  ; 78DC _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 78E2 _ FF. 50, 10
        test    rax, rax                                ; 78E5 _ 48: 85. C0
        js      Unnamed_1_76BF                          ; 78E8 _ 78, 15
        mov     cl, byte ptr [rbp-1H]                   ; 78EA _ 8A. 4D, FF
        xor     cl, byte ptr [rbp-2H]                   ; 78ED _ 32. 4D, FE
        test    cl, 1CH                                 ; 78F0 _ F6. C1, 1C
        jz      Unnamed_1_76BF                          ; 78F3 _ 74, 0A
        mov     rax, 8000000000000007H                  ; 78F5 _ 48: B8, 8000000000000007
Unnamed_1_76BF:
        add     rsp, 96                                 ; 78FF _ 48: 83. C4, 60
        pop     rbp                                     ; 7903 _ 5D
        ret                                             ; 7904 _ C3

?_435   LABEL NEAR
        push    rbp                                     ; 7905 _ 55
        mov     rbp, rsp                                ; 7906 _ 48: 89. E5
        push    rsi                                     ; 7909 _ 56
        push    rdi                                     ; 790A _ 57
        sub     rsp, 96                                 ; 790B _ 48: 83. EC, 60
        call    Unnamed_1_63B7                          ; 790F _ E8, FFFFECE3
        add     rax, -11                                ; 7914 _ 48: 83. C0, F5
        xor     esi, esi                                ; 7918 _ 31. F6
        cmp     rax, 3                                  ; 791A _ 48: 83. F8, 03
        ja      Unnamed_1_795A                          ; 791E _ 0F 87, 00000276
        mov     rax, qword ptr [?_578]                  ; 7924 _ 48: 8B. 05, 0000337D(rel)
        lea     rcx, ptr [?_548]                        ; 792B _ 48: 8D. 0D, 0000328E(rel)
        xor     edi, edi                                ; 7932 _ 31. FF
        lea     r8, ptr [?_574]                         ; 7934 _ 4C: 8D. 05, 00003355(rel)
        mov     rdx, rdi                                ; 793B _ 48: 89. FA
        call    qword ptr [rax+140H]                    ; 793E _ FF. 90, 00000140
        test    rax, rax                                ; 7944 _ 48: 85. C0
        jz      Unnamed_1_7760                          ; 7947 _ 74, 57
        mov     rax, qword ptr [?_578]                  ; 7949 _ 48: 8B. 05, 00003358(rel)
        lea     rcx, ptr [?_549]                        ; 7950 _ 48: 8D. 0D, 00003279(rel)
        lea     r8, ptr [?_574]                         ; 7957 _ 4C: 8D. 05, 00003332(rel)
        xor     edx, edx                                ; 795E _ 31. D2
        call    qword ptr [rax+140H]                    ; 7960 _ FF. 90, 00000140
        test    rax, rax                                ; 7966 _ 48: 85. C0
        jz      Unnamed_1_7760                          ; 7969 _ 74, 35
        mov     rax, qword ptr [?_578]                  ; 796B _ 48: 8B. 05, 00003336(rel)
        lea     rcx, ptr [?_550]                        ; 7972 _ 48: 8D. 0D, 00003267(rel)
        xor     esi, esi                                ; 7979 _ 31. F6
        lea     r8, ptr [?_574]                         ; 797B _ 4C: 8D. 05, 0000330E(rel)
        xor     edx, edx                                ; 7982 _ 31. D2
        call    qword ptr [rax+140H]                    ; 7984 _ FF. 90, 00000140
        test    rax, rax                                ; 798A _ 48: 85. C0
        jz      Unnamed_1_7760                          ; 798D _ 74, 11
        lea     rcx, ptr [?_488]                        ; 798F _ 48: 8D. 0D, 00000DD6(rel)
        call    Unnamed_1_B95                           ; 7996 _ E8, FFFF943A
        jmp     Unnamed_1_795A                          ; 799B _ E9, 000001FA

Unnamed_1_7760:
        mov     byte ptr [?_587], -97                   ; 79A0 _ C6. 05, 00003349(rel), 9F
        mov     byte ptr [?_589], 2                     ; 79A7 _ C6. 05, 00003344(rel), 02
        mov     byte ptr [?_591], 3                     ; 79AE _ C6. 05, 0000333F(rel), 03
        mov     byte ptr [?_593], 1                     ; 79B5 _ C6. 05, 0000333A(rel), 01
        mov     byte ptr [?_595], 5                     ; 79BC _ C6. 05, 00003335(rel), 05
        mov     byte ptr [?_596], -40                   ; 79C3 _ C6. 05, 00003330(rel), D8
        lea     rsi, ptr [?_588]                        ; 79CA _ 48: 8D. 35, 00003320(rel)
        mov     rax, rdi                                ; 79D1 _ 48: 89. F8
        jmp     ?_436                                   ; 79D4 _ EB, 07

Unnamed_1_7796:
        add     rsi, 2                                  ; 79D6 _ 48: 83. C6, 02
        inc     rdi                                     ; 79DA _ 48: FF. C7
?_436:  cmp     rdi, 5                                  ; 79DD _ 48: 83. FF, 05
        ja      ?_438                                   ; 79E1 _ 77, 47
        movzx   ecx, byte ptr [rsi-1H]                  ; 79E3 _ 0F B6. 4E, FF
        mov     rdx, rsi                                ; 79E7 _ 48: 89. F2
        call    Unnamed_1_7C63                          ; 79EA _ E8, 000004B4
        test    rax, rax                                ; 79EF _ 48: 85. C0
        jns     Unnamed_1_7796                          ; 79F2 _ 79, E2
        cmp     rdi, 5                                  ; 79F4 _ 48: 83. FF, 05
        jnz     Unnamed_1_77EF                          ; 79F8 _ 75, 35
        mov     byte ptr [?_596], 32                    ; 79FA _ C6. 05, 000032F9(rel), 20
        xor     edi, edi                                ; 7A01 _ 31. FF
        lea     rsi, ptr [?_588]                        ; 7A03 _ 48: 8D. 35, 000032E7(rel)
        jmp     ?_437                                   ; 7A0A _ EB, 18

Unnamed_1_77CC:
        movzx   ecx, byte ptr [rsi-1H]                  ; 7A0C _ 0F B6. 4E, FF
        mov     rdx, rsi                                ; 7A10 _ 48: 89. F2
        call    Unnamed_1_7C63                          ; 7A13 _ E8, 0000048B
        test    rax, rax                                ; 7A18 _ 48: 85. C0
        js      Unnamed_1_77EF                          ; 7A1B _ 78, 12
        add     rsi, 2                                  ; 7A1D _ 48: 83. C6, 02
        inc     rdi                                     ; 7A21 _ 48: FF. C7
?_437:  cmp     rdi, 5                                  ; 7A24 _ 48: 83. FF, 05
        jbe     Unnamed_1_77CC                          ; 7A28 _ 76, E2
?_438:  test    rax, rax                                ; 7A2A _ 48: 85. C0
        jz      ?_439                                   ; 7A2D _ 74, 16
Unnamed_1_77EF:
        lea     rcx, ptr [?_489]                        ; 7A2F _ 48: 8D. 0D, 00000D74(rel)
        mov     rdx, rax                                ; 7A36 _ 48: 89. C2
        call    Unnamed_1_B95                           ; 7A39 _ E8, FFFF9397
        xor     esi, esi                                ; 7A3E _ 31. F6
        jmp     Unnamed_1_795A                          ; 7A40 _ E9, 00000155

?_439:  movzx   edx, byte ptr [?_588]                   ; 7A45 _ 0F B6. 15, 000032A5(rel)
        mov     rax, qword ptr [?_574]                  ; 7A4C _ 48: 8B. 05, 0000323D(rel)
        lea     rcx, ptr [rbp-14H]                      ; 7A53 _ 48: 8D. 4D, EC
        mov     qword ptr [rsp+40H], rcx                ; 7A57 _ 48: 89. 4C 24, 40
        mov     dword ptr [rsp+48H], 0                  ; 7A5C _ C7. 44 24, 48, 00000000
        mov     dword ptr [rsp+38H], 3                  ; 7A64 _ C7. 44 24, 38, 00000003
        mov     qword ptr [rsp+30H], 0                  ; 7A6C _ 48: C7. 44 24, 30, 00000000
        mov     dword ptr [rsp+28H], 0                  ; 7A75 _ C7. 44 24, 28, 00000000
        mov     dword ptr [rsp+20H], 0                  ; 7A7D _ C7. 44 24, 20, 00000000
        mov     rcx, rax                                ; 7A85 _ 48: 89. C1
        xor     r8d, r8d                                ; 7A88 _ 45: 31. C0
        mov     r9d, 1                                  ; 7A8B _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 7A91 _ FF. 50, 10
        test    rax, rax                                ; 7A94 _ 48: 85. C0
        js      ?_440                                   ; 7A97 _ 78, 05
        test    rax, rax                                ; 7A99 _ 48: 85. C0
        jz      ?_441                                   ; 7A9C _ 74, 13
?_440:  lea     rcx, ptr [?_490]                        ; 7A9E _ 48: 8D. 0D, 00000D39(rel)
        call    Unnamed_1_B95                           ; 7AA5 _ E8, FFFF932B
        xor     esi, esi                                ; 7AAA _ 31. F6
        jmp     Unnamed_1_795A                          ; 7AAC _ E9, 000000E9

?_441:  movzx   ecx, byte ptr [rbp-14H]                 ; 7AB1 _ 0F B6. 4D, EC
        shl     ecx, 8                                  ; 7AB5 _ C1. E1, 08
        movzx   eax, byte ptr [rbp-12H]                 ; 7AB8 _ 0F B6. 45, EE
        or      eax, ecx                                ; 7ABC _ 09. C8
        movzx   edi, ax                                 ; 7ABE _ 0F B7. F8
        mov     ecx, edi                                ; 7AC1 _ 89. F9
        call    Unnamed_1_670E                          ; 7AC3 _ E8, FFFFEE86
        mov     rsi, rax                                ; 7AC8 _ 48: 89. C6
        test    rsi, rsi                                ; 7ACB _ 48: 85. F6
        jnz     ?_442                                   ; 7ACE _ 75, 15
        lea     rcx, ptr [?_491]                        ; 7AD0 _ 48: 8D. 0D, 00000D47(rel)
        mov     edx, edi                                ; 7AD7 _ 89. FA
        call    Unnamed_1_B95                           ; 7AD9 _ E8, FFFF92F7
        xor     esi, esi                                ; 7ADE _ 31. F6
        jmp     Unnamed_1_795A                          ; 7AE0 _ E9, 000000B5

?_442:  mov     rax, qword ptr [rsi+18H]                ; 7AE5 _ 48: 8B. 46, 18
        mov     qword ptr [?_551], rax                  ; 7AE9 _ 48: 89. 05, 00003100(rel)
        call    Unnamed_1_669B                          ; 7AF0 _ E8, FFFFEDE6
        test    rax, rax                                ; 7AF5 _ 48: 85. C0
        setne   byte ptr [?_575]                        ; 7AF8 _ 0F 95. 05, 00003199(rel)
        call    Unnamed_1_6667                          ; 7AFF _ E8, FFFFEDA3
        lea     r8, ptr [?_455]                         ; 7B04 _ 4C: 8D. 05, 00000371(rel)
        lea     r9, ptr [?_453]                         ; 7B0B _ 4C: 8D. 0D, 00000333(rel)
        lea     rdi, ptr [Unnamed_1_7B2A]               ; 7B12 _ 48: 8D. 3D, 00000251(rel)
        lea     rcx, ptr [Unnamed_1_7A01]               ; 7B19 _ 48: 8D. 0D, 00000121(rel)
        lea     rdx, ptr [?_446]                        ; 7B20 _ 48: 8D. 15, 0000007E(rel)
        mov     byte ptr [?_576], al                    ; 7B27 _ 88. 05, 0000316C(rel)
        mov     qword ptr [rsi+28H], rdx                ; 7B2D _ 48: 89. 56, 28
        mov     qword ptr [rsi+30H], rcx                ; 7B31 _ 48: 89. 4E, 30
        mov     qword ptr [rsi+38H], rdi                ; 7B35 _ 48: 89. 7E, 38
        mov     qword ptr [rsi+40H], r9                 ; 7B39 _ 4C: 89. 4E, 40
        mov     qword ptr [rsi+48H], r8                 ; 7B3D _ 4C: 89. 46, 48
        cmp     byte ptr [?_596], 32                    ; 7B41 _ 80. 3D, 000031B2(rel), 20
        jz      ?_443                                   ; 7B48 _ 74, 05
        mov     ecx, dword ptr [rsi+10H]                ; 7B4A _ 8B. 4E, 10
        jmp     ?_444                                   ; 7B4D _ EB, 0C

?_443:  mov     dword ptr [rsi+10H], 4096               ; 7B4F _ C7. 46, 10, 00001000
        mov     ecx, 4096                               ; 7B56 _ B9, 00001000
?_444:  mov     dword ptr [?_552], ecx                  ; 7B5B _ 89. 0D, 00003097(rel)
        mov     ecx, dword ptr [rsi+0CH]                ; 7B61 _ 8B. 4E, 0C
        dec     ecx                                     ; 7B64 _ FF. C9
        mov     dword ptr [?_553], ecx                  ; 7B66 _ 89. 0D, 00003090(rel)
        mov     edx, dword ptr [rsi+20H]                ; 7B6C _ 8B. 56, 20
        mov     ecx, edx                                ; 7B6F _ 89. D1
        and     ecx, 0FFFFFFFEH                         ; 7B71 _ 83. E1, FE
        mov     dword ptr [rsi+20H], ecx                ; 7B74 _ 89. 4E, 20
        cmp     byte ptr [?_575], 0                     ; 7B77 _ 80. 3D, 0000311A(rel), 00
        jz      ?_445                                   ; 7B7E _ 74, 08
        or      edx, 01H                                ; 7B80 _ 83. CA, 01
        mov     dword ptr [rsi+20H], edx                ; 7B83 _ 89. 56, 20
        mov     ecx, edx                                ; 7B86 _ 89. D1
?_445:  mov     edx, ecx                                ; 7B88 _ 89. CA
        and     edx, 0FFFFFFFDH                         ; 7B8A _ 83. E2, FD
        mov     dword ptr [rsi+20H], edx                ; 7B8D _ 89. 56, 20
        test    al, al                                  ; 7B90 _ 84. C0
        jz      Unnamed_1_795A                          ; 7B92 _ 74, 06
        or      ecx, 02H                                ; 7B94 _ 83. C9, 02
        mov     dword ptr [rsi+20H], ecx                ; 7B97 _ 89. 4E, 20
Unnamed_1_795A:
        mov     rax, rsi                                ; 7B9A _ 48: 89. F0
        add     rsp, 96                                 ; 7B9D _ 48: 83. C4, 60
        pop     rdi                                     ; 7BA1 _ 5F
        pop     rsi                                     ; 7BA2 _ 5E
        pop     rbp                                     ; 7BA3 _ 5D
        ret                                             ; 7BA4 _ C3

?_446   LABEL NEAR
        push    rbp                                     ; 7BA5 _ 55
        mov     rbp, rsp                                ; 7BA6 _ 48: 89. E5
        push    r14                                     ; 7BA9 _ 41: 56
        push    rsi                                     ; 7BAB _ 56
        push    rdi                                     ; 7BAC _ 57
        push    rbx                                     ; 7BAD _ 53
        sub     rsp, 80                                 ; 7BAE _ 48: 83. EC, 50
        mov     r14, rdx                                ; 7BB2 _ 49: 89. D6
        mov     edi, dword ptr [?_553]                  ; 7BB5 _ 8B. 3D, 00003041(rel)
        and     rdi, rcx                                ; 7BBB _ 48: 21. CF
        xor     ebx, ebx                                ; 7BBE _ 31. DB
        mov     rax, rbx                                ; 7BC0 _ 48: 89. D8
        jmp     ?_448                                   ; 7BC3 _ EB, 61

Unnamed_1_7985:
        lea     rcx, ptr [r14+rbx]                      ; 7BC5 _ 49: 8D. 0C 1E
        lea     rsi, ptr [rdi+rbx]                      ; 7BC9 _ 48: 8D. 34 1F
        xor     eax, eax                                ; 7BCD _ 31. C0
?_447:  mov     byte ptr [rcx+rax], al                  ; 7BCF _ 88. 04 01
        inc     rax                                     ; 7BD2 _ 48: FF. C0
        cmp     rax, 64                                 ; 7BD5 _ 48: 83. F8, 40
        jnz     ?_447                                   ; 7BD9 _ 75, F4
        movzx   edx, byte ptr [?_592]                   ; 7BDB _ 0F B6. 15, 00003113(rel)
        mov     rax, qword ptr [?_574]                  ; 7BE2 _ 48: 8B. 05, 000030A7(rel)
        mov     qword ptr [rsp+40H], rcx                ; 7BE9 _ 48: 89. 4C 24, 40
        mov     qword ptr [rsp+30H], rsi                ; 7BEE _ 48: 89. 74 24, 30
        mov     dword ptr [rsp+48H], 0                  ; 7BF3 _ C7. 44 24, 48, 00000000
        mov     dword ptr [rsp+38H], 64                 ; 7BFB _ C7. 44 24, 38, 00000040
        mov     dword ptr [rsp+28H], 0                  ; 7C03 _ C7. 44 24, 28, 00000000
        mov     dword ptr [rsp+20H], 0                  ; 7C0B _ C7. 44 24, 20, 00000000
        mov     rcx, rax                                ; 7C13 _ 48: 89. C1
        xor     r8d, r8d                                ; 7C16 _ 45: 31. C0
        mov     r9d, 1                                  ; 7C19 _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 7C1F _ FF. 50, 10
        add     rbx, 64                                 ; 7C22 _ 48: 83. C3, 40
?_448:  test    rax, rax                                ; 7C26 _ 48: 85. C0
        jnz     ?_449                                   ; 7C29 _ 75, 0B
        mov     ecx, dword ptr [?_552]                  ; 7C2B _ 8B. 0D, 00002FC7(rel)
        cmp     rbx, rcx                                ; 7C31 _ 48: 39. CB
        jc      Unnamed_1_7985                          ; 7C34 _ 72, 8F
?_449:  add     rsp, 80                                 ; 7C36 _ 48: 83. C4, 50
        pop     rbx                                     ; 7C3A _ 5B
        pop     rdi                                     ; 7C3B _ 5F
        pop     rsi                                     ; 7C3C _ 5E
        pop     r14                                     ; 7C3D _ 41: 5E
        pop     rbp                                     ; 7C3F _ 5D
        ret                                             ; 7C40 _ C3

Unnamed_1_7A01 LABEL NEAR
        push    rbp                                     ; 7C41 _ 55
        mov     rbp, rsp                                ; 7C42 _ 48: 89. E5
        push    r15                                     ; 7C45 _ 41: 57
        push    r14                                     ; 7C47 _ 41: 56
        push    r12                                     ; 7C49 _ 41: 54
        push    rsi                                     ; 7C4B _ 56
        push    rdi                                     ; 7C4C _ 57
        push    rbx                                     ; 7C4D _ 53
        sub     rsp, 96                                 ; 7C4E _ 48: 83. EC, 60
        mov     r15, rdx                                ; 7C52 _ 49: 89. D7
        mov     r14, rcx                                ; 7C55 _ 49: 89. CE
        mov     rdi, 8000000000000008H                  ; 7C58 _ 48: BF, 8000000000000008
        cmp     byte ptr [?_575], 0                     ; 7C62 _ 80. 3D, 0000302F(rel), 00
        jne     ?_451                                   ; 7C69 _ 0F 85, 000000E9
        mov     byte ptr [rbp-31H], 0                   ; 7C6F _ C6. 45, CF, 00
        movzx   edx, byte ptr [?_594]                   ; 7C73 _ 0F B6. 15, 0000307D(rel)
        mov     rax, qword ptr [?_574]                  ; 7C7A _ 48: 8B. 05, 0000300F(rel)
        lea     rcx, ptr [rbp-31H]                      ; 7C81 _ 48: 8D. 4D, CF
        mov     qword ptr [rsp+40H], rcx                ; 7C85 _ 48: 89. 4C 24, 40
        mov     dword ptr [rsp+48H], 0                  ; 7C8A _ C7. 44 24, 48, 00000000
        mov     dword ptr [rsp+38H], 1                  ; 7C92 _ C7. 44 24, 38, 00000001
        mov     qword ptr [rsp+30H], 0                  ; 7C9A _ 48: C7. 44 24, 30, 00000000
        mov     dword ptr [rsp+28H], 1                  ; 7CA3 _ C7. 44 24, 28, 00000001
        mov     dword ptr [rsp+20H], 1                  ; 7CAB _ C7. 44 24, 20, 00000001
        mov     rcx, rax                                ; 7CB3 _ 48: 89. C1
        xor     r8d, r8d                                ; 7CB6 _ 45: 31. C0
        mov     r9d, 1                                  ; 7CB9 _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 7CBF _ FF. 50, 10
        xor     edi, edi                                ; 7CC2 _ 31. FF
        mov     rsi, qword ptr [?_551]                  ; 7CC4 _ 48: 8B. 35, 00002F25(rel)
        mov     ebx, dword ptr [?_552]                  ; 7CCB _ 8B. 1D, 00002F27(rel)
        cmp     rbx, rsi                                ; 7CD1 _ 48: 39. F3
        cmovbe  rsi, rbx                                ; 7CD4 _ 48: 0F 46. F3
        mov     r12d, dword ptr [?_553]                 ; 7CD8 _ 44: 8B. 25, 00002F1D(rel)
        and     r12, r14                                ; 7CDF _ 4D: 21. F4
        jmp     ?_450                                   ; 7CE2 _ EB, 1A

Unnamed_1_7AA4:
        sub     rbx, rsi                                ; 7CE4 _ 48: 29. F3
        mov     rax, qword ptr [?_551]                  ; 7CE7 _ 48: 8B. 05, 00002F02(rel)
        cmp     rbx, rax                                ; 7CEE _ 48: 39. C3
        cmovbe  rax, rbx                                ; 7CF1 _ 48: 0F 46. C3
        add     r15, rsi                                ; 7CF5 _ 49: 01. F7
        add     r12, rsi                                ; 7CF8 _ 49: 01. F4
        mov     rsi, rax                                ; 7CFB _ 48: 89. C6
?_450:  test    rbx, rbx                                ; 7CFE _ 48: 85. DB
        jz      Unnamed_1_7B13                          ; 7D01 _ 74, 50
        test    rdi, rdi                                ; 7D03 _ 48: 85. FF
        js      Unnamed_1_7B13                          ; 7D06 _ 78, 4B
        movzx   edx, byte ptr [?_590]                   ; 7D08 _ 0F B6. 15, 00002FE4(rel)
        mov     rax, qword ptr [?_574]                  ; 7D0F _ 48: 8B. 05, 00002F7A(rel)
        mov     qword ptr [rsp+40H], r15                ; 7D16 _ 4C: 89. 7C 24, 40
        mov     dword ptr [rsp+38H], esi                ; 7D1B _ 89. 74 24, 38
        mov     qword ptr [rsp+30H], r12                ; 7D1F _ 4C: 89. 64 24, 30
        mov     dword ptr [rsp+48H], 0                  ; 7D24 _ C7. 44 24, 48, 00000000
        mov     dword ptr [rsp+28H], 1                  ; 7D2C _ C7. 44 24, 28, 00000001
        mov     dword ptr [rsp+20H], 1                  ; 7D34 _ C7. 44 24, 20, 00000001
        mov     rcx, rax                                ; 7D3C _ 48: 89. C1
        xor     r8d, r8d                                ; 7D3F _ 45: 31. C0
        mov     r9d, 1                                  ; 7D42 _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 7D48 _ FF. 50, 10
        mov     rdi, rax                                ; 7D4B _ 48: 89. C7
        test    rdi, rdi                                ; 7D4E _ 48: 85. FF
        jns     Unnamed_1_7AA4                          ; 7D51 _ 79, 91
Unnamed_1_7B13:
        call    Unnamed_1_1AE                           ; 7D53 _ E8, FFFF8696
?_451:  mov     rax, rdi                                ; 7D58 _ 48: 89. F8
        add     rsp, 96                                 ; 7D5B _ 48: 83. C4, 60
        pop     rbx                                     ; 7D5F _ 5B
        pop     rdi                                     ; 7D60 _ 5F
        pop     rsi                                     ; 7D61 _ 5E
        pop     r12                                     ; 7D62 _ 41: 5C
        pop     r14                                     ; 7D64 _ 41: 5E
        pop     r15                                     ; 7D66 _ 41: 5F
        pop     rbp                                     ; 7D68 _ 5D
        ret                                             ; 7D69 _ C3

Unnamed_1_7B2A LABEL NEAR
        push    rbp                                     ; 7D6A _ 55
        mov     rbp, rsp                                ; 7D6B _ 48: 89. E5
        push    rsi                                     ; 7D6E _ 56
        push    rdi                                     ; 7D6F _ 57
        sub     rsp, 96                                 ; 7D70 _ 48: 83. EC, 60
        mov     rsi, rcx                                ; 7D74 _ 48: 89. CE
        mov     rdi, 8000000000000008H                  ; 7D77 _ 48: BF, 8000000000000008
        cmp     byte ptr [?_575], 0                     ; 7D81 _ 80. 3D, 00002F10(rel), 00
        jne     ?_452                                   ; 7D88 _ 0F 85, 000000AC
        mov     byte ptr [rbp-11H], 0                   ; 7D8E _ C6. 45, EF, 00
        movzx   edx, byte ptr [?_594]                   ; 7D92 _ 0F B6. 15, 00002F5E(rel)
        mov     rax, qword ptr [?_574]                  ; 7D99 _ 48: 8B. 05, 00002EF0(rel)
        lea     rcx, ptr [rbp-11H]                      ; 7DA0 _ 48: 8D. 4D, EF
        mov     qword ptr [rsp+40H], rcx                ; 7DA4 _ 48: 89. 4C 24, 40
        mov     dword ptr [rsp+48H], 0                  ; 7DA9 _ C7. 44 24, 48, 00000000
        mov     dword ptr [rsp+38H], 1                  ; 7DB1 _ C7. 44 24, 38, 00000001
        mov     qword ptr [rsp+30H], 0                  ; 7DB9 _ 48: C7. 44 24, 30, 00000000
        mov     dword ptr [rsp+28H], 1                  ; 7DC2 _ C7. 44 24, 28, 00000001
        mov     dword ptr [rsp+20H], 1                  ; 7DCA _ C7. 44 24, 20, 00000001
        mov     rcx, rax                                ; 7DD2 _ 48: 89. C1
        xor     r8d, r8d                                ; 7DD5 _ 45: 31. C0
        mov     r9d, 1                                  ; 7DD8 _ 41: B9, 00000001
        call    qword ptr [rax+10H]                     ; 7DDE _ FF. 50, 10
        mov     ecx, dword ptr [?_553]                  ; 7DE1 _ 8B. 0D, 00002E15(rel)
        and     rcx, rsi                                ; 7DE7 _ 48: 21. F1
        movzx   edx, byte ptr [?_597]                   ; 7DEA _ 0F B6. 15, 00002F0A(rel)
        mov     rax, qword ptr [?_574]                  ; 7DF1 _ 48: 8B. 05, 00002E98(rel)
        mov     qword ptr [rsp+30H], rcx                ; 7DF8 _ 48: 89. 4C 24, 30
        mov     dword ptr [rsp+48H], 0                  ; 7DFD _ C7. 44 24, 48, 00000000
        mov     qword ptr [rsp+40H], 0                  ; 7E05 _ 48: C7. 44 24, 40, 00000000
        mov     dword ptr [rsp+38H], 0                  ; 7E0E _ C7. 44 24, 38, 00000000
        mov     dword ptr [rsp+28H], 0                  ; 7E16 _ C7. 44 24, 28, 00000000
        mov     dword ptr [rsp+20H], 1                  ; 7E1E _ C7. 44 24, 20, 00000001
        mov     rcx, rax                                ; 7E26 _ 48: 89. C1
        xor     r8d, r8d                                ; 7E29 _ 45: 31. C0
        xor     r9d, r9d                                ; 7E2C _ 45: 31. C9
        call    qword ptr [rax+10H]                     ; 7E2F _ FF. 50, 10
        mov     rdi, rax                                ; 7E32 _ 48: 89. C7
        call    Unnamed_1_1AE                           ; 7E35 _ E8, FFFF85B4
?_452:  mov     rax, rdi                                ; 7E3A _ 48: 89. F8
        add     rsp, 96                                 ; 7E3D _ 48: 83. C4, 60
        pop     rdi                                     ; 7E41 _ 5F
        pop     rsi                                     ; 7E42 _ 5E
        pop     rbp                                     ; 7E43 _ 5D
        ret                                             ; 7E44 _ C3

?_453   LABEL NEAR
        push    rbp                                     ; 7E45 _ 55
        mov     rbp, rsp                                ; 7E46 _ 48: 89. E5
        push    rsi                                     ; 7E49 _ 56
        push    rdi                                     ; 7E4A _ 57
        sub     rsp, 32                                 ; 7E4B _ 48: 83. EC, 20
        mov     rsi, rdx                                ; 7E4F _ 48: 89. D6
        mov     rdi, rcx                                ; 7E52 _ 48: 89. CF
        mov     rcx, rdi                                ; 7E55 _ 48: 89. F9
        call    Unnamed_1_7B2A                          ; 7E58 _ E8, FFFFFF0D
        test    rax, rax                                ; 7E5D _ 48: 85. C0
        jz      ?_454                                   ; 7E60 _ 74, 08
        add     rsp, 32                                 ; 7E62 _ 48: 83. C4, 20
        pop     rdi                                     ; 7E66 _ 5F
        pop     rsi                                     ; 7E67 _ 5E
        pop     rbp                                     ; 7E68 _ 5D
        ret                                             ; 7E69 _ C3

?_454   LABEL NEAR
        mov     rcx, rdi                                ; 7E6A _ 48: 89. F9
        mov     rdx, rsi                                ; 7E6D _ 48: 89. F2
        add     rsp, 32                                 ; 7E70 _ 48: 83. C4, 20
        pop     rdi                                     ; 7E74 _ 5F
        pop     rsi                                     ; 7E75 _ 5E
        pop     rbp                                     ; 7E76 _ 5D
        jmp     Unnamed_1_7A01                          ; 7E77 _ E9, FFFFFDC5

?_455   LABEL NEAR
        mov     qword ptr [?_551], 1                    ; 7E7C _ 48: C7. 05, 00002D69(rel), 00000001
        mov     qword ptr [?_574], 0                    ; 7E87 _ 48: C7. 05, 00002DFE(rel), 00000000
        mov     byte ptr [?_576], 0                     ; 7E92 _ C6. 05, 00002E00(rel), 00
        mov     byte ptr [?_575], 0                     ; 7E99 _ C6. 05, 00002DF8(rel), 00
        xor     eax, eax                                ; 7EA0 _ 31. C0
        ret                                             ; 7EA2 _ C3

Unnamed_1_7C63 LABEL NEAR
        push    rbp                                     ; 7EA3 _ 55
        mov     rbp, rsp                                ; 7EA4 _ 48: 89. E5
        push    rsi                                     ; 7EA7 _ 56
        push    rdi                                     ; 7EA8 _ 57
        push    rbx                                     ; 7EA9 _ 53
        sub     rsp, 40                                 ; 7EAA _ 48: 83. EC, 28
        mov     rsi, rdx                                ; 7EAE _ 48: 89. D6
        mov     ebx, ecx                                ; 7EB1 _ 89. CB
        mov     byte ptr [rsi], 0                       ; 7EB3 _ C6. 06, 00
        mov     edi, 152                                ; 7EB6 _ BF, 00000098
        jmp     ?_456                                   ; 7EBB _ EB, 03

Unnamed_1_7C7D:
        inc     rdi                                     ; 7EBD _ 48: FF. C7
?_456:  lea     ecx, ptr [rdi-98H]                      ; 7EC0 _ 8D. 8F, FFFFFF68
        mov     rax, 800000000000000EH                  ; 7EC6 _ 48: B8, 800000000000000E
        cmp     cl, 7                                   ; 7ED0 _ 80. F9, 07
        ja      ?_457                                   ; 7ED3 _ 77, 17
        mov     rcx, rdi                                ; 7ED5 _ 48: 89. F9
        call    Unnamed_1_6645                          ; 7ED8 _ E8, FFFFE9A8
        cmp     al, bl                                  ; 7EDD _ 38. D8
        jnz     Unnamed_1_7C7D                          ; 7EDF _ 75, DC
        add     edi, -152                               ; 7EE1 _ 81. C7, FFFFFF68
        mov     byte ptr [rsi], dil                     ; 7EE7 _ 40: 88. 3E
        xor     eax, eax                                ; 7EEA _ 31. C0
?_457:  add     rsp, 40                                 ; 7EEC _ 48: 83. C4, 28
        pop     rbx                                     ; 7EF0 _ 5B
        pop     rdi                                     ; 7EF1 _ 5F
        pop     rsi                                     ; 7EF2 _ 5E
        pop     rbp                                     ; 7EF3 _ 5D
        ret                                             ; 7EF4 _ C3

        nop                                             ; 7EF5 _ 90
        nop                                             ; 7EF6 _ 90
        nop                                             ; 7EF7 _ 90

?_458   LABEL NEAR
;       or      al, byte ptr [rax]                      ; 7EF8 _ 0A. 00
        db 0AH, 00H
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 7EFA _ 00. 00
        db 00H, 00H

?_459   label byte
        db 2AH, 00H, 2AH, 00H, 2AH, 00H, 20H, 00H       ; 7EFC _ *.*.*. .
        db 45H, 00H, 52H, 00H, 52H, 00H, 4FH, 00H       ; 7F04 _ E.R.R.O.
        db 52H, 00H, 20H, 00H, 2AH, 00H, 2AH, 00H       ; 7F0C _ R. .*.*.
        db 2AH, 00H, 2CH, 00H, 20H, 00H, 73H, 00H       ; 7F14 _ *.,. .s.
        db 74H, 00H, 61H, 00H, 74H, 00H, 75H, 00H       ; 7F1C _ t.a.t.u.
        db 73H, 00H, 20H, 00H, 30H, 00H, 78H, 00H       ; 7F24 _ s. .0.x.
        db 25H, 00H, 30H, 00H, 38H, 00H, 78H, 00H       ; 7F2C _ %.0.8.x.
        db 0AH, 00H, 00H, 00H                           ; 7F34 _ ....

?_460   label qword
        dq 48EEE8BA98B8D59BH                            ; 7F38 _ 48EEE8BA98B8D59B 

?_461   label qword
        dq 0DB1E2F3995C2DD98H                           ; 7F40 _ DB1E2F3995C2DD98 

?_462   label qword
        dq 484D532C283FA2EEH                            ; 7F48 _ 484D532C283FA2EE 

?_463   label qword
        dq 7E0B6FB3939F8393H                            ; 7F50 _ 7E0B6FB3939F8393 

?_464   LABEL NEAR
        sub     eax, 754986240                          ; 7F58 _ 2D, 2D002D00
        add     byte ptr [rax], ah                      ; 7F5D _ 00. 20
; Note: Zero displacement could be omitted
        add     byte ptr [rcx], al                      ; 7F5F _ 00. 41, 00
        jo      Unnamed_1_7D24                          ; 7F62 _ 70, 00
Unnamed_1_7D24:
        jo      Unnamed_1_7D26                          ; 7F64 _ 70, 00
Unnamed_1_7D26:
        insb                                            ; 7F66 _ 6C
        add     byte ptr [rbp], ah                      ; 7F67 _ 00. 65, 00
        and     byte ptr [rax], al                      ; 7F6A _ 20. 00
; Note: Zero displacement could be omitted
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [r9], spl                      ; 7F6C _ 43: 00. 61, 00
        jo      Unnamed_1_7D32                          ; 7F70 _ 70, 00
Unnamed_1_7D32:
        jnc     Unnamed_1_7D34                          ; 7F72 _ 73, 00
Unnamed_1_7D34:
        jnz     Unnamed_1_7D36                          ; 7F74 _ 75, 00
Unnamed_1_7D36:
        insb                                            ; 7F76 _ 6C
        add     byte ptr [rbp], ah                      ; 7F77 _ 00. 65, 00
        and     byte ptr [rax], al                      ; 7F7A _ 20. 00
        push    rbp                                     ; 7F7C _ 55
; Note: Zero displacement could be omitted
        add     byte ptr [rax], dh                      ; 7F7D _ 00. 70, 00
; Note: Zero displacement could be omitted
ASSUME  fs:NOTHING
        add     byte ptr fs:[rcx], ah                   ; 7F80 _ 64: 00. 61, 00
        jz      Unnamed_1_7D46                          ; 7F84 _ 74, 00
Unnamed_1_7D46:
        add     byte ptr gs:[rax], ah                   ; 7F86 _ 65: 00. 20
        add     byte ptr [Unnamed_1_2D00AA4F], ch       ; 7F89 _ 00. 2D, 2D002D00(rel)
        add     byte ptr [rdx], cl                      ; 7F8F _ 00. 0A
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 7F91 _ 00. 00
        db 00H, 00H
; Note: Zero displacement could be omitted
; Warning: Label out of phase with instruction. Possibly spurious
; ?_465; Misplaced symbol at address 00007D54
;       add     byte ptr [rdi], dl                      ; 7F93 _ 00. 57, 00
        db 00H, 57H, 00H

?_465   LABEL NEAR
        push    rdi                                     ; 7F94 _ 57
; Note: Zero displacement could be omitted
        add     byte ptr [rcx], ah                      ; 7F95 _ 00. 61, 00
        jc      Unnamed_1_7D5A                          ; 7F98 _ 72, 00
Unnamed_1_7D5A:
        outsb                                           ; 7F9A _ 6E
; Note: Zero displacement could be omitted
        add     byte ptr [rcx], ch                      ; 7F9B _ 00. 69, 00
        outsb                                           ; 7F9E _ 6E
; Note: Zero displacement could be omitted
        add     byte ptr [rdi], ah                      ; 7F9F _ 00. 67, 00
        cmp     al, byte ptr [rax]                      ; 7FA2 _ 3A. 00
        and     byte ptr [rax], al                      ; 7FA4 _ 20. 00
; Note: Zero displacement could be omitted
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [r15], bpl                     ; 7FA6 _ 43: 00. 6F, 00
        jnz     Unnamed_1_7D6C                          ; 7FAA _ 75, 00
Unnamed_1_7D6C:
        insb                                            ; 7FAC _ 6C
        add     byte ptr [rax+rax+20H], ah              ; 7FAD _ 00. 64 00, 20
; Note: Zero displacement could be omitted
        add     byte ptr [rsi], ch                      ; 7FB1 _ 00. 6E, 00
        outsd                                           ; 7FB4 _ 6F
        add     byte ptr [rax+rax+20H], dh              ; 7FB5 _ 00. 74 00, 20
; Note: Zero displacement could be omitted
        add     byte ptr [rdi], ah                      ; 7FB9 _ 00. 67, 00
ASSUME  gs:NOTHING
        add     byte ptr gs:[rax+rax+20H], dh           ; 7FBC _ 65: 00. 74 00, 20
; Note: Zero displacement could be omitted
        add     byte ptr [rcx], al                      ; 7FC1 _ 00. 41, 00
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [r8], spl                      ; 7FC4 _ 43: 00. 20
        add     byte ptr [rax+rax+61H], ah              ; 7FC7 _ 00. 64 00, 61
        add     byte ptr [rax+rax+61H], dh              ; 7FCB _ 00. 74 00, 61
        add     byte ptr [rdx], bh                      ; 7FCF _ 00. 3A
        add     byte ptr [rax], ah                      ; 7FD1 _ 00. 20
        add     byte ptr [rax], dh                      ; 7FD3 _ 00. 30
; Note: Zero displacement could be omitted
        add     byte ptr [rax], bh                      ; 7FD5 _ 00. 78, 00
        and     eax, 38003000H                          ; 7FD8 _ 25, 38003000
; Note: Zero displacement could be omitted
        add     byte ptr [rax], bh                      ; 7FDD _ 00. 78, 00
        or      al, byte ptr [rax]                      ; 7FE0 _ 0A. 00
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 7FE2 _ 00. 00
        db 00H, 00H

?_466   LABEL NEAR
; Note: Zero displacement could be omitted
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [r9], spl                      ; 7FE4 _ 43: 00. 61, 00
        jo      Unnamed_1_7DAA                          ; 7FE8 _ 70, 00
Unnamed_1_7DAA:
        jnc     Unnamed_1_7DAC                          ; 7FEA _ 73, 00
Unnamed_1_7DAC:
        jnz     Unnamed_1_7DAE                          ; 7FEC _ 75, 00
Unnamed_1_7DAE:
        insb                                            ; 7FEE _ 6C
        add     byte ptr [rbp], ah                      ; 7FEF _ 00. 65, 00
        and     byte ptr [rax], al                      ; 7FF2 _ 20. 00
        jnz     Unnamed_1_7DB6                          ; 7FF4 _ 75, 00
Unnamed_1_7DB6:
        jo      Unnamed_1_7DB8                          ; 7FF6 _ 70, 00
Unnamed_1_7DB8:
; Note: Zero displacement could be omitted
        add     byte ptr fs:[rcx], ah                   ; 7FF8 _ 64: 00. 61, 00
        jz      Unnamed_1_7DBE                          ; 7FFC _ 74, 00
Unnamed_1_7DBE:
        add     byte ptr gs:[rax], ah                   ; 7FFE _ 65: 00. 20
        add     byte ptr [rax+rax+72H], ah              ; 8001 _ 00. 64 00, 72
; Note: Zero displacement could be omitted
        add     byte ptr [rcx], ch                      ; 8005 _ 00. 69, 00
        jbe     Unnamed_1_7DCA                          ; 8008 _ 76, 00
Unnamed_1_7DCA:
; Note: Zero displacement could be omitted
        add     byte ptr gs:[rdx], dh                   ; 800A _ 65: 00. 72, 00
        cmp     al, byte ptr [rax]                      ; 800E _ 3A. 00
        and     byte ptr [rax], al                      ; 8010 _ 20. 00
        jnz     Unnamed_1_7DD4                          ; 8012 _ 75, 00
Unnamed_1_7DD4:
        jo      Unnamed_1_7DD6                          ; 8014 _ 70, 00
Unnamed_1_7DD6:
; Note: Zero displacement could be omitted
        add     byte ptr fs:[rcx], ah                   ; 8016 _ 64: 00. 61, 00
        jz      Unnamed_1_7DDC                          ; 801A _ 74, 00
Unnamed_1_7DDC:
        imul    eax, dword ptr [rax], 6750318           ; 801C _ 69. 00, 0067006E
        and     byte ptr [rax], al                      ; 8022 _ 20. 00
        ja      Unnamed_1_7DE6                          ; 8024 _ 77, 00
Unnamed_1_7DE6:
        push    1811967744                              ; 8026 _ 68, 6C006F00
        add     byte ptr [rbp], ah                      ; 802B _ 00. 65, 00
        and     byte ptr [rax], al                      ; 802E _ 20. 00
; Note: Zero displacement could be omitted
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [rsi], r10b                    ; 8030 _ 46: 00. 56, 00
        and     byte ptr [rax], al                      ; 8034 _ 20. 00
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 8036 _ 00. 00
        db 00H, 00H

?_467   LABEL NEAR
; Note: Zero displacement could be omitted
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [rdx], dh                      ; 8038 _ 66: 00. 72, 00
        outsd                                           ; 803C _ 6F
        add     byte ptr [rbp], ch                      ; 803D _ 00. 6D, 00
        and     byte ptr [rax], al                      ; 8040 _ 20. 00
        xor     byte ptr [rax], al                      ; 8042 _ 30. 00
        js      Unnamed_1_7E06                          ; 8044 _ 78, 00
Unnamed_1_7E06:
        and     eax, 38003000H                          ; 8046 _ 25, 38003000
; Note: Zero displacement could be omitted
        add     byte ptr [rax], bh                      ; 804B _ 00. 78, 00
        and     byte ptr [rax], al                      ; 804E _ 20. 00
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 8050 _ 00. 00
        db 00H, 00H

?_468   LABEL NEAR
        jz      Unnamed_1_7E14                          ; 8052 _ 74, 00
Unnamed_1_7E14:
        outsd                                           ; 8054 _ 6F
        add     byte ptr [rax], ah                      ; 8055 _ 00. 20
        add     byte ptr [rax], dh                      ; 8057 _ 00. 30
; Note: Zero displacement could be omitted
        add     byte ptr [rax], bh                      ; 8059 _ 00. 78, 00
        and     eax, 38003000H                          ; 805C _ 25, 38003000
; Note: Zero displacement could be omitted
        add     byte ptr [rax], bh                      ; 8061 _ 00. 78, 00
        and     byte ptr [rax], al                      ; 8064 _ 20. 00
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 8066 _ 00. 00
        db 00H, 00H

?_469   LABEL NEAR
        push    rbp                                     ; 8068 _ 55
; Note: Zero displacement could be omitted
        add     byte ptr [rax], dh                      ; 8069 _ 00. 70, 00
; Note: Zero displacement could be omitted
        add     byte ptr fs:[rcx], ah                   ; 806C _ 64: 00. 61, 00
        jz      Unnamed_1_7E32                          ; 8070 _ 74, 00
Unnamed_1_7E32:
        imul    eax, dword ptr [rax], 6750318           ; 8072 _ 69. 00, 0067006E
        and     byte ptr [rax], al                      ; 8078 _ 20. 00
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 807A _ 61
        db 61H
;       add     byte ptr [rax+rax+64H], ah              ; 807B _ 00. 64 00, 64
        db 00H, 64H, 00H, 64H
; Note: Zero displacement could be omitted
;       add     byte ptr [rdx], dh                      ; 807F _ 00. 72, 00
        db 00H, 72H, 00H
; Note: Zero displacement could be omitted
;       add     byte ptr gs:[rbx], dh                   ; 8082 _ 65: 00. 73, 00
        db 65H, 00H, 73H, 00H
;       jnc     48H                                     ; 8086 _ 73, 00
        db 73H, 00H
;       cmp     al, byte ptr [rax]                      ; 8088 _ 3A. 00
        db 3AH, 00H
;       and     byte ptr [rax], al                      ; 808A _ 20. 00
        db 20H, 00H
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 808C _ 00. 00

        db 00H, 00H                                     ; 808C _ ..

?_470   LABEL NEAR
        xor     byte ptr [rax], al                      ; 808E _ 30. 00
        js      Unnamed_1_7E52                          ; 8090 _ 78, 00
Unnamed_1_7E52:
        and     eax, 38003000H                          ; 8092 _ 25, 38003000
; Note: Zero displacement could be omitted
        add     byte ptr [rax], bh                      ; 8097 _ 00. 78, 00
        and     byte ptr [rax], al                      ; 809A _ 20. 00
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 809C _ 00. 00
        db 00H, 00H

?_471   LABEL NEAR
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr cs:[rsi], ch                   ; 809E _ 2E: 00. 2E
        add     byte ptr [rsi], ch                      ; 80A1 _ 00. 2E
; Warning: Label out of phase with instruction. Possibly spurious
; ?_472; Misplaced symbol at address 00007E68
        add     byte ptr [Unnamed_1_B2007E69], cl       ; 80A3 _ 00. 0D, B2000000(rel)
        test    byte ptr [rdi+rsi*2], ah                ; 80A9 _ 84. 24 77
; Error: This instruction is not allowed in 64 bit mode
; Note: Undocumented opcode
; Warning: Label out of phase with instruction. Possibly spurious
; ?_473; Misplaced symbol at address 00007E70
;       xor     byte ptr [rcx+rdx*4+4BH], 0FFFFFF9FH    ; 80AC _ 82. 74 91, 4B, 9F
        db 82H, 74H, 91H, 4BH, 9FH

?_473   LABEL NEAR
        lahf                                            ; 80B0 _ 9F
; Error: This instruction is not allowed in 64 bit mode
;       call    far ptr 0ADH                            ; 80B1 _ 9A, 1CF843AD 8158
        db 9AH, 0ADH, 43H, 0F8H, 1CH, 58H, 81H

?_474   LABEL NEAR
; Error: VEX.mmmm bits out of range
; Note: Prefix bit or byte has no meaning in this context
; Note: VEX prefix bits not allowed here
; Warning: MVEX prefix not allowed for this instruction
;       rep outsw                                       ; 80B8 _ 62 00 69 00: 6F
        db 62H, 00H, 69H, 00H, 6FH
; Note: Zero displacement could be omitted
;       add     byte ptr [rbx], dh                      ; 80BD _ 00. 73, 00
        db 00H, 73H, 00H
;       push    rbx                                     ; 80C0 _ 53
        db 53H
;       add     byte ptr [rax+rax+72H], dh              ; 80C1 _ 00. 74 00, 72
        db 00H, 74H, 00H, 72H
; Note: Zero displacement could be omitted
;       add     byte ptr [rcx], ch                      ; 80C5 _ 00. 69, 00
        db 00H, 69H, 00H
;       outsb                                           ; 80C8 _ 6E
        db 6EH
; Note: Zero displacement could be omitted
;       add     byte ptr [rdi], ah                      ; 80C9 _ 00. 67, 00
        db 00H, 67H, 00H
;       and     byte ptr [rax], al                      ; 80CC _ 20. 00
        db 20H, 00H
;       imul    eax, dword ptr [rax], 2097267           ; 80CE _ 69. 00, 00200073
        db 69H, 00H, 73H, 00H, 20H, 00H
; Note: Prefix bit or byte has no meaning in this context
;       add     byte ptr [rbp], r10b                    ; 80D4 _ 4E: 00. 55, 00
        db 4EH, 00H, 55H, 00H
; Note: Prefix bit or byte has no meaning in this context
;       add     byte ptr [rax+rax+21H], r9b             ; 80D8 _ 4C: 00. 4C 00, 21
        db 4CH, 00H, 4CH, 00H, 21H
;       add     byte ptr [rcx], ah                      ; 80DD _ 00. 21
        db 00H, 21H
;       add     byte ptr [rcx], ah                      ; 80DF _ 00. 21
        db 00H, 21H
;       add     byte ptr [rax], ah                      ; 80E1 _ 00. 20
        db 00H, 20H
; Note: Zero displacement could be omitted
;       add     byte ptr [rsi], al                      ; 80E3 _ 00. 46, 00
        db 00H, 46H, 00H
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 80E6 _ 61
        db 61H
; Note: Zero displacement could be omitted
;       add     byte ptr [rbx], ch                      ; 80E7 _ 00. 6B, 00
        db 00H, 6BH, 00H
;       imul    eax, dword ptr [rax], 6750318           ; 80EA _ 69. 00, 0067006E
        db 69H, 00H, 6EH, 00H, 67H, 00H
;       and     byte ptr [rax], al                      ; 80F0 _ 20. 00
        db 20H, 00H
;       jo      0B4H                                    ; 80F2 _ 70, 00
        db 70H, 00H
;       jc      0B6H                                    ; 80F4 _ 72, 00
        db 72H, 00H
;       outsd                                           ; 80F6 _ 6F
        db 6FH
; Note: Zero displacement could be omitted
;       add     byte ptr [rax], dh                      ; 80F7 _ 00. 70, 00
        db 00H, 70H, 00H
; Note: Zero displacement could be omitted
;       add     byte ptr gs:[rdx], dh                   ; 80FA _ 65: 00. 72, 00
        db 65H, 00H, 72H, 00H
;       and     byte ptr [rax], al                      ; 80FE _ 20. 00
        db 20H, 00H
;       jc      0C2H                                    ; 8100 _ 72, 00
        db 72H, 00H
;       add     byte ptr gs:[rax+rax+75H], dh           ; 8102 _ 65: 00. 74 00, 75
        db 65H, 00H, 74H, 00H, 75H
; Note: Zero displacement could be omitted
;       add     byte ptr [rdx], dh                      ; 8107 _ 00. 72, 00
        db 00H, 72H, 00H
;       outsb                                           ; 810A _ 6E
        db 6EH
;       add     byte ptr [rax], ah                      ; 810B _ 00. 20
        db 00H, 20H
; Note: Zero displacement could be omitted
;       add     byte ptr [rsi], dh                      ; 810D _ 00. 76, 00
        db 00H, 76H, 00H
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 8110 _ 61
        db 61H
;       add     byte ptr [rax+rax+75H], ch              ; 8111 _ 00. 6C 00, 75
        db 00H, 6CH, 00H, 75H
;       add     byte ptr [rbp], ah                      ; 8115 _ 00. 65, 00
        db 00H, 65H, 00H
;       and     byte ptr [rax], al                      ; 8118 _ 20. 00
        db 20H, 00H
;       or      al, byte ptr [rax]                      ; 811A _ 0A. 00
        db 0AH, 00H
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 811C _ 00. 00

        db 00H, 00H, 45H, 00H, 46H, 00H, 49H, 00H       ; 811C _ ..E.F.I.
        db 43H, 00H, 61H, 00H, 70H, 00H, 73H, 00H       ; 8124 _ C.a.p.s.
        db 75H, 00H, 6CH, 00H, 65H, 00H, 5FH, 00H       ; 812C _ u.l.e._.
        db 52H, 00H, 65H, 00H, 73H, 00H, 75H, 00H       ; 8134 _ R.e.s.u.
        db 6CH, 00H, 74H, 00H, 00H, 00H                 ; 813C _ l.t...

?_475   LABEL NEAR
        push    rbp                                     ; 8142 _ 55
; Note: Zero displacement could be omitted
        add     byte ptr [rcx], cl                      ; 8143 _ 00. 49, 00
        push    rbx                                     ; 8146 _ 53
; Note: Zero displacement could be omitted
        add     byte ptr [rbx], ah                      ; 8147 _ 00. 63, 00
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 814A _ 61
        db 61H
;       add     byte ptr [rax+rax+65H], ch              ; 814B _ 00. 6C 00, 65
        db 00H, 6CH, 00H, 65H
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 814F _ 00. 00

        db 00H, 00H, 00H, 00H, 00H                      ; 814F _ .....

?_476   label qword
        dq 402C5C78D08B4902H                            ; 8154 _ 402C5C78D08B4902 

?_477   label qword
        dq 32BCB1B1A33DECB6H                            ; 815C _ 32BCB1B1A33DECB6 

?_478   LABEL NEAR
        or      al, byte ptr [rax]                      ; 8164 _ 0A. 00
        push    rsp                                     ; 8166 _ 54
; Note: Zero displacement could be omitted
        add     byte ptr [rdi], ch                      ; 8167 _ 00. 6F, 00
        jo      Unnamed_1_7F2C                          ; 816A _ 70, 00
Unnamed_1_7F2C:
        push    rbx                                     ; 816C _ 53
; Note: Zero displacement could be omitted
        add     byte ptr [rdi], dh                      ; 816D _ 00. 77, 00
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 8170 _ 61
        db 61H
; Note: Zero displacement could be omitted
;       add     byte ptr [rax], dh                      ; 8171 _ 00. 70, 00
        db 00H, 70H, 00H
;       and     byte ptr [rax], al                      ; 8174 _ 20. 00
        db 20H, 00H
;       add     byte ptr [rax+r8+69H], r13b             ; 8176 _ 46: 00. 6C 00, 69
        db 46H, 00H, 6CH, 00H, 69H
; Note: Zero displacement could be omitted
;       add     byte ptr [rax], dh                      ; 817B _ 00. 70, 00
        db 00H, 70H, 00H
;       and     byte ptr [rax], al                      ; 817E _ 20. 00
        db 20H, 00H
;       add     byte ptr [r8+rax+64H], spl              ; 8180 _ 41: 00. 64 00, 64
        db 41H, 00H, 64H, 00H, 64H
; Note: Zero displacement could be omitted
;       add     byte ptr [rdx], dh                      ; 8185 _ 00. 72, 00
        db 00H, 72H, 00H
; Note: Zero displacement could be omitted
;       add     byte ptr gs:[rbx], dh                   ; 8188 _ 65: 00. 73, 00
        db 65H, 00H, 73H, 00H
;       jnc     4EH                                     ; 818C _ 73, 00
        db 73H, 00H
;       and     byte ptr [rax], al                      ; 818E _ 20. 00
        db 20H, 00H
;       imul    eax, dword ptr [rax], 3801203           ; 8190 _ 69. 00, 003A0073
        db 69H, 00H, 73H, 00H, 3AH, 00H
;       and     byte ptr [rax], al                      ; 8196 _ 20. 00
        db 20H, 00H
;       xor     byte ptr [rax], al                      ; 8198 _ 30. 00
        db 30H, 00H
;       js      5CH                                     ; 819A _ 78, 00
        db 78H, 00H
;       and     eax, 38003000H                          ; 819C _ 25, 38003000
        db 25H, 00H, 30H, 00H, 38H
; Note: Zero displacement could be omitted
;       add     byte ptr [rax], bh                      ; 81A1 _ 00. 78, 00
        db 00H, 78H, 00H
;       or      al, byte ptr [rax]                      ; 81A4 _ 0A. 00
        db 0AH, 00H
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 81A6 _ 00. 00

        db 00H, 00H                                     ; 81A6 _ ..

?_479   LABEL NEAR
        sub     al, byte ptr [rax]                      ; 81A8 _ 2A. 00
        sub     al, byte ptr [rax]                      ; 81AA _ 2A. 00
        sub     al, byte ptr [rax]                      ; 81AC _ 2A. 00
        and     byte ptr [rax], al                      ; 81AE _ 20. 00
; Note: Zero displacement could be omitted
        add     byte ptr [r10], r10b                    ; 81B0 _ 45: 00. 52, 00
        push    rdx                                     ; 81B4 _ 52
; Note: Zero displacement could be omitted
        add     byte ptr [rdi], cl                      ; 81B5 _ 00. 4F, 00
        push    rdx                                     ; 81B8 _ 52
        add     byte ptr [rdx], bh                      ; 81B9 _ 00. 3A
        add     byte ptr [rax], ah                      ; 81BB _ 00. 20
        add     byte ptr [rbp], al                      ; 81BD _ 00. 45, 00
; Note: Zero displacement could be omitted
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [rcx], ch                      ; 81C0 _ 66: 00. 69, 00
; Note: Zero displacement could be omitted
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [rsi], r12b                    ; 81C4 _ 46: 00. 66, 00
        insb                                            ; 81C8 _ 6C
; Note: Zero displacement could be omitted
        add     byte ptr [rcx], ah                      ; 81C9 _ 00. 61, 00
        jnc     Unnamed_1_7F8E                          ; 81CC _ 73, 00
Unnamed_1_7F8E:
        push    1912628480                              ; 81CE _ 68, 72006500
        add     byte ptr [rdx], bh                      ; 81D3 _ 00. 3A
        add     byte ptr [rax], ah                      ; 81D5 _ 00. 20
        add     byte ptr [rbp], dl                      ; 81D7 _ 00. 55, 00
        jo      Unnamed_1_7F9C                          ; 81DA _ 70, 00
Unnamed_1_7F9C:
; Note: Zero displacement could be omitted
        add     byte ptr fs:[rcx], ah                   ; 81DC _ 64: 00. 61, 00
        jz      Unnamed_1_7FA2                          ; 81E0 _ 74, 00
Unnamed_1_7FA2:
        add     byte ptr gs:[rdx], bh                   ; 81E2 _ 65: 00. 3A
        add     byte ptr [rax], ah                      ; 81E5 _ 00. 20
        add     byte ptr [rax+rax+65H], al              ; 81E7 _ 00. 44 00, 65
; Note: Zero displacement could be omitted
        add     byte ptr [rbx], dh                      ; 81EB _ 00. 73, 00
        movsxd  eax, dword ptr [rax]                    ; 81EE _ 63. 00
        jc      Unnamed_1_7FB2                          ; 81F0 _ 72, 00
Unnamed_1_7FB2:
        imul    eax, dword ptr [rax], 7602288           ; 81F2 _ 69. 00, 00740070
        outsd                                           ; 81F8 _ 6F
; Note: Zero displacement could be omitted
        add     byte ptr [rdx], dh                      ; 81F9 _ 00. 72, 00
        and     byte ptr [rax], al                      ; 81FC _ 20. 00
        jnz     Unnamed_1_7FC0                          ; 81FE _ 75, 00
Unnamed_1_7FC0:
        outsb                                           ; 8200 _ 6E
        add     byte ptr [rax+rax+6FH], ch              ; 8201 _ 00. 6C 00, 6F
; Note: Zero displacement could be omitted
        add     byte ptr [rbx], ah                      ; 8205 _ 00. 63, 00
        imul    eax, dword ptr [rax], 32                ; 8208 _ 6B. 00, 20
        add     byte ptr [rbp], ah                      ; 820B _ 00. 65, 00
        jc      Unnamed_1_7FD0                          ; 820E _ 72, 00
Unnamed_1_7FD0:
        jc      Unnamed_1_7FD2                          ; 8210 _ 72, 00
Unnamed_1_7FD2:
        outsd                                           ; 8212 _ 6F
; Note: Zero displacement could be omitted
        add     byte ptr [rdx], dh                      ; 8213 _ 00. 72, 00
        and     byte ptr [rax], al                      ; 8216 _ 20. 00
        and     eax, 2E007200H                          ; 8218 _ 25, 2E007200
        add     byte ptr [rdx], cl                      ; 821D _ 00. 0A
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 821F _ 00. 00
        db 00H, 00H
; Warning: Label out of phase with instruction. Possibly spurious
; ?_480; Misplaced symbol at address 00007FE2
;       add     byte ptr [rdx], ch                      ; 8221 _ 00. 2A
        db 00H, 2AH

?_480   LABEL NEAR
        sub     al, byte ptr [rax]                      ; 8222 _ 2A. 00
        sub     al, byte ptr [rax]                      ; 8224 _ 2A. 00
        sub     al, byte ptr [rax]                      ; 8226 _ 2A. 00
        and     byte ptr [rax], al                      ; 8228 _ 20. 00
; Note: Zero displacement could be omitted
        add     byte ptr [r10], r10b                    ; 822A _ 45: 00. 52, 00
        push    rdx                                     ; 822E _ 52
; Note: Zero displacement could be omitted
        add     byte ptr [rdi], cl                      ; 822F _ 00. 4F, 00
        push    rdx                                     ; 8232 _ 52
        add     byte ptr [rdx], bh                      ; 8233 _ 00. 3A
        add     byte ptr [rax], ah                      ; 8235 _ 00. 20
; Note: Zero displacement could be omitted
        add     byte ptr [rax], dl                      ; 8237 _ 00. 50, 00
; Note: Zero displacement could be omitted
        add     byte ptr gs:[rdx], dh                   ; 823A _ 65: 00. 72, 00
; Note: Zero displacement could be omitted
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [rdi], ch                      ; 823E _ 66: 00. 6F, 00
        jc      Unnamed_1_8004                          ; 8242 _ 72, 00
Unnamed_1_8004:
        insd                                            ; 8244 _ 6D
; Note: Zero displacement could be omitted
        add     byte ptr [rdx], dl                      ; 8245 _ 00. 52, 00
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 8248 _ 61
        db 61H
; Note: Zero displacement could be omitted
;       add     byte ptr [rdi], dh                      ; 8249 _ 00. 77, 00
        db 00H, 77H, 00H
;       push    rbp                                     ; 824C _ 55
        db 55H
; Note: Zero displacement could be omitted
;       add     byte ptr [rax], dh                      ; 824D _ 00. 70, 00
        db 00H, 70H, 00H
; Note: Zero displacement could be omitted
;       add     byte ptr fs:[rcx], ah                   ; 8250 _ 64: 00. 61, 00
        db 64H, 00H, 61H, 00H
;       jz      16H                                     ; 8254 _ 74, 00
        db 74H, 00H
;       add     byte ptr gs:[rdx], bh                   ; 8256 _ 65: 00. 3A
        db 65H, 00H, 3AH
;       add     byte ptr [rax], ah                      ; 8259 _ 00. 20
        db 00H, 20H
;       add     byte ptr [rbp], dl                      ; 825B _ 00. 55, 00
        db 00H, 55H, 00H
;       outsb                                           ; 825E _ 6E
        db 6EH
; Note: Zero displacement could be omitted
;       add     byte ptr [rbx], ch                      ; 825F _ 00. 6B, 00
        db 00H, 6BH, 00H
;       outsb                                           ; 8262 _ 6E
        db 6EH
; Note: Zero displacement could be omitted
;       add     byte ptr [rdi], ch                      ; 8263 _ 00. 6F, 00
        db 00H, 6FH, 00H
;       ja      28H                                     ; 8266 _ 77, 00
        db 77H, 00H
;       outsb                                           ; 8268 _ 6E
        db 6EH
;       add     byte ptr [rax], ah                      ; 8269 _ 00. 20
        db 00H, 20H
;       add     byte ptr [rax+rax+79H], dh              ; 826B _ 00. 74 00, 79
        db 00H, 74H, 00H, 79H
; Note: Zero displacement could be omitted
;       add     byte ptr [rax], dh                      ; 826F _ 00. 70, 00
        db 00H, 70H, 00H
;       add     byte ptr gs:[rdx], cl                   ; 8272 _ 65: 00. 0A
        db 65H, 00H, 0AH
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 8275 _ 00. 00

        db 00H, 00H, 00H                                ; 8275 _ ...

?_481   LABEL NEAR
        sub     al, byte ptr [rax]                      ; 8278 _ 2A. 00
        sub     al, byte ptr [rax]                      ; 827A _ 2A. 00
        sub     al, byte ptr [rax]                      ; 827C _ 2A. 00
        and     byte ptr [rax], al                      ; 827E _ 20. 00
; Note: Zero displacement could be omitted
        add     byte ptr [r10], r10b                    ; 8280 _ 45: 00. 52, 00
        push    rdx                                     ; 8284 _ 52
; Note: Zero displacement could be omitted
        add     byte ptr [rdi], cl                      ; 8285 _ 00. 4F, 00
        push    rdx                                     ; 8288 _ 52
        add     byte ptr [rdx], bh                      ; 8289 _ 00. 3A
        add     byte ptr [rax], ah                      ; 828B _ 00. 20
; Note: Zero displacement could be omitted
        add     byte ptr [rsi], al                      ; 828D _ 00. 46, 00
        push    rdi                                     ; 8290 _ 57
; Note: Zero displacement could be omitted
        add     byte ptr [rax], cl                      ; 8291 _ 00. 48, 00
        cmp     al, byte ptr [rax]                      ; 8294 _ 3A. 00
        and     byte ptr [rax], al                      ; 8296 _ 20. 00
        push    rbp                                     ; 8298 _ 55
; Note: Zero displacement could be omitted
        add     byte ptr [rsi], ch                      ; 8299 _ 00. 6E, 00
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 829C _ 61
        db 61H
; Note: Zero displacement could be omitted
;       add     byte ptr [rdx], ah                      ; 829D _ 00. 62, 00
        db 00H, 62H, 00H
;       insb                                            ; 82A0 _ 6C
        db 6CH
;       add     byte ptr [rbp], ah                      ; 82A1 _ 00. 65, 00
        db 00H, 65H, 00H
;       and     byte ptr [rax], al                      ; 82A4 _ 20. 00
        db 20H, 00H
;       jz      68H                                     ; 82A6 _ 74, 00
        db 74H, 00H
;       outsd                                           ; 82A8 _ 6F
        db 6FH
;       add     byte ptr [rax], ah                      ; 82A9 _ 00. 20
        db 00H, 20H
; Note: Zero displacement could be omitted
;       add     byte ptr [rsi], ah                      ; 82AB _ 00. 66, 00
        db 00H, 66H, 00H
;       imul    eax, dword ptr [rax], 6553710           ; 82AE _ 69. 00, 0064006E
        db 69H, 00H, 6EH, 00H, 64H, 00H
;       and     byte ptr [rax], al                      ; 82B4 _ 20. 00
        db 20H, 00H
;       push    rdx                                     ; 82B6 _ 52
        db 52H
; Note: Zero displacement could be omitted
;       add     byte ptr [rdi], ch                      ; 82B7 _ 00. 6F, 00
        db 00H, 6FH, 00H
;       outsd                                           ; 82BA _ 6F
        db 6FH
;       add     byte ptr [rax+rax+20H], dh              ; 82BB _ 00. 74 00, 20
        db 00H, 74H, 00H, 20H
; Note: Zero displacement could be omitted
;       add     byte ptr [rax], dl                      ; 82BF _ 00. 50, 00
        db 00H, 50H, 00H
;       jc      84H                                     ; 82C2 _ 72, 00
        db 72H, 00H
;       outsd                                           ; 82C4 _ 6F
        db 6FH
;       add     byte ptr [rax+rax+6FH], dh              ; 82C5 _ 00. 74 00, 6F
        db 00H, 74H, 00H, 6FH
; Note: Zero displacement could be omitted
;       add     byte ptr [rbx], ah                      ; 82C9 _ 00. 63, 00
        db 00H, 63H, 00H
;       outsd                                           ; 82CC _ 6F
        db 6FH
;       add     byte ptr [rax+rax+2EH], ch              ; 82CD _ 00. 6C 00, 2E
        db 00H, 6CH, 00H, 2EH
;       add     byte ptr [rdx], cl                      ; 82D1 _ 00. 0A
        db 00H, 0AH
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 82D3 _ 00. 00

        db 00H, 00H, 00H, 57H, 00H, 61H, 00H, 72H       ; 82D3 _ ...W.a.r
        db 00H, 6EH, 00H, 69H, 00H, 6EH, 00H, 67H       ; 82DB _ .n.i.n.g
        db 00H, 3AH, 00H, 20H, 00H, 43H, 00H, 6FH       ; 82E3 _ .:. .C.o
        db 00H, 75H, 00H, 6CH, 00H, 64H, 00H, 20H       ; 82EB _ .u.l.d. 
        db 00H, 6EH, 00H, 6FH, 00H, 74H, 00H, 20H       ; 82F3 _ .n.o.t. 
        db 00H, 67H, 00H, 65H, 00H, 74H, 00H, 20H       ; 82FB _ .g.e.t. 
        db 00H, 41H, 00H, 43H, 00H, 20H, 00H, 64H       ; 8303 _ .A.C. .d
        db 00H, 61H, 00H, 74H, 00H, 61H, 00H, 3AH       ; 830B _ .a.t.a.:
        db 00H, 20H, 00H, 30H, 00H, 78H, 00H, 25H       ; 8313 _ . .0.x.%
        db 00H, 30H, 00H, 38H, 00H, 78H, 00H, 0AH       ; 831B _ .0.8.x..
        db 00H, 00H, 00H, 45H, 00H, 72H, 00H, 72H       ; 8323 _ ...E.r.r
        db 00H, 6FH, 00H, 72H, 00H, 3AH, 00H, 20H       ; 832B _ .o.r.:. 
        db 00H, 76H, 00H, 61H, 00H, 72H, 00H, 69H       ; 8333 _ .v.a.r.i
        db 00H, 61H, 00H, 62H, 00H, 6CH, 00H, 65H       ; 833B _ .a.b.l.e
        db 00H, 20H, 00H, 27H, 00H, 25H, 00H, 73H       ; 8343 _ . .'.%.s
        db 00H, 27H, 00H, 20H, 00H, 73H, 00H, 65H       ; 834B _ .'. .s.e
        db 00H, 74H, 00H, 20H, 00H, 46H, 00H, 41H       ; 8353 _ .t. .F.A
        db 00H, 49H, 00H, 4CH, 00H, 45H, 00H, 44H       ; 835B _ .I.L.E.D
        db 00H, 21H, 00H, 20H, 00H, 20H, 00H, 30H       ; 8363 _ .!. . .0
        db 00H, 78H, 00H, 25H, 00H, 30H, 00H, 38H       ; 836B _ .x.%.0.8
        db 00H, 78H, 00H, 0AH, 00H, 00H, 00H            ; 8373 _ .x.....

?_482   LABEL NEAR
; Note: Zero displacement could be omitted
        add     byte ptr gs:[rax], dh                   ; 837A _ 65: 00. 70, 00
        imul    eax, dword ptr [rax], 6226020           ; 837E _ 69. 00, 005F0064
        jo      Unnamed_1_8146                          ; 8384 _ 70, 00
Unnamed_1_8146:
        jc      Unnamed_1_8148                          ; 8386 _ 72, 00
Unnamed_1_8148:
        outsd                                           ; 8388 _ 6F
; Note: Zero displacement could be omitted
        add     byte ptr [rsi], dh                      ; 8389 _ 00. 76, 00
        imul    eax, dword ptr [rax], 6881395           ; 838C _ 69. 00, 00690073
        outsd                                           ; 8392 _ 6F
; Note: Zero displacement could be omitted
        add     byte ptr [rsi], ch                      ; 8393 _ 00. 6E, 00
; Note: Zero displacement could be omitted
        add     byte ptr gs:[rax+rax], ah               ; 8396 _ 65: 00. 64 00, 00
; Warning: Label out of phase with instruction. Possibly spurious
; ?_483; Misplaced symbol at address 0000815C
        add     byte ptr [rbp], al                      ; 839B _ 00. 45, 00
        jc      Unnamed_1_8160                          ; 839E _ 72, 00
Unnamed_1_8160:
        jc      Unnamed_1_8162                          ; 83A0 _ 72, 00
Unnamed_1_8162:
        outsd                                           ; 83A2 _ 6F
; Note: Zero displacement could be omitted
        add     byte ptr [rdx], dh                      ; 83A3 _ 00. 72, 00
        cmp     al, byte ptr [rax]                      ; 83A6 _ 3A. 00
        and     byte ptr [rax], al                      ; 83A8 _ 20. 00
; Note: Zero displacement could be omitted
        add     byte ptr gs:[rax], dh                   ; 83AA _ 65: 00. 70, 00
        imul    eax, dword ptr [rax], 2949220           ; 83AE _ 69. 00, 002D0064
        jo      Unnamed_1_8176                          ; 83B4 _ 70, 00
Unnamed_1_8176:
        jc      Unnamed_1_8178                          ; 83B6 _ 72, 00
Unnamed_1_8178:
        outsd                                           ; 83B8 _ 6F
; Note: Zero displacement could be omitted
        add     byte ptr [rsi], dh                      ; 83B9 _ 00. 76, 00
        imul    eax, dword ptr [rax], 6881395           ; 83BC _ 69. 00, 00690073
        outsd                                           ; 83C2 _ 6F
; Note: Zero displacement could be omitted
        add     byte ptr [rsi], ch                      ; 83C3 _ 00. 6E, 00
        add     byte ptr gs:[rax+rax+20H], ah           ; 83C6 _ 65: 00. 64 00, 20
; Note: Zero displacement could be omitted
        add     byte ptr [rbx], dh                      ; 83CB _ 00. 73, 00
        add     byte ptr gs:[rax+rax+20H], dh           ; 83CE _ 65: 00. 74 00, 20
; Note: Zero displacement could be omitted
        add     byte ptr [rsi], al                      ; 83D3 _ 00. 46, 00
; Note: Zero displacement could be omitted
        add     byte ptr [r9], cl                       ; 83D6 _ 41: 00. 49, 00
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [rbp], r8b                     ; 83DA _ 4C: 00. 45, 00
        add     byte ptr [rcx], r12b                    ; 83DE _ 44: 00. 21
        add     byte ptr [rax], ah                      ; 83E1 _ 00. 20
        add     byte ptr [rax], ah                      ; 83E3 _ 00. 20
        add     byte ptr [rax], dh                      ; 83E5 _ 00. 30
; Note: Zero displacement could be omitted
        add     byte ptr [rax], bh                      ; 83E7 _ 00. 78, 00
        and     eax, 38003000H                          ; 83EA _ 25, 38003000
; Note: Zero displacement could be omitted
        add     byte ptr [rax], bh                      ; 83EF _ 00. 78, 00
        or      al, byte ptr [rax]                      ; 83F2 _ 0A. 00
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 83F4 _ 00. 00
        db 00H, 00H

?_484   LABEL NEAR
        push    rbp                                     ; 83F6 _ 55
; Note: Zero displacement could be omitted
        add     byte ptr [rsi], ch                      ; 83F7 _ 00. 6E, 00
        imul    eax, dword ptr [rax], 110               ; 83FA _ 6B. 00, 6E
; Note: Zero displacement could be omitted
        add     byte ptr [rdi], ch                      ; 83FD _ 00. 6F, 00
        ja      Unnamed_1_81C2                          ; 8400 _ 77, 00
Unnamed_1_81C2:
        outsb                                           ; 8402 _ 6E
        add     byte ptr [rax], ah                      ; 8403 _ 00. 20
; Note: Zero displacement could be omitted
        add     byte ptr [rdx], al                      ; 8405 _ 00. 42, 00
        outsd                                           ; 8408 _ 6F
; Note: Zero displacement could be omitted
        add     byte ptr [rdi], ch                      ; 8409 _ 00. 6F, 00
        jz      Unnamed_1_81CE                          ; 840C _ 74, 00
Unnamed_1_81CE:
        and     byte ptr [rax], al                      ; 840E _ 20. 00
        add     byte ptr [rax+r8+6FH], bpl              ; 8410 _ 42: 00. 6C 00, 6F
; Note: Zero displacement could be omitted
        add     byte ptr [rbx], ah                      ; 8415 _ 00. 63, 00
        imul    eax, dword ptr [rax], 32                ; 8418 _ 6B. 00, 20
; Note: Zero displacement could be omitted
        add     byte ptr [rbx], dl                      ; 841B _ 00. 53, 00
        jz      Unnamed_1_81E0                          ; 841E _ 74, 00
Unnamed_1_81E0:
        jc      Unnamed_1_81E2                          ; 8420 _ 72, 00
Unnamed_1_81E2:
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 8422 _ 61
        db 61H
; Note: Zero displacement could be omitted
;       add     byte ptr [rax], dh                      ; 8423 _ 00. 70, 00
        db 00H, 70H, 00H
;       and     byte ptr [rax], al                      ; 8426 _ 20. 00
        db 20H, 00H
;       push    rbx                                     ; 8428 _ 53
        db 53H
; Note: Zero displacement could be omitted
;       add     byte ptr [rcx], ch                      ; 8429 _ 00. 69, 00
        db 00H, 69H, 00H
;       jpe     0EEH                                    ; 842C _ 7A, 00
        db 7AH, 00H
;       add     byte ptr gs:[rsi], ch                   ; 842E _ 65: 00. 2E
        db 65H, 00H, 2EH
;       add     byte ptr [rdx], cl                      ; 8431 _ 00. 0A
        db 00H, 0AH
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 8433 _ 00. 00

        db 00H, 00H, 00H                                ; 8433 _ ...

?_485   LABEL NEAR
; Note: Zero displacement could be omitted
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [r14], bpl                     ; 8436 _ 49: 00. 6E, 00
        jbe     Unnamed_1_81FC                          ; 843A _ 76, 00
Unnamed_1_81FC:
; Note: Zero displacement could be omitted
        add     byte ptr gs:[rdx], dh                   ; 843C _ 65: 00. 72, 00
        jz      Unnamed_1_8202                          ; 8440 _ 74, 00
Unnamed_1_8202:
        add     byte ptr gs:[rax+rax+20H], ah           ; 8442 _ 65: 00. 64 00, 20
        add     byte ptr [rax+rax+6FH], dl              ; 8447 _ 00. 54 00, 6F
; Note: Zero displacement could be omitted
        add     byte ptr [rax], dh                      ; 844B _ 00. 70, 00
        and     byte ptr [rax], al                      ; 844E _ 20. 00
        push    rbx                                     ; 8450 _ 53
; Note: Zero displacement could be omitted
        add     byte ptr [rdi], dh                      ; 8451 _ 00. 77, 00
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 8454 _ 61
        db 61H
; Note: Zero displacement could be omitted
;       add     byte ptr [rax], dh                      ; 8455 _ 00. 70, 00
        db 00H, 70H, 00H
;       and     byte ptr [rax], al                      ; 8458 _ 20. 00
        db 20H, 00H
;       push    rbx                                     ; 845A _ 53
        db 53H
;       add     byte ptr [rax+rax+61H], dh              ; 845B _ 00. 74 00, 61
        db 00H, 74H, 00H, 61H
;       add     byte ptr [rax+rax+65H], dh              ; 845F _ 00. 74 00, 65
        db 00H, 74H, 00H, 65H
;       add     byte ptr [rax], ah                      ; 8463 _ 00. 20
        db 00H, 20H
;       add     byte ptr [rax], ch                      ; 8465 _ 00. 28
        db 00H, 28H
;       add     byte ptr [rax+rax+6FH], dh              ; 8467 _ 00. 74 00, 6F
        db 00H, 74H, 00H, 6FH
; Note: Zero displacement could be omitted
;       add     byte ptr [rax], dh                      ; 846B _ 00. 70, 00
        db 00H, 70H, 00H
;       and     byte ptr [rax], al                      ; 846E _ 20. 00
        db 20H, 00H
;       jnc     32H                                     ; 8470 _ 73, 00
        db 73H, 00H
;       ja      34H                                     ; 8472 _ 77, 00
        db 77H, 00H
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 8474 _ 61
        db 61H
; Note: Zero displacement could be omitted
;       add     byte ptr [rax], dh                      ; 8475 _ 00. 70, 00
        db 00H, 70H, 00H
;       and     byte ptr [rax], al                      ; 8478 _ 20. 00
        db 20H, 00H
; Note: Zero displacement could be omitted
; Note: Prefix bit or byte has no meaning in this context
;       add     byte ptr [rdi], r13b                    ; 847A _ 4E: 00. 6F, 00
        db 4EH, 00H, 6FH, 00H
;       and     byte ptr [rax], al                      ; 847E _ 20. 00
        db 20H, 00H
; Note: Zero displacement could be omitted
; Note: Prefix bit or byte has no meaning in this context
;       add     byte ptr [rdi], r13b                    ; 8480 _ 4C: 00. 6F, 00
        db 4CH, 00H, 6FH, 00H
;       outsb                                           ; 8484 _ 6E
        db 6EH
; Note: Zero displacement could be omitted
;       add     byte ptr [rdi], ah                      ; 8485 _ 00. 67, 00
        db 00H, 67H, 00H
; Note: Zero displacement could be omitted
;       add     byte ptr gs:[rdx], dh                   ; 8488 _ 65: 00. 72, 00
        db 65H, 00H, 72H, 00H
;       and     byte ptr [rax], al                      ; 848C _ 20. 00
        db 20H, 00H
;       jnc     50H                                     ; 848E _ 73, 00
        db 73H, 00H
;       add     byte ptr gs:[rax+rax+29H], dh           ; 8490 _ 65: 00. 74 00, 29
        db 65H, 00H, 74H, 00H, 29H
;       add     byte ptr [rax], ah                      ; 8495 _ 00. 20
        db 00H, 20H
; Note: Zero displacement could be omitted
;       add     byte ptr [rdi], ch                      ; 8497 _ 00. 6F, 00
        db 00H, 6FH, 00H
;       outsb                                           ; 849A _ 6E
        db 6EH
;       add     byte ptr [rax], ah                      ; 849B _ 00. 20
        db 00H, 20H
;       add     byte ptr [rax+rax+79H], cl              ; 849D _ 00. 4C 00, 79
        db 00H, 4CH, 00H, 79H
; Note: Zero displacement could be omitted
;       add     byte ptr [rsi], ch                      ; 84A1 _ 00. 6E, 00
        db 00H, 6EH, 00H
;       js      66H                                     ; 84A4 _ 78, 00
        db 78H, 00H
;       push    rax                                     ; 84A6 _ 50
        db 50H
; Note: Zero displacement could be omitted
;       add     byte ptr [rdi], ch                      ; 84A7 _ 00. 6F, 00
        db 00H, 6FH, 00H
;       imul    eax, dword ptr [rax], 7602286           ; 84AA _ 69. 00, 0074006E
        db 69H, 00H, 6EH, 00H, 74H, 00H
;       and     byte ptr [rax], al                      ; 84B0 _ 20. 00
        db 20H, 00H
;       push    rbx                                     ; 84B2 _ 53
        db 53H
; Note: Zero displacement could be omitted
;       add     byte ptr [rcx], bh                      ; 84B3 _ 00. 79, 00
        db 00H, 79H, 00H
;       jz      78H                                     ; 84B6 _ 74, 00
        db 74H, 00H
;       add     byte ptr gs:[rbp], ch                   ; 84B8 _ 65: 00. 6D, 00
        db 65H, 00H, 6DH, 00H
; Note: Prefix bit or byte has no meaning in this context
;       add     byte ptr cs:[rdx], cl                   ; 84BC _ 2E: 00. 0A
        db 2EH, 00H, 0AH
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 84BF _ 00. 00

        db 00H, 00H, 00H                                ; 84BF _ ...

?_486   LABEL NEAR
; Note: Zero displacement could be omitted
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [r14], bpl                     ; 84C2 _ 49: 00. 6E, 00
        jbe     Unnamed_1_8288                          ; 84C6 _ 76, 00
Unnamed_1_8288:
; Note: Zero displacement could be omitted
        add     byte ptr gs:[rdx], dh                   ; 84C8 _ 65: 00. 72, 00
        jz      Unnamed_1_828E                          ; 84CC _ 74, 00
Unnamed_1_828E:
        add     byte ptr gs:[rax+rax+20H], ah           ; 84CE _ 65: 00. 64 00, 20
        add     byte ptr [rax+rax+6FH], dl              ; 84D3 _ 00. 54 00, 6F
; Note: Zero displacement could be omitted
        add     byte ptr [rax], dh                      ; 84D7 _ 00. 70, 00
        and     byte ptr [rax], al                      ; 84DA _ 20. 00
        push    rbx                                     ; 84DC _ 53
; Note: Zero displacement could be omitted
        add     byte ptr [rdi], dh                      ; 84DD _ 00. 77, 00
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 84E0 _ 61
        db 61H
; Note: Zero displacement could be omitted
;       add     byte ptr [rax], dh                      ; 84E1 _ 00. 70, 00
        db 00H, 70H, 00H
;       and     byte ptr [rax], al                      ; 84E4 _ 20. 00
        db 20H, 00H
;       push    rbx                                     ; 84E6 _ 53
        db 53H
;       add     byte ptr [rax+rax+61H], dh              ; 84E7 _ 00. 74 00, 61
        db 00H, 74H, 00H, 61H
;       add     byte ptr [rax+rax+65H], dh              ; 84EB _ 00. 74 00, 65
        db 00H, 74H, 00H, 65H
;       add     byte ptr [rax], ah                      ; 84EF _ 00. 20
        db 00H, 20H
;       add     byte ptr [rax], ch                      ; 84F1 _ 00. 28
        db 00H, 28H
; Note: Zero displacement could be omitted
;       add     byte ptr [rbx], dl                      ; 84F3 _ 00. 53, 00
        db 00H, 53H, 00H
;       ja      0B8H                                    ; 84F6 _ 77, 00
        db 77H, 00H
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 84F8 _ 61
        db 61H
; Note: Zero displacement could be omitted
;       add     byte ptr [rax], dh                      ; 84F9 _ 00. 70, 00
        db 00H, 70H, 00H
;       jo      0BEH                                    ; 84FC _ 70, 00
        db 70H, 00H
;       add     byte ptr gs:[rax+rax+2FH], ah           ; 84FE _ 65: 00. 64 00, 2F
        db 65H, 00H, 64H, 00H, 2FH
; Note: Zero displacement could be omitted
;       add     byte ptr [rcx], al                      ; 8503 _ 00. 41, 00
        db 00H, 41H, 00H
;       insb                                            ; 8506 _ 6C
        db 6CH
;       add     byte ptr [rax+rax+65H], dh              ; 8507 _ 00. 74 00, 65
        db 00H, 74H, 00H, 65H
; Note: Zero displacement could be omitted
;       add     byte ptr [rdx], dh                      ; 850B _ 00. 72, 00
        db 00H, 72H, 00H
;       outsb                                           ; 850E _ 6E
        db 6EH
; Note: Zero displacement could be omitted
;       add     byte ptr [rcx], ah                      ; 850F _ 00. 61, 00
        db 00H, 61H, 00H
;       jz      0D4H                                    ; 8512 _ 74, 00
        db 74H, 00H
;       add     byte ptr gs:[rax], ah                   ; 8514 _ 65: 00. 20
        db 65H, 00H, 20H
; Note: Zero displacement could be omitted
;       add     byte ptr [rbx], dh                      ; 8517 _ 00. 73, 00
        db 00H, 73H, 00H
;       add     byte ptr gs:[rax+rax+29H], dh           ; 851A _ 65: 00. 74 00, 29
        db 65H, 00H, 74H, 00H, 29H
;       add     byte ptr [rax], ah                      ; 851F _ 00. 20
        db 00H, 20H
; Note: Zero displacement could be omitted
;       add     byte ptr [rdi], ch                      ; 8521 _ 00. 6F, 00
        db 00H, 6FH, 00H
;       outsb                                           ; 8524 _ 6E
        db 6EH
;       add     byte ptr [rax], ah                      ; 8525 _ 00. 20
        db 00H, 20H
;       add     byte ptr [rax+rax+79H], cl              ; 8527 _ 00. 4C 00, 79
        db 00H, 4CH, 00H, 79H
; Note: Zero displacement could be omitted
;       add     byte ptr [rsi], ch                      ; 852B _ 00. 6E, 00
        db 00H, 6EH, 00H
;       js      0F0H                                    ; 852E _ 78, 00
        db 78H, 00H
;       push    rax                                     ; 8530 _ 50
        db 50H
; Note: Zero displacement could be omitted
;       add     byte ptr [rdi], ch                      ; 8531 _ 00. 6F, 00
        db 00H, 6FH, 00H
;       imul    eax, dword ptr [rax], 7602286           ; 8534 _ 69. 00, 0074006E
        db 69H, 00H, 6EH, 00H, 74H, 00H
;       and     byte ptr [rax], al                      ; 853A _ 20. 00
        db 20H, 00H
;       push    rbx                                     ; 853C _ 53
        db 53H
; Note: Zero displacement could be omitted
;       add     byte ptr [rcx], bh                      ; 853D _ 00. 79, 00
        db 00H, 79H, 00H
;       jz      02H                                     ; 8540 _ 74, 00
        db 74H, 00H
;       add     byte ptr gs:[rbp], ch                   ; 8542 _ 65: 00. 6D, 00
        db 65H, 00H, 6DH, 00H
; Note: Prefix bit or byte has no meaning in this context
;       add     byte ptr cs:[rdx], cl                   ; 8546 _ 2E: 00. 0A
        db 2EH, 00H, 0AH
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 8549 _ 00. 00

        db 00H, 00H, 00H                                ; 8549 _ ...

?_487   LABEL NEAR
        sub     al, byte ptr [rax]                      ; 854C _ 2A. 00
        sub     al, byte ptr [rax]                      ; 854E _ 2A. 00
        sub     al, byte ptr [rax]                      ; 8550 _ 2A. 00
        and     byte ptr [rax], al                      ; 8552 _ 20. 00
; Note: Zero displacement could be omitted
        add     byte ptr [r10], r10b                    ; 8554 _ 45: 00. 52, 00
        push    rdx                                     ; 8558 _ 52
; Note: Zero displacement could be omitted
        add     byte ptr [rdi], cl                      ; 8559 _ 00. 4F, 00
        push    rdx                                     ; 855C _ 52
        add     byte ptr [rdx], bh                      ; 855D _ 00. 3A
        add     byte ptr [rax], ah                      ; 855F _ 00. 20
; Note: Zero displacement could be omitted
        add     byte ptr [rsi], al                      ; 8561 _ 00. 46, 00
        push    rdi                                     ; 8564 _ 57
; Note: Zero displacement could be omitted
        add     byte ptr [rax], cl                      ; 8565 _ 00. 48, 00
        cmp     al, byte ptr [rax]                      ; 8568 _ 3A. 00
        and     byte ptr [rax], al                      ; 856A _ 20. 00
        push    rbp                                     ; 856C _ 55
; Note: Zero displacement could be omitted
        add     byte ptr [rsi], ch                      ; 856D _ 00. 6E, 00
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 8570 _ 61
        db 61H
; Note: Zero displacement could be omitted
;       add     byte ptr [rdx], ah                      ; 8571 _ 00. 62, 00
        db 00H, 62H, 00H
;       insb                                            ; 8574 _ 6C
        db 6CH
;       add     byte ptr [rbp], ah                      ; 8575 _ 00. 65, 00
        db 00H, 65H, 00H
;       and     byte ptr [rax], al                      ; 8578 _ 20. 00
        db 20H, 00H
;       jz      3CH                                     ; 857A _ 74, 00
        db 74H, 00H
;       outsd                                           ; 857C _ 6F
        db 6FH
;       add     byte ptr [rax], ah                      ; 857D _ 00. 20
        db 00H, 20H
;       add     byte ptr [rax+rax+65H], ah              ; 857F _ 00. 64 00, 65
        db 00H, 64H, 00H, 65H
;       add     byte ptr [rax+rax+65H], dh              ; 8583 _ 00. 74 00, 65
        db 00H, 74H, 00H, 65H
; Note: Zero displacement could be omitted
;       add     byte ptr [rdx], dh                      ; 8587 _ 00. 72, 00
        db 00H, 72H, 00H
;       insd                                            ; 858A _ 6D
        db 6DH
; Note: Zero displacement could be omitted
;       add     byte ptr [rcx], ch                      ; 858B _ 00. 69, 00
        db 00H, 69H, 00H
;       outsb                                           ; 858E _ 6E
        db 6EH
;       add     byte ptr [rbp], ah                      ; 858F _ 00. 65, 00
        db 00H, 65H, 00H
;       and     byte ptr [rax], al                      ; 8592 _ 20. 00
        db 20H, 00H
; Note: Zero displacement could be omitted
; Note: Prefix bit or byte has no meaning in this context
;       add     byte ptr [rax], r14b                    ; 8594 _ 4C: 00. 70, 00
        db 4CH, 00H, 70H, 00H
;       movsxd  eax, dword ptr [rax]                    ; 8598 _ 63. 00
        db 63H, 00H
;       and     byte ptr [rax], al                      ; 859A _ 20. 00
        db 20H, 00H
;       jbe     5EH                                     ; 859C _ 76, 00
        db 76H, 00H
; Note: Zero displacement could be omitted
;       add     byte ptr gs:[rdx], dh                   ; 859E _ 65: 00. 72, 00
        db 65H, 00H, 72H, 00H
;       jnc     64H                                     ; 85A2 _ 73, 00
        db 73H, 00H
;       imul    eax, dword ptr [rax], 7209071           ; 85A4 _ 69. 00, 006E006F
        db 69H, 00H, 6FH, 00H, 6EH, 00H
; Note: Prefix bit or byte has no meaning in this context
;       add     byte ptr cs:[rdx], cl                   ; 85AA _ 2E: 00. 0A
        db 2EH, 00H, 0AH
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 85AD _ 00. 00

        db 00H, 00H, 00H, 53H, 00H, 53H, 00H, 54H       ; 85AD _ ...S.S.T
        db 00H, 20H, 00H, 32H, 00H, 35H, 00H, 56H       ; 85B5 _ . .2.5.V
        db 00H, 46H, 00H, 30H, 00H, 38H, 00H, 30H       ; 85BD _ .F.0.8.0
        db 00H, 00H, 00H, 53H, 00H, 53H, 00H, 54H       ; 85C5 _ ...S.S.T
        db 00H, 20H, 00H, 32H, 00H, 35H, 00H, 56H       ; 85CD _ . .2.5.V
        db 00H, 46H, 00H, 30H, 00H, 31H, 00H, 36H       ; 85D5 _ .F.0.1.6
        db 00H, 00H, 00H, 53H, 00H, 53H, 00H, 54H       ; 85DD _ ...S.S.T
        db 00H, 20H, 00H, 32H, 00H, 35H, 00H, 56H       ; 85E5 _ . .2.5.V
        db 00H, 46H, 00H, 30H, 00H, 33H, 00H, 32H       ; 85ED _ .F.0.3.2
        db 00H, 00H, 00H, 53H, 00H, 53H, 00H, 54H       ; 85F5 _ ...S.S.T
        db 00H, 20H, 00H, 32H, 00H, 35H, 00H, 56H       ; 85FD _ . .2.5.V
        db 00H, 46H, 00H, 30H, 00H, 36H, 00H, 34H       ; 8605 _ .F.0.6.4
        db 00H, 00H, 00H, 53H, 00H, 70H, 00H, 61H       ; 860D _ ...S.p.a
        db 00H, 6EH, 00H, 73H, 00H, 69H, 00H, 6FH       ; 8615 _ .n.s.i.o
        db 00H, 6EH, 00H, 00H, 00H, 4DH, 00H, 61H       ; 861D _ .n...M.a
        db 00H, 63H, 00H, 72H, 00H, 6FH, 00H, 6EH       ; 8625 _ .c.r.o.n
        db 00H, 69H, 00H, 78H, 00H, 20H, 00H, 32H       ; 862D _ .i.x. .2
        db 00H, 35H, 00H, 4CH, 00H, 31H, 00H, 36H       ; 8635 _ .5.L.1.6
        db 00H, 30H, 00H, 35H, 00H, 00H, 00H, 4DH       ; 863D _ .0.5...M
        db 00H, 61H, 00H, 63H, 00H, 72H, 00H, 6FH       ; 8645 _ .a.c.r.o
        db 00H, 6EH, 00H, 69H, 00H, 78H, 00H, 20H       ; 864D _ .n.i.x. 
        db 00H, 32H, 00H, 35H, 00H, 4CH, 00H, 33H       ; 8655 _ .2.5.L.3
        db 00H, 32H, 00H, 30H, 00H, 35H, 00H, 00H       ; 865D _ .2.0.5..
        db 00H, 4DH, 00H, 61H, 00H, 63H, 00H, 72H       ; 8665 _ .M.a.c.r
        db 00H, 6FH, 00H, 6EH, 00H, 69H, 00H, 78H       ; 866D _ .o.n.i.x
        db 00H, 20H, 00H, 32H, 00H, 35H, 00H, 4CH       ; 8675 _ . .2.5.L
        db 00H, 36H, 00H, 34H, 00H, 33H, 00H, 36H       ; 867D _ .6.4.3.6
        db 00H, 45H, 00H, 00H, 00H, 53H, 00H, 54H       ; 8685 _ .E...S.T
        db 00H, 20H, 00H, 4DH, 00H, 69H, 00H, 63H       ; 868D _ . .M.i.c
        db 00H, 72H, 00H, 6FH, 00H, 20H, 00H, 4DH       ; 8695 _ .r.o. .M
        db 00H, 32H, 00H, 35H, 00H, 50H, 00H, 31H       ; 869D _ .2.5.P.1
        db 00H, 36H, 00H, 00H, 00H, 53H, 00H, 54H       ; 86A5 _ .6...S.T
        db 00H, 20H, 00H, 4DH, 00H, 69H, 00H, 63H       ; 86AD _ . .M.i.c
        db 00H, 72H, 00H, 6FH, 00H, 20H, 00H, 4DH       ; 86B5 _ .r.o. .M
        db 00H, 32H, 00H, 35H, 00H, 50H, 00H, 33H       ; 86BD _ .2.5.P.3
        db 00H, 32H, 00H, 00H, 00H, 41H, 00H, 74H       ; 86C5 _ .2...A.t
        db 00H, 6DH, 00H, 65H, 00H, 6CH, 00H, 20H       ; 86CD _ .m.e.l. 
        db 00H, 34H, 00H, 35H, 00H, 44H, 00H, 42H       ; 86D5 _ .4.5.D.B
        db 00H, 33H, 00H, 32H, 00H, 31H, 00H, 00H       ; 86DD _ .3.2.1..
        db 00H, 45H, 00H, 6FH, 00H, 6EH, 00H, 20H       ; 86E5 _ .E.o.n. 
        db 00H, 4DH, 00H, 32H, 00H, 35H, 00H, 50H       ; 86ED _ .M.2.5.P
        db 00H, 33H, 00H, 32H, 00H, 00H, 00H, 45H       ; 86F5 _ .3.2...E
        db 00H, 6FH, 00H, 6EH, 00H, 20H, 00H, 4DH       ; 86FD _ .o.n. .M
        db 00H, 32H, 00H, 35H, 00H, 50H, 00H, 31H       ; 8705 _ .2.5.P.1
        db 00H, 36H, 00H, 00H, 00H, 57H, 00H, 69H       ; 870D _ .6...W.i
        db 00H, 6EH, 00H, 42H, 00H, 6FH, 00H, 6EH       ; 8715 _ .n.B.o.n
        db 00H, 64H, 00H, 20H, 00H, 32H, 00H, 35H       ; 871D _ .d. .2.5
        db 00H, 58H, 00H, 33H, 00H, 32H, 00H, 00H       ; 8725 _ .X.3.2..
        db 00H, 57H, 00H, 69H, 00H, 6EH, 00H, 62H       ; 872D _ .W.i.n.b
        db 00H, 6FH, 00H, 6EH, 00H, 64H, 00H, 20H       ; 8735 _ .o.n.d. 
        db 00H, 32H, 00H, 35H, 00H, 58H, 00H, 36H       ; 873D _ .2.5.X.6
        db 00H, 34H, 00H, 00H, 00H, 4EH, 00H, 75H       ; 8745 _ .4...N.u
        db 00H, 6DH, 00H, 6FH, 00H, 6EH, 00H, 79H       ; 874D _ .m.o.n.y
        db 00H, 78H, 00H, 20H, 00H, 4EH, 00H, 32H       ; 8755 _ .x. .N.2
        db 00H, 35H, 00H, 51H, 00H, 30H, 00H, 36H       ; 875D _ .5.Q.0.6
        db 00H, 34H, 00H, 00H, 00H, 00H, 00H            ; 8765 _ .4.....

?_488   LABEL NEAR
        push    rbx                                     ; 876C _ 53
; Note: Zero displacement could be omitted
        add     byte ptr [rax], dl                      ; 876D _ 00. 50, 00
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [r9], sil                      ; 8770 _ 49: 00. 31
        add     byte ptr [rcx], dh                      ; 8773 _ 00. 31
        add     byte ptr [rdx], bh                      ; 8775 _ 00. 3A
; Note: Zero displacement could be omitted
        add     byte ptr [rbx], dl                      ; 8777 _ 00. 53, 00
        push    rax                                     ; 877A _ 50
; Note: Zero displacement could be omitted
        add     byte ptr [rcx], cl                      ; 877B _ 00. 49, 00
        and     byte ptr [rax], al                      ; 877E _ 20. 00
        jo      Unnamed_1_8542                          ; 8780 _ 70, 00
Unnamed_1_8542:
        jc      Unnamed_1_8544                          ; 8782 _ 72, 00
Unnamed_1_8544:
        outsd                                           ; 8784 _ 6F
        add     byte ptr [rax+rax+6FH], dh              ; 8785 _ 00. 74 00, 6F
; Note: Zero displacement could be omitted
        add     byte ptr [rbx], ah                      ; 8789 _ 00. 63, 00
        outsd                                           ; 878C _ 6F
        add     byte ptr [rax+rax+20H], ch              ; 878D _ 00. 6C 00, 20
; Note: Zero displacement could be omitted
        add     byte ptr [rsi], ch                      ; 8791 _ 00. 6E, 00
        outsd                                           ; 8794 _ 6F
        add     byte ptr [rax+rax+20H], dh              ; 8795 _ 00. 74 00, 20
; Note: Zero displacement could be omitted
        add     byte ptr [rsi], ah                      ; 8799 _ 00. 66, 00
        outsd                                           ; 879C _ 6F
        add     byte ptr [rbp], dh                      ; 879D _ 00. 75, 00
        outsb                                           ; 87A0 _ 6E
        add     byte ptr [rax+rax+21H], ah              ; 87A1 _ 00. 64 00, 21
        add     byte ptr [rdx], cl                      ; 87A5 _ 00. 0A
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 87A7 _ 00. 00
        db 00H, 00H
; Note: Zero displacement could be omitted
; Warning: Label out of phase with instruction. Possibly spurious
; ?_489; Misplaced symbol at address 0000856A
;       add     byte ptr [rbx], dl                      ; 87A9 _ 00. 53, 00
        db 00H, 53H, 00H

?_489   LABEL NEAR
        push    rbx                                     ; 87AA _ 53
; Note: Zero displacement could be omitted
        add     byte ptr [rax], dl                      ; 87AB _ 00. 50, 00
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [r9], sil                      ; 87AE _ 49: 00. 31
        add     byte ptr [rcx], dh                      ; 87B1 _ 00. 31
        add     byte ptr [rdx], bh                      ; 87B3 _ 00. 3A
; Note: Zero displacement could be omitted
        add     byte ptr [rbx], al                      ; 87B5 _ 00. 43, 00
        outsd                                           ; 87B8 _ 6F
; Note: Zero displacement could be omitted
        add     byte ptr [rsi], ch                      ; 87B9 _ 00. 6E, 00
; Note: Zero displacement could be omitted
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [rcx], ch                      ; 87BC _ 66: 00. 69, 00
; Note: Address size prefix should be avoided
        add     byte ptr [eax], ah                      ; 87C0 _ 67: 00. 20
; Note: Zero displacement could be omitted
        add     byte ptr [rsi], ah                      ; 87C3 _ 00. 66, 00
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 87C6 _ 61
        db 61H
; Note: Zero displacement could be omitted
;       add     byte ptr [rcx], ch                      ; 87C7 _ 00. 69, 00
        db 00H, 69H, 00H
;       insb                                            ; 87CA _ 6C
        db 6CH
;       add     byte ptr [rbp], dh                      ; 87CB _ 00. 75, 00
        db 00H, 75H, 00H
;       jc      90H                                     ; 87CE _ 72, 00
        db 72H, 00H
;       add     byte ptr gs:[rax], ah                   ; 87D0 _ 65: 00. 20
        db 65H, 00H, 20H
; Note: Absolute memory address without relocation
;       add     byte ptr DS:[2100F9D9H], ah             ; 87D3 _ 00. 25, 21007200
        db 00H, 25H, 00H, 72H, 00H, 21H
;       add     byte ptr [rdx], cl                      ; 87D9 _ 00. 0A
        db 00H, 0AH
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 87DB _ 00. 00

        db 00H, 00H, 00H                                ; 87DB _ ...

?_490   LABEL NEAR
        push    rbx                                     ; 87DE _ 53
; Note: Zero displacement could be omitted
        add     byte ptr [rax], dl                      ; 87DF _ 00. 50, 00
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [r9], sil                      ; 87E2 _ 49: 00. 31
        add     byte ptr [rcx], dh                      ; 87E5 _ 00. 31
        add     byte ptr [rdx], bh                      ; 87E7 _ 00. 3A
        add     byte ptr [rbp], al                      ; 87E9 _ 00. 45, 00
        jc      Unnamed_1_85AE                          ; 87EC _ 72, 00
Unnamed_1_85AE:
        jc      Unnamed_1_85B0                          ; 87EE _ 72, 00
Unnamed_1_85B0:
        outsd                                           ; 87F0 _ 6F
; Note: Zero displacement could be omitted
        add     byte ptr [rdx], dh                      ; 87F1 _ 00. 72, 00
        and     byte ptr [rax], al                      ; 87F4 _ 20. 00
        jc      Unnamed_1_85B8                          ; 87F6 _ 72, 00
Unnamed_1_85B8:
; Note: Zero displacement could be omitted
        add     byte ptr gs:[rcx], ah                   ; 87F8 _ 65: 00. 61, 00
; Note: Zero displacement could be omitted
        add     byte ptr fs:[rcx], ch                   ; 87FC _ 64: 00. 69, 00
        outsb                                           ; 8800 _ 6E
; Note: Zero displacement could be omitted
        add     byte ptr [rdi], ah                      ; 8801 _ 00. 67, 00
        and     byte ptr [rax], al                      ; 8804 _ 20. 00
        add     byte ptr fs:[rbp], ah                   ; 8806 _ 64: 00. 65, 00
        jbe     Unnamed_1_85CC                          ; 880A _ 76, 00
Unnamed_1_85CC:
        imul    eax, dword ptr [rax], 6619235           ; 880C _ 69. 00, 00650063
        and     byte ptr [rax], al                      ; 8812 _ 20. 00
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [r8+rax+21H], al               ; 8814 _ 49: 00. 44 00, 21
        add     byte ptr [rdx], cl                      ; 8819 _ 00. 0A
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 881B _ 00. 00
        db 00H, 00H
; Note: Zero displacement could be omitted
; Warning: Label out of phase with instruction. Possibly spurious
; ?_491; Misplaced symbol at address 000085DE
;       add     byte ptr [rbx], dl                      ; 881D _ 00. 53, 00
        db 00H, 53H, 00H

?_491   LABEL NEAR
        push    rbx                                     ; 881E _ 53
; Note: Zero displacement could be omitted
        add     byte ptr [rax], dl                      ; 881F _ 00. 50, 00
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [r9], sil                      ; 8822 _ 49: 00. 31
        add     byte ptr [rcx], dh                      ; 8825 _ 00. 31
        add     byte ptr [rdx], bh                      ; 8827 _ 00. 3A
        add     byte ptr [rax+rax+65H], al              ; 8829 _ 00. 44 00, 65
; Note: Zero displacement could be omitted
        add     byte ptr [rsi], dh                      ; 882D _ 00. 76, 00
        imul    eax, dword ptr [rax], 6619235           ; 8830 _ 69. 00, 00650063
        and     byte ptr [rax], al                      ; 8836 _ 20. 00
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [r8+rax+20H], al               ; 8838 _ 49: 00. 44 00, 20
; Note: Zero displacement could be omitted
        add     byte ptr [rsi], ch                      ; 883D _ 00. 6E, 00
        outsd                                           ; 8840 _ 6F
        add     byte ptr [rax+rax+20H], dh              ; 8841 _ 00. 74 00, 20
; Note: Zero displacement could be omitted
        add     byte ptr [rcx], ch                      ; 8845 _ 00. 69, 00
        outsb                                           ; 8848 _ 6E
        add     byte ptr [rax], ah                      ; 8849 _ 00. 20
        add     byte ptr [rax+rax+69H], ch              ; 884B _ 00. 6C 00, 69
; Note: Zero displacement could be omitted
        add     byte ptr [rbx], dh                      ; 884F _ 00. 73, 00
        jz      Unnamed_1_8614                          ; 8852 _ 74, 00
Unnamed_1_8614:
        and     byte ptr [rax], al                      ; 8854 _ 20. 00
        cmp     al, 0                                   ; 8856 _ 3C, 00
        xor     byte ptr [rax], al                      ; 8858 _ 30. 00
        js      Unnamed_1_861C                          ; 885A _ 78, 00
Unnamed_1_861C:
        and     eax, 34003000H                          ; 885C _ 25, 34003000
; Note: Zero displacement could be omitted
        add     byte ptr [rax], bh                      ; 8861 _ 00. 78, 00
; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr ds:[rcx], ah                   ; 8864 _ 3E: 00. 21
        add     byte ptr [rdx], cl                      ; 8867 _ 00. 0A
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 8869 _ 00. 00
        db 00H, 00H
; Warning: Label out of phase with instruction. Possibly spurious
; ?_492; Misplaced symbol at address 0000862C
;       add     byte ptr [rax+65H], cl                  ; 886B _ 00. 48, 65
        db 00H, 48H, 65H

?_492   LABEL NEAR
; Error: Prefix after REX prefix not allowed
; Error: This instruction is not allowed in 64 bit mode
; Note: Prefix bit or byte has no meaning in this context
;       popad                                           ; 886C _ 48 65: 61
        db 48H, 65H, 61H
; Warning: Label out of phase with instruction. Possibly spurious
; ?_493; Misplaced symbol at address 00008631
;       add     byte ptr fs:[rbp+69H], cl               ; 886F _ 64: 00. 4D, 69
        db 64H, 00H, 4DH, 69H

?_493   LABEL NEAR
        imul    r13, qword ptr [r14+56H], 1769173605    ; 8871 _ 4D: 69. 6E, 56, 69737265
        outsd                                           ; 8879 _ 6F
        outsb                                           ; 887A _ 6E
; Warning: Label out of phase with instruction. Possibly spurious
; ?_494; Misplaced symbol at address 0000863C
        add     byte ptr [rsi+75H], cl                  ; 887B _ 00. 4E, 75
        insd                                            ; 887E _ 6D
; Error: Prefix after REX prefix not allowed
; Note: Prefix bit or byte has no meaning in this context
; Note: Contradicting prefixes
; Note: Non-default size for stack operation
;       push    r13w                                    ; 887F _ 4F 66: 55
        db 4FH, 66H, 55H
;       jo      0A8H                                    ; 8882 _ 70, 64
        db 70H, 64H
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 8884 _ 61
        db 61H
;       jz      0ACH                                    ; 8885 _ 74, 65
        db 74H, 65H
; Warning: Label out of phase with instruction. Possibly spurious
; ?_495; Misplaced symbol at address 00008648
;       add     byte ptr [rbp+70H], dl                  ; 8887 _ 00. 55, 70
        db 00H, 55H, 70H

?_495   LABEL NEAR
        push    rbp                                     ; 8888 _ 55
        jo      Unnamed_1_86AF                          ; 8889 _ 70, 64
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 888B _ 61
        db 61H
;       jz      0B3H                                    ; 888C _ 74, 65
        db 74H, 65H
; Warning: Label out of phase with instruction. Possibly spurious
; ?_496; Misplaced symbol at address 0000864F
;       add     byte ptr [rbp+70H], dl                  ; 888E _ 00. 55, 70
        db 00H, 55H, 70H

?_496   LABEL NEAR
        push    rbp                                     ; 888F _ 55
        jo      Unnamed_1_86B6                          ; 8890 _ 70, 64
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 8892 _ 61
        db 61H
;       jz      0BAH                                    ; 8893 _ 74, 65
        db 74H, 65H
;       push    rsp                                     ; 8895 _ 54
        db 54H
;       jns     0C8H                                    ; 8896 _ 79, 70
        db 79H, 70H
; Warning: Label out of phase with instruction. Possibly spurious
; ?_497; Misplaced symbol at address 0000865A
;       add     byte ptr gs:[rsi+76H], al               ; 8898 _ 65: 00. 46, 76
        db 65H, 00H, 46H, 76H

?_497   LABEL NEAR
; Note: Prefix bit or byte has no meaning in this context
        DB      46H                                     ; Prefix coded explicitly
        jbe     Unnamed_1_869F                          ; 889A _ 46: 76, 42
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 889D _ 61
        db 61H
;       jnc     0C5H                                    ; 889E _ 73, 65
        db 73H, 65H
; Error: Prefix after REX prefix not allowed
; Note: Same prefix occurs more than once
; Note: Prefix bit or byte has no meaning in this context
;       jc      0CAH                                    ; 88A0 _ 41 64 64: 72, 65
        db 41H, 64H, 64H, 72H, 65H
;       jnc     0DAH                                    ; 88A5 _ 73, 73
        db 73H, 73H
; Warning: Label out of phase with instruction. Possibly spurious
; ?_498; Misplaced symbol at address 00008668
;       add     byte ptr [rsi+69H], al                  ; 88A7 _ 00. 46, 69
        db 00H, 46H, 69H

?_498   LABEL NEAR
        imul    r13d, dword ptr [rbp+r12*2+47H], 6580597; 88A8 _ 46: 69. 6C 65, 47, 00646975

?_499   LABEL NEAR
; Error: Prefix after REX prefix not allowed
; Note: Prefix bit or byte has no meaning in this context
;       outsb                                           ; 88B1 _ 4C 65: 6E
        db 4CH, 65H, 6EH
; Note: Prefix bit or byte has no meaning in this context
;       jz      0DFH                                    ; 88B4 _ 67: 74, 68
        db 67H, 74H, 68H
; Warning: Label out of phase with instruction. Possibly spurious
; ?_500; Misplaced symbol at address 00008678
;       add     byte ptr [rbx+61H], dl                  ; 88B7 _ 00. 53, 61
        db 00H, 53H, 61H

?_500   LABEL NEAR
        push    rbx                                     ; 88B8 _ 53
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 88B9 _ 61
        db 61H
;       jbe     0E1H                                    ; 88BA _ 76, 65
        db 76H, 65H
;       push    rbx                                     ; 88BC _ 53
        db 53H
;       jz      0E0H                                    ; 88BD _ 74, 61
        db 74H, 61H
;       jc      0F5H                                    ; 88BF _ 72, 74
        db 72H, 74H
; Warning: Label out of phase with instruction. Possibly spurious
; ?_501; Misplaced symbol at address 00008682
;       add     byte ptr [rbx+61H], dl                  ; 88C1 _ 00. 53, 61
        db 00H, 53H, 61H

?_501   LABEL NEAR
        push    rbx                                     ; 88C2 _ 53
; Error: This instruction is not allowed in 64 bit mode
;       popad                                           ; 88C3 _ 61
        db 61H
;       jbe     0EBH                                    ; 88C4 _ 76, 65
        db 76H, 65H
;       push    rbx                                     ; 88C6 _ 53
        db 53H
; Warning: Label out of phase with instruction. Possibly spurious
; ?_502; Misplaced symbol at address 0000868B
;       imul    edi, dword ptr [rdx+65H], 1919243776    ; 88C7 _ 69. 7A, 65, 72655600
        db 69H, 7AH, 65H, 00H, 56H, 65H, 72H

?_502   LABEL NEAR
        push    rsi                                     ; 88CB _ 56
; Note: Unrecognized branch hint prefix
        DB      65H                                     ; Prefix coded explicitly
        jc      Unnamed_1_8702                          ; 88CC _ 65: 72, 73
        imul    ebp, dword ptr [rdi+6EH], 1701603654    ; 88CF _ 69. 6F, 6E, 656C6946
; Note: Prefix bit or byte has no meaning in this context
        DB      47H                                     ; Prefix coded explicitly
        jnz     Unnamed_1_8702                          ; 88D6 _ 47: 75, 69
; Error: This is unlikely to be code
;       add     byte ptr fs:[rax], al                   ; 88D9 _ 64: 00. 00
        db 64H, 00H, 00H
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 88DC _ 00. 00

        db 00H, 00H, 00H                                ; 88DC _ ...
Unnamed_1_869F:
        add     byte ptr [rax+rax], dl                  ; 88DF _ 00. 14 00
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 88E2 _ 00. 00
        db 00H, 00H
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 88E4 _ 00. 00

        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 88E4 _ .....zR.
        db 01H, 78H, 10H                                ; 88EC _ .x.
Unnamed_1_86AF:
        add     dword ptr [rax], edx                    ; 88EF _ 01. 10
        or      al, 07H                                 ; 88F1 _ 0C, 07
; Warning: Label out of phase with instruction. Possibly spurious
; Unnamed_1_86B6; Misplaced symbol at address 000086B6
        or      byte ptr [rax+1C000001H], dl            ; 88F3 _ 08. 90, 1C000001
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 88F9 _ 00. 00
        db 00H, 00H
;       add     byte ptr [rax+rax], bl                  ; 88FB _ 00. 1C 00
        db 00H, 1CH, 00H
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 88FE _ 00. 00

        db 00H, 00H, 40H, 79H, 0FFH, 0FFH, 0FFH, 0FFH   ; 88FE _ ..@y....
        db 0FFH, 0FFH, 20H, 00H, 00H, 00H, 00H, 00H     ; 8906 _ .. .....
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 890E _ ........
        db 00H, 00H, 14H, 00H, 00H, 00H, 00H, 00H       ; 8916 _ ........
        db 00H, 00H, 01H, 7AH, 52H, 00H, 01H, 78H       ; 891E _ ...zR..x
        db 10H, 01H, 10H, 0CH, 07H, 08H, 90H, 01H       ; 8926 _ ........
        db 00H, 00H, 24H, 00H, 00H, 00H, 1CH, 00H       ; 892E _ ..$.....
        db 00H, 00H, 28H, 79H, 0FFH, 0FFH, 0FFH, 0FFH   ; 8936 _ ..(y....
        db 0FFH, 0FFH, 30H, 00H                         ; 893E _ ..0.
Unnamed_1_8702:
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 8942 _ 00. 00
        db 00H, 00H
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 8944 _ 00. 00

        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 8944 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 894C _ ..C.....
        db 00H, 00H, 00H, 00H, 14H, 00H, 00H, 00H       ; 8954 _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 895C _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 8964 _ .x......
        db 90H, 01H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 896C _ ....,...
        db 1CH, 00H, 00H, 00H, 18H, 79H, 0FFH, 0FFH     ; 8974 _ .....y..
        db 0FFH, 0FFH, 0FFH, 0FFH, 7BH, 00H, 00H, 00H   ; 897C _ ....{...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 8984 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4BH, 83H, 07H       ; 898C _ ..C..K..
        db 85H, 06H, 84H, 05H, 8EH, 04H, 8FH, 03H       ; 8994 _ ........
        db 00H, 00H, 00H, 00H, 14H, 00H, 00H, 00H       ; 899C _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 89A4 _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 89AC _ .x......
        db 90H, 01H, 00H, 00H, 24H, 00H, 00H, 00H       ; 89B4 _ ....$...
        db 1CH, 00H, 00H, 00H, 4BH, 79H, 0FFH, 0FFH     ; 89BC _ ....Ky..
        db 0FFH, 0FFH, 0FFH, 0FFH, 34H, 00H, 00H, 00H   ; 89C4 _ ....4...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 89CC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 89D4 _ ..C.....
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 89DC _ ....$...
        db 44H, 00H, 00H, 00H, 57H, 79H, 0FFH, 0FFH     ; 89E4 _ D...Wy..
        db 0FFH, 0FFH, 0FFH, 0FFH, 55H, 00H, 00H, 00H   ; 89EC _ ....U...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 89F4 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 46H, 85H, 04H       ; 89FC _ ..C..F..
        db 84H, 03H, 00H, 00H, 24H, 00H, 00H, 00H       ; 8A04 _ ....$...
        db 6CH, 00H, 00H, 00H, 84H, 79H, 0FFH, 0FFH     ; 8A0C _ l....y..
        db 0FFH, 0FFH, 0FFH, 0FFH, 5AH, 00H, 00H, 00H   ; 8A14 _ ....Z...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 8A1C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 46H, 85H, 04H       ; 8A24 _ ..C..F..
        db 84H, 03H, 00H, 00H, 14H, 00H, 00H, 00H       ; 8A2C _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 8A34 _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 8A3C _ .x......
        db 90H, 01H, 00H, 00H, 24H, 00H, 00H, 00H       ; 8A44 _ ....$...
        db 1CH, 00H, 00H, 00H, 0A1H, 79H, 0FFH, 0FFH    ; 8A4C _ .....y..
        db 0FFH, 0FFH, 0FFH, 0FFH, 4CH, 00H, 00H, 00H   ; 8A54 _ ....L...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 8A5C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 46H, 85H, 04H       ; 8A64 _ ..C..F..
        db 84H, 03H, 00H, 00H, 14H, 00H, 00H, 00H       ; 8A6C _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 8A74 _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 8A7C _ .x......
        db 90H, 01H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8A84 _ ........
        db 1CH, 00H, 00H, 00H, 0ADH, 79H, 0FFH, 0FFH    ; 8A8C _ .....y..
        db 0FFH, 0FFH, 0FFH, 0FFH, 25H, 00H, 00H, 00H   ; 8A94 _ ....%...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8A9C _ ........
        db 00H, 00H, 00H, 00H, 14H, 00H, 00H, 00H       ; 8AA4 _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 8AAC _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 8AB4 _ .x......
        db 90H, 01H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8ABC _ ........
        db 1CH, 00H, 00H, 00H, 9AH, 79H, 0FFH, 0FFH     ; 8AC4 _ .....y..
        db 0FFH, 0FFH, 0FFH, 0FFH, 5CH, 00H, 00H, 00H   ; 8ACC _ ....\...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8AD4 _ ........
        db 00H, 00H, 00H, 00H, 14H, 00H, 00H, 00H       ; 8ADC _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 8AE4 _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 8AEC _ .x......
        db 90H, 01H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8AF4 _ ........
        db 1CH, 00H, 00H, 00H, 0BEH, 79H, 0FFH, 0FFH    ; 8AFC _ .....y..
        db 0FFH, 0FFH, 0FFH, 0FFH, 21H, 00H, 00H, 00H   ; 8B04 _ ....!...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8B0C _ ........
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8B14 _ ........
        db 3CH, 00H, 00H, 00H, 0BFH, 79H, 0FFH, 0FFH    ; 8B1C _ <....y..
        db 0FFH, 0FFH, 0FFH, 0FFH, 0EFH, 00H, 00H, 00H  ; 8B24 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8B2C _ ........
        db 00H, 00H, 00H, 00H, 14H, 00H, 00H, 00H       ; 8B34 _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 8B3C _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 8B44 _ .x......
        db 90H, 01H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8B4C _ ........
        db 1CH, 00H, 00H, 00H, 76H, 7AH, 0FFH, 0FFH     ; 8B54 _ ....vz..
        db 0FFH, 0FFH, 0FFH, 0FFH, 08H, 00H, 00H, 00H   ; 8B5C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8B64 _ ........
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8B6C _ ........
        db 3CH, 00H, 00H, 00H, 5EH, 7AH, 0FFH, 0FFH     ; 8B74 _ <...^z..
        db 0FFH, 0FFH, 0FFH, 0FFH, 1FH, 00H, 00H, 00H   ; 8B7C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8B84 _ ........
        db 00H, 00H, 00H, 00H, 14H, 00H, 00H, 00H       ; 8B8C _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 8B94 _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 8B9C _ .x......
        db 90H, 01H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 8BA4 _ ....,...
        db 1CH, 00H, 00H, 00H, 45H, 7AH, 0FFH, 0FFH     ; 8BAC _ ....Ez..
        db 0FFH, 0FFH, 0FFH, 0FFH, 40H, 02H, 00H, 00H   ; 8BB4 _ ....@...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 8BBC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4FH, 83H, 09H       ; 8BC4 _ ..C..O..
        db 85H, 08H, 84H, 07H, 8CH, 06H, 8DH, 05H       ; 8BCC _ ........
        db 8EH, 04H, 8FH, 03H, 2CH, 00H, 00H, 00H       ; 8BD4 _ ....,...
        db 4CH, 00H, 00H, 00H, 6CH, 7CH, 0FFH, 0FFH     ; 8BDC _ L...l|..
        db 0FFH, 0FFH, 0FFH, 0FFH, 30H, 01H, 00H, 00H   ; 8BE4 _ ....0...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 8BEC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4FH, 83H, 09H       ; 8BF4 _ ..C..O..
        db 85H, 08H, 84H, 07H, 8CH, 06H, 8DH, 05H       ; 8BFC _ ........
        db 8EH, 04H, 8FH, 03H, 14H, 00H, 00H, 00H       ; 8C04 _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 8C0C _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 8C14 _ .x......
        db 90H, 01H, 00H, 00H, 24H, 00H, 00H, 00H       ; 8C1C _ ....$...
        db 1CH, 00H, 00H, 00H, 54H, 7DH, 0FFH, 0FFH     ; 8C24 _ ....T}..
        db 0FFH, 0FFH, 0FFH, 0FFH, 0A7H, 00H, 00H, 00H  ; 8C2C _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 8C34 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 8C3C _ ..C.....
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8C44 _ ........
        db 44H, 00H, 00H, 00H, 0D3H, 7DH, 0FFH, 0FFH    ; 8C4C _ D....}..
        db 0FFH, 0FFH, 0FFH, 0FFH, 4EH, 00H, 00H, 00H   ; 8C54 _ ....N...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8C5C _ ........
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8C64 _ ........
        db 64H, 00H, 00H, 00H, 01H, 7EH, 0FFH, 0FFH     ; 8C6C _ d....~..
        db 0FFH, 0FFH, 0FFH, 0FFH, 21H, 00H, 00H, 00H   ; 8C74 _ ....!...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8C7C _ ........
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8C84 _ ........
        db 84H, 00H, 00H, 00H, 02H, 7EH, 0FFH, 0FFH     ; 8C8C _ .....~..
        db 0FFH, 0FFH, 0FFH, 0FFH, 36H, 00H, 00H, 00H   ; 8C94 _ ....6...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8C9C _ ........
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8CA4 _ ........
        db 0A4H, 00H, 00H, 00H, 18H, 7EH, 0FFH, 0FFH    ; 8CAC _ .....~..
        db 0FFH, 0FFH, 0FFH, 0FFH, 1EH, 00H, 00H, 00H   ; 8CB4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8CBC _ ........
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8CC4 _ ........
        db 0C4H, 00H, 00H, 00H, 16H, 7EH, 0FFH, 0FFH    ; 8CCC _ .....~..
        db 0FFH, 0FFH, 0FFH, 0FFH, 21H, 00H, 00H, 00H   ; 8CD4 _ ....!...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8CDC _ ........
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8CE4 _ ........
        db 0E4H, 00H, 00H, 00H, 17H, 7EH, 0FFH, 0FFH    ; 8CEC _ .....~..
        db 0FFH, 0FFH, 0FFH, 0FFH, 21H, 00H, 00H, 00H   ; 8CF4 _ ....!...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8CFC _ ........
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8D04 _ ........
        db 04H, 01H, 00H, 00H, 18H, 7EH, 0FFH, 0FFH     ; 8D0C _ .....~..
        db 0FFH, 0FFH, 0FFH, 0FFH, 24H, 00H, 00H, 00H   ; 8D14 _ ....$...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8D1C _ ........
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8D24 _ ........
        db 24H, 01H, 00H, 00H, 1CH, 7EH, 0FFH, 0FFH     ; 8D2C _ $....~..
        db 0FFH, 0FFH, 0FFH, 0FFH, 24H, 00H, 00H, 00H   ; 8D34 _ ....$...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8D3C _ ........
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8D44 _ ........
        db 44H, 01H, 00H, 00H, 20H, 7EH, 0FFH, 0FFH     ; 8D4C _ D... ~..
        db 0FFH, 0FFH, 0FFH, 0FFH, 21H, 00H, 00H, 00H   ; 8D54 _ ....!...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8D5C _ ........
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8D64 _ ........
        db 64H, 01H, 00H, 00H, 21H, 7EH, 0FFH, 0FFH     ; 8D6C _ d...!~..
        db 0FFH, 0FFH, 0FFH, 0FFH, 1EH, 00H, 00H, 00H   ; 8D74 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8D7C _ ........
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8D84 _ ........
        db 84H, 01H, 00H, 00H, 1FH, 7EH, 0FFH, 0FFH     ; 8D8C _ .....~..
        db 0FFH, 0FFH, 0FFH, 0FFH, 21H, 00H, 00H, 00H   ; 8D94 _ ....!...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8D9C _ ........
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8DA4 _ ........
        db 0A4H, 01H, 00H, 00H, 20H, 7EH, 0FFH, 0FFH    ; 8DAC _ .... ~..
        db 0FFH, 0FFH, 0FFH, 0FFH, 1EH, 00H, 00H, 00H   ; 8DB4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8DBC _ ........
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 8DC4 _ ....$...
        db 0C4H, 01H, 00H, 00H, 1EH, 7EH, 0FFH, 0FFH    ; 8DCC _ .....~..
        db 0FFH, 0FFH, 0FFH, 0FFH, 4AH, 00H, 00H, 00H   ; 8DD4 _ ....J...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 8DDC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 8DE4 _ ..C.....
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8DEC _ ........
        db 0ECH, 01H, 00H, 00H, 40H, 7EH, 0FFH, 0FFH    ; 8DF4 _ ....@~..
        db 0FFH, 0FFH, 0FFH, 0FFH, 33H, 00H, 00H, 00H   ; 8DFC _ ....3...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8E04 _ ........
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 8E0C _ ....$...
        db 0CH, 02H, 00H, 00H, 53H, 7EH, 0FFH, 0FFH     ; 8E14 _ ....S~..
        db 0FFH, 0FFH, 0FFH, 0FFH, 6DH, 00H, 00H, 00H   ; 8E1C _ ....m...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 8E24 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 47H, 83H, 05H       ; 8E2C _ ..C..G..
        db 85H, 04H, 84H, 03H, 2CH, 00H, 00H, 00H       ; 8E34 _ ....,...
        db 34H, 02H, 00H, 00H, 98H, 7EH, 0FFH, 0FFH     ; 8E3C _ 4....~..
        db 0FFH, 0FFH, 0FFH, 0FFH, 7BH, 00H, 00H, 00H   ; 8E44 _ ....{...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 8E4C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 49H, 83H, 06H       ; 8E54 _ ..C..I..
        db 85H, 05H, 84H, 04H, 8EH, 03H, 00H, 00H       ; 8E5C _ ........
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8E64 _ ........
        db 64H, 02H, 00H, 00H, 0E3H, 7EH, 0FFH, 0FFH    ; 8E6C _ d....~..
        db 0FFH, 0FFH, 0FFH, 0FFH, 21H, 00H, 00H, 00H   ; 8E74 _ ....!...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8E7C _ ........
        db 00H, 00H, 00H, 00H, 14H, 00H, 00H, 00H       ; 8E84 _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 8E8C _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 8E94 _ .x......
        db 90H, 01H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 8E9C _ ....,...
        db 1CH, 00H, 00H, 00H, 0CCH, 7EH, 0FFH, 0FFH    ; 8EA4 _ .....~..
        db 0FFH, 0FFH, 0FFH, 0FFH, 61H, 00H, 00H, 00H   ; 8EAC _ ....a...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 8EB4 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4BH, 83H, 07H       ; 8EBC _ ..C..K..
        db 85H, 06H, 84H, 05H, 8EH, 04H, 8FH, 03H       ; 8EC4 _ ........
        db 00H, 00H, 00H, 00H, 14H, 00H, 00H, 00H       ; 8ECC _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 8ED4 _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 8EDC _ .x......
        db 90H, 01H, 00H, 00H, 24H, 00H, 00H, 00H       ; 8EE4 _ ....$...
        db 1CH, 00H, 00H, 00H, 0E5H, 7EH, 0FFH, 0FFH    ; 8EEC _ .....~..
        db 0FFH, 0FFH, 0FFH, 0FFH, 68H, 00H, 00H, 00H   ; 8EF4 _ ....h...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 8EFC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 48H, 84H, 03H       ; 8F04 _ ..C..H..
        db 00H, 00H, 00H, 00H, 14H, 00H, 00H, 00H       ; 8F0C _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 8F14 _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 8F1C _ .x......
        db 90H, 01H, 00H, 00H, 24H, 00H, 00H, 00H       ; 8F24 _ ....$...
        db 1CH, 00H, 00H, 00H, 10H, 7FH, 0FFH, 0FFH     ; 8F2C _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 71H, 02H, 00H, 00H   ; 8F34 _ ....q...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 8F3C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 8F44 _ ..C.....
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 8F4C _ ....$...
        db 44H, 00H, 00H, 00H, 68H, 81H, 0FFH, 0FFH     ; 8F54 _ D...h...
        db 0FFH, 0FFH, 0FFH, 0FFH, 25H, 08H, 00H, 00H   ; 8F5C _ ....%...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 8F64 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 8F6C _ ..C.....
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 8F74 _ ....$...
        db 6CH, 00H, 00H, 00H, 70H, 89H, 0FFH, 0FFH     ; 8F7C _ l...p...
        db 0FFH, 0FFH, 0FFH, 0FFH, 07H, 04H, 00H, 00H   ; 8F84 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 8F8C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 49H, 83H, 04H       ; 8F94 _ ..C..I..
        db 84H, 03H, 00H, 00H, 24H, 00H, 00H, 00H       ; 8F9C _ ....$...
        db 94H, 00H, 00H, 00H, 58H, 8DH, 0FFH, 0FFH     ; 8FA4 _ ....X...
        db 0FFH, 0FFH, 0FFH, 0FFH, 81H, 00H, 00H, 00H   ; 8FAC _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 8FB4 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 8FBC _ ..C.....
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 8FC4 _ ....$...
        db 0BCH, 00H, 00H, 00H, 0C0H, 8DH, 0FFH, 0FFH   ; 8FCC _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 0BFH, 00H, 00H, 00H  ; 8FD4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 8FDC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 8FE4 _ ..C.....
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 8FEC _ ....$...
        db 0E4H, 00H, 00H, 00H, 58H, 8EH, 0FFH, 0FFH    ; 8FF4 _ ....X...
        db 0FFH, 0FFH, 0FFH, 0FFH, 34H, 01H, 00H, 00H   ; 8FFC _ ....4...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9004 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 900C _ ..C.....
        db 00H, 00H, 00H, 00H, 14H, 00H, 00H, 00H       ; 9014 _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 901C _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 9024 _ .x......
        db 90H, 01H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 902C _ ....,...
        db 1CH, 00H, 00H, 00H, 4CH, 8FH, 0FFH, 0FFH     ; 9034 _ ....L...
        db 0FFH, 0FFH, 0FFH, 0FFH, 0F1H, 02H, 00H, 00H  ; 903C _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9044 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4FH, 83H, 09H       ; 904C _ ..C..O..
        db 85H, 08H, 84H, 07H, 8CH, 06H, 8DH, 05H       ; 9054 _ ........
        db 8EH, 04H, 8FH, 03H, 2CH, 00H, 00H, 00H       ; 905C _ ....,...
        db 4CH, 00H, 00H, 00H, 0DH, 92H, 0FFH, 0FFH     ; 9064 _ L.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 8FH, 04H, 00H, 00H   ; 906C _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9074 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 52H, 83H, 09H       ; 907C _ ..C..R..
        db 85H, 08H, 84H, 07H, 8CH, 06H, 8DH, 05H       ; 9084 _ ........
        db 8EH, 04H, 8FH, 03H, 2CH, 00H, 00H, 00H       ; 908C _ ....,...
        db 7CH, 00H, 00H, 00H, 6CH, 96H, 0FFH, 0FFH     ; 9094 _ |...l...
        db 0FFH, 0FFH, 0FFH, 0FFH, 1AH, 01H, 00H, 00H   ; 909C _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 90A4 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4BH, 83H, 07H       ; 90AC _ ..C..K..
        db 85H, 06H, 84H, 05H, 8EH, 04H, 8FH, 03H       ; 90B4 _ ........
        db 00H, 00H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 90BC _ ....,...
        db 0ACH, 00H, 00H, 00H, 56H, 97H, 0FFH, 0FFH    ; 90C4 _ ....V...
        db 0FFH, 0FFH, 0FFH, 0FFH, 0C2H, 02H, 00H, 00H  ; 90CC _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 90D4 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4FH, 83H, 09H       ; 90DC _ ..C..O..
        db 85H, 08H, 84H, 07H, 8CH, 06H, 8DH, 05H       ; 90E4 _ ........
        db 8EH, 04H, 8FH, 03H, 2CH, 00H, 00H, 00H       ; 90EC _ ....,...
        db 0DCH, 00H, 00H, 00H, 01H, 9AH, 0FFH, 0FFH    ; 90F4 _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 2CH, 04H, 00H, 00H   ; 90FC _ ....,...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9104 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4CH, 83H, 06H       ; 910C _ ..C..L..
        db 85H, 05H, 84H, 04H, 8EH, 03H, 00H, 00H       ; 9114 _ ........
        db 00H, 00H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 911C _ ....,...
        db 0CH, 01H, 00H, 00H, 0FDH, 9DH, 0FFH, 0FFH    ; 9124 _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 0EH, 01H, 00H, 00H   ; 912C _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9134 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4DH, 83H, 08H       ; 913C _ ..C..M..
        db 85H, 07H, 84H, 06H, 8CH, 05H, 8EH, 04H       ; 9144 _ ........
        db 8FH, 03H, 00H, 00H, 14H, 00H, 00H, 00H       ; 914C _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 9154 _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 915C _ .x......
        db 90H, 01H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 9164 _ ....,...
        db 1CH, 00H, 00H, 00H, 0C3H, 9EH, 0FFH, 0FFH    ; 916C _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 68H, 00H, 00H, 00H   ; 9174 _ ....h...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 917C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 49H, 83H, 06H       ; 9184 _ ..C..I..
        db 85H, 05H, 84H, 04H, 8EH, 03H, 00H, 00H       ; 918C _ ........
        db 00H, 00H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 9194 _ ....,...
        db 4CH, 00H, 00H, 00H, 0FBH, 9EH, 0FFH, 0FFH    ; 919C _ L.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 0D7H, 00H, 00H, 00H  ; 91A4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 91AC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4FH, 83H, 09H       ; 91B4 _ ..C..O..
        db 85H, 08H, 84H, 07H, 8CH, 06H, 8DH, 05H       ; 91BC _ ........
        db 8EH, 04H, 8FH, 03H, 2CH, 00H, 00H, 00H       ; 91C4 _ ....,...
        db 7CH, 00H, 00H, 00H, 0A2H, 9FH, 0FFH, 0FFH    ; 91CC _ |.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 0D1H, 01H, 00H, 00H  ; 91D4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 91DC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4FH, 83H, 09H       ; 91E4 _ ..C..O..
        db 85H, 08H, 84H, 07H, 8CH, 06H, 8DH, 05H       ; 91EC _ ........
        db 8EH, 04H, 8FH, 03H, 2CH, 00H, 00H, 00H       ; 91F4 _ ....,...
        db 0ACH, 00H, 00H, 00H, 43H, 0A1H, 0FFH, 0FFH   ; 91FC _ ....C...
        db 0FFH, 0FFH, 0FFH, 0FFH, 6EH, 02H, 00H, 00H   ; 9204 _ ....n...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 920C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 52H, 83H, 09H       ; 9214 _ ..C..R..
        db 85H, 08H, 84H, 07H, 8CH, 06H, 8DH, 05H       ; 921C _ ........
        db 8EH, 04H, 8FH, 03H, 2CH, 00H, 00H, 00H       ; 9224 _ ....,...
        db 0DCH, 00H, 00H, 00H, 81H, 0A3H, 0FFH, 0FFH   ; 922C _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 0C8H, 00H, 00H, 00H  ; 9234 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 923C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4FH, 83H, 09H       ; 9244 _ ..C..O..
        db 85H, 08H, 84H, 07H, 8CH, 06H, 8DH, 05H       ; 924C _ ........
        db 8EH, 04H, 8FH, 03H, 2CH, 00H, 00H, 00H       ; 9254 _ ....,...
        db 0CH, 01H, 00H, 00H, 19H, 0A4H, 0FFH, 0FFH    ; 925C _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 20H, 01H, 00H, 00H   ; 9264 _ .... ...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 926C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4DH, 83H, 08H       ; 9274 _ ..C..M..
        db 85H, 07H, 84H, 06H, 8CH, 05H, 8EH, 04H       ; 927C _ ........
        db 8FH, 03H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9284 _ ....$...
        db 3CH, 01H, 00H, 00H, 09H, 0A5H, 0FFH, 0FFH    ; 928C _ <.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 9BH, 00H, 00H, 00H   ; 9294 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 929C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 47H, 83H, 05H       ; 92A4 _ ..C..G..
        db 85H, 04H, 84H, 03H, 2CH, 00H, 00H, 00H       ; 92AC _ ....,...
        db 64H, 01H, 00H, 00H, 7CH, 0A5H, 0FFH, 0FFH    ; 92B4 _ d...|...
        db 0FFH, 0FFH, 0FFH, 0FFH, 0DAH, 06H, 00H, 00H  ; 92BC _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 92C4 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 52H, 83H, 09H       ; 92CC _ ..C..R..
        db 85H, 08H, 84H, 07H, 8CH, 06H, 8DH, 05H       ; 92D4 _ ........
        db 8EH, 04H, 8FH, 03H, 2CH, 00H, 00H, 00H       ; 92DC _ ....,...
        db 94H, 01H, 00H, 00H, 26H, 0ACH, 0FFH, 0FFH    ; 92E4 _ ....&...
        db 0FFH, 0FFH, 0FFH, 0FFH, 0E6H, 01H, 00H, 00H  ; 92EC _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 92F4 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4FH, 83H, 09H       ; 92FC _ ..C..O..
        db 85H, 08H, 84H, 07H, 8CH, 06H, 8DH, 05H       ; 9304 _ ........
        db 8EH, 04H, 8FH, 03H, 14H, 00H, 00H, 00H       ; 930C _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 9314 _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 931C _ .x......
        db 90H, 01H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 9324 _ ........
        db 1CH, 00H, 00H, 00H, 0C4H, 0ADH, 0FFH, 0FFH   ; 932C _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 2EH, 00H, 00H, 00H   ; 9334 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 933C _ ........
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9344 _ ....$...
        db 3CH, 00H, 00H, 00H, 0D2H, 0ADH, 0FFH, 0FFH   ; 934C _ <.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 0BEH, 00H, 00H, 00H  ; 9354 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 935C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 45H, 83H, 03H       ; 9364 _ ..C..E..
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 936C _ ....$...
        db 64H, 00H, 00H, 00H, 68H, 0AEH, 0FFH, 0FFH    ; 9374 _ d...h...
        db 0FFH, 0FFH, 0FFH, 0FFH, 72H, 00H, 00H, 00H   ; 937C _ ....r...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9384 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 47H, 83H, 05H       ; 938C _ ..C..G..
        db 85H, 04H, 84H, 03H, 24H, 00H, 00H, 00H       ; 9394 _ ....$...
        db 8CH, 00H, 00H, 00H, 0B2H, 0AEH, 0FFH, 0FFH   ; 939C _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 6BH, 00H, 00H, 00H   ; 93A4 _ ....k...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 93AC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 45H, 84H, 03H       ; 93B4 _ ..C..E..
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 93BC _ ....$...
        db 0B4H, 00H, 00H, 00H, 0F5H, 0AEH, 0FFH, 0FFH  ; 93C4 _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 4BH, 00H, 00H, 00H   ; 93CC _ ....K...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 93D4 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 93DC _ ..C.....
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 93E4 _ ....$...
        db 0DCH, 00H, 00H, 00H, 18H, 0AFH, 0FFH, 0FFH   ; 93EC _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 79H, 00H, 00H, 00H   ; 93F4 _ ....y...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 93FC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 45H, 84H, 03H       ; 9404 _ ..C..E..
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 940C _ ....$...
        db 04H, 01H, 00H, 00H, 69H, 0AFH, 0FFH, 0FFH    ; 9414 _ ....i...
        db 0FFH, 0FFH, 0FFH, 0FFH, 38H, 00H, 00H, 00H   ; 941C _ ....8...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9424 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 942C _ ..C.....
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9434 _ ....$...
        db 2CH, 01H, 00H, 00H, 79H, 0AFH, 0FFH, 0FFH    ; 943C _ ,...y...
        db 0FFH, 0FFH, 0FFH, 0FFH, 3BH, 00H, 00H, 00H   ; 9444 _ ....;...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 944C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 9454 _ ..C.....
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 945C _ ....$...
        db 54H, 01H, 00H, 00H, 8CH, 0AFH, 0FFH, 0FFH    ; 9464 _ T.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 50H, 00H, 00H, 00H   ; 946C _ ....P...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9474 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 46H, 85H, 04H       ; 947C _ ..C..F..
        db 84H, 03H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9484 _ ....$...
        db 7CH, 01H, 00H, 00H, 0B4H, 0AFH, 0FFH, 0FFH   ; 948C _ |.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 0C5H, 00H, 00H, 00H  ; 9494 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 949C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 47H, 83H, 05H       ; 94A4 _ ..C..G..
        db 85H, 04H, 84H, 03H, 2CH, 00H, 00H, 00H       ; 94AC _ ....,...
        db 0A4H, 01H, 00H, 00H, 51H, 0B0H, 0FFH, 0FFH   ; 94B4 _ ....Q...
        db 0FFH, 0FFH, 0FFH, 0FFH, 0B8H, 00H, 00H, 00H  ; 94BC _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 94C4 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4FH, 83H, 09H       ; 94CC _ ..C..O..
        db 85H, 08H, 84H, 07H, 8CH, 06H, 8DH, 05H       ; 94D4 _ ........
        db 8EH, 04H, 8FH, 03H, 2CH, 00H, 00H, 00H       ; 94DC _ ....,...
        db 0D4H, 01H, 00H, 00H, 0D9H, 0B0H, 0FFH, 0FFH  ; 94E4 _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 0F7H, 00H, 00H, 00H  ; 94EC _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 94F4 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4FH, 83H, 09H       ; 94FC _ ..C..O..
        db 85H, 08H, 84H, 07H, 8CH, 06H, 8DH, 05H       ; 9504 _ ........
        db 8EH, 04H, 8FH, 03H, 24H, 00H, 00H, 00H       ; 950C _ ....$...
        db 04H, 02H, 00H, 00H, 0A0H, 0B1H, 0FFH, 0FFH   ; 9514 _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 0B6H, 00H, 00H, 00H  ; 951C _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9524 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 47H, 83H, 05H       ; 952C _ ..C..G..
        db 85H, 04H, 84H, 03H, 24H, 00H, 00H, 00H       ; 9534 _ ....$...
        db 2CH, 02H, 00H, 00H, 2EH, 0B2H, 0FFH, 0FFH    ; 953C _ ,.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 64H, 00H, 00H, 00H   ; 9544 _ ....d...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 954C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 45H, 84H, 03H       ; 9554 _ ..C..E..
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 955C _ ....$...
        db 54H, 02H, 00H, 00H, 6AH, 0B2H, 0FFH, 0FFH    ; 9564 _ T...j...
        db 0FFH, 0FFH, 0FFH, 0FFH, 48H, 00H, 00H, 00H   ; 956C _ ....H...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9574 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 45H, 84H, 03H       ; 957C _ ..C..E..
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9584 _ ....$...
        db 7CH, 02H, 00H, 00H, 8AH, 0B2H, 0FFH, 0FFH    ; 958C _ |.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 70H, 00H, 00H, 00H   ; 9594 _ ....p...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 959C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 95A4 _ ..C.....
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 95AC _ ....$...
        db 0A4H, 02H, 00H, 00H, 0D2H, 0B2H, 0FFH, 0FFH  ; 95B4 _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 57H, 00H, 00H, 00H   ; 95BC _ ....W...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 95C4 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 95CC _ ..C.....
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 95D4 _ ....$...
        db 0CCH, 02H, 00H, 00H, 01H, 0B3H, 0FFH, 0FFH   ; 95DC _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 64H, 00H, 00H, 00H   ; 95E4 _ ....d...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 95EC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 46H, 85H, 04H       ; 95F4 _ ..C..F..
        db 84H, 03H, 00H, 00H, 24H, 00H, 00H, 00H       ; 95FC _ ....$...
        db 0F4H, 02H, 00H, 00H, 3DH, 0B3H, 0FFH, 0FFH   ; 9604 _ ....=...
        db 0FFH, 0FFH, 0FFH, 0FFH, 22H, 00H, 00H, 00H   ; 960C _ ...."...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9614 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 961C _ ..C.....
        db 00H, 00H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 9624 _ ....,...
        db 1CH, 03H, 00H, 00H, 37H, 0B3H, 0FFH, 0FFH    ; 962C _ ....7...
        db 0FFH, 0FFH, 0FFH, 0FFH, 7EH, 01H, 00H, 00H   ; 9634 _ ....~...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 963C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4BH, 83H, 07H       ; 9644 _ ..C..K..
        db 85H, 06H, 84H, 05H, 8EH, 04H, 8FH, 03H       ; 964C _ ........
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9654 _ ....$...
        db 4CH, 03H, 00H, 00H, 85H, 0B4H, 0FFH, 0FFH    ; 965C _ L.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 7CH, 00H, 00H, 00H   ; 9664 _ ....|...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 966C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 9674 _ ..C.....
        db 00H, 00H, 00H, 00H, 14H, 00H, 00H, 00H       ; 967C _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 9684 _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 968C _ .x......
        db 90H, 01H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 9694 _ ....,...
        db 1CH, 00H, 00H, 00H, 0C1H, 0B4H, 0FFH, 0FFH   ; 969C _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 0ADH, 00H, 00H, 00H  ; 96A4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 96AC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 49H, 83H, 06H       ; 96B4 _ ..C..I..
        db 85H, 05H, 84H, 04H, 8EH, 03H, 00H, 00H       ; 96BC _ ........
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 96C4 _ ........
        db 4CH, 00H, 00H, 00H, 3EH, 0B5H, 0FFH, 0FFH    ; 96CC _ L...>...
        db 0FFH, 0FFH, 0FFH, 0FFH, 0ABH, 00H, 00H, 00H  ; 96D4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 96DC _ .....A..
        db 84H, 02H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 96E4 _ ....,...
        db 6CH, 00H, 00H, 00H, 0C9H, 0B5H, 0FFH, 0FFH   ; 96EC _ l.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 81H, 00H, 00H, 00H   ; 96F4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 96FC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 49H, 83H, 06H       ; 9704 _ ..C..I..
        db 85H, 05H, 84H, 04H, 8EH, 03H, 00H, 00H       ; 970C _ ........
        db 00H, 00H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 9714 _ ....,...
        db 9CH, 00H, 00H, 00H, 1AH, 0B6H, 0FFH, 0FFH    ; 971C _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 0D7H, 00H, 00H, 00H  ; 9724 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 972C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 49H, 83H, 06H       ; 9734 _ ..C..I..
        db 85H, 05H, 84H, 04H, 8EH, 03H, 00H, 00H       ; 973C _ ........
        db 00H, 00H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 9744 _ ....,...
        db 0CCH, 00H, 00H, 00H, 0C1H, 0B6H, 0FFH, 0FFH  ; 974C _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 0BDH, 01H, 00H, 00H  ; 9754 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 975C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4FH, 83H, 09H       ; 9764 _ ..C..O..
        db 85H, 08H, 84H, 07H, 8CH, 06H, 8DH, 05H       ; 976C _ ........
        db 8EH, 04H, 8FH, 03H, 24H, 00H, 00H, 00H       ; 9774 _ ....$...
        db 0FCH, 00H, 00H, 00H, 4EH, 0B8H, 0FFH, 0FFH   ; 977C _ ....N...
        db 0FFH, 0FFH, 0FFH, 0FFH, 0A6H, 00H, 00H, 00H  ; 9784 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 978C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 47H, 83H, 05H       ; 9794 _ ..C..G..
        db 85H, 04H, 84H, 03H, 1CH, 00H, 00H, 00H       ; 979C _ ........
        db 24H, 01H, 00H, 00H, 0CCH, 0B8H, 0FFH, 0FFH   ; 97A4 _ $.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 7BH, 00H, 00H, 00H   ; 97AC _ ....{...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 97B4 _ .....A..
        db 83H, 02H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 97BC _ ........
        db 44H, 01H, 00H, 00H, 27H, 0B9H, 0FFH, 0FFH    ; 97C4 _ D...'...
        db 0FFH, 0FFH, 0FFH, 0FFH, 85H, 00H, 00H, 00H   ; 97CC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 97D4 _ ........
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 97DC _ ........
        db 64H, 01H, 00H, 00H, 8CH, 0B9H, 0FFH, 0FFH    ; 97E4 _ d.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 66H, 00H, 00H, 00H   ; 97EC _ ....f...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 97F4 _ ........
        db 00H, 00H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 97FC _ ....,...
        db 84H, 01H, 00H, 00H, 0D2H, 0B9H, 0FFH, 0FFH   ; 9804 _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 96H, 00H, 00H, 00H   ; 980C _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9814 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4BH, 83H, 07H       ; 981C _ ..C..K..
        db 85H, 06H, 84H, 05H, 8EH, 04H, 8FH, 03H       ; 9824 _ ........
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 982C _ ....$...
        db 0B4H, 01H, 00H, 00H, 38H, 0BAH, 0FFH, 0FFH   ; 9834 _ ....8...
        db 0FFH, 0FFH, 0FFH, 0FFH, 2EH, 00H, 00H, 00H   ; 983C _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9844 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 45H, 84H, 03H       ; 984C _ ..C..E..
        db 00H, 00H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 9854 _ ....,...
        db 0DCH, 01H, 00H, 00H, 3EH, 0BAH, 0FFH, 0FFH   ; 985C _ ....>...
        db 0FFH, 0FFH, 0FFH, 0FFH, 9CH, 01H, 00H, 00H   ; 9864 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 986C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4DH, 83H, 08H       ; 9874 _ ..C..M..
        db 85H, 07H, 84H, 06H, 8CH, 05H, 8EH, 04H       ; 987C _ ........
        db 8FH, 03H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 9884 _ ....,...
        db 0CH, 02H, 00H, 00H, 0AAH, 0BBH, 0FFH, 0FFH   ; 988C _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 6AH, 01H, 00H, 00H   ; 9894 _ ....j...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 989C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4FH, 83H, 09H       ; 98A4 _ ..C..O..
        db 85H, 08H, 84H, 07H, 8CH, 06H, 8DH, 05H       ; 98AC _ ........
        db 8EH, 04H, 8FH, 03H, 2CH, 00H, 00H, 00H       ; 98B4 _ ....,...
        db 3CH, 02H, 00H, 00H, 0E4H, 0BCH, 0FFH, 0FFH   ; 98BC _ <.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 69H, 04H, 00H, 00H   ; 98C4 _ ....i...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 98CC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 52H, 83H, 09H       ; 98D4 _ ..C..R..
        db 85H, 08H, 84H, 07H, 8CH, 06H, 8DH, 05H       ; 98DC _ ........
        db 8EH, 04H, 8FH, 03H, 14H, 00H, 00H, 00H       ; 98E4 _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 98EC _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 98F4 _ .x......
        db 90H, 01H, 00H, 00H, 24H, 00H, 00H, 00H       ; 98FC _ ....$...
        db 1CH, 00H, 00H, 00H, 05H, 0C1H, 0FFH, 0FFH    ; 9904 _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 4FH, 00H, 00H, 00H   ; 990C _ ....O...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9914 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 45H, 84H, 03H       ; 991C _ ..C..E..
        db 00H, 00H, 00H, 00H, 14H, 00H, 00H, 00H       ; 9924 _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 992C _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 9934 _ .x......
        db 90H, 01H, 00H, 00H, 24H, 00H, 00H, 00H       ; 993C _ ....$...
        db 1CH, 00H, 00H, 00H, 14H, 0C1H, 0FFH, 0FFH    ; 9944 _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 5DH, 00H, 00H, 00H   ; 994C _ ....]...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9954 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 45H, 84H, 03H       ; 995C _ ..C..E..
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9964 _ ....$...
        db 44H, 00H, 00H, 00H, 49H, 0C1H, 0FFH, 0FFH    ; 996C _ D...I...
        db 0FFH, 0FFH, 0FFH, 0FFH, 4DH, 02H, 00H, 00H   ; 9974 _ ....M...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 997C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 45H, 84H, 03H       ; 9984 _ ..C..E..
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 998C _ ....$...
        db 6CH, 00H, 00H, 00H, 6EH, 0C3H, 0FFH, 0FFH    ; 9994 _ l...n...
        db 0FFH, 0FFH, 0FFH, 0FFH, 7FH, 00H, 00H, 00H   ; 999C _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 99A4 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 99AC _ ..C.....
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 99B4 _ ........
        db 94H, 00H, 00H, 00H, 0C5H, 0C3H, 0FFH, 0FFH   ; 99BC _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 2EH, 00H, 00H, 00H   ; 99C4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 99CC _ ........
        db 00H, 00H, 00H, 00H, 14H, 00H, 00H, 00H       ; 99D4 _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 99DC _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 99E4 _ .x......
        db 90H, 01H, 00H, 00H, 24H, 00H, 00H, 00H       ; 99EC _ ....$...
        db 1CH, 00H, 00H, 00H, 0BBH, 0C3H, 0FFH, 0FFH   ; 99F4 _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 75H, 00H, 00H, 00H   ; 99FC _ ....u...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9A04 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 45H, 84H, 03H       ; 9A0C _ ..C..E..
        db 00H, 00H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 9A14 _ ....,...
        db 44H, 00H, 00H, 00H, 08H, 0C4H, 0FFH, 0FFH    ; 9A1C _ D.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 81H, 02H, 00H, 00H   ; 9A24 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9A2C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4FH, 83H, 09H       ; 9A34 _ ..C..O..
        db 85H, 08H, 84H, 07H, 8CH, 06H, 8DH, 05H       ; 9A3C _ ........
        db 8EH, 04H, 8FH, 03H, 2CH, 00H, 00H, 00H       ; 9A44 _ ....,...
        db 74H, 00H, 00H, 00H, 59H, 0C6H, 0FFH, 0FFH    ; 9A4C _ t...Y...
        db 0FFH, 0FFH, 0FFH, 0FFH, 9EH, 00H, 00H, 00H   ; 9A54 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9A5C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4BH, 83H, 07H       ; 9A64 _ ..C..K..
        db 85H, 06H, 84H, 05H, 8EH, 04H, 8FH, 03H       ; 9A6C _ ........
        db 00H, 00H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 9A74 _ ....,...
        db 0A4H, 00H, 00H, 00H, 0C7H, 0C6H, 0FFH, 0FFH  ; 9A7C _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 0CAH, 00H, 00H, 00H  ; 9A84 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9A8C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4FH, 83H, 09H       ; 9A94 _ ..C..O..
        db 85H, 08H, 84H, 07H, 8CH, 06H, 8DH, 05H       ; 9A9C _ ........
        db 8EH, 04H, 8FH, 03H, 2CH, 00H, 00H, 00H       ; 9AA4 _ ....,...
        db 0D4H, 00H, 00H, 00H, 61H, 0C7H, 0FFH, 0FFH   ; 9AAC _ ....a...
        db 0FFH, 0FFH, 0FFH, 0FFH, 98H, 00H, 00H, 00H   ; 9AB4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9ABC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4DH, 83H, 08H       ; 9AC4 _ ..C..M..
        db 85H, 07H, 84H, 06H, 8CH, 05H, 8EH, 04H       ; 9ACC _ ........
        db 8FH, 03H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 9AD4 _ ....,...
        db 04H, 01H, 00H, 00H, 0C9H, 0C7H, 0FFH, 0FFH   ; 9ADC _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 0BAH, 00H, 00H, 00H  ; 9AE4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9AEC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4DH, 83H, 08H       ; 9AF4 _ ..C..M..
        db 85H, 07H, 84H, 06H, 8CH, 05H, 8EH, 04H       ; 9AFC _ ........
        db 8FH, 03H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 9B04 _ ....,...
        db 34H, 01H, 00H, 00H, 53H, 0C8H, 0FFH, 0FFH    ; 9B0C _ 4...S...
        db 0FFH, 0FFH, 0FFH, 0FFH, 64H, 00H, 00H, 00H   ; 9B14 _ ....d...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9B1C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 49H, 83H, 06H       ; 9B24 _ ..C..I..
        db 85H, 05H, 84H, 04H, 8EH, 03H, 00H, 00H       ; 9B2C _ ........
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9B34 _ ....$...
        db 64H, 01H, 00H, 00H, 87H, 0C8H, 0FFH, 0FFH    ; 9B3C _ d.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 54H, 00H, 00H, 00H   ; 9B44 _ ....T...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9B4C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 9B54 _ ..C.....
        db 00H, 00H, 00H, 00H, 14H, 00H, 00H, 00H       ; 9B5C _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 9B64 _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 9B6C _ .x......
        db 90H, 01H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 9B74 _ ....,...
        db 1CH, 00H, 00H, 00H, 9CH, 0C8H, 0FFH, 0FFH    ; 9B7C _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 30H, 01H, 00H, 00H   ; 9B84 _ ....0...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9B8C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4FH, 83H, 09H       ; 9B94 _ ..C..O..
        db 85H, 08H, 84H, 07H, 8CH, 06H, 8DH, 05H       ; 9B9C _ ........
        db 8EH, 04H, 8FH, 03H, 24H, 00H, 00H, 00H       ; 9BA4 _ ....$...
        db 4CH, 00H, 00H, 00H, 9CH, 0C9H, 0FFH, 0FFH    ; 9BAC _ L.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 0ABH, 00H, 00H, 00H  ; 9BB4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9BBC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 9BC4 _ ..C.....
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9BCC _ ....$...
        db 74H, 00H, 00H, 00H, 1FH, 0CAH, 0FFH, 0FFH    ; 9BD4 _ t.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 0A7H, 00H, 00H, 00H  ; 9BDC _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9BE4 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 9BEC _ ..C.....
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9BF4 _ ....$...
        db 9CH, 00H, 00H, 00H, 0A0H, 0CAH, 0FFH, 0FFH   ; 9BFC _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 5BH, 00H, 00H, 00H   ; 9C04 _ ....[...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9C0C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 9C14 _ ..C.....
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9C1C _ ....$...
        db 0C4H, 00H, 00H, 00H, 0D3H, 0CAH, 0FFH, 0FFH  ; 9C24 _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 60H, 00H, 00H, 00H   ; 9C2C _ ....`...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9C34 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 45H, 84H, 03H       ; 9C3C _ ..C..E..
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9C44 _ ....$...
        db 0ECH, 00H, 00H, 00H, 20H, 0CBH, 0FFH, 0FFH   ; 9C4C _ .... ...
        db 0FFH, 0FFH, 0FFH, 0FFH, 3EH, 00H, 00H, 00H   ; 9C54 _ ....>...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9C5C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 9C64 _ ..C.....
        db 00H, 00H, 00H, 00H, 14H, 00H, 00H, 00H       ; 9C6C _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 9C74 _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 9C7C _ .x......
        db 90H, 01H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9C84 _ ....$...
        db 1CH, 00H, 00H, 00H, 1EH, 0CBH, 0FFH, 0FFH    ; 9C8C _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 50H, 00H, 00H, 00H   ; 9C94 _ ....P...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9C9C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 9CA4 _ ..C.....
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 9CAC _ ........
        db 44H, 00H, 00H, 00H, 46H, 0CBH, 0FFH, 0FFH    ; 9CB4 _ D...F...
        db 0FFH, 0FFH, 0FFH, 0FFH, 05H, 00H, 00H, 00H   ; 9CBC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 9CC4 _ ........
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 9CCC _ ........
        db 64H, 00H, 00H, 00H, 2BH, 0CBH, 0FFH, 0FFH    ; 9CD4 _ d...+...
        db 0FFH, 0FFH, 0FFH, 0FFH, 05H, 00H, 00H, 00H   ; 9CDC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 9CE4 _ ........
        db 00H, 00H, 00H, 00H, 14H, 00H, 00H, 00H       ; 9CEC _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 9CF4 _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 9CFC _ .x......
        db 90H, 01H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9D04 _ ....$...
        db 1CH, 00H, 00H, 00H, 0F8H, 0CAH, 0FFH, 0FFH   ; 9D0C _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 36H, 00H, 00H, 00H   ; 9D14 _ ....6...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9D1C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 9D24 _ ..C.....
        db 00H, 00H, 00H, 00H, 14H, 00H, 00H, 00H       ; 9D2C _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 9D34 _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 9D3C _ .x......
        db 90H, 01H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9D44 _ ....$...
        db 1CH, 00H, 00H, 00H, 0EEH, 0CAH, 0FFH, 0FFH   ; 9D4C _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 47H, 00H, 00H, 00H   ; 9D54 _ ....G...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9D5C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 45H, 84H, 03H       ; 9D64 _ ..C..E..
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9D6C _ ....$...
        db 44H, 00H, 00H, 00H, 0DH, 0CBH, 0FFH, 0FFH    ; 9D74 _ D.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 22H, 00H, 00H, 00H   ; 9D7C _ ...."...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9D84 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 45H, 84H, 03H       ; 9D8C _ ..C..E..
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9D94 _ ....$...
        db 6CH, 00H, 00H, 00H, 07H, 0CBH, 0FFH, 0FFH    ; 9D9C _ l.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 34H, 00H, 00H, 00H   ; 9DA4 _ ....4...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9DAC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 9DB4 _ ..C.....
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9DBC _ ....$...
        db 94H, 00H, 00H, 00H, 13H, 0CBH, 0FFH, 0FFH    ; 9DC4 _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 73H, 00H, 00H, 00H   ; 9DCC _ ....s...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9DD4 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 45H, 84H, 03H       ; 9DDC _ ..C..E..
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 9DE4 _ ........
        db 0BCH, 00H, 00H, 00H, 5EH, 0CBH, 0FFH, 0FFH   ; 9DEC _ ....^...
        db 0FFH, 0FFH, 0FFH, 0FFH, 1FH, 00H, 00H, 00H   ; 9DF4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 9DFC _ ........
        db 00H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 9E04 _ ........
        db 0DCH, 00H, 00H, 00H, 5DH, 0CBH, 0FFH, 0FFH   ; 9E0C _ ....]...
        db 0FFH, 0FFH, 0FFH, 0FFH, 2BH, 00H, 00H, 00H   ; 9E14 _ ....+...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 9E1C _ ........
        db 00H, 00H, 00H, 00H, 14H, 00H, 00H, 00H       ; 9E24 _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 9E2C _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 9E34 _ .x......
        db 90H, 01H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9E3C _ ....$...
        db 1CH, 00H, 00H, 00H, 50H, 0CBH, 0FFH, 0FFH    ; 9E44 _ ....P...
        db 0FFH, 0FFH, 0FFH, 0FFH, 5DH, 01H, 00H, 00H   ; 9E4C _ ....]...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9E54 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 46H, 85H, 04H       ; 9E5C _ ..C..F..
        db 84H, 03H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9E64 _ ....$...
        db 44H, 00H, 00H, 00H, 85H, 0CCH, 0FFH, 0FFH    ; 9E6C _ D.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 4EH, 00H, 00H, 00H   ; 9E74 _ ....N...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9E7C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; 9E84 _ ..C.....
        db 00H, 00H, 00H, 00H, 2CH, 00H, 00H, 00H       ; 9E8C _ ....,...
        db 6CH, 00H, 00H, 00H, 0ABH, 0CCH, 0FFH, 0FFH   ; 9E94 _ l.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 0C5H, 00H, 00H, 00H  ; 9E9C _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9EA4 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4BH, 83H, 07H       ; 9EAC _ ..C..K..
        db 85H, 06H, 84H, 05H, 8EH, 04H, 8FH, 03H       ; 9EB4 _ ........
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9EBC _ ....$...
        db 9CH, 00H, 00H, 00H, 40H, 0CDH, 0FFH, 0FFH    ; 9EC4 _ ....@...
        db 0FFH, 0FFH, 0FFH, 0FFH, 99H, 00H, 00H, 00H   ; 9ECC _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9ED4 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 46H, 85H, 04H       ; 9EDC _ ..C..F..
        db 84H, 03H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9EE4 _ ....$...
        db 0C4H, 00H, 00H, 00H, 0B1H, 0CDH, 0FFH, 0FFH  ; 9EEC _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 37H, 00H, 00H, 00H   ; 9EF4 _ ....7...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9EFC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 46H, 85H, 04H       ; 9F04 _ ..C..F..
        db 84H, 03H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 9F0C _ ........
        db 0ECH, 00H, 00H, 00H, 0C0H, 0CDH, 0FFH, 0FFH  ; 9F14 _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 23H, 00H, 00H, 00H   ; 9F1C _ ....#...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 9F24 _ ........
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9F2C _ ....$...
        db 0CH, 01H, 00H, 00H, 0C3H, 0CDH, 0FFH, 0FFH   ; 9F34 _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 0DDH, 00H, 00H, 00H  ; 9F3C _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9F44 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 45H, 84H, 03H       ; 9F4C _ ..C..E..
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9F54 _ ....$...
        db 34H, 01H, 00H, 00H, 78H, 0CEH, 0FFH, 0FFH    ; 9F5C _ 4...x...
        db 0FFH, 0FFH, 0FFH, 0FFH, 0B1H, 00H, 00H, 00H  ; 9F64 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9F6C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 47H, 83H, 05H       ; 9F74 _ ..C..G..
        db 85H, 04H, 84H, 03H, 2CH, 00H, 00H, 00H       ; 9F7C _ ....,...
        db 5CH, 01H, 00H, 00H, 01H, 0CFH, 0FFH, 0FFH    ; 9F84 _ \.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 0D1H, 00H, 00H, 00H  ; 9F8C _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9F94 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4DH, 83H, 08H       ; 9F9C _ ..C..M..
        db 85H, 07H, 84H, 06H, 8CH, 05H, 8EH, 04H       ; 9FA4 _ ........
        db 8FH, 03H, 00H, 00H, 14H, 00H, 00H, 00H       ; 9FAC _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; 9FB4 _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; 9FBC _ .x......
        db 90H, 01H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9FC4 _ ....$...
        db 1CH, 00H, 00H, 00H, 8AH, 0CFH, 0FFH, 0FFH    ; 9FCC _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 4BH, 01H, 00H, 00H   ; 9FD4 _ ....K...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; 9FDC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 46H, 85H, 04H       ; 9FE4 _ ..C..F..
        db 84H, 03H, 00H, 00H, 24H, 00H, 00H, 00H       ; 9FEC _ ....$...
        db 44H, 00H, 00H, 00H, 0ADH, 0D0H, 0FFH, 0FFH   ; 9FF4 _ D.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 71H, 00H, 00H, 00H   ; 9FFC _ ....q...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; A004 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 47H, 83H, 05H       ; A00C _ ..C..G..
        db 85H, 04H, 84H, 03H, 2CH, 00H, 00H, 00H       ; A014 _ ....,...
        db 6CH, 00H, 00H, 00H, 0F6H, 0D0H, 0FFH, 0FFH   ; A01C _ l.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 0F3H, 00H, 00H, 00H  ; A024 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; A02C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4DH, 83H, 08H       ; A034 _ ..C..M..
        db 85H, 07H, 84H, 06H, 8CH, 05H, 8EH, 04H       ; A03C _ ........
        db 8FH, 03H, 00H, 00H, 24H, 00H, 00H, 00H       ; A044 _ ....$...
        db 9CH, 00H, 00H, 00H, 0B9H, 0D1H, 0FFH, 0FFH   ; A04C _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 9EH, 00H, 00H, 00H   ; A054 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; A05C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 46H, 85H, 04H       ; A064 _ ..C..F..
        db 84H, 03H, 00H, 00H, 24H, 00H, 00H, 00H       ; A06C _ ....$...
        db 0C4H, 00H, 00H, 00H, 2FH, 0D2H, 0FFH, 0FFH   ; A074 _ ..../...
        db 0FFH, 0FFH, 0FFH, 0FFH, 37H, 00H, 00H, 00H   ; A07C _ ....7...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; A084 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 46H, 85H, 04H       ; A08C _ ..C..F..
        db 84H, 03H, 00H, 00H, 1CH, 00H, 00H, 00H       ; A094 _ ........
        db 0ECH, 00H, 00H, 00H, 3EH, 0D2H, 0FFH, 0FFH   ; A09C _ ....>...
        db 0FFH, 0FFH, 0FFH, 0FFH, 27H, 00H, 00H, 00H   ; A0A4 _ ....'...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A0AC _ ........
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; A0B4 _ ....$...
        db 0CH, 01H, 00H, 00H, 45H, 0D2H, 0FFH, 0FFH    ; A0BC _ ....E...
        db 0FFH, 0FFH, 0FFH, 0FFH, 0DDH, 00H, 00H, 00H  ; A0C4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; A0CC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 45H, 84H, 03H       ; A0D4 _ ..C..E..
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; A0DC _ ....$...
        db 34H, 01H, 00H, 00H, 0FAH, 0D2H, 0FFH, 0FFH   ; A0E4 _ 4.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 0C0H, 00H, 00H, 00H  ; A0EC _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; A0F4 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 47H, 83H, 05H       ; A0FC _ ..C..G..
        db 85H, 04H, 84H, 03H, 14H, 00H, 00H, 00H       ; A104 _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; A10C _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; A114 _ .x......
        db 90H, 01H, 00H, 00H, 24H, 00H, 00H, 00H       ; A11C _ ....$...
        db 1CH, 00H, 00H, 00H, 7AH, 0D3H, 0FFH, 0FFH    ; A124 _ ....z...
        db 0FFH, 0FFH, 0FFH, 0FFH, 40H, 01H, 00H, 00H   ; A12C _ ....@...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; A134 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 46H, 85H, 04H       ; A13C _ ..C..F..
        db 84H, 03H, 00H, 00H, 24H, 00H, 00H, 00H       ; A144 _ ....$...
        db 44H, 00H, 00H, 00H, 92H, 0D4H, 0FFH, 0FFH    ; A14C _ D.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 7BH, 00H, 00H, 00H   ; A154 _ ....{...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; A15C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 47H, 83H, 05H       ; A164 _ ..C..G..
        db 85H, 04H, 84H, 03H, 2CH, 00H, 00H, 00H       ; A16C _ ....,...
        db 6CH, 00H, 00H, 00H, 0E5H, 0D4H, 0FFH, 0FFH   ; A174 _ l.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 0EBH, 00H, 00H, 00H  ; A17C _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; A184 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4BH, 83H, 07H       ; A18C _ ..C..K..
        db 85H, 06H, 84H, 05H, 8EH, 04H, 8FH, 03H       ; A194 _ ........
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; A19C _ ....$...
        db 9CH, 00H, 00H, 00H, 0A0H, 0D5H, 0FFH, 0FFH   ; A1A4 _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 94H, 00H, 00H, 00H   ; A1AC _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; A1B4 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 45H, 84H, 03H       ; A1BC _ ..C..E..
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; A1C4 _ ....$...
        db 0C4H, 00H, 00H, 00H, 0CH, 0D6H, 0FFH, 0FFH   ; A1CC _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 37H, 00H, 00H, 00H   ; A1D4 _ ....7...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; A1DC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 46H, 85H, 04H       ; A1E4 _ ..C..F..
        db 84H, 03H, 00H, 00H, 1CH, 00H, 00H, 00H       ; A1EC _ ........
        db 0ECH, 00H, 00H, 00H, 1BH, 0D6H, 0FFH, 0FFH   ; A1F4 _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 20H, 00H, 00H, 00H   ; A1FC _ .... ...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A204 _ ........
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; A20C _ ....$...
        db 0CH, 01H, 00H, 00H, 1BH, 0D6H, 0FFH, 0FFH    ; A214 _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 0D2H, 00H, 00H, 00H  ; A21C _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; A224 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 00H, 00H, 00H       ; A22C _ ..C.....
        db 00H, 00H, 00H, 00H, 14H, 00H, 00H, 00H       ; A234 _ ........
        db 00H, 00H, 00H, 00H, 01H, 7AH, 52H, 00H       ; A23C _ .....zR.
        db 01H, 78H, 10H, 01H, 10H, 0CH, 07H, 08H       ; A244 _ .x......
        db 90H, 01H, 00H, 00H, 24H, 00H, 00H, 00H       ; A24C _ ....$...
        db 1CH, 00H, 00H, 00H, 0ADH, 0D6H, 0FFH, 0FFH   ; A254 _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 0A0H, 02H, 00H, 00H  ; A25C _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; A264 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 46H, 85H, 04H       ; A26C _ ..C..F..
        db 84H, 03H, 00H, 00H, 2CH, 00H, 00H, 00H       ; A274 _ ....,...
        db 44H, 00H, 00H, 00H, 25H, 0D9H, 0FFH, 0FFH    ; A27C _ D...%...
        db 0FFH, 0FFH, 0FFH, 0FFH, 9CH, 00H, 00H, 00H   ; A284 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; A28C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 49H, 83H, 06H       ; A294 _ ..C..I..
        db 85H, 05H, 84H, 04H, 8EH, 03H, 00H, 00H       ; A29C _ ........
        db 00H, 00H, 00H, 00H, 2CH, 00H, 00H, 00H       ; A2A4 _ ....,...
        db 74H, 00H, 00H, 00H, 91H, 0D9H, 0FFH, 0FFH    ; A2AC _ t.......
        db 0FFH, 0FFH, 0FFH, 0FFH, 29H, 01H, 00H, 00H   ; A2B4 _ ....)...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; A2BC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 4DH, 83H, 08H       ; A2C4 _ ..C..M..
        db 85H, 07H, 84H, 06H, 8CH, 05H, 8EH, 04H       ; A2CC _ ........
        db 8FH, 03H, 00H, 00H, 24H, 00H, 00H, 00H       ; A2D4 _ ....$...
        db 0A4H, 00H, 00H, 00H, 8AH, 0DAH, 0FFH, 0FFH   ; A2DC _ ........
        db 0FFH, 0FFH, 0FFH, 0FFH, 0DBH, 00H, 00H, 00H  ; A2E4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; A2EC _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 46H, 85H, 04H       ; A2F4 _ ..C..F..
        db 84H, 03H, 00H, 00H, 24H, 00H, 00H, 00H       ; A2FC _ ....$...
        db 0CCH, 00H, 00H, 00H, 3DH, 0DBH, 0FFH, 0FFH   ; A304 _ ....=...
        db 0FFH, 0FFH, 0FFH, 0FFH, 37H, 00H, 00H, 00H   ; A30C _ ....7...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; A314 _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 46H, 85H, 04H       ; A31C _ ..C..F..
        db 84H, 03H, 00H, 00H, 1CH, 00H, 00H, 00H       ; A324 _ ........
        db 0F4H, 00H, 00H, 00H, 4CH, 0DBH, 0FFH, 0FFH   ; A32C _ ....L...
        db 0FFH, 0FFH, 0FFH, 0FFH, 27H, 00H, 00H, 00H   ; A334 _ ....'...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A33C _ ........
        db 00H, 00H, 00H, 00H, 24H, 00H, 00H, 00H       ; A344 _ ....$...
        db 14H, 01H, 00H, 00H, 53H, 0DBH, 0FFH, 0FFH    ; A34C _ ....S...
        db 0FFH, 0FFH, 0FFH, 0FFH, 52H, 00H, 00H, 00H   ; A354 _ ....R...
        db 00H, 00H, 00H, 00H, 00H, 41H, 0EH, 10H       ; A35C _ .....A..
        db 86H, 02H, 43H, 0DH, 06H, 47H, 83H, 05H       ; A364 _ ..C..G..
        db 85H, 04H, 84H, 03H, 00H, 00H, 00H, 00H       ; A36C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A374 _ ........
        db 00H, 00H, 00H, 00H                           ; A37C _ ....

_text   ENDS

_data   SEGMENT BYTE 'CODE'                             ; section number 2

; Note: Prefix bit or byte has no meaning in this context
        add     byte ptr [r13], r12b                    ; A380 _ 4D: 00. 65, 00
        insd                                            ; A384 _ 6D
; Note: Zero displacement could be omitted
        add     byte ptr [rdi], ch                      ; A385 _ 00. 6F, 00
        jc      ?_598                                   ; A388 _ 72, 00
?_598:  jns     ?_599                                   ; A38A _ 79, 00

?_599   label byte
        db 43H, 00H, 6FH, 00H, 6EH, 00H, 66H, 00H       ; A38C _ C.o.n.f.
        db 69H, 00H, 67H, 00H, 00H, 00H, 00H, 00H       ; A394 _ i.g.....
        db 0D2H, 0E7H, 91H, 0B0H, 0A0H, 05H, 98H, 41H   ; A39C _ .......A
        db 94H, 0F0H, 74H, 0B7H, 0B8H, 0C5H, 54H, 59H   ; A3A4 _ ..t...TY
        db 0BAH, 34H, 0ADH, 05H, 02H, 6FH, 14H, 42H     ; A3AC _ .4...o.B
        db 95H, 2EH, 4DH, 0A0H, 39H, 8EH, 2BH, 0B9H     ; A3B4 _ ..M.9.+.
        db 4CH, 0F2H, 39H, 77H, 0D7H, 93H, 0D4H, 11H    ; A3BC _ L.9w....
        db 9AH, 3AH, 00H, 90H, 27H, 3FH, 0C1H, 4DH      ; A3C4 _ .:..'?.M
        db 82H, 77H, 2FH, 0F4H, 2EH, 01H, 12H, 4CH      ; A3CC _ .w/....L
        db 99H, 56H, 49H, 0F9H, 43H, 04H, 0F7H, 21H     ; A3D4 _ .VI.C..!
        db 8EH, 86H, 2DH, 0DFH, 0FCH, 32H, 0F0H, 4CH    ; A3DC _ ..-..2.L
        db 8EH, 6BH, 0FFH, 0D9H, 5DH, 13H, 43H, 0D0H    ; A3E4 _ .k..].C.
        db 82H, 9EH, 0BDH, 3EH, 78H, 2CH, 0E6H, 4DH     ; A3EC _ ...>x,.M
        db 97H, 86H, 8DH, 4BH, 0FCH, 0B7H, 0C8H, 81H    ; A3F4 _ ...K....
        db 26H, 25H, 73H, 0B0H, 0C8H, 38H, 40H, 4BH     ; A3FC _ &%s..8@K
        db 88H, 77H, 61H, 0C7H, 0B0H, 6AH, 0ACH, 45H    ; A404 _ .wa..j.E
        db 21H, 0D0H, 80H, 0AEH, 8EH, 61H, 0D4H, 11H    ; A40C _ !....a..
        db 0BCH, 0D7H, 00H, 80H, 0C7H, 3CH, 88H, 81H    ; A414 _ .....<..
        db 1FH, 75H, 9FH, 38H, 38H, 18H, 88H, 43H       ; A41C _ .u.88..C
        db 83H, 90H, 0CDH, 81H, 54H, 0BDH, 27H, 0F8H    ; A424 _ ....T.'.
        db 59H, 0BCH, 28H, 0DEH, 28H, 62H, 0BDH, 41H    ; A42C _ Y.(.(b.A
        db 0BDH, 0F6H, 0A3H, 0B9H, 0ADH, 0B5H, 8DH, 0A1H; A434 _ ........
        db 2CH, 6DH, 81H, 0EAH, 0E5H, 0CEH, 02H, 4FH    ; A43C _ ,m.....O
        db 99H, 0B5H, 0D3H, 90H, 5CH, 0BBH, 0D0H, 77H   ; A444 _ ....\..w
        db 0A1H, 31H, 1BH, 5BH, 62H, 95H, 0D2H, 11H     ; A44C _ .1.[b...
        db 8EH, 3FH, 00H, 0A0H, 0C9H, 69H, 72H, 3BH     ; A454 _ .?...ir;
        db 00H, 0B2H, 0F5H, 4CH, 0B8H, 68H, 0A5H, 4CH   ; A45C _ ...L.h.L
        db 9EH, 0ECH, 0B2H, 3EH, 3FH, 50H, 02H, 9AH     ; A464 _ ...>?P..
        db 0BBH, 7EH, 70H, 2FH, 1AH, 4AH, 0D4H, 11H     ; A46C _ .~p/.J..
        db 9AH, 38H, 00H, 90H, 27H, 3FH, 0C1H, 4DH      ; A474 _ .8..'?.M
        db 61H, 0DFH, 0E4H, 8BH, 0CAH, 93H, 0D2H, 11H   ; A47C _ a.......
        db 0AAH, 0DH, 00H, 0E0H, 98H, 03H, 2BH, 8CH     ; A484 _ ......+.
        db 84H, 32H, 83H, 74H, 0EBH, 39H, 4CH, 41H      ; A48C _ .2.t.9LA
        db 85H, 44H, 59H, 0CFH, 0D6H, 09H, 5DH, 0C9H    ; A494 _ .DY...].
        db 9CH, 5DH, 0D1H, 35H, 5BH, 53H, 0CAH, 4FH     ; A49C _ .].5[S.O
        db 0A5H, 36H, 2AH, 4EH, 9BH, 0E8H, 0FBH, 0A0H   ; A4A4 _ .6*N....
        db 07H, 0ECH, 21H, 0E1H, 42H, 9CH, 0EEH, 45H    ; A4AC _ ..!.B..E
        db 0B0H, 0B6H, 0FFH, 0F8H, 0EFH, 03H, 0C5H, 21H ; A4B4 _ .......!
        db 5AH, 7EH, 40H, 17H, 6CH, 0AFH, 0E8H, 4EH     ; A4BC _ Z~@.l..N
        db 98H, 0A8H, 00H, 21H, 04H, 53H, 0CDH, 0D9H    ; A4C4 _ ...!.S..
        db 3AH, 83H, 0F6H, 0B6H, 35H, 30H, 92H, 4DH     ; A4CC _ :...50.M
        db 95H, 0B9H, 08H, 37H, 75H, 68H, 28H, 0D4H     ; A4D4 _ ...7uh(.
        db 65H, 0ACH, 0B0H, 0D5H, 2DH, 9AH, 2AH, 4DH    ; A4DC _ e...-.*M
        db 0BBH, 0D6H, 0E8H, 71H, 0A9H, 5EH, 04H, 35H   ; A4E4 _ ...q.^.5
        db 8BH, 0C4H, 1CH, 0BEH, 0F1H, 0E9H, 7BH, 46H   ; A4EC _ ......{F
        db 0A7H, 0BCH, 8BH, 5AH, 0A7H, 7EH, 0D3H, 0ECH  ; A4F4 _ ...Z.~..
        db 8CH, 1BH, 00H, 0BDH, 71H, 6AH, 7BH, 48H      ; A4FC _ ....qj{H
        db 0A1H, 4FH, 0CH, 2AH, 2DH, 0CFH, 7AH, 5DH     ; A504 _ .O.*-.z]
        db 70H, 0D9H, 0EAH, 1CH, 0DH, 20H, 0D4H, 49H    ; A50C _ p.... .I
        db 0B2H, 0A0H, 06H, 2EH, 8AH, 50H, 0A8H, 72H    ; A514 _ .....P.r
        db 05H, 0DEH, 1EH, 4DH, 0C7H, 38H, 6AH, 4AH     ; A51C _ ...M.8jJ
        db 9CH, 0C6H, 4BH, 0CCH, 0A8H, 0B3H, 8CH, 14H   ; A524 _ ..K.....
        db 40H, 0C3H, 48H, 14H, 02H, 02H, 11H, 47H      ; A52C _ @.H....G
        db 9CH, 4BH, 2DH, 06H, 3AH, 0A6H, 47H, 5BH      ; A534 _ .K-.:.G[
        db 41H, 9CH, 44H, 0EAH, 36H, 82H, 97H, 4BH      ; A53C _ A.D.6..K
        db 9FH, 0F9H, 08H, 4EH, 4BH, 0A7H, 00H, 20H     ; A544 _ ...NK.. 
        db 0B5H, 4DH, 0D1H, 0F5H, 0CH, 2FH, 11H, 46H    ; A54C _ .M.../.F
        db 9DH, 0DCH, 7CH, 18H, 2BH, 17H, 3AH, 71H      ; A554 _ ..|.+.:q
        db 56H, 99H, 30H, 6BH, 17H, 66H, 2BH, 47H       ; A55C _ V.0k.f+G
        db 0BBH, 0C7H, 2AH, 09H, 0E5H, 5EH, 3EH, 52H    ; A564 _ ..*..^>R
        db 8CH, 1EH, 0F2H, 7EH, 0C1H, 2FH, 0C3H, 4BH    ; A56C _ ...~./.K
        db 0A8H, 4AH, 73H, 02H, 5EH, 0AAH, 0B8H, 96H    ; A574 _ .Js.^...
        db 0A1H, 0DFH, 0AH, 0B1H, 43H, 9EH, 7FH, 48H    ; A57C _ ....C..H
        db 0AAH, 0F3H, 0A7H, 0A9H, 0BDH, 0EAH, 0F4H, 0ACH; A584 _ ........
        db 93H, 0C4H, 14H, 79H, 39H, 0F4H, 6CH, 4CH     ; A58C _ ...y9.lL
        db 0ABH, 23H, 7FH, 72H, 15H, 0EH, 72H, 0D4H     ; A594 _ .#.r..r.
        db 0FFH, 0FFH, 0FFH, 0FFH, 0BDH, 0BEH, 0D4H, 32H; A59C _ .......2
        db 9AH, 08H, 0EH, 4AH, 0AEH, 98H, 38H, 0AEH     ; A5A4 _ ...J..8.
        db 0BDH, 0A6H, 27H, 7BH, 23H, 0B2H, 0C7H, 47H   ; A5AC _ ..'{#..G
        db 2AH, 0C4H, 0D2H, 11H, 8EH, 57H, 00H, 0A0H    ; A5B4 _ *....W..
        db 0C9H, 69H, 72H, 3BH, 3AH, 83H, 0F6H, 0B6H    ; A5BC _ .ir;:...
        db 35H, 30H, 92H, 4DH, 95H, 0B9H, 08H, 37H      ; A5C4 _ 50.M...7
        db 75H, 68H, 28H, 0D4H, 0B0H, 85H, 00H, 00H     ; A5CC _ uh(.....
        db 00H, 00H, 00H, 00H, 8EH, 0BFH, 00H, 00H      ; A5D4 _ ........
        db 00H, 00H, 10H, 00H, 00H, 10H, 00H, 00H       ; A5DC _ ........
        db 00H, 00H, 00H, 00H, 01H, 00H, 00H, 00H       ; A5E4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A5EC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A5F4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A5FC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A604 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A60C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A614 _ ........
        db 00H, 00H, 00H, 00H, 0C8H, 85H, 00H, 00H      ; A61C _ ........
        db 00H, 00H, 00H, 00H, 41H, 0BFH, 00H, 00H      ; A624 _ ....A...
        db 00H, 00H, 20H, 00H, 00H, 10H, 00H, 00H       ; A62C _ .. .....
        db 00H, 00H, 00H, 00H, 01H, 00H, 00H, 00H       ; A634 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A63C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A644 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A64C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A654 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A65C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A664 _ ........
        db 00H, 00H, 00H, 00H, 0E0H, 85H, 00H, 00H      ; A66C _ ........
        db 00H, 00H, 00H, 00H, 4AH, 0BFH, 00H, 00H      ; A674 _ ....J...
        db 00H, 00H, 40H, 00H, 00H, 10H, 00H, 00H       ; A67C _ ..@.....
        db 00H, 00H, 00H, 00H, 01H, 00H, 00H, 00H       ; A684 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A68C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A694 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A69C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A6A4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A6AC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A6B4 _ ........
        db 00H, 00H, 00H, 00H, 0F8H, 85H, 00H, 00H      ; A6BC _ ........
        db 00H, 00H, 00H, 00H, 4BH, 0BFH, 00H, 00H      ; A6C4 _ ....K...
        db 00H, 00H, 80H, 00H, 00H, 00H, 01H, 00H       ; A6CC _ ........
        db 00H, 00H, 00H, 00H, 00H, 01H, 00H, 00H       ; A6D4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A6DC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A6E4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A6EC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A6F4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A6FC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A704 _ ........
        db 00H, 00H, 00H, 00H, 0C8H, 85H, 00H, 00H      ; A70C _ ........
        db 00H, 00H, 00H, 00H, 0BFH, 0BFH, 00H, 00H     ; A714 _ ........
        db 00H, 00H, 20H, 00H, 00H, 10H, 00H, 00H       ; A71C _ .. .....
        db 00H, 00H, 00H, 00H, 01H, 00H, 00H, 00H       ; A724 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A72C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A734 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A73C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A744 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A74C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A754 _ ........
        db 00H, 00H, 00H, 00H, 10H, 86H, 00H, 00H       ; A75C _ ........
        db 00H, 00H, 00H, 00H, 14H, 01H, 00H, 00H       ; A764 _ ........
        db 00H, 00H, 20H, 00H, 00H, 00H, 01H, 00H       ; A76C _ .. .....
        db 00H, 00H, 00H, 00H, 00H, 01H, 00H, 00H       ; A774 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A77C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A784 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A78C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A794 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A79C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A7A4 _ ........
        db 00H, 00H, 00H, 00H, 22H, 86H, 00H, 00H       ; A7AC _ ...."...
        db 00H, 00H, 00H, 00H, 15H, 0C2H, 00H, 00H      ; A7B4 _ ........
        db 00H, 00H, 20H, 00H, 00H, 10H, 00H, 00H       ; A7BC _ .. .....
        db 00H, 00H, 00H, 00H, 00H, 01H, 00H, 00H       ; A7C4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A7CC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A7D4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A7DC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A7E4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A7EC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A7F4 _ ........
        db 00H, 00H, 00H, 00H, 44H, 86H, 00H, 00H       ; A7FC _ ....D...
        db 00H, 00H, 00H, 00H, 16H, 0C2H, 00H, 00H      ; A804 _ ........
        db 00H, 00H, 40H, 00H, 00H, 10H, 00H, 00H       ; A80C _ ..@.....
        db 00H, 00H, 00H, 00H, 00H, 01H, 00H, 00H       ; A814 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A81C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A824 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A82C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A834 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A83C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A844 _ ........
        db 00H, 00H, 00H, 00H, 66H, 86H, 00H, 00H       ; A84C _ ....f...
        db 00H, 00H, 00H, 00H, 17H, 0C2H, 00H, 00H      ; A854 _ ........
        db 00H, 00H, 80H, 00H, 00H, 00H, 01H, 00H       ; A85C _ ........
        db 00H, 00H, 00H, 00H, 00H, 01H, 00H, 00H       ; A864 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A86C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A874 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A87C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A884 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A88C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A894 _ ........
        db 00H, 00H, 00H, 00H, 8AH, 86H, 00H, 00H       ; A89C _ ........
        db 00H, 00H, 00H, 00H, 15H, 20H, 00H, 00H       ; A8A4 _ ..... ..
        db 00H, 00H, 20H, 00H, 00H, 00H, 01H, 00H       ; A8AC _ .. .....
        db 00H, 00H, 00H, 00H, 00H, 01H, 00H, 00H       ; A8B4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A8BC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A8C4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A8CC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A8D4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A8DC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A8E4 _ ........
        db 00H, 00H, 00H, 00H, 0AAH, 86H, 00H, 00H      ; A8EC _ ........
        db 00H, 00H, 00H, 00H, 16H, 20H, 00H, 00H       ; A8F4 _ ..... ..
        db 00H, 00H, 40H, 00H, 00H, 00H, 01H, 00H       ; A8FC _ ..@.....
        db 00H, 00H, 00H, 00H, 00H, 01H, 00H, 00H       ; A904 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A90C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A914 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A91C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A924 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A92C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A934 _ ........
        db 00H, 00H, 00H, 00H, 0CAH, 86H, 00H, 00H      ; A93C _ ........
        db 00H, 00H, 00H, 00H, 00H, 1FH, 00H, 00H       ; A944 _ ........
        db 00H, 00H, 40H, 00H, 00H, 10H, 00H, 00H       ; A94C _ ..@.....
        db 00H, 00H, 00H, 00H, 00H, 01H, 00H, 00H       ; A954 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A95C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A964 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A96C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A974 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A97C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A984 _ ........
        db 00H, 00H, 00H, 00H, 0E6H, 86H, 00H, 00H      ; A98C _ ........
        db 00H, 00H, 00H, 00H, 16H, 1CH, 00H, 00H       ; A994 _ ........
        db 00H, 00H, 40H, 00H, 00H, 00H, 01H, 00H       ; A99C _ ..@.....
        db 00H, 00H, 00H, 00H, 00H, 01H, 00H, 00H       ; A9A4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A9AC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A9B4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A9BC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A9C4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A9CC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A9D4 _ ........
        db 00H, 00H, 00H, 00H, 0FCH, 86H, 00H, 00H      ; A9DC _ ........
        db 00H, 00H, 00H, 00H, 15H, 1CH, 00H, 00H       ; A9E4 _ ........
        db 00H, 00H, 20H, 00H, 00H, 00H, 01H, 00H       ; A9EC _ .. .....
        db 00H, 00H, 00H, 00H, 00H, 01H, 00H, 00H       ; A9F4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; A9FC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AA04 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AA0C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AA14 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AA1C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AA24 _ ........
        db 00H, 00H, 00H, 00H, 12H, 87H, 00H, 00H       ; AA2C _ ........
        db 00H, 00H, 00H, 00H, 16H, 0EFH, 00H, 00H      ; AA34 _ ........
        db 00H, 00H, 40H, 00H, 00H, 10H, 00H, 00H       ; AA3C _ ..@.....
        db 00H, 00H, 00H, 00H, 00H, 01H, 00H, 00H       ; AA44 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AA4C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AA54 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AA5C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AA64 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AA6C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AA74 _ ........
        db 00H, 00H, 00H, 00H, 2EH, 87H, 00H, 00H       ; AA7C _ ........
        db 00H, 00H, 00H, 00H, 17H, 0EFH, 00H, 00H      ; AA84 _ ........
        db 00H, 00H, 80H, 00H, 00H, 00H, 01H, 00H       ; AA8C _ ........
        db 00H, 00H, 00H, 00H, 00H, 01H, 00H, 00H       ; AA94 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AA9C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AAA4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AAAC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AAB4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AABC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AAC4 _ ........
        db 00H, 00H, 00H, 00H, 4AH, 87H, 00H, 00H       ; AACC _ ....J...
        db 00H, 00H, 00H, 00H, 17H, 20H, 00H, 00H       ; AAD4 _ ..... ..
        db 00H, 00H, 80H, 00H, 00H, 00H, 01H, 00H       ; AADC _ ........
        db 00H, 00H, 00H, 00H, 00H, 01H, 00H, 00H       ; AAE4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AAEC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AAF4 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AAFC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AB04 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AB0C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AB14 _ ........
        db 00H, 00H, 00H, 00H, 6AH, 87H, 00H, 00H       ; AB1C _ ....j...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AB24 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AB2C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AB34 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AB3C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AB44 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AB4C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AB54 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AB5C _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AB64 _ ........
        db 00H, 00H, 00H, 00H, 1BH, 3BH, 0FBH, 0F5H     ; AB6C _ .....;..
        db 0F8H, 0DFH, 0EDH, 44H, 99H, 0C3H, 61H, 42H   ; AB74 _ ...D..aB
        db 0E3H, 79H, 0FFH, 13H, 00H, 00H, 01H, 00H     ; AB7C _ .y......
        db 00H, 00H, 00H, 00H, 01H, 00H, 00H, 00H       ; AB84 _ ........
        db 00H, 00H, 00H, 00H, 1BH, 3BH, 0FBH, 0F5H     ; AB8C _ .....;..
        db 0F8H, 0DFH, 0EDH, 44H, 99H, 0C3H, 61H, 42H   ; AB94 _ ...D..aB
        db 0E3H, 79H, 0FFH, 13H, 01H, 00H, 00H, 00H     ; AB9C _ .y......
        db 00H, 00H, 00H, 00H, 75H, 67H, 2CH, 49H       ; ABA4 _ ....ug,I
        db 9DH, 0D1H, 0A3H, 42H, 0A3H, 2FH, 0E4H, 0EBH  ; ABAC _ ...B./..
        db 0F9H, 0D1H, 89H, 36H, 01H, 00H, 00H, 00H     ; ABB4 _ ...6....
        db 00H, 00H, 00H, 00H, 1BH, 3BH, 0FBH, 0F5H     ; ABBC _ .....;..
        db 0F8H, 0DFH, 0EDH, 44H, 99H, 0C3H, 61H, 42H   ; ABC4 _ ...D..aB
        db 0E3H, 79H, 0FFH, 13H, 03H, 2DH, 38H, 0CCH    ; ABCC _ .y...-8.
        db 68H, 90H, 66H, 44H, 99H, 77H, 25H, 0B6H      ; ABD4 _ h.fD.w%.
        db 55H, 1AH, 03H, 9EH, 0C6H, 0EFH, 56H, 11H     ; ABDC _ U.....V.
        db 32H, 0EAH, 96H, 43H, 0B5H, 0D5H, 26H, 93H    ; ABE4 _ 2..C..&.
        db 2EH, 83H, 0C3H, 13H, 01H, 00H, 00H, 00H      ; ABEC _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 01H, 00H       ; ABF4 _ ........
        db 0FFH, 0FFH, 0FFH, 00H                        ; ABFC _ ....

        db      256 dup (?)                             ; AC00 _ 

_data   ENDS

.reloc  SEGMENT BYTE 'CODE'                             ; section number 3

        add     byte ptr [rax+2C0000H], ah              ; AD00 _ 00. A0, 002C0000

?_600   label byte
        db 00H, 00H, 0D0H, 0A5H, 20H, 0A6H, 70H, 0A6H   ; AD06 _ .... .p.
        db 0C0H, 0A6H, 10H, 0A7H, 60H, 0A7H, 0B0H, 0A7H ; AD0E _ ....`...
        db 00H, 0A8H, 50H, 0A8H, 0A0H, 0A8H, 0F0H, 0A8H ; AD16 _ ..P.....
        db 40H, 0A9H, 90H, 0A9H, 0E0H, 0A9H, 30H, 0AAH  ; AD1E _ @.....0.
        db 80H, 0AAH, 0D0H, 0AAH, 20H, 0ABH, 00H, 00H   ; AD26 _ .... ...
        db 00H, 00H, 2EH, 74H, 65H, 78H, 74H, 00H       ; AD2E _ ...text.
        db 00H, 00H, 40H, 0A1H, 00H, 00H, 40H, 02H      ; AD36 _ ..@...@.
        db 00H, 00H                                     ; AD3E _ ..

.reloc  ENDS

.debug  SEGMENT BYTE                                    ; section number 4

        db 00H, 00H, 00H, 00H, 0E9H, 0D7H, 80H, 53H     ; AD40 _ .......S
        db 00H, 00H, 00H, 00H, 02H, 00H, 00H, 00H       ; AD48 _ ........
        db 15H, 00H, 00H, 00H, 5CH, 0ADH, 00H, 00H      ; AD50 _ ....\...
        db 5CH, 0ADH, 00H, 00H, 4DH, 54H, 4FH, 43H      ; AD58 _ \...MTOC
        db 69H, 0FCH, 84H, 0EH, 0CCH, 29H, 6DH, 4CH     ; AD60 _ i....)mL
        db 92H, 0ACH, 6DH, 47H, 69H, 21H, 85H, 0FH      ; AD68 _ ..mGi!..
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AD70 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; AD78 _ ........

.debug  ENDS

; Error: Symbol ?_504 has a non-existing address. Section: 1 Offset: 0000A15CH
; Error: Symbol ?_505 has a non-existing address. Section: 1 Offset: 0000A16CH
; Error: Symbol ?_506 has a non-existing address. Section: 1 Offset: 0000A17CH
; Error: Symbol ?_507 has a non-existing address. Section: 1 Offset: 0000A18CH
; Error: Symbol ?_508 has a non-existing address. Section: 1 Offset: 0000A19CH
; Error: Symbol ?_509 has a non-existing address. Section: 1 Offset: 0000A1ACH
; Error: Symbol ?_510 has a non-existing address. Section: 1 Offset: 0000A1BCH
; Error: Symbol ?_511 has a non-existing address. Section: 1 Offset: 0000A1CCH
; Error: Symbol ?_512 has a non-existing address. Section: 1 Offset: 0000A1DCH
; Error: Symbol ?_513 has a non-existing address. Section: 1 Offset: 0000A1ECH
; Error: Symbol ?_514 has a non-existing address. Section: 1 Offset: 0000A1FCH
; Error: Symbol ?_515 has a non-existing address. Section: 1 Offset: 0000A20CH
; Error: Symbol ?_516 has a non-existing address. Section: 1 Offset: 0000A21CH
; Error: Symbol ?_517 has a non-existing address. Section: 1 Offset: 0000A22CH
; Error: Symbol ?_518 has a non-existing address. Section: 1 Offset: 0000A23CH
; Error: Symbol ?_519 has a non-existing address. Section: 1 Offset: 0000A24CH
; Error: Symbol ?_520 has a non-existing address. Section: 1 Offset: 0000A25CH
; Error: Symbol ?_521 has a non-existing address. Section: 1 Offset: 0000A26CH
; Error: Symbol ?_522 has a non-existing address. Section: 1 Offset: 0000A27CH
; Error: Symbol ?_523 has a non-existing address. Section: 1 Offset: 0000A28CH
; Error: Symbol ?_524 has a non-existing address. Section: 1 Offset: 0000A29CH
; Error: Symbol ?_525 has a non-existing address. Section: 1 Offset: 0000A2ACH
; Error: Symbol ?_526 has a non-existing address. Section: 1 Offset: 0000A2BCH
; Error: Symbol ?_527 has a non-existing address. Section: 1 Offset: 0000A2CCH
; Error: Symbol ?_528 has a non-existing address. Section: 1 Offset: 0000A2DCH
; Error: Symbol ?_529 has a non-existing address. Section: 1 Offset: 0000A2ECH
; Error: Symbol ?_530 has a non-existing address. Section: 1 Offset: 0000A2FCH
; Error: Symbol ?_531 has a non-existing address. Section: 1 Offset: 0000A30CH
; Error: Symbol ?_532 has a non-existing address. Section: 1 Offset: 0000A31CH
; Error: Symbol ?_533 has a non-existing address. Section: 1 Offset: 0000A32CH
; Error: Symbol ?_534 has a non-existing address. Section: 1 Offset: 0000A33CH
; Error: Symbol ?_535 has a non-existing address. Section: 1 Offset: 0000A34CH
; Error: Symbol ?_536 has a non-existing address. Section: 1 Offset: 0000A35CH
; Error: Symbol ?_537 has a non-existing address. Section: 1 Offset: 0000A360H
; Error: Symbol ?_538 has a non-existing address. Section: 1 Offset: 0000A370H
; Error: Symbol ?_539 has a non-existing address. Section: 1 Offset: 0000A380H
; Error: Symbol ?_540 has a non-existing address. Section: 1 Offset: 0000A390H
; Error: Symbol ?_541 has a non-existing address. Section: 1 Offset: 0000A930H
; Error: Symbol ?_542 has a non-existing address. Section: 1 Offset: 0000A940H
; Error: Symbol ?_543 has a non-existing address. Section: 1 Offset: 0000A948H
; Error: Symbol ?_544 has a non-existing address. Section: 1 Offset: 0000A950H
; Error: Symbol ?_545 has a non-existing address. Section: 1 Offset: 0000A960H
; Error: Symbol ?_546 has a non-existing address. Section: 1 Offset: 0000A968H
; Error: Symbol ?_547 has a non-existing address. Section: 1 Offset: 0000A978H
; Error: Symbol ?_548 has a non-existing address. Section: 1 Offset: 0000A980H
; Error: Symbol ?_549 has a non-existing address. Section: 1 Offset: 0000A990H
; Error: Symbol ?_550 has a non-existing address. Section: 1 Offset: 0000A9A0H
; Error: Symbol ?_551 has a non-existing address. Section: 1 Offset: 0000A9B0H
; Error: Symbol ?_552 has a non-existing address. Section: 1 Offset: 0000A9B8H
; Error: Symbol ?_553 has a non-existing address. Section: 1 Offset: 0000A9BCH
; Error: Symbol ?_554 has a non-existing address. Section: 1 Offset: 0000A9C0H
; Error: Symbol ?_555 has a non-existing address. Section: 1 Offset: 0000A9C8H
; Error: Symbol ?_556 has a non-existing address. Section: 1 Offset: 0000A9D0H
; Error: Symbol ?_557 has a non-existing address. Section: 1 Offset: 0000A9D8H
; Error: Symbol ?_558 has a non-existing address. Section: 1 Offset: 0000A9E0H
; Error: Symbol ?_559 has a non-existing address. Section: 1 Offset: 0000A9E8H
; Error: Symbol ?_560 has a non-existing address. Section: 1 Offset: 0000A9F0H
; Error: Symbol ?_561 has a non-existing address. Section: 1 Offset: 0000A9F8H
; Error: Symbol ?_562 has a non-existing address. Section: 1 Offset: 0000AA00H
; Error: Symbol ?_563 has a non-existing address. Section: 1 Offset: 0000AA08H
; Error: Symbol ?_564 has a non-existing address. Section: 1 Offset: 0000AA10H
; Error: Symbol ?_565 has a non-existing address. Section: 1 Offset: 0000AA18H
; Error: Symbol ?_566 has a non-existing address. Section: 1 Offset: 0000AA1CH
; Error: Symbol ?_567 has a non-existing address. Section: 1 Offset: 0000AA20H
; Error: Symbol ?_568 has a non-existing address. Section: 1 Offset: 0000AA28H
; Error: Symbol ?_569 has a non-existing address. Section: 1 Offset: 0000AA30H
; Error: Symbol ?_570 has a non-existing address. Section: 1 Offset: 0000AA38H
; Error: Symbol ?_571 has a non-existing address. Section: 1 Offset: 0000AA39H
; Error: Symbol ?_572 has a non-existing address. Section: 1 Offset: 0000AA40H
; Error: Symbol ?_573 has a non-existing address. Section: 1 Offset: 0000AA48H
; Error: Symbol ?_574 has a non-existing address. Section: 1 Offset: 0000AA50H
; Error: Symbol ?_575 has a non-existing address. Section: 1 Offset: 0000AA58H
; Error: Symbol ?_576 has a non-existing address. Section: 1 Offset: 0000AA59H
; Error: Symbol ?_577 has a non-existing address. Section: 1 Offset: 0000AA60H
; Error: Symbol ?_578 has a non-existing address. Section: 1 Offset: 0000AA68H
; Error: Symbol ?_579 has a non-existing address. Section: 1 Offset: 0000AA70H
; Error: Symbol ?_580 has a non-existing address. Section: 1 Offset: 0000AA78H
; Error: Symbol ?_581 has a non-existing address. Section: 1 Offset: 0000AA80H
; Error: Symbol ?_582 has a non-existing address. Section: 1 Offset: 0000AA84H
; Error: Symbol ?_583 has a non-existing address. Section: 1 Offset: 0000AA88H
; Error: Symbol ?_584 has a non-existing address. Section: 1 Offset: 0000AA89H
; Error: Symbol ?_585 has a non-existing address. Section: 1 Offset: 0000AA90H
; Error: Symbol ?_586 has a non-existing address. Section: 1 Offset: 0000AA98H
; Error: Symbol ?_587 has a non-existing address. Section: 1 Offset: 0000AAB0H
; Error: Symbol ?_588 has a non-existing address. Section: 1 Offset: 0000AAB1H
; Error: Symbol ?_589 has a non-existing address. Section: 1 Offset: 0000AAB2H
; Error: Symbol ?_590 has a non-existing address. Section: 1 Offset: 0000AAB3H
; Error: Symbol ?_591 has a non-existing address. Section: 1 Offset: 0000AAB4H
; Error: Symbol ?_592 has a non-existing address. Section: 1 Offset: 0000AAB5H
; Error: Symbol ?_593 has a non-existing address. Section: 1 Offset: 0000AAB6H
; Error: Symbol ?_594 has a non-existing address. Section: 1 Offset: 0000AAB7H
; Error: Symbol ?_595 has a non-existing address. Section: 1 Offset: 0000AAB8H
; Error: Symbol ?_596 has a non-existing address. Section: 1 Offset: 0000AABAH
; Error: Symbol ?_597 has a non-existing address. Section: 1 Offset: 0000AABBH
; Error: Symbol Unnamed_1_2D00AA4F has a non-existing address. Section: 1 Offset: 2D00AA4FH
; Error: Symbol Unnamed_1_B2007E69 has a non-existing address. Section: 1 Offset: 0B2007E69H

END; Disassembly of file: 
; Tue Aug  2 02:30:27 2016
; Mode: 64 bits
; Syntax: MASM/ML64
; Instruction set: BMI etc., x64, privileged instructions

; Error: symbol names contain illegal characters,
; 11 Symbol names not changed

public _DebugPrint
public _DebugAssert
public _DebugAssertEnabled
public _DebugPrintEnabled
public _DebugPrintLevelEnabled
public _InternalMemSetMem
public _ZeroMem
public _CompareMem
public _SetMem
public _CopyMem
public _InternalMemZeroMem
public _InternalMemCompareMem
public _CopyGuid
public _CompareGuid
public _InternalMemCopyMem
public _InternalAssertJumpBuffer
public _DivU64x32Remainder
public _AsciiStrCpyS
public _StrLen
public _StrSize
public _AsciiStrSize
public _AsciiStrLen
public _AsciiStrCmp
public _AsciiStriCmp
public _AsciiStrnCmp
public _AsciiStrHexToUintn
public _m16Start
public _InternalAsmThunk16
public _InternalMathDivRemU64x32
public _ReadUnaligned16
public _ReadUnaligned32
public _ReadUnaligned64
public _WriteUnaligned64
public _InternalSwitchStack
public _SetJump
public _InternalLongJump
public _EnableDisableInterrupts
public _InternalX86DisablePaging64
public _AsmCpuid
public _AsmCpuidEx
public _AsmEnableCache
public _AsmDisableCache
public _AsmRdRand16
public _AsmRdRand32
public _AsmRdRand64
public _UefiBootServicesTableLibConstructor
public _InternalAllocateAlignedPages
public _AllocateAlignedPages
public _InternalAllocatePool
public _AllocatePool
public _InternalAllocateZeroPool
public _AllocateZeroPool
public _InternalAllocateCopyPool
public _AllocateCopyPool
public _FreePool
public _BasePrintLibValueToString
public _BasePrintLibSPrintMarker
public _BasePrintLibSPrint
public _UnicodeVSPrint
public _IsDevicePathEnd
public _DevicePathNodeLength
public _NextDevicePathNode
public _DevicePathType
public _DevicePathSubType
public _IsDevicePathEndType
public _UefiRuntimeServicesTableLibConstructor
public _UefiHiiServicesLibConstructor
public _InternalPrint
public _Print
public _EfiGetNameGuidFromFwVolDevicePathNode
public _UefiLibConstructor
public _EfiGetSystemConfigurationTable
public _GetVariable2
public _GetEfiGlobalVariable2
public _GetBestLanguage
public _HiiAddPackages
public _HiiGetString
public _HiiGetSupportedLanguages
public _DxeServicesTableLibConstructor
public __DriverUnloadHandler
public __ModuleEntryPoint
public _PerformUpdateOnFirmwareVolume
public _PerformUpdateOnFlashArea
public _PerformUpdate
public _ProcessUpdateImage
public _InitializeUpdateDriver
public _ProfileGetLine
public _ProfileTrim
public _ProfileGetComments
public _ProfileGetSection
public _ProfileGetEntry
public _FreeAllList
public _UpdateGetProfileString
public _UpdateAtoi
public _UpdateValueToString
public _UpdateStringToGuid
public _PreProcessDataFile
public _ParseUpdateDataFile
public _UpdateOneBlock
public _UpdateBufferInOneBlock
public _RetrieveLastWrite
public _FaultTolerantUpdateOnWholeFv
public _NonFaultTolerantUpdateOnWholeFv
public _PerformUpdateOnWholeFv
public _PerformUpdateOnFvFile
public _FaultTolerantUpdateOnPartFv
public _NonFaultTolerantUpdateOnPartFv
public _ProcessLibraryConstructorList
public _ProcessLibraryDestructorList
public _ProcessModuleEntryPointList
public _ProcessModuleUnloadList
public _mHexStr
public _mEndOfPakageList
public __gPcd_FixedAtBuild_PcdMaximumAsciiStringLength
public __gPcd_FixedAtBuild_PcdMaximumUnicodeStringLength
public __gPcd_FixedAtBuild_PcdUefiLibMaxPrintBufferSize
public __gUefiDriverRevision
public __gDriverUnloadImageCount
public _mStatusString
public _m16Size
public _mThunk16Attr
public _m16Gdt
public _m16GdtrBase
public _mTransition
public _gEfiCallerIdGuid
public _gEfiConfigFileNameGuid
public _gEfiUpdateDataFileGuid
public _gEfiGlobalVariableGuid
public _gEfiDxeServicesTableGuid
public _gEfiFaultTolerantWriteProtocolGuid
public _gEfiFirmwareVolume2ProtocolGuid
public _gEfiFirmwareVolumeBlockProtocolGuid
public _gEfiLoadedImageProtocolGuid
public _gEfiHiiFontProtocolGuid
public _gEfiHiiStringProtocolGuid
public _gEfiHiiImageProtocolGuid
public _gEfiHiiDatabaseProtocolGuid
public _gEfiHiiConfigRoutingProtocolGuid
public _UpdateDriverDxeStrings
public _gImageHandle
public _gST
public _gBS
public _gRT
public _gHiiFont
public _gHiiString
public _gHiiImage
public _gHiiDatabase
public _gHiiConfigRouting
public _gDS
public _gHiiHandle


__TEXT.__text SEGMENT ALIGN(8) 'CODE'                   ; section number 1

_DebugPrint PROC
        mov     qword ptr [rsp+20H], r9                 ; 0240 _ 4C: 89. 4C 24, 20
        mov     qword ptr [rsp+18H], r8                 ; 0245 _ 4C: 89. 44 24, 18
        ret                                             ; 024A _ C3
_DebugPrint ENDP

_DebugAssert PROC
        ret                                             ; 024B _ C3
_DebugAssert ENDP

_DebugAssertEnabled PROC
        xor     eax, eax                                ; 024C _ 31. C0
        ret                                             ; 024E _ C3
_DebugAssertEnabled ENDP

_DebugPrintEnabled PROC
        xor     eax, eax                                ; 024F _ 31. C0
        ret                                             ; 0251 _ C3
_DebugPrintEnabled ENDP

_DebugPrintLevelEnabled PROC
        xor     eax, eax                                ; 0252 _ 31. C0
        ret                                             ; 0254 _ C3
_DebugPrintLevelEnabled ENDP

_InternalMemSetMem PROC
        test    rdx, rdx                                ; 0255 _ 48: 85. D2
        jz      ?_002                                   ; 0258 _ 74, 0E
        mov     rax, rcx                                ; 025A _ 48: 89. C8
?_001:  mov     byte ptr [rax], r8b                     ; 025D _ 44: 88. 00
        inc     rax                                     ; 0260 _ 48: FF. C0
        dec     rdx                                     ; 0263 _ 48: FF. CA
        jnz     ?_001                                   ; 0266 _ 75, F5
?_002:  mov     rax, rcx                                ; 0268 _ 48: 89. C8
        ret                                             ; 026B _ C3
_InternalMemSetMem ENDP

_ZeroMem PROC
        push    rbp                                     ; 026C _ 55
        mov     rbp, rsp                                ; 026D _ 48: 89. E5
        push    rsi                                     ; 0270 _ 56
        push    rdi                                     ; 0271 _ 57
        sub     rsp, 32                                 ; 0272 _ 48: 83. EC, 20
        mov     rsi, rdx                                ; 0276 _ 48: 89. D6
        mov     rdi, rcx                                ; 0279 _ 48: 89. CF
        call    _DebugAssertEnabled                     ; 027C _ E8, FFFFFFCB
        test    rdi, rdi                                ; 0281 _ 48: 85. FF
        jnz     Unnamed_1_67                            ; 0284 _ 75, 21
        test    al, al                                  ; 0286 _ 84. C0
        jz      Unnamed_1_67                            ; 0288 _ 74, 1D
        test    rsi, rsi                                ; 028A _ 48: 85. F6
        jz      Unnamed_1_67                            ; 028D _ 74, 18
        lea     rcx, ptr [?_321]                        ; 028F _ 48: 8D. 0D, 000060BB(rel)
        lea     r8, ptr [?_322]                         ; 0296 _ 4C: 8D. 05, 00006115(rel)
        mov     edx, 49                                 ; 029D _ BA, 00000031
        call    _DebugAssert                            ; 02A2 _ E8, FFFFFFA4
Unnamed_1_67:
        call    _DebugAssertEnabled                     ; 02A7 _ E8, FFFFFFA0
        test    al, al                                  ; 02AC _ 84. C0
        jz      Unnamed_1_93                            ; 02AE _ 74, 23
        mov     rax, rdi                                ; 02B0 _ 48: 89. F8
        neg     rax                                     ; 02B3 _ 48: F7. D8
        cmp     rsi, rax                                ; 02B6 _ 48: 39. C6
        jbe     Unnamed_1_93                            ; 02B9 _ 76, 18
        lea     rcx, ptr [?_321]                        ; 02BB _ 48: 8D. 0D, 0000608F(rel)
        lea     r8, ptr [?_323]                         ; 02C2 _ 4C: 8D. 05, 00006111(rel)
        mov     edx, 50                                 ; 02C9 _ BA, 00000032
        call    _DebugAssert                            ; 02CE _ E8, FFFFFF78
Unnamed_1_93:
        mov     rcx, rdi                                ; 02D3 _ 48: 89. F9
        mov     rdx, rsi                                ; 02D6 _ 48: 89. F2
        add     rsp, 32                                 ; 02D9 _ 48: 83. C4, 20
        pop     rdi                                     ; 02DD _ 5F
        pop     rsi                                     ; 02DE _ 5E
        pop     rbp                                     ; 02DF _ 5D
        jmp     _InternalMemZeroMem                     ; 02E0 _ E9, 000001FF
_ZeroMem ENDP

_CompareMem PROC
        push    rbp                                     ; 02E5 _ 55
        mov     rbp, rsp                                ; 02E6 _ 48: 89. E5
        push    rsi                                     ; 02E9 _ 56
        push    rdi                                     ; 02EA _ 57
        push    rbx                                     ; 02EB _ 53
        sub     rsp, 40                                 ; 02EC _ 48: 83. EC, 28
        mov     rsi, r8                                 ; 02F0 _ 4C: 89. C6
        mov     rdi, rdx                                ; 02F3 _ 48: 89. D7
        mov     rbx, rcx                                ; 02F6 _ 48: 89. CB
        test    rsi, rsi                                ; 02F9 _ 48: 85. F6
        je      Unnamed_1_18D                           ; 02FC _ 0F 84, 000000CB
        cmp     rbx, rdi                                ; 0302 _ 48: 39. FB
        je      Unnamed_1_18D                           ; 0305 _ 0F 84, 000000C2
        call    _DebugAssertEnabled                     ; 030B _ E8, FFFFFF3C
        test    al, al                                  ; 0310 _ 84. C0
        jz      Unnamed_1_F1                            ; 0312 _ 74, 1D
        test    rbx, rbx                                ; 0314 _ 48: 85. DB
        jnz     Unnamed_1_F1                            ; 0317 _ 75, 18
        lea     rcx, ptr [?_324]                        ; 0319 _ 48: 8D. 0D, 000060F0(rel)
        lea     r8, ptr [?_325]                         ; 0320 _ 4C: 8D. 05, 0000614D(rel)
        mov     edx, 60                                 ; 0327 _ BA, 0000003C
        call    _DebugAssert                            ; 032C _ E8, FFFFFF1A
Unnamed_1_F1:
        call    _DebugAssertEnabled                     ; 0331 _ E8, FFFFFF16
        test    al, al                                  ; 0336 _ 84. C0
        jz      Unnamed_1_117                           ; 0338 _ 74, 1D
        test    rdi, rdi                                ; 033A _ 48: 85. FF
        jnz     Unnamed_1_117                           ; 033D _ 75, 18
        lea     rcx, ptr [?_324]                        ; 033F _ 48: 8D. 0D, 000060CA(rel)
        lea     r8, ptr [?_326]                         ; 0346 _ 4C: 8D. 05, 00006149(rel)
        mov     edx, 61                                 ; 034D _ BA, 0000003D
        call    _DebugAssert                            ; 0352 _ E8, FFFFFEF4
Unnamed_1_117:
        call    _DebugAssertEnabled                     ; 0357 _ E8, FFFFFEF0
        test    al, al                                  ; 035C _ 84. C0
        jz      Unnamed_1_147                           ; 035E _ 74, 27
        mov     rax, rbx                                ; 0360 _ 48: 89. D8
        not     rax                                     ; 0363 _ 48: F7. D0
        lea     rcx, ptr [rsi-1H]                       ; 0366 _ 48: 8D. 4E, FF
        cmp     rcx, rax                                ; 036A _ 48: 39. C1
        jbe     Unnamed_1_147                           ; 036D _ 76, 18
        lea     rcx, ptr [?_324]                        ; 036F _ 48: 8D. 0D, 0000609A(rel)
        lea     r8, ptr [?_327]                         ; 0376 _ 4C: 8D. 05, 00006136(rel)
        mov     edx, 62                                 ; 037D _ BA, 0000003E
        call    _DebugAssert                            ; 0382 _ E8, FFFFFEC4
Unnamed_1_147:
        call    _DebugAssertEnabled                     ; 0387 _ E8, FFFFFEC0
        test    al, al                                  ; 038C _ 84. C0
        jz      Unnamed_1_177                           ; 038E _ 74, 27
        mov     rax, rdi                                ; 0390 _ 48: 89. F8
        not     rax                                     ; 0393 _ 48: F7. D0
        lea     rcx, ptr [rsi-1H]                       ; 0396 _ 48: 8D. 4E, FF
        cmp     rcx, rax                                ; 039A _ 48: 39. C1
        jbe     Unnamed_1_177                           ; 039D _ 76, 18
        lea     rcx, ptr [?_324]                        ; 039F _ 48: 8D. 0D, 0000606A(rel)
        lea     r8, ptr [?_328]                         ; 03A6 _ 4C: 8D. 05, 00006149(rel)
        mov     edx, 63                                 ; 03AD _ BA, 0000003F
        call    _DebugAssert                            ; 03B2 _ E8, FFFFFE94
Unnamed_1_177:
        mov     rcx, rbx                                ; 03B7 _ 48: 89. D9
        mov     rdx, rdi                                ; 03BA _ 48: 89. FA
        mov     r8, rsi                                 ; 03BD _ 49: 89. F0
        add     rsp, 40                                 ; 03C0 _ 48: 83. C4, 28
        pop     rbx                                     ; 03C4 _ 5B
        pop     rdi                                     ; 03C5 _ 5F
        pop     rsi                                     ; 03C6 _ 5E
        pop     rbp                                     ; 03C7 _ 5D
        jmp     _InternalMemCompareMem                  ; 03C8 _ E9, 0000011F
_CompareMem ENDP

Unnamed_1_18D LABEL NEAR
        xor     eax, eax                                ; 03CD _ 31. C0
        add     rsp, 40                                 ; 03CF _ 48: 83. C4, 28
        pop     rbx                                     ; 03D3 _ 5B
        pop     rdi                                     ; 03D4 _ 5F
        pop     rsi                                     ; 03D5 _ 5E
        pop     rbp                                     ; 03D6 _ 5D
        ret                                             ; 03D7 _ C3

_SetMem PROC
        push    rbp                                     ; 03D8 _ 55
        mov     rbp, rsp                                ; 03D9 _ 48: 89. E5
        push    rsi                                     ; 03DC _ 56
        push    rdi                                     ; 03DD _ 57
        push    rbx                                     ; 03DE _ 53
        sub     rsp, 40                                 ; 03DF _ 48: 83. EC, 28
        mov     ebx, r8d                                ; 03E3 _ 44: 89. C3
        mov     rsi, rdx                                ; 03E6 _ 48: 89. D6
        mov     rdi, rcx                                ; 03E9 _ 48: 89. CF
        test    rsi, rsi                                ; 03EC _ 48: 85. F6
        jz      ?_003                                   ; 03EF _ 74, 47
        call    _DebugAssertEnabled                     ; 03F1 _ E8, FFFFFE56
        test    al, al                                  ; 03F6 _ 84. C0
        jz      Unnamed_1_1E1                           ; 03F8 _ 74, 27
        mov     rax, rdi                                ; 03FA _ 48: 89. F8
        not     rax                                     ; 03FD _ 48: F7. D0
        lea     rcx, ptr [rsi-1H]                       ; 0400 _ 48: 8D. 4E, FF
        cmp     rcx, rax                                ; 0404 _ 48: 39. C1
        jbe     Unnamed_1_1E1                           ; 0407 _ 76, 18
        lea     rcx, ptr [?_329]                        ; 0409 _ 48: 8D. 0D, 00006124(rel)
        lea     r8, ptr [?_320]                         ; 0410 _ 4C: 8D. 05, 00005F02(rel)
        mov     edx, 54                                 ; 0417 _ BA, 00000036
        call    _DebugAssert                            ; 041C _ E8, FFFFFE2A
Unnamed_1_1E1:
        movzx   r8d, bl                                 ; 0421 _ 44: 0F B6. C3
        mov     rcx, rdi                                ; 0425 _ 48: 89. F9
        mov     rdx, rsi                                ; 0428 _ 48: 89. F2
        add     rsp, 40                                 ; 042B _ 48: 83. C4, 28
        pop     rbx                                     ; 042F _ 5B
        pop     rdi                                     ; 0430 _ 5F
        pop     rsi                                     ; 0431 _ 5E
        pop     rbp                                     ; 0432 _ 5D
        jmp     _InternalMemSetMem                      ; 0433 _ E9, FFFFFE1D
_SetMem ENDP

?_003   LABEL NEAR
        mov     rax, rdi                                ; 0438 _ 48: 89. F8
        add     rsp, 40                                 ; 043B _ 48: 83. C4, 28
        pop     rbx                                     ; 043F _ 5B
        pop     rdi                                     ; 0440 _ 5F
        pop     rsi                                     ; 0441 _ 5E
        pop     rbp                                     ; 0442 _ 5D
        ret                                             ; 0443 _ C3

_CopyMem PROC
        push    rbp                                     ; 0444 _ 55
        mov     rbp, rsp                                ; 0445 _ 48: 89. E5
        push    rsi                                     ; 0448 _ 56
        push    rdi                                     ; 0449 _ 57
        push    rbx                                     ; 044A _ 53
        sub     rsp, 40                                 ; 044B _ 48: 83. EC, 28
        mov     rsi, r8                                 ; 044F _ 4C: 89. C6
        mov     rdi, rdx                                ; 0452 _ 48: 89. D7
        mov     rbx, rcx                                ; 0455 _ 48: 89. CB
        test    rsi, rsi                                ; 0458 _ 48: 85. F6
        jz      ?_004                                   ; 045B _ 74, 65
        call    _DebugAssertEnabled                     ; 045D _ E8, FFFFFDEA
        test    al, al                                  ; 0462 _ 84. C0
        jz      Unnamed_1_24D                           ; 0464 _ 74, 27
        mov     rax, rbx                                ; 0466 _ 48: 89. D8
        not     rax                                     ; 0469 _ 48: F7. D0
        lea     rcx, ptr [rsi-1H]                       ; 046C _ 48: 8D. 4E, FF
        cmp     rcx, rax                                ; 0470 _ 48: 39. C1
        jbe     Unnamed_1_24D                           ; 0473 _ 76, 18
        lea     rcx, ptr [?_330]                        ; 0475 _ 48: 8D. 0D, 00006118(rel)
        lea     r8, ptr [?_327]                         ; 047C _ 4C: 8D. 05, 00006030(rel)
        mov     edx, 56                                 ; 0483 _ BA, 00000038
        call    _DebugAssert                            ; 0488 _ E8, FFFFFDBE
Unnamed_1_24D:
        call    _DebugAssertEnabled                     ; 048D _ E8, FFFFFDBA
        test    al, al                                  ; 0492 _ 84. C0
        jz      Unnamed_1_27D                           ; 0494 _ 74, 27
        mov     rax, rdi                                ; 0496 _ 48: 89. F8
        not     rax                                     ; 0499 _ 48: F7. D0
        lea     rcx, ptr [rsi-1H]                       ; 049C _ 48: 8D. 4E, FF
        cmp     rcx, rax                                ; 04A0 _ 48: 39. C1
        jbe     Unnamed_1_27D                           ; 04A3 _ 76, 18
        lea     rcx, ptr [?_330]                        ; 04A5 _ 48: 8D. 0D, 000060E8(rel)
        lea     r8, ptr [?_328]                         ; 04AC _ 4C: 8D. 05, 00006043(rel)
        mov     edx, 57                                 ; 04B3 _ BA, 00000039
        call    _DebugAssert                            ; 04B8 _ E8, FFFFFD8E
Unnamed_1_27D:
        cmp     rbx, rdi                                ; 04BD _ 48: 39. FB
        jnz     ?_005                                   ; 04C0 _ 75, 0C
?_004:  mov     rax, rbx                                ; 04C2 _ 48: 89. D8
        add     rsp, 40                                 ; 04C5 _ 48: 83. C4, 28
        pop     rbx                                     ; 04C9 _ 5B
        pop     rdi                                     ; 04CA _ 5F
        pop     rsi                                     ; 04CB _ 5E
        pop     rbp                                     ; 04CC _ 5D
        ret                                             ; 04CD _ C3
_CopyMem ENDP

?_005   LABEL NEAR
        mov     rcx, rbx                                ; 04CE _ 48: 89. D9
        mov     rdx, rdi                                ; 04D1 _ 48: 89. FA
        mov     r8, rsi                                 ; 04D4 _ 49: 89. F0
        add     rsp, 40                                 ; 04D7 _ 48: 83. C4, 28
        pop     rbx                                     ; 04DB _ 5B
        pop     rdi                                     ; 04DC _ 5F
        pop     rsi                                     ; 04DD _ 5E
        pop     rbp                                     ; 04DE _ 5D
        jmp     _InternalMemCopyMem                     ; 04DF _ E9, 000000CC

_InternalMemZeroMem PROC
        xor     r8d, r8d                                ; 04E4 _ 45: 31. C0
        jmp     _InternalMemSetMem                      ; 04E7 _ E9, FFFFFD69
_InternalMemZeroMem ENDP

_InternalMemCompareMem PROC
        mov     r9d, 1                                  ; 04EC _ 41: B9, 00000001
        sub     r9, r8                                  ; 04F2 _ 4D: 29. C1
        jmp     ?_006                                   ; 04F5 _ EB, 09

Unnamed_1_2B7:
        inc     r9                                      ; 04F7 _ 49: FF. C1
        inc     rdx                                     ; 04FA _ 48: FF. C2
        inc     rcx                                     ; 04FD _ 48: FF. C1
?_006:  mov     al, byte ptr [rdx]                      ; 0500 _ 8A. 02
        mov     r8b, byte ptr [rcx]                     ; 0502 _ 44: 8A. 01
        test    r9, r9                                  ; 0505 _ 4D: 85. C9
        jz      ?_007                                   ; 0508 _ 74, 05
        cmp     r8b, al                                 ; 050A _ 41: 38. C0
        jz      Unnamed_1_2B7                           ; 050D _ 74, E8
?_007:  movzx   ecx, al                                 ; 050F _ 0F B6. C8
        movzx   eax, r8b                                ; 0512 _ 41: 0F B6. C0
        sub     rax, rcx                                ; 0516 _ 48: 29. C8
        ret                                             ; 0519 _ C3
_InternalMemCompareMem ENDP

_CopyGuid PROC
        push    rbp                                     ; 051A _ 55
        mov     rbp, rsp                                ; 051B _ 48: 89. E5
        push    rsi                                     ; 051E _ 56
        push    rdi                                     ; 051F _ 57
        sub     rsp, 32                                 ; 0520 _ 48: 83. EC, 20
        mov     rdi, rdx                                ; 0524 _ 48: 89. D7
        mov     rsi, rcx                                ; 0527 _ 48: 89. CE
        mov     rcx, rdi                                ; 052A _ 48: 89. F9
        call    _ReadUnaligned64                        ; 052D _ E8, 00000B6D
        mov     rcx, rsi                                ; 0532 _ 48: 89. F1
        mov     rdx, rax                                ; 0535 _ 48: 89. C2
        call    _WriteUnaligned64                       ; 0538 _ E8, 00000B9E
        lea     rcx, ptr [rdi+8H]                       ; 053D _ 48: 8D. 4F, 08
        call    _ReadUnaligned64                        ; 0541 _ E8, 00000B59
        lea     rcx, ptr [rsi+8H]                       ; 0546 _ 48: 8D. 4E, 08
        mov     rdx, rax                                ; 054A _ 48: 89. C2
        call    _WriteUnaligned64                       ; 054D _ E8, 00000B89
        mov     rax, rsi                                ; 0552 _ 48: 89. F0
        add     rsp, 32                                 ; 0555 _ 48: 83. C4, 20
        pop     rdi                                     ; 0559 _ 5F
        pop     rsi                                     ; 055A _ 5E
        pop     rbp                                     ; 055B _ 5D
        ret                                             ; 055C _ C3
_CopyGuid ENDP

_CompareGuid PROC
        push    rbp                                     ; 055D _ 55
        mov     rbp, rsp                                ; 055E _ 48: 89. E5
        push    rsi                                     ; 0561 _ 56
        push    rdi                                     ; 0562 _ 57
        push    rbx                                     ; 0563 _ 53
        sub     rsp, 40                                 ; 0564 _ 48: 83. EC, 28
        mov     rsi, rdx                                ; 0568 _ 48: 89. D6
        mov     rdi, rcx                                ; 056B _ 48: 89. CF
        call    _ReadUnaligned64                        ; 056E _ E8, 00000B2C
        mov     rbx, rax                                ; 0573 _ 48: 89. C3
        mov     rcx, rsi                                ; 0576 _ 48: 89. F1
        call    _ReadUnaligned64                        ; 0579 _ E8, 00000B21
        cmp     rbx, rax                                ; 057E _ 48: 39. C3
        sete    bl                                      ; 0581 _ 0F 94. C3
        add     rdi, 8                                  ; 0584 _ 48: 83. C7, 08
        mov     rcx, rdi                                ; 0588 _ 48: 89. F9
        call    _ReadUnaligned64                        ; 058B _ E8, 00000B0F
        mov     rdi, rax                                ; 0590 _ 48: 89. C7
        lea     rcx, ptr [rsi+8H]                       ; 0593 _ 48: 8D. 4E, 08
        call    _ReadUnaligned64                        ; 0597 _ E8, 00000B03
        cmp     rdi, rax                                ; 059C _ 48: 39. C7
        sete    al                                      ; 059F _ 0F 94. C0
        and     al, bl                                  ; 05A2 _ 20. D8
        movzx   eax, al                                 ; 05A4 _ 0F B6. C0
        add     rsp, 40                                 ; 05A7 _ 48: 83. C4, 28
        pop     rbx                                     ; 05AB _ 5B
        pop     rdi                                     ; 05AC _ 5F
        pop     rsi                                     ; 05AD _ 5E
        pop     rbp                                     ; 05AE _ 5D
        ret                                             ; 05AF _ C3
_CompareGuid ENDP

_InternalMemCopyMem PROC
        cmp     rdx, rcx                                ; 05B0 _ 48: 39. CA
        jbe     ?_009                                   ; 05B3 _ 76, 1A
        test    r8, r8                                  ; 05B5 _ 4D: 85. C0
        jz      Unnamed_1_3A5                           ; 05B8 _ 74, 2B
        mov     r9, rcx                                 ; 05BA _ 49: 89. C9
?_008:  mov     al, byte ptr [rdx]                      ; 05BD _ 8A. 02
        mov     byte ptr [r9], al                       ; 05BF _ 41: 88. 01
        inc     r9                                      ; 05C2 _ 49: FF. C1
        inc     rdx                                     ; 05C5 _ 48: FF. C2
        dec     r8                                      ; 05C8 _ 49: FF. C8
        jnz     ?_008                                   ; 05CB _ 75, F0
        jmp     Unnamed_1_3A5                           ; 05CD _ EB, 16

?_009:  jnc     Unnamed_1_3A5                           ; 05CF _ 73, 14
        test    r8, r8                                  ; 05D1 _ 4D: 85. C0
        jz      Unnamed_1_3A5                           ; 05D4 _ 74, 0F
?_010:  mov     al, byte ptr [rdx+r8-1H]                ; 05D6 _ 42: 8A. 44 02, FF
        mov     byte ptr [rcx+r8-1H], al                ; 05DB _ 42: 88. 44 01, FF
        dec     r8                                      ; 05E0 _ 49: FF. C8
        jnz     ?_010                                   ; 05E3 _ 75, F1
Unnamed_1_3A5:
        mov     rax, rcx                                ; 05E5 _ 48: 89. C8
        ret                                             ; 05E8 _ C3
_InternalMemCopyMem ENDP

_InternalAssertJumpBuffer PROC
        push    rbp                                     ; 05E9 _ 55
        mov     rbp, rsp                                ; 05EA _ 48: 89. E5
        push    rsi                                     ; 05ED _ 56
        sub     rsp, 40                                 ; 05EE _ 48: 83. EC, 28
        mov     rsi, rcx                                ; 05F2 _ 48: 89. CE
        call    _DebugAssertEnabled                     ; 05F5 _ E8, FFFFFC52
        test    al, al                                  ; 05FA _ 84. C0
        jz      Unnamed_1_3DB                           ; 05FC _ 74, 1D
        test    rsi, rsi                                ; 05FE _ 48: 85. F6
        jnz     Unnamed_1_3DB                           ; 0601 _ 75, 18
        lea     rcx, ptr [?_331]                        ; 0603 _ 48: 8D. 0D, 00005FEB(rel)
        lea     r8, ptr [?_332]                         ; 060A _ 4C: 8D. 05, 00006038(rel)
        mov     edx, 37                                 ; 0611 _ BA, 00000025
        call    _DebugAssert                            ; 0616 _ E8, FFFFFC30
Unnamed_1_3DB:
        call    _DebugAssertEnabled                     ; 061B _ E8, FFFFFC2C
        test    al, al                                  ; 0620 _ 84. C0
        jz      ?_011                                   ; 0622 _ 74, 06
        test    sil, 07H                                ; 0624 _ 40: F6. C6, 07
        jnz     ?_012                                   ; 0628 _ 75, 07
?_011:  add     rsp, 40                                 ; 062A _ 48: 83. C4, 28
        pop     rsi                                     ; 062E _ 5E
        pop     rbp                                     ; 062F _ 5D
        ret                                             ; 0630 _ C3
_InternalAssertJumpBuffer ENDP

?_012   LABEL NEAR
        lea     rcx, ptr [?_331]                        ; 0631 _ 48: 8D. 0D, 00005FBD(rel)
        lea     r8, ptr [?_333]                         ; 0638 _ 4C: 8D. 05, 00006025(rel)
        mov     edx, 39                                 ; 063F _ BA, 00000027
        add     rsp, 40                                 ; 0644 _ 48: 83. C4, 28
        pop     rsi                                     ; 0648 _ 5E
        pop     rbp                                     ; 0649 _ 5D
        jmp     _DebugAssert                            ; 064A _ E9, FFFFFBFC

_DivU64x32Remainder PROC
        push    rbp                                     ; 064F _ 55
        mov     rbp, rsp                                ; 0650 _ 48: 89. E5
        push    rsi                                     ; 0653 _ 56
        push    rdi                                     ; 0654 _ 57
        push    rbx                                     ; 0655 _ 53
        sub     rsp, 40                                 ; 0656 _ 48: 83. EC, 28
        mov     rsi, r8                                 ; 065A _ 4C: 89. C6
        mov     edi, edx                                ; 065D _ 89. D7
        mov     rbx, rcx                                ; 065F _ 48: 89. CB
        call    _DebugAssertEnabled                     ; 0662 _ E8, FFFFFBE5
        test    al, al                                  ; 0667 _ 84. C0
        jz      Unnamed_1_447                           ; 0669 _ 74, 1C
        test    edi, edi                                ; 066B _ 85. FF
        jnz     Unnamed_1_447                           ; 066D _ 75, 18
        lea     rcx, ptr [?_335]                        ; 066F _ 48: 8D. 0D, 0000601E(rel)
        lea     r8, ptr [?_334]                         ; 0676 _ 4C: 8D. 05, 0000600A(rel)
        mov     edx, 47                                 ; 067D _ BA, 0000002F
        call    _DebugAssert                            ; 0682 _ E8, FFFFFBC4
Unnamed_1_447:
        mov     rcx, rbx                                ; 0687 _ 48: 89. D9
        mov     edx, edi                                ; 068A _ 89. FA
        mov     r8, rsi                                 ; 068C _ 49: 89. F0
        add     rsp, 40                                 ; 068F _ 48: 83. C4, 28
        pop     rbx                                     ; 0693 _ 5B
        pop     rdi                                     ; 0694 _ 5F
        pop     rsi                                     ; 0695 _ 5E
        pop     rbp                                     ; 0696 _ 5D
        jmp     _InternalMathDivRemU64x32               ; 0697 _ E9, 00000970
_DivU64x32Remainder ENDP

_AsciiStrCpyS PROC
        push    rbp                                     ; 069C _ 55
        mov     rbp, rsp                                ; 069D _ 48: 89. E5
        push    r14                                     ; 06A0 _ 41: 56
        push    rsi                                     ; 06A2 _ 56
        push    rdi                                     ; 06A3 _ 57
        push    rbx                                     ; 06A4 _ 53
        sub     rsp, 32                                 ; 06A5 _ 48: 83. EC, 20
        mov     rdi, r8                                 ; 06A9 _ 4C: 89. C7
        mov     r14, rdx                                ; 06AC _ 49: 89. D6
        mov     rsi, rcx                                ; 06AF _ 48: 89. CE
        call    _DebugAssertEnabled                     ; 06B2 _ E8, FFFFFB95
        test    al, al                                  ; 06B7 _ 84. C0
        jz      Unnamed_1_498                           ; 06B9 _ 74, 1D
        test    rsi, rsi                                ; 06BB _ 48: 85. F6
        jnz     Unnamed_1_498                           ; 06BE _ 75, 18
        lea     rcx, ptr [?_337]                        ; 06C0 _ 48: 8D. 0D, 00006041(rel)
        lea     r8, ptr [?_339]                         ; 06C7 _ 4C: 8D. 05, 000060B4(rel)
        mov     edx, 618                                ; 06CE _ BA, 0000026A
        call    _DebugAssert                            ; 06D3 _ E8, FFFFFB73
Unnamed_1_498:
        mov     rax, 8000000000000002H                  ; 06D8 _ 48: B8, 8000000000000002
        test    rsi, rsi                                ; 06E2 _ 48: 85. F6
        je      Unnamed_1_636                           ; 06E5 _ 0F 84, 0000018B
        call    _DebugAssertEnabled                     ; 06EB _ E8, FFFFFB5C
        test    al, al                                  ; 06F0 _ 84. C0
        jz      Unnamed_1_4D1                           ; 06F2 _ 74, 1D
        test    rdi, rdi                                ; 06F4 _ 48: 85. FF
        jnz     Unnamed_1_4D1                           ; 06F7 _ 75, 18
        lea     rcx, ptr [?_337]                        ; 06F9 _ 48: 8D. 0D, 00006008(rel)
        lea     r8, ptr [?_340]                         ; 0700 _ 4C: 8D. 05, 00006099(rel)
        mov     edx, 619                                ; 0707 _ BA, 0000026B
        call    _DebugAssert                            ; 070C _ E8, FFFFFB3A
Unnamed_1_4D1:
        mov     rax, 8000000000000002H                  ; 0711 _ 48: B8, 8000000000000002
        test    rdi, rdi                                ; 071B _ 48: 85. FF
        je      Unnamed_1_636                           ; 071E _ 0F 84, 00000152
        mov     ebx, dword ptr [__gPcd_FixedAtBuild_PcdMaximumAsciiStringLength]; 0724 _ 8B. 1D, 000072CA(rel)
        test    rbx, rbx                                ; 072A _ 48: 85. DB
        jz      ?_013                                   ; 072D _ 74, 39
        call    _DebugAssertEnabled                     ; 072F _ E8, FFFFFB18
        test    al, al                                  ; 0734 _ 84. C0
        jz      Unnamed_1_515                           ; 0736 _ 74, 1D
        cmp     rbx, r14                                ; 0738 _ 4C: 39. F3
        jnc     Unnamed_1_515                           ; 073B _ 73, 18
        lea     rcx, ptr [?_337]                        ; 073D _ 48: 8D. 0D, 00005FC4(rel)
        lea     r8, ptr [?_343]                         ; 0744 _ 4C: 8D. 05, 00006093(rel)
        mov     edx, 625                                ; 074B _ BA, 00000271
        call    _DebugAssert                            ; 0750 _ E8, FFFFFAF6
Unnamed_1_515:
        mov     rax, 8000000000000002H                  ; 0755 _ 48: B8, 8000000000000002
        cmp     rbx, r14                                ; 075F _ 4C: 39. F3
        jc      Unnamed_1_636                           ; 0762 _ 0F 82, 0000010E
?_013:  call    _DebugAssertEnabled                     ; 0768 _ E8, FFFFFADF
        test    al, al                                  ; 076D _ 84. C0
        jz      Unnamed_1_54E                           ; 076F _ 74, 1D
        test    r14, r14                                ; 0771 _ 4D: 85. F6
        jnz     Unnamed_1_54E                           ; 0774 _ 75, 18
        lea     rcx, ptr [?_337]                        ; 0776 _ 48: 8D. 0D, 00005F8B(rel)
        lea     r8, ptr [?_341]                         ; 077D _ 4C: 8D. 05, 00006035(rel)
        mov     edx, 631                                ; 0784 _ BA, 00000277
        call    _DebugAssert                            ; 0789 _ E8, FFFFFABD
Unnamed_1_54E:
        mov     rax, 8000000000000002H                  ; 078E _ 48: B8, 8000000000000002
        test    r14, r14                                ; 0798 _ 4D: 85. F6
        je      Unnamed_1_636                           ; 079B _ 0F 84, 000000D5
        xor     ebx, ebx                                ; 07A1 _ 31. DB
        jmp     ?_014                                   ; 07A3 _ EB, 03

Unnamed_1_565:
        inc     rbx                                     ; 07A5 _ 48: FF. C3
?_014:  cmp     rbx, r14                                ; 07A8 _ 4C: 39. F3
        jnc     ?_015                                   ; 07AB _ 73, 06
        cmp     byte ptr [rdi+rbx], 0                   ; 07AD _ 80. 3C 1F, 00
        jnz     Unnamed_1_565                           ; 07B1 _ 75, F2
?_015:  call    _DebugAssertEnabled                     ; 07B3 _ E8, FFFFFA94
        test    al, al                                  ; 07B8 _ 84. C0
        jz      Unnamed_1_599                           ; 07BA _ 74, 1D
        cmp     rbx, r14                                ; 07BC _ 4C: 39. F3
        jc      Unnamed_1_599                           ; 07BF _ 72, 18
        lea     rcx, ptr [?_337]                        ; 07C1 _ 48: 8D. 0D, 00005F40(rel)
        lea     r8, ptr [?_342]                         ; 07C8 _ 4C: 8D. 05, 00005FF9(rel)
        mov     edx, 637                                ; 07CF _ BA, 0000027D
        call    _DebugAssert                            ; 07D4 _ E8, FFFFFA72
Unnamed_1_599:
        mov     rax, 8000000000000005H                  ; 07D9 _ 48: B8, 8000000000000005
        cmp     rbx, r14                                ; 07E3 _ 4C: 39. F3
        jnc     Unnamed_1_636                           ; 07E6 _ 0F 83, 0000008A
        call    _DebugAssertEnabled                     ; 07EC _ E8, FFFFFA5B
        test    al, al                                  ; 07F1 _ 84. C0
        jz      Unnamed_1_5EA                           ; 07F3 _ 74, 35
        cmp     rsi, rdi                                ; 07F5 _ 48: 39. FE
        jc      ?_016                                   ; 07F8 _ 72, 0A
        lea     rax, ptr [rdi+rbx+1H]                   ; 07FA _ 48: 8D. 44 1F, 01
        cmp     rsi, rax                                ; 07FF _ 48: 39. C6
        jc      ?_017                                   ; 0802 _ 72, 0E
?_016:  cmp     rdi, rsi                                ; 0804 _ 48: 39. F7
        jc      Unnamed_1_5EA                           ; 0807 _ 72, 21
        lea     rax, ptr [rsi+r14]                      ; 0809 _ 4A: 8D. 04 36
        cmp     rdi, rax                                ; 080D _ 48: 39. C7
        jnc     Unnamed_1_5EA                           ; 0810 _ 73, 18
?_017:  lea     rcx, ptr [?_337]                        ; 0812 _ 48: 8D. 0D, 00005EEF(rel)
        lea     r8, ptr [?_344]                         ; 0819 _ 4C: 8D. 05, 00005FFC(rel)
        mov     edx, 642                                ; 0820 _ BA, 00000282
        call    _DebugAssert                            ; 0825 _ E8, FFFFFA21
Unnamed_1_5EA:
        cmp     rsi, rdi                                ; 082A _ 48: 39. FE
        jc      ?_018                                   ; 082D _ 72, 14
        lea     rcx, ptr [rdi+rbx+1H]                   ; 082F _ 48: 8D. 4C 1F, 01
        mov     rax, 800000000000000FH                  ; 0834 _ 48: B8, 800000000000000F
        cmp     rsi, rcx                                ; 083E _ 48: 39. CE
        jc      Unnamed_1_636                           ; 0841 _ 72, 33
?_018:  cmp     rdi, rsi                                ; 0843 _ 48: 39. F7
        jc      ?_019                                   ; 0846 _ 72, 12
        add     r14, rsi                                ; 0848 _ 49: 01. F6
        mov     rax, 800000000000000FH                  ; 084B _ 48: B8, 800000000000000F
        cmp     rdi, r14                                ; 0855 _ 4C: 39. F7
        jc      Unnamed_1_636                           ; 0858 _ 72, 1C
?_019:  mov     al, byte ptr [rdi]                      ; 085A _ 8A. 07
        test    al, al                                  ; 085C _ 84. C0
        jz      ?_021                                   ; 085E _ 74, 11
        inc     rdi                                     ; 0860 _ 48: FF. C7
?_020:  mov     byte ptr [rsi], al                      ; 0863 _ 88. 06
        inc     rsi                                     ; 0865 _ 48: FF. C6
        mov     al, byte ptr [rdi]                      ; 0868 _ 8A. 07
        inc     rdi                                     ; 086A _ 48: FF. C7
        test    al, al                                  ; 086D _ 84. C0
        jnz     ?_020                                   ; 086F _ 75, F2
?_021:  mov     byte ptr [rsi], 0                       ; 0871 _ C6. 06, 00
        xor     eax, eax                                ; 0874 _ 31. C0
Unnamed_1_636:
        add     rsp, 32                                 ; 0876 _ 48: 83. C4, 20
        pop     rbx                                     ; 087A _ 5B
        pop     rdi                                     ; 087B _ 5F
        pop     rsi                                     ; 087C _ 5E
        pop     r14                                     ; 087D _ 41: 5E
        pop     rbp                                     ; 087F _ 5D
        ret                                             ; 0880 _ C3
_AsciiStrCpyS ENDP

_StrLen PROC
        push    rbp                                     ; 0881 _ 55
        mov     rbp, rsp                                ; 0882 _ 48: 89. E5
        push    r15                                     ; 0885 _ 41: 57
        push    r14                                     ; 0887 _ 41: 56
        push    rsi                                     ; 0889 _ 56
        push    rdi                                     ; 088A _ 57
        push    rbx                                     ; 088B _ 53
        sub     rsp, 40                                 ; 088C _ 48: 83. EC, 28
        mov     rsi, rcx                                ; 0890 _ 48: 89. CE
        call    _DebugAssertEnabled                     ; 0893 _ E8, FFFFF9B4
        test    al, al                                  ; 0898 _ 84. C0
        jz      Unnamed_1_679                           ; 089A _ 74, 1D
        test    rsi, rsi                                ; 089C _ 48: 85. F6
        jnz     Unnamed_1_679                           ; 089F _ 75, 18
        lea     rcx, ptr [?_345]                        ; 08A1 _ 48: 8D. 0D, 00005FCF(rel)
        lea     r8, ptr [?_346]                         ; 08A8 _ 4C: 8D. 05, 0000601B(rel)
        mov     edx, 172                                ; 08AF _ BA, 000000AC
        call    _DebugAssert                            ; 08B4 _ E8, FFFFF992
Unnamed_1_679:
        call    _DebugAssertEnabled                     ; 08B9 _ E8, FFFFF98E
        test    al, al                                  ; 08BE _ 84. C0
        jz      Unnamed_1_6A0                           ; 08C0 _ 74, 1E
        test    sil, 01H                                ; 08C2 _ 40: F6. C6, 01
        jz      Unnamed_1_6A0                           ; 08C6 _ 74, 18
        lea     rcx, ptr [?_345]                        ; 08C8 _ 48: 8D. 0D, 00005FA8(rel)
        lea     r8, ptr [?_338]                         ; 08CF _ 4C: 8D. 05, 00005E89(rel)
        mov     edx, 173                                ; 08D6 _ BA, 000000AD
        call    _DebugAssert                            ; 08DB _ E8, FFFFF96B
Unnamed_1_6A0:
        xor     edi, edi                                ; 08E0 _ 31. FF
        cmp     word ptr [rsi], 0                       ; 08E2 _ 66: 83. 3E, 00
        jz      ?_023                                   ; 08E6 _ 74, 44
        xor     edi, edi                                ; 08E8 _ 31. FF
        mov     ebx, dword ptr [__gPcd_FixedAtBuild_PcdMaximumUnicodeStringLength]; 08EA _ 8B. 1D, 00007108(rel)
        lea     r14, ptr [?_345]                        ; 08F0 _ 4C: 8D. 35, 00005F80(rel)
        lea     r15, ptr [?_347]                        ; 08F7 _ 4C: 8D. 3D, 00005FE3(rel)
?_022:  test    ebx, ebx                                ; 08FE _ 85. DB
        jz      Unnamed_1_6E0                           ; 0900 _ 74, 1E
        call    _DebugAssertEnabled                     ; 0902 _ E8, FFFFF945
        test    al, al                                  ; 0907 _ 84. C0
        jz      Unnamed_1_6E0                           ; 0909 _ 74, 15
        cmp     rdi, rbx                                ; 090B _ 48: 39. DF
        jc      Unnamed_1_6E0                           ; 090E _ 72, 10
        mov     rcx, r14                                ; 0910 _ 4C: 89. F1
        mov     edx, 181                                ; 0913 _ BA, 000000B5
        mov     r8, r15                                 ; 0918 _ 4D: 89. F8
        call    _DebugAssert                            ; 091B _ E8, FFFFF92B
Unnamed_1_6E0:
        cmp     word ptr [rsi+rdi*2+2H], 0              ; 0920 _ 66: 83. 7C 7E, 02, 00
        lea     rdi, ptr [rdi+1H]                       ; 0926 _ 48: 8D. 7F, 01
        jnz     ?_022                                   ; 092A _ 75, D2
?_023:  mov     rax, rdi                                ; 092C _ 48: 89. F8
        add     rsp, 40                                 ; 092F _ 48: 83. C4, 28
        pop     rbx                                     ; 0933 _ 5B
        pop     rdi                                     ; 0934 _ 5F
        pop     rsi                                     ; 0935 _ 5E
        pop     r14                                     ; 0936 _ 41: 5E
        pop     r15                                     ; 0938 _ 41: 5F
        pop     rbp                                     ; 093A _ 5D
        ret                                             ; 093B _ C3
_StrLen ENDP

_StrSize PROC
        push    rbp                                     ; 093C _ 55
        mov     rbp, rsp                                ; 093D _ 48: 89. E5
        sub     rsp, 32                                 ; 0940 _ 48: 83. EC, 20
        call    _StrLen                                 ; 0944 _ E8, FFFFFF38
        lea     rax, ptr [rax+rax+2H]                   ; 0949 _ 48: 8D. 44 00, 02
        add     rsp, 32                                 ; 094E _ 48: 83. C4, 20
        pop     rbp                                     ; 0952 _ 5D
        ret                                             ; 0953 _ C3
_StrSize ENDP

_AsciiStrSize PROC
        push    rbp                                     ; 0954 _ 55
        mov     rbp, rsp                                ; 0955 _ 48: 89. E5
        sub     rsp, 32                                 ; 0958 _ 48: 83. EC, 20
        call    _AsciiStrLen                            ; 095C _ E8, 00000009
        inc     rax                                     ; 0961 _ 48: FF. C0
        add     rsp, 32                                 ; 0964 _ 48: 83. C4, 20
        pop     rbp                                     ; 0968 _ 5D
        ret                                             ; 0969 _ C3
_AsciiStrSize ENDP

_AsciiStrLen PROC
        push    rbp                                     ; 096A _ 55
        mov     rbp, rsp                                ; 096B _ 48: 89. E5
        push    r15                                     ; 096E _ 41: 57
        push    r14                                     ; 0970 _ 41: 56
        push    rsi                                     ; 0972 _ 56
        push    rdi                                     ; 0973 _ 57
        push    rbx                                     ; 0974 _ 53
        sub     rsp, 40                                 ; 0975 _ 48: 83. EC, 28
        mov     rsi, rcx                                ; 0979 _ 48: 89. CE
        call    _DebugAssertEnabled                     ; 097C _ E8, FFFFF8CB
        test    al, al                                  ; 0981 _ 84. C0
        jz      Unnamed_1_762                           ; 0983 _ 74, 1D
        test    rsi, rsi                                ; 0985 _ 48: 85. F6
        jnz     Unnamed_1_762                           ; 0988 _ 75, 18
        lea     rcx, ptr [?_345]                        ; 098A _ 48: 8D. 0D, 00005EE6(rel)
        lea     r8, ptr [?_346]                         ; 0991 _ 4C: 8D. 05, 00005F32(rel)
        mov     edx, 1231                               ; 0998 _ BA, 000004CF
        call    _DebugAssert                            ; 099D _ E8, FFFFF8A9
Unnamed_1_762:
        xor     edi, edi                                ; 09A2 _ 31. FF
        cmp     byte ptr [rsi], 0                       ; 09A4 _ 80. 3E, 00
        jz      ?_025                                   ; 09A7 _ 74, 43
        xor     edi, edi                                ; 09A9 _ 31. FF
        mov     ebx, dword ptr [__gPcd_FixedAtBuild_PcdMaximumAsciiStringLength]; 09AB _ 8B. 1D, 00007043(rel)
        lea     r14, ptr [?_345]                        ; 09B1 _ 4C: 8D. 35, 00005EBF(rel)
        lea     r15, ptr [?_350]                        ; 09B8 _ 4C: 8D. 3D, 00005FD8(rel)
?_024:  test    ebx, ebx                                ; 09BF _ 85. DB
        jz      Unnamed_1_7A1                           ; 09C1 _ 74, 1E
        call    _DebugAssertEnabled                     ; 09C3 _ E8, FFFFF884
        test    al, al                                  ; 09C8 _ 84. C0
        jz      Unnamed_1_7A1                           ; 09CA _ 74, 15
        cmp     rdi, rbx                                ; 09CC _ 48: 39. DF
        jc      Unnamed_1_7A1                           ; 09CF _ 72, 10
        mov     rcx, r14                                ; 09D1 _ 4C: 89. F1
        mov     edx, 1239                               ; 09D4 _ BA, 000004D7
        mov     r8, r15                                 ; 09D9 _ 4D: 89. F8
        call    _DebugAssert                            ; 09DC _ E8, FFFFF86A
Unnamed_1_7A1:
        cmp     byte ptr [rsi+rdi+1H], 0                ; 09E1 _ 80. 7C 3E, 01, 00
        lea     rdi, ptr [rdi+1H]                       ; 09E6 _ 48: 8D. 7F, 01
        jnz     ?_024                                   ; 09EA _ 75, D3
?_025:  mov     rax, rdi                                ; 09EC _ 48: 89. F8
        add     rsp, 40                                 ; 09EF _ 48: 83. C4, 28
        pop     rbx                                     ; 09F3 _ 5B
        pop     rdi                                     ; 09F4 _ 5F
        pop     rsi                                     ; 09F5 _ 5E
        pop     r14                                     ; 09F6 _ 41: 5E
        pop     r15                                     ; 09F8 _ 41: 5F
        pop     rbp                                     ; 09FA _ 5D
        ret                                             ; 09FB _ C3
_AsciiStrLen ENDP

_AsciiStrCmp PROC
        push    rbp                                     ; 09FC _ 55
        mov     rbp, rsp                                ; 09FD _ 48: 89. E5
        push    rsi                                     ; 0A00 _ 56
        push    rdi                                     ; 0A01 _ 57
        sub     rsp, 32                                 ; 0A02 _ 48: 83. EC, 20
        mov     rsi, rdx                                ; 0A06 _ 48: 89. D6
        mov     rdi, rcx                                ; 0A09 _ 48: 89. CF
        call    _DebugAssertEnabled                     ; 0A0C _ E8, FFFFF83B
        test    al, al                                  ; 0A11 _ 84. C0
        jz      Unnamed_1_7FB                           ; 0A13 _ 74, 26
        mov     rcx, rdi                                ; 0A15 _ 48: 89. F9
        call    _AsciiStrLen                            ; 0A18 _ E8, FFFFFF4D
        cmp     rax, -1                                 ; 0A1D _ 48: 83. F8, FF
        jnz     Unnamed_1_7FB                           ; 0A21 _ 75, 18
        lea     rcx, ptr [?_345]                        ; 0A23 _ 48: 8D. 0D, 00005E4D(rel)
        lea     r8, ptr [?_351]                         ; 0A2A _ 4C: 8D. 05, 00005F9E(rel)
        mov     edx, 1307                               ; 0A31 _ BA, 0000051B
        call    _DebugAssert                            ; 0A36 _ E8, FFFFF810
Unnamed_1_7FB:
        call    _DebugAssertEnabled                     ; 0A3B _ E8, FFFFF80C
        test    al, al                                  ; 0A40 _ 84. C0
        jz      Unnamed_1_832                           ; 0A42 _ 74, 2E
        mov     rcx, rsi                                ; 0A44 _ 48: 89. F1
        call    _AsciiStrLen                            ; 0A47 _ E8, FFFFFF1E
        cmp     rax, -1                                 ; 0A4C _ 48: 83. F8, FF
        jnz     Unnamed_1_832                           ; 0A50 _ 75, 20
        lea     rcx, ptr [?_345]                        ; 0A52 _ 48: 8D. 0D, 00005E1E(rel)
        lea     r8, ptr [?_352]                         ; 0A59 _ 4C: 8D. 05, 00005F8A(rel)
        mov     edx, 1308                               ; 0A60 _ BA, 0000051C
        call    _DebugAssert                            ; 0A65 _ E8, FFFFF7E1
        jmp     Unnamed_1_832                           ; 0A6A _ EB, 06

Unnamed_1_82C:
        inc     rsi                                     ; 0A6C _ 48: FF. C6
        inc     rdi                                     ; 0A6F _ 48: FF. C7
Unnamed_1_832:
        movzx   eax, byte ptr [rdi]                     ; 0A72 _ 0F B6. 07
        mov     cl, byte ptr [rsi]                      ; 0A75 _ 8A. 0E
        test    rax, rax                                ; 0A77 _ 48: 85. C0
        jz      ?_026                                   ; 0A7A _ 74, 04
        cmp     al, cl                                  ; 0A7C _ 38. C8
        jz      Unnamed_1_82C                           ; 0A7E _ 74, EC
?_026:  movzx   ecx, cl                                 ; 0A80 _ 0F B6. C9
        sub     rax, rcx                                ; 0A83 _ 48: 29. C8
        add     rsp, 32                                 ; 0A86 _ 48: 83. C4, 20
        pop     rdi                                     ; 0A8A _ 5F
        pop     rsi                                     ; 0A8B _ 5E
        pop     rbp                                     ; 0A8C _ 5D
        ret                                             ; 0A8D _ C3
_AsciiStrCmp ENDP

_AsciiStriCmp PROC
        push    rbp                                     ; 0A8E _ 55
        mov     rbp, rsp                                ; 0A8F _ 48: 89. E5
        push    rsi                                     ; 0A92 _ 56
        push    rdi                                     ; 0A93 _ 57
        sub     rsp, 32                                 ; 0A94 _ 48: 83. EC, 20
        mov     rsi, rdx                                ; 0A98 _ 48: 89. D6
        mov     rdi, rcx                                ; 0A9B _ 48: 89. CF
        call    _DebugAssertEnabled                     ; 0A9E _ E8, FFFFF7A9
        test    al, al                                  ; 0AA3 _ 84. C0
        jz      Unnamed_1_88D                           ; 0AA5 _ 74, 26
        mov     rcx, rdi                                ; 0AA7 _ 48: 89. F9
        call    _AsciiStrLen                            ; 0AAA _ E8, FFFFFEBB
        cmp     rax, -1                                 ; 0AAF _ 48: 83. F8, FF
        jnz     Unnamed_1_88D                           ; 0AB3 _ 75, 18
        lea     rcx, ptr [?_345]                        ; 0AB5 _ 48: 8D. 0D, 00005DBB(rel)
        lea     r8, ptr [?_351]                         ; 0ABC _ 4C: 8D. 05, 00005F0C(rel)
        mov     edx, 1409                               ; 0AC3 _ BA, 00000581
        call    _DebugAssert                            ; 0AC8 _ E8, FFFFF77E
Unnamed_1_88D:
        call    _DebugAssertEnabled                     ; 0ACD _ E8, FFFFF77A
        test    al, al                                  ; 0AD2 _ 84. C0
        jz      Unnamed_1_8BC                           ; 0AD4 _ 74, 26
        mov     rcx, rsi                                ; 0AD6 _ 48: 89. F1
        call    _AsciiStrLen                            ; 0AD9 _ E8, FFFFFE8C
        cmp     rax, -1                                 ; 0ADE _ 48: 83. F8, FF
        jnz     Unnamed_1_8BC                           ; 0AE2 _ 75, 18
        lea     rcx, ptr [?_345]                        ; 0AE4 _ 48: 8D. 0D, 00005D8C(rel)
        lea     r8, ptr [?_352]                         ; 0AEB _ 4C: 8D. 05, 00005EF8(rel)
        mov     edx, 1410                               ; 0AF2 _ BA, 00000582
        call    _DebugAssert                            ; 0AF7 _ E8, FFFFF74F
Unnamed_1_8BC:
        mov     al, byte ptr [rsi]                      ; 0AFC _ 8A. 06
        mov     cl, al                                  ; 0AFE _ 88. C1
        add     cl, -97                                 ; 0B00 _ 80. C1, 9F
        cmp     cl, 26                                  ; 0B03 _ 80. F9, 1A
        jnc     ?_027                                   ; 0B06 _ 73, 02
        add     al, -32                                 ; 0B08 _ 04, E0
?_027:  mov     dl, byte ptr [rdi]                      ; 0B0A _ 8A. 17
        mov     cl, dl                                  ; 0B0C _ 88. D1
        add     cl, -97                                 ; 0B0E _ 80. C1, 9F
        cmp     cl, 26                                  ; 0B11 _ 80. F9, 1A
        jnc     ?_028                                   ; 0B14 _ 73, 07
        mov     cl, dl                                  ; 0B16 _ 88. D1
        add     cl, -32                                 ; 0B18 _ 80. C1, E0
        jmp     ?_029                                   ; 0B1B _ EB, 02

?_028:  mov     cl, dl                                  ; 0B1D _ 88. D1
?_029:  test    dl, dl                                  ; 0B1F _ 84. D2
        jz      Unnamed_1_91E                           ; 0B21 _ 74, 3B
        cmp     cl, al                                  ; 0B23 _ 38. C1
        jnz     Unnamed_1_91E                           ; 0B25 _ 75, 37
        inc     rsi                                     ; 0B27 _ 48: FF. C6
        inc     rdi                                     ; 0B2A _ 48: FF. C7
?_030:  mov     dl, byte ptr [rdi]                      ; 0B2D _ 8A. 17
        mov     al, byte ptr [rsi]                      ; 0B2F _ 8A. 06
        mov     cl, al                                  ; 0B31 _ 88. C1
        add     cl, -97                                 ; 0B33 _ 80. C1, 9F
        cmp     cl, 26                                  ; 0B36 _ 80. F9, 1A
        jnc     ?_031                                   ; 0B39 _ 73, 02
        add     al, -32                                 ; 0B3B _ 04, E0
?_031:  mov     cl, dl                                  ; 0B3D _ 88. D1
        add     cl, -97                                 ; 0B3F _ 80. C1, 9F
        cmp     cl, 26                                  ; 0B42 _ 80. F9, 1A
        jnc     ?_032                                   ; 0B45 _ 73, 07
        mov     cl, dl                                  ; 0B47 _ 88. D1
        add     cl, -32                                 ; 0B49 _ 80. C1, E0
        jmp     ?_033                                   ; 0B4C _ EB, 02

?_032:  mov     cl, dl                                  ; 0B4E _ 88. D1
?_033:  test    dl, dl                                  ; 0B50 _ 84. D2
        jz      Unnamed_1_91E                           ; 0B52 _ 74, 0A
        inc     rsi                                     ; 0B54 _ 48: FF. C6
        inc     rdi                                     ; 0B57 _ 48: FF. C7
        cmp     cl, al                                  ; 0B5A _ 38. C1
        jz      ?_030                                   ; 0B5C _ 74, CF
Unnamed_1_91E:
        movzx   edx, al                                 ; 0B5E _ 0F B6. D0
        movzx   eax, cl                                 ; 0B61 _ 0F B6. C1
        sub     rax, rdx                                ; 0B64 _ 48: 29. D0
        add     rsp, 32                                 ; 0B67 _ 48: 83. C4, 20
        pop     rdi                                     ; 0B6B _ 5F
        pop     rsi                                     ; 0B6C _ 5E
        pop     rbp                                     ; 0B6D _ 5D
        ret                                             ; 0B6E _ C3
_AsciiStriCmp ENDP

_AsciiStrnCmp PROC
        push    rbp                                     ; 0B6F _ 55
        mov     rbp, rsp                                ; 0B70 _ 48: 89. E5
        push    r14                                     ; 0B73 _ 41: 56
        push    rsi                                     ; 0B75 _ 56
        push    rdi                                     ; 0B76 _ 57
        push    rbx                                     ; 0B77 _ 53
        sub     rsp, 32                                 ; 0B78 _ 48: 83. EC, 20
        mov     rsi, r8                                 ; 0B7C _ 4C: 89. C6
        mov     rdi, rdx                                ; 0B7F _ 48: 89. D7
        mov     rbx, rcx                                ; 0B82 _ 48: 89. CB
        xor     eax, eax                                ; 0B85 _ 31. C0
        test    rsi, rsi                                ; 0B87 _ 48: 85. F6
        je      ?_034                                   ; 0B8A _ 0F 84, 000000B3
        call    _DebugAssertEnabled                     ; 0B90 _ E8, FFFFF6B7
        test    al, al                                  ; 0B95 _ 84. C0
        jz      Unnamed_1_97F                           ; 0B97 _ 74, 26
        mov     rcx, rbx                                ; 0B99 _ 48: 89. D9
        call    _AsciiStrLen                            ; 0B9C _ E8, FFFFFDC9
        cmp     rax, -1                                 ; 0BA1 _ 48: 83. F8, FF
        jnz     Unnamed_1_97F                           ; 0BA5 _ 75, 18
        lea     rcx, ptr [?_345]                        ; 0BA7 _ 48: 8D. 0D, 00005CC9(rel)
        lea     r8, ptr [?_351]                         ; 0BAE _ 4C: 8D. 05, 00005E1A(rel)
        mov     edx, 1469                               ; 0BB5 _ BA, 000005BD
        call    _DebugAssert                            ; 0BBA _ E8, FFFFF68C
Unnamed_1_97F:
        call    _DebugAssertEnabled                     ; 0BBF _ E8, FFFFF688
        test    al, al                                  ; 0BC4 _ 84. C0
        jz      Unnamed_1_9AE                           ; 0BC6 _ 74, 26
        mov     rcx, rdi                                ; 0BC8 _ 48: 89. F9
        call    _AsciiStrLen                            ; 0BCB _ E8, FFFFFD9A
        cmp     rax, -1                                 ; 0BD0 _ 48: 83. F8, FF
        jnz     Unnamed_1_9AE                           ; 0BD4 _ 75, 18
        lea     rcx, ptr [?_345]                        ; 0BD6 _ 48: 8D. 0D, 00005C9A(rel)
        lea     r8, ptr [?_352]                         ; 0BDD _ 4C: 8D. 05, 00005E06(rel)
        mov     edx, 1470                               ; 0BE4 _ BA, 000005BE
        call    _DebugAssert                            ; 0BE9 _ E8, FFFFF65D
Unnamed_1_9AE:
        mov     r14d, dword ptr [__gPcd_FixedAtBuild_PcdMaximumAsciiStringLength]; 0BEE _ 44: 8B. 35, 00006DFF(rel)
        test    r14, r14                                ; 0BF5 _ 4D: 85. F6
        jz      Unnamed_1_9EB                           ; 0BF8 _ 74, 31
        call    _DebugAssertEnabled                     ; 0BFA _ E8, FFFFF64D
        test    al, al                                  ; 0BFF _ 84. C0
        jz      Unnamed_1_9EB                           ; 0C01 _ 74, 28
        cmp     r14, rsi                                ; 0C03 _ 49: 39. F6
        jnc     Unnamed_1_9EB                           ; 0C06 _ 73, 23
        lea     rcx, ptr [?_345]                        ; 0C08 _ 48: 8D. 0D, 00005C68(rel)
        lea     r8, ptr [?_349]                         ; 0C0F _ 4C: 8D. 05, 00005D48(rel)
        mov     edx, 1473                               ; 0C16 _ BA, 000005C1
        call    _DebugAssert                            ; 0C1B _ E8, FFFFF62B
        jmp     Unnamed_1_9EB                           ; 0C20 _ EB, 09

Unnamed_1_9E2:
        dec     rsi                                     ; 0C22 _ 48: FF. CE
        inc     rdi                                     ; 0C25 _ 48: FF. C7
        inc     rbx                                     ; 0C28 _ 48: FF. C3
Unnamed_1_9EB:
        movzx   ecx, byte ptr [rdi]                     ; 0C2B _ 0F B6. 0F
        movzx   eax, byte ptr [rbx]                     ; 0C2E _ 0F B6. 03
        test    rax, rax                                ; 0C31 _ 48: 85. C0
        jz      Unnamed_1_A00                           ; 0C34 _ 74, 0A
        cmp     al, cl                                  ; 0C36 _ 38. C8
        jnz     Unnamed_1_A00                           ; 0C38 _ 75, 06
        cmp     rsi, 2                                  ; 0C3A _ 48: 83. FE, 02
        jnc     Unnamed_1_9E2                           ; 0C3E _ 73, E2
Unnamed_1_A00:
        sub     rax, rcx                                ; 0C40 _ 48: 29. C8
?_034:  add     rsp, 32                                 ; 0C43 _ 48: 83. C4, 20
        pop     rbx                                     ; 0C47 _ 5B
        pop     rdi                                     ; 0C48 _ 5F
        pop     rsi                                     ; 0C49 _ 5E
        pop     r14                                     ; 0C4A _ 41: 5E
        pop     rbp                                     ; 0C4C _ 5D
        ret                                             ; 0C4D _ C3
_AsciiStrnCmp ENDP

_AsciiStrHexToUintn PROC
        push    rbp                                     ; 0C4E _ 55
        mov     rbp, rsp                                ; 0C4F _ 48: 89. E5
        push    r15                                     ; 0C52 _ 41: 57
        push    r14                                     ; 0C54 _ 41: 56
        push    r12                                     ; 0C56 _ 41: 54
        push    rsi                                     ; 0C58 _ 56
        push    rdi                                     ; 0C59 _ 57
        push    rbx                                     ; 0C5A _ 53
        sub     rsp, 32                                 ; 0C5B _ 48: 83. EC, 20
        mov     rsi, rcx                                ; 0C5F _ 48: 89. CE
        call    _DebugAssertEnabled                     ; 0C62 _ E8, FFFFF5E5
        test    al, al                                  ; 0C67 _ 84. C0
        jz      Unnamed_1_A60                           ; 0C69 _ 74, 35
        mov     rcx, rsi                                ; 0C6B _ 48: 89. F1
        call    _AsciiStrLen                            ; 0C6E _ E8, FFFFFCF7
        cmp     rax, -1                                 ; 0C73 _ 48: 83. F8, FF
        jnz     Unnamed_1_A60                           ; 0C77 _ 75, 27
        lea     rcx, ptr [?_345]                        ; 0C79 _ 48: 8D. 0D, 00005BF7(rel)
        lea     r8, ptr [?_353]                         ; 0C80 _ 4C: 8D. 05, 00005D7F(rel)
        mov     edx, 1855                               ; 0C87 _ BA, 0000073F
        call    _DebugAssert                            ; 0C8C _ E8, FFFFF5BA
        jmp     Unnamed_1_A60                           ; 0C91 _ EB, 0D

Unnamed_1_A53:
        cmp     cl, 32                                  ; 0C93 _ 80. F9, 20
        jz      ?_035                                   ; 0C96 _ 74, 05
        cmp     cl, 9                                   ; 0C98 _ 80. F9, 09
        jnz     ?_037                                   ; 0C9B _ 75, 15
?_035:  inc     rsi                                     ; 0C9D _ 48: FF. C6
Unnamed_1_A60:
        mov     cl, byte ptr [rsi]                      ; 0CA0 _ 8A. 0E
        cmp     cl, 48                                  ; 0CA2 _ 80. F9, 30
        jnz     Unnamed_1_A53                           ; 0CA5 _ 75, EC
?_036:  mov     cl, byte ptr [rsi+1H]                   ; 0CA7 _ 8A. 4E, 01
        inc     rsi                                     ; 0CAA _ 48: FF. C6
        cmp     cl, 48                                  ; 0CAD _ 80. F9, 30
        jz      ?_036                                   ; 0CB0 _ 74, F5
?_037:  mov     al, cl                                  ; 0CB2 _ 88. C8
        add     al, -97                                 ; 0CB4 _ 04, 9F
        cmp     al, 26                                  ; 0CB6 _ 3C, 1A
        jnc     ?_038                                   ; 0CB8 _ 73, 06
        mov     al, cl                                  ; 0CBA _ 88. C8
        add     al, -32                                 ; 0CBC _ 04, E0
        jmp     ?_039                                   ; 0CBE _ EB, 02

?_038:  mov     al, cl                                  ; 0CC0 _ 88. C8
?_039:  cmp     al, 88                                  ; 0CC2 _ 3C, 58
        jnz     ?_040                                   ; 0CC4 _ 75, 39
        call    _DebugAssertEnabled                     ; 0CC6 _ E8, FFFFF581
        test    al, al                                  ; 0CCB _ 84. C0
        jz      Unnamed_1_AAD                           ; 0CCD _ 74, 1E
        cmp     byte ptr [rsi-1H], 48                   ; 0CCF _ 80. 7E, FF, 30
        jz      Unnamed_1_AAD                           ; 0CD3 _ 74, 18
        lea     rcx, ptr [?_345]                        ; 0CD5 _ 48: 8D. 0D, 00005B9B(rel)
        lea     r8, ptr [?_354]                         ; 0CDC _ 4C: 8D. 05, 00005D3E(rel)
        mov     edx, 1872                               ; 0CE3 _ BA, 00000750
        call    _DebugAssert                            ; 0CE8 _ E8, FFFFF55E
Unnamed_1_AAD:
        xor     eax, eax                                ; 0CED _ 31. C0
        cmp     byte ptr [rsi-1H], 48                   ; 0CEF _ 80. 7E, FF, 30
        jne     Unnamed_1_BB4                           ; 0CF3 _ 0F 85, 000000FB
        mov     cl, byte ptr [rsi+1H]                   ; 0CF9 _ 8A. 4E, 01
        inc     rsi                                     ; 0CFC _ 48: FF. C6
?_040:  mov     al, cl                                  ; 0CFF _ 88. C8
        add     al, -48                                 ; 0D01 _ 04, D0
        cmp     al, 10                                  ; 0D03 _ 3C, 0A
        jc      Unnamed_1_ADD                           ; 0D05 _ 72, 16
        mov     al, cl                                  ; 0D07 _ 88. C8
        add     al, -65                                 ; 0D09 _ 04, BF
        cmp     al, 6                                   ; 0D0B _ 3C, 06
        jc      Unnamed_1_ADD                           ; 0D0D _ 72, 0E
        add     cl, -97                                 ; 0D0F _ 80. C1, 9F
        xor     eax, eax                                ; 0D12 _ 31. C0
        cmp     cl, 5                                   ; 0D14 _ 80. F9, 05
        ja      Unnamed_1_BB4                           ; 0D17 _ 0F 87, 000000D7
Unnamed_1_ADD:
        inc     rsi                                     ; 0D1D _ 48: FF. C6
        xor     edi, edi                                ; 0D20 _ 31. FF
        mov     r14, 0FFFFFFFFFFFFFFFH                  ; 0D22 _ 49: BE, 0FFFFFFFFFFFFFFF
        lea     r15, ptr [?_345]                        ; 0D2C _ 4C: 8D. 3D, 00005B44(rel)
        lea     r12, ptr [?_348]                        ; 0D33 _ 4C: 8D. 25, 00005BE1(rel)
Unnamed_1_AFA:
        call    _DebugAssertEnabled                     ; 0D3A _ E8, FFFFF50D
        test    al, al                                  ; 0D3F _ 84. C0
        jz      Unnamed_1_B4F                           ; 0D41 _ 74, 4C
        movzx   eax, byte ptr [rsi-1H]                  ; 0D43 _ 0F B6. 46, FF
        mov     ecx, eax                                ; 0D47 _ 89. C1
        add     ecx, -48                                ; 0D49 _ 83. C1, D0
        cmp     cx, 9                                   ; 0D4C _ 66: 83. F9, 09
        ja      ?_041                                   ; 0D50 _ 77, 09
        movzx   eax, ax                                 ; 0D52 _ 0F B7. C0
        add     rax, -48                                ; 0D55 _ 48: 83. C0, D0
        jmp     ?_042                                   ; 0D59 _ EB, 18

?_041:  movzx   edx, ax                                 ; 0D5B _ 0F B7. D0
        lea     ecx, ptr [rdx-20H]                      ; 0D5E _ 8D. 4A, E0
        add     edx, -97                                ; 0D61 _ 83. C2, 9F
        cmp     dx, 26                                  ; 0D64 _ 66: 83. FA, 1A
        cmovnc  cx, ax                                  ; 0D68 _ 66: 0F 43. C8
        movzx   eax, cx                                 ; 0D6C _ 0F B7. C1
        add     rax, -55                                ; 0D6F _ 48: 83. C0, C9
?_042:  shr     rax, 4                                  ; 0D73 _ 48: C1. E8, 04
        xor     rax, r14                                ; 0D77 _ 4C: 31. F0
        cmp     rdi, rax                                ; 0D7A _ 48: 39. C7
        jbe     Unnamed_1_B4F                           ; 0D7D _ 76, 10
        mov     rcx, r15                                ; 0D7F _ 4C: 89. F9
        mov     edx, 1889                               ; 0D82 _ BA, 00000761
        mov     r8, r12                                 ; 0D87 _ 4D: 89. E0
        call    _DebugAssert                            ; 0D8A _ E8, FFFFF4BC
Unnamed_1_B4F:
        shl     rdi, 4                                  ; 0D8F _ 48: C1. E7, 04
        movzx   eax, byte ptr [rsi-1H]                  ; 0D93 _ 0F B6. 46, FF
        mov     ecx, eax                                ; 0D97 _ 89. C1
        add     ecx, -48                                ; 0D99 _ 83. C1, D0
        cmp     cx, 9                                   ; 0D9C _ 66: 83. F9, 09
        ja      ?_043                                   ; 0DA0 _ 77, 06
        lea     rax, ptr [rax-30H]                      ; 0DA2 _ 48: 8D. 40, D0
        jmp     ?_045                                   ; 0DA6 _ EB, 13

?_043:  mov     cl, al                                  ; 0DA8 _ 88. C1
        add     cl, -97                                 ; 0DAA _ 80. C1, 9F
        cmp     cl, 26                                  ; 0DAD _ 80. F9, 1A
        jnc     ?_044                                   ; 0DB0 _ 73, 02
        add     al, -32                                 ; 0DB2 _ 04, E0
?_044:  movzx   eax, al                                 ; 0DB4 _ 0F B6. C0
        add     rax, -55                                ; 0DB7 _ 48: 83. C0, C9
?_045:  add     rax, rdi                                ; 0DBB _ 48: 01. F8
        mov     cl, byte ptr [rsi]                      ; 0DBE _ 8A. 0E
        inc     rsi                                     ; 0DC0 _ 48: FF. C6
        mov     bl, cl                                  ; 0DC3 _ 88. CB
        add     bl, -97                                 ; 0DC5 _ 80. C3, 9F
        mov     dl, cl                                  ; 0DC8 _ 88. CA
        add     dl, -65                                 ; 0DCA _ 80. C2, BF
        add     cl, -48                                 ; 0DCD _ 80. C1, D0
        cmp     cl, 10                                  ; 0DD0 _ 80. F9, 0A
        mov     rdi, rax                                ; 0DD3 _ 48: 89. C7
        jc      Unnamed_1_AFA                           ; 0DD6 _ 0F 82, FFFFFF5E
        cmp     dl, 6                                   ; 0DDC _ 80. FA, 06
        mov     rdi, rax                                ; 0DDF _ 48: 89. C7
        jc      Unnamed_1_AFA                           ; 0DE2 _ 0F 82, FFFFFF52
        cmp     bl, 6                                   ; 0DE8 _ 80. FB, 06
        mov     rdi, rax                                ; 0DEB _ 48: 89. C7
        jc      Unnamed_1_AFA                           ; 0DEE _ 0F 82, FFFFFF46
Unnamed_1_BB4:
        add     rsp, 32                                 ; 0DF4 _ 48: 83. C4, 20
        pop     rbx                                     ; 0DF8 _ 5B
        pop     rdi                                     ; 0DF9 _ 5F
        pop     rsi                                     ; 0DFA _ 5E
        pop     r12                                     ; 0DFB _ 41: 5C
        pop     r14                                     ; 0DFD _ 41: 5E
        pop     r15                                     ; 0DFF _ 41: 5F
        pop     rbp                                     ; 0E01 _ 5D
        ret                                             ; 0E02 _ C3
_AsciiStrHexToUintn ENDP

        nop                                             ; 0E03 _ 90
        nop                                             ; 0E04 _ 90
        nop                                             ; 0E05 _ 90
        nop                                             ; 0E06 _ 90
        nop                                             ; 0E07 _ 90

_m16Start label byte
SavedGdt label byte
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E08 _ ........
        db 00H, 00H                                     ; 0E10 _ ..

_BackFromUserCode LABEL NEAR
; Error: This instruction is not allowed in 64 bit mode
;       push ss                                         ; 0E12 _ 16
        db 16H
; Error: This instruction is not allowed in 64 bit mode
;       push cs                                         ; 0E13 _ 0E
        db 0EH
; Note: Prefix bit or byte has no meaning in this context
;       call    _BackFromUserCode.Base                  ; 0E14 _ 66: E8, 00000000
        db 66H, 0E8H, 00H, 00H, 00H, 00H

_BackFromUserCode.Base LABEL NEAR
; Note: Non-default size for stack operation
        push    word ptr 0                              ; 0E1A _ 66: 6A, 00
; Note: Non-default size for stack operation
        pushf                                           ; 0E1D _ 66: 9C
        cli                                             ; 0E1F _ FA
        push gs                                         ; 0E20 _ 0F A8
        push fs                                         ; 0E22 _ 0F A0
; Error: This instruction is not allowed in 64 bit mode
;       push es                                         ; 0E24 _ 06
        db 06H
; Error: This instruction is not allowed in 64 bit mode
;       push ds                                         ; 0E25 _ 1E
        db 1EH
; Error: This instruction is not allowed in 64 bit mode
; Note: Non-default size for stack operation
;       pushaw                                          ; 0E26 _ 66: 60
        db 66H, 60H
; Note: Length-changing prefix causes delay on Intel processors
;       mov     dx, 0                                   ; 0E28 _ 66: BA, 0000
        db 66H, 0BAH, 00H, 00H
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 0E2C _ 00. 00

        db 00H, 00H                                     ; 0E2C _ ..

_BackFromUserCode.ThunkAttrEnd LABEL NEAR
        test    dl, 02H                                 ; 0E2E _ F6. C2, 02
        jz      _BackFromUserCode.1                     ; 0E31 _ 74, 08
        mov     eax, 365765633                          ; 0E33 _ B8, 15CD2401
        cli                                             ; 0E38 _ FA
        jnc     _BackFromUserCode.2                     ; 0E39 _ 73, 0B

_BackFromUserCode.1 LABEL NEAR
        test    dl, 04H                                 ; 0E3B _ F6. C2, 04
        jz      _BackFromUserCode.2                     ; 0E3E _ 74, 06
        in      al, -110                                ; 0E40 _ E4, 92
        or      al, 02H                                 ; 0E42 _ 0C, 02
        out     92H, al                                 ; 0E44 _ E6, 92

_BackFromUserCode.2 LABEL NEAR
        xor     ax, ax                                  ; 0E46 _ 66: 31. C0
        mov     eax, ss                                 ; 0E49 _ 8C. D0
; Note: Address size prefix should be avoided
        lea     bp, ptr [esp+38H]                       ; 0E4B _ 66 67: 8D. 6C 24, 38
        mov     word ptr [rsi-2CH], bp                  ; 0E51 _ 66: 89. 6E, D4
        mov     bx, word ptr [rsi-8H]                   ; 0E55 _ 66: 8B. 5E, F8
        shl     ax, 4                                   ; 0E59 _ 66: C1. E0, 04
        add     bp, ax                                  ; 0E5D _ 66: 01. C5
        mov     ax, cs                                  ; 0E60 _ 66: 8C. C8
        shl     ax, 4                                   ; 0E63 _ 66: C1. E0, 04
; Note: Address size prefix should be avoided
        lea     ax, ptr [eax+ebx+89H]                   ; 0E67 _ 66 67: 8D. 84 18, 00000089
; Note: Prefix bit or byte has no meaning in this context
        mov     word ptr cs:[rdi-4799FF7DH], ax         ; 0E70 _ 2E 66: 89. 87, B8660083
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 0E78 _ 00. 00
        db 00H, 00H
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 0E7A _ 00. 00

        db 00H, 00H                                     ; 0E7A _ ..

_BackFromUserCode.SavedCr4End LABEL NEAR
        mov     cr4, rax                                ; 0E7C _ 0F 22. E0
; Note: Prefix bit or byte has no meaning in this context
        lgdt    dword ptr cs:[rdi-12H]                  ; 0E7F _ 2E 66: 0F 01. 57, EE
; Note: Length-changing prefix causes delay on Intel processors
        mov     cx, 128                                 ; 0E85 _ 66: B9, 0080
        add     al, al                                  ; 0E89 _ 00. C0
        rdmsr                                           ; 0E8B _ 0F 32
        or      ah, 01H                                 ; 0E8D _ 80. CC, 01
        wrmsr                                           ; 0E90 _ 0F 30
; Note: Length-changing prefix causes delay on Intel processors
        mov     ax, 0                                   ; 0E92 _ 66: B8, 0000
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 0E96 _ 00. 00
        db 00H, 00H

_BackFromUserCode.SavedCr0End LABEL NEAR
        mov     cr0, rax                                ; 0E98 _ 0F 22. C0
; Error: This instruction is not allowed in 64 bit mode
; Note: Prefix bit or byte has no meaning in this context
;       jmp     far ptr 00H                             ; 0E9B _ 66: EA, 0000 0000
        db 66H, 0EAH, 00H, 00H, 00H, 00H
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 0EA1 _ 00. 00

        db 00H, 00H                                     ; 0EA1 _ ..

_BackFromUserCode.X64JmpEnd LABEL NEAR
        nop                                             ; 0EA3 _ 90
; Note: Immediate operand could be made smaller by zero extension
        mov     rsp, 0                                  ; 0EA4 _ 48: BC, 0000000000000000

_BackFromUserCode.SavedSpEnd LABEL NEAR
        nop                                             ; 0EAE _ 90
        ret                                             ; 0EAF _ C3

_EntryPoint LABEL NEAR
        mov     esi, 134217728                          ; 0EB0 _ BE, 08000000
; Warning: Label out of phase with instruction. Possibly spurious
; _16Gdtr; Misplaced symbol at address 00000C76
        add     byte ptr [rdi], bl                      ; 0EB5 _ 00. 1F
; Warning: Label out of phase with instruction. Possibly spurious
; _16GdtrBase; Misplaced symbol at address 00000C78
        add     byte ptr [rax], al                      ; 0EB7 _ 00. 00
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 0EB9 _ 00. 00
        db 00H, 00H
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 0EBB _ 00. 00

        db 00H, 00H, 00H, 00H, 00H                      ; 0EBB _ .....

_16Idtr LABEL NEAR
        inc     dword ptr [rbx]                         ; 0EC0 _ FF. 03
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 0EC2 _ 00. 00
        db 00H, 00H
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 0EC4 _ 00. 00

        db 00H, 00H                                     ; 0EC4 _ ..

_ToUserCode LABEL NEAR
        mov     ss, edx                                 ; 0EC6 _ 8E. D2
        mov     ds, edx                                 ; 0EC8 _ 8E. DA
        mov     es, edx                                 ; 0ECA _ 8E. C2
        mov     fs, edx                                 ; 0ECC _ 8E. E2
        mov     gs, edx                                 ; 0ECE _ 8E. EA
; Note: Length-changing prefix causes delay on Intel processors
        mov     cx, 128                                 ; 0ED0 _ 66: B9, 0080
        add     al, al                                  ; 0ED4 _ 00. C0
        mov     cr0, rax                                ; 0ED6 _ 0F 22. C0
        rdmsr                                           ; 0ED9 _ 0F 32
        and     ah, 0FFFFFFFEH                          ; 0EDB _ 80. E4, FE
        wrmsr                                           ; 0EDE _ 0F 30
        mov     cr4, rbp                                ; 0EE0 _ 0F 22. E5
        mov     ss, esi                                 ; 0EE3 _ 8E. D6
        mov     sp, bx                                  ; 0EE5 _ 66: 89. DC
; Note: Prefix bit or byte has no meaning in this context
        DB      66H                                     ; Prefix coded explicitly
        call    _ToUserCode.Base                        ; 0EE8 _ 66: E8, 00000000

_ToUserCode.Base LABEL NEAR
; Note: Non-default size for stack operation
        pop     bp                                      ; 0EEE _ 66: 5D
; Note: Displacement could be made smaller by sign extension
; Note: Address size prefix should be avoided
; Note: Stack pointer truncated by address size prefix
        push    qword ptr [esp+3AH]                     ; 0EF0 _ 67: FF. B4 24, 0000003A
        lea     eax, ptr [rsi+0FH]                      ; 0EF8 _ 8D. 46, 0F
        push    rax                                     ; 0EFB _ 50
        retf                                            ; 0EFC _ CB

_ToUserCode.RealMode LABEL NEAR
; Note: Prefix bit or byte has no meaning in this context
        lidt    dword ptr cs:[rsi-2EH]                  ; 0EFD _ 2E 66: 0F 01. 5E, D2
; Error: This instruction is not allowed in 64 bit mode
; Note: Non-default size for stack operation
;       popaw                                           ; 0F03 _ 66: 61
        db 66H, 61H
; Error: This instruction is not allowed in 64 bit mode
;       pop  ds                                         ; 0F05 _ 1F
        db 1FH
; Error: This instruction is not allowed in 64 bit mode
;       pop  es                                         ; 0F06 _ 07
        db 07H
;       pop  fs                                         ; 0F07 _ 0F A1
        db 0FH, 0A1H
;       pop  gs                                         ; 0F09 _ 0F A9
        db 0FH, 0A9H
; Note: Non-default size for stack operation
;       popf                                            ; 0F0B _ 66: 9D
        db 66H, 9DH
; Note: Address size prefix should be avoided
;       lea     sp, ptr [esp+4H]                        ; 0F0D _ 66 67: 8D. 64 24, 04
        db 66H, 67H, 8DH, 64H, 24H, 04H
; Note: Prefix bit or byte has no meaning in this context
; Note: Non-default size for stack operation
;       retf                                            ; 0F13 _ 66: CB
        db 66H, 0CBH
;       nop                                             ; 0F15 _ 90
        db 90H
;       nop                                             ; 0F16 _ 90
        db 90H
;       nop                                             ; 0F17 _ 90
        db 90H

_NullSeg LABEL NEAR
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 0F18 _ 00. 00
        db 00H, 00H
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 0F1A _ 00. 00

        db 00H, 00H, 00H, 00H, 00H, 00H                 ; 0F1A _ ......

_16Code LABEL NEAR
; Error: This is unlikely to be code
;       UNDEFINED edi                                   ; 0F20 _ FF. FF
        db 0FFH, 0FFH
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 0F22 _ 00. 00

        db 00H, 00H, 00H, 9BH, 8FH, 00H                 ; 0F22 _ ......

_16Data LABEL NEAR
; Error: This is unlikely to be code
;       UNDEFINED edi                                   ; 0F28 _ FF. FF
        db 0FFH, 0FFH
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 0F2A _ 00. 00

        db 00H, 00H, 00H, 93H, 8FH, 00H                 ; 0F2A _ ......

_32Data LABEL NEAR
; Error: This is unlikely to be code
;       UNDEFINED edi                                   ; 0F30 _ FF. FF
        db 0FFH, 0FFH
; Error: This is unlikely to be code
;       add     byte ptr [rax], al                      ; 0F32 _ 00. 00

        db 00H, 00H, 00H, 93H, 0CFH, 00H                ; 0F32 _ ......

_InternalAsmThunk16 LABEL NEAR
        push    rbp                                     ; 0F38 _ 55
        push    rbx                                     ; 0F39 _ 53
        push    rsi                                     ; 0F3A _ 56
        push    rdi                                     ; 0F3B _ 57
        mov     ebx, ds                                 ; 0F3C _ 8C. DB
        push    rbx                                     ; 0F3E _ 53
        mov     ebx, es                                 ; 0F3F _ 8C. C3
        push    rbx                                     ; 0F41 _ 53
        mov     ebx, ss                                 ; 0F42 _ 8C. D3
        push    rbx                                     ; 0F44 _ 53
        push fs                                         ; 0F45 _ 0F A0
        push gs                                         ; 0F47 _ 0F A8
        mov     rsi, rcx                                ; 0F49 _ 48: 89. CE
        movzx   r8d, word ptr [rsi+36H]                 ; 0F4C _ 44: 0F B7. 46, 36
        mov     edi, dword ptr [rsi+0CH]                ; 0F51 _ 8B. 7E, 0C
; Note: Address size prefix should be avoided
        lea     rdi, ptr [edi-3CH]                      ; 0F54 _ 67 48: 8D. 7F, C4
        imul    eax, r8d, 16                            ; 0F59 _ 41: 6B. C0, 10
        mov     ebx, edi                                ; 0F5D _ 89. FB
        push    14                                      ; 0F5F _ 6A, 0E
        add     edi, eax                                ; 0F61 _ 01. C7
        pop     rcx                                     ; 0F63 _ 59
        rep movsd                                       ; 0F64 _ F3: A5
        lea     ecx, ptr [rdx+74H]                      ; 0F66 _ 8D. 4A, 74
        mov     eax, edx                                ; 0F69 _ 89. D0
        and     edx, 0FH                                ; 0F6B _ 83. E2, 0F
        shl     eax, 12                                 ; 0F6E _ C1. E0, 0C
        lea     ax, ptr [rdx+0AH]                       ; 0F71 _ 66: 8D. 42, 0A
        stosd                                           ; 0F75 _ AB
        sgdt    fword ptr [rsp+60H] ; 32+16 bit. Possibly forgot REX.W prefix; 0F76 _ 0F 01. 44 24, 60
        movzx   r10, word ptr [rsp+60H]                 ; 0F7B _ 4C: 0F B7. 54 24, 60
        lea     r11, ptr [rcx+0CBH]                     ; 0F81 _ 4C: 8D. 99, 000000CB
        and     r11, 0FFFFFFFFFFFFFFF0H                 ; 0F88 _ 49: 83. E3, F0
        mov     word ptr [rcx-74H], r10w                ; 0F8C _ 66 44: 89. 51, 8C
        mov     qword ptr [rcx-72H], r11                ; 0F91 _ 4C: 89. 59, 8E
        mov     rsi, qword ptr [rsp+62H]                ; 0F95 _ 48: 8B. 74 24, 62
        xchg    r10, rcx                                ; 0F9A _ 49: 87. CA
        inc     rcx                                     ; 0F9D _ 48: FF. C1
        xchg    r11, rdi                                ; 0FA0 _ 49: 87. FB
        rep movsb                                       ; 0FA3 _ F3: A4
        mov     rcx, r10                                ; 0FA5 _ 4C: 89. D1
        mov     rdi, r11                                ; 0FA8 _ 4C: 89. DF
        sidt    fword ptr [rsp+50H] ; 32+16 bit. Possibly forgot REX.W prefix; 0FAB _ 0F 01. 4C 24, 50
        mov     rax, cr0                                ; 0FB0 _ 0F 20. C0
        mov     dword ptr [rcx+18H], eax                ; 0FB3 _ 89. 41, 18
        and     eax, 7FFFFFFEH                          ; 0FB6 _ 25, 7FFFFFFE
        mov     rbp, cr4                                ; 0FBB _ 0F 20. E5
        mov     dword ptr [rcx-4H], ebp                 ; 0FBE _ 89. 69, FC
        and     ebp, 0FFFFFFCFH                         ; 0FC1 _ 83. E5, CF
        mov     esi, r8d                                ; 0FC4 _ 44: 89. C6
        push    24                                      ; 0FC7 _ 6A, 18
        pop     rdx                                     ; 0FC9 _ 5A
        lgdt    fword ptr [rcx+3AH]                     ; 0FCA _ 0F 01. 51, 3A
        mov     ss, edx                                 ; 0FCE _ 8E. D2
        pushfd                                          ; 0FD0 _ 9C
        lea     edx, ptr [rdx-8H]                       ; 0FD1 _ 8D. 52, F8
        lea     r8, ptr [_InternalAsmThunk16.RetFromRealMode]; 0FD4 _ 4C: 8D. 05, 00000011(rel)
        push    r8                                      ; 0FDB _ 41: 50
        mov     r8d, cs                                 ; 0FDD _ 41: 8C. C8
        mov     word ptr [rcx+25H], r8w                 ; 0FE0 _ 66 44: 89. 41, 25
        mov     qword ptr [rcx+2AH], rsp                ; 0FE5 _ 48: 89. 61, 2A
        jmp     fword ptr [rcx+34H] ; 32+16 bit. Possibly forgot REX.W prefix; 0FE9 _ FF. 69, 34
_m16Start ENDP

_InternalAsmThunk16.RetFromRealMode LABEL NEAR
        popfd                                           ; 0FEC _ 9D
        lgdt    fword ptr [rsp+60H]                     ; 0FED _ 0F 01. 54 24, 60
        lidt    fword ptr [rsp+50H]                     ; 0FF2 _ 0F 01. 5C 24, 50
        lea     eax, ptr [rbp-38H]                      ; 0FF7 _ 8D. 45, C8
        pop  gs                                         ; 0FFA _ 0F A9
        pop  fs                                         ; 0FFC _ 0F A1
        pop     rbx                                     ; 0FFE _ 5B
        mov     ss, ebx                                 ; 0FFF _ 8E. D3
        pop     rbx                                     ; 1001 _ 5B
        mov     es, ebx                                 ; 1002 _ 8E. C3
        pop     rbx                                     ; 1004 _ 5B
        mov     ds, ebx                                 ; 1005 _ 8E. DB
        pop     rdi                                     ; 1007 _ 5F
        pop     rsi                                     ; 1008 _ 5E
        pop     rbx                                     ; 1009 _ 5B
        pop     rbp                                     ; 100A _ 5D
        ret                                             ; 100B _ C3

_InternalMathDivRemU64x32 PROC
        mov     r9d, edx                                ; 100C _ 41: 89. D1
        test    r8, r8                                  ; 100F _ 4D: 85. C0
        jz      ?_046                                   ; 1012 _ 74, 0B
        mov     rax, rcx                                ; 1014 _ 48: 89. C8
        xor     edx, edx                                ; 1017 _ 31. D2
        div     r9                                      ; 1019 _ 49: F7. F1
        mov     dword ptr [r8], edx                     ; 101C _ 41: 89. 10
?_046:  mov     rax, rcx                                ; 101F _ 48: 89. C8
        xor     edx, edx                                ; 1022 _ 31. D2
        div     r9                                      ; 1024 _ 49: F7. F1
        ret                                             ; 1027 _ C3
_InternalMathDivRemU64x32 ENDP

_ReadUnaligned16 PROC
        push    rbp                                     ; 1028 _ 55
        mov     rbp, rsp                                ; 1029 _ 48: 89. E5
        push    rsi                                     ; 102C _ 56
        sub     rsp, 40                                 ; 102D _ 48: 83. EC, 28
        mov     rsi, rcx                                ; 1031 _ 48: 89. CE
        call    _DebugAssertEnabled                     ; 1034 _ E8, FFFFF213
        test    al, al                                  ; 1039 _ 84. C0
        jz      Unnamed_1_E1A                           ; 103B _ 74, 1D
        test    rsi, rsi                                ; 103D _ 48: 85. F6
        jnz     Unnamed_1_E1A                           ; 1040 _ 75, 18
        lea     rcx, ptr [?_355]                        ; 1042 _ 48: 8D. 0D, 000059ED(rel)
        lea     r8, ptr [?_319]                         ; 1049 _ 4C: 8D. 05, 000052B2(rel)
        mov     edx, 38                                 ; 1050 _ BA, 00000026
        call    _DebugAssert                            ; 1055 _ E8, FFFFF1F1
Unnamed_1_E1A:
        movzx   eax, word ptr [rsi]                     ; 105A _ 0F B7. 06
        add     rsp, 40                                 ; 105D _ 48: 83. C4, 28
        pop     rsi                                     ; 1061 _ 5E
        pop     rbp                                     ; 1062 _ 5D
        ret                                             ; 1063 _ C3
_ReadUnaligned16 ENDP

_ReadUnaligned32 PROC
        push    rbp                                     ; 1064 _ 55
        mov     rbp, rsp                                ; 1065 _ 48: 89. E5
        push    rsi                                     ; 1068 _ 56
        sub     rsp, 40                                 ; 1069 _ 48: 83. EC, 28
        mov     rsi, rcx                                ; 106D _ 48: 89. CE
        call    _DebugAssertEnabled                     ; 1070 _ E8, FFFFF1D7
        test    al, al                                  ; 1075 _ 84. C0
        jz      Unnamed_1_E56                           ; 1077 _ 74, 1D
        test    rsi, rsi                                ; 1079 _ 48: 85. F6
        jnz     Unnamed_1_E56                           ; 107C _ 75, 18
        lea     rcx, ptr [?_355]                        ; 107E _ 48: 8D. 0D, 000059B1(rel)
        lea     r8, ptr [?_319]                         ; 1085 _ 4C: 8D. 05, 00005276(rel)
        mov     edx, 141                                ; 108C _ BA, 0000008D
        call    _DebugAssert                            ; 1091 _ E8, FFFFF1B5
Unnamed_1_E56:
        mov     eax, dword ptr [rsi]                    ; 1096 _ 8B. 06
        add     rsp, 40                                 ; 1098 _ 48: 83. C4, 28
        pop     rsi                                     ; 109C _ 5E
        pop     rbp                                     ; 109D _ 5D
        ret                                             ; 109E _ C3
_ReadUnaligned32 ENDP

_ReadUnaligned64 PROC
        push    rbp                                     ; 109F _ 55
        mov     rbp, rsp                                ; 10A0 _ 48: 89. E5
        push    rsi                                     ; 10A3 _ 56
        sub     rsp, 40                                 ; 10A4 _ 48: 83. EC, 28
        mov     rsi, rcx                                ; 10A8 _ 48: 89. CE
        call    _DebugAssertEnabled                     ; 10AB _ E8, FFFFF19C
        test    al, al                                  ; 10B0 _ 84. C0
        jz      Unnamed_1_E91                           ; 10B2 _ 74, 1D
        test    rsi, rsi                                ; 10B4 _ 48: 85. F6
        jnz     Unnamed_1_E91                           ; 10B7 _ 75, 18
        lea     rcx, ptr [?_355]                        ; 10B9 _ 48: 8D. 0D, 00005976(rel)
        lea     r8, ptr [?_319]                         ; 10C0 _ 4C: 8D. 05, 0000523B(rel)
        mov     edx, 192                                ; 10C7 _ BA, 000000C0
        call    _DebugAssert                            ; 10CC _ E8, FFFFF17A
Unnamed_1_E91:
        mov     rax, qword ptr [rsi]                    ; 10D1 _ 48: 8B. 06
        add     rsp, 40                                 ; 10D4 _ 48: 83. C4, 28
        pop     rsi                                     ; 10D8 _ 5E
        pop     rbp                                     ; 10D9 _ 5D
        ret                                             ; 10DA _ C3
_ReadUnaligned64 ENDP

_WriteUnaligned64 PROC
        push    rbp                                     ; 10DB _ 55
        mov     rbp, rsp                                ; 10DC _ 48: 89. E5
        push    rsi                                     ; 10DF _ 56
        push    rdi                                     ; 10E0 _ 57
        sub     rsp, 32                                 ; 10E1 _ 48: 83. EC, 20
        mov     rsi, rdx                                ; 10E5 _ 48: 89. D6
        mov     rdi, rcx                                ; 10E8 _ 48: 89. CF
        call    _DebugAssertEnabled                     ; 10EB _ E8, FFFFF15C
        test    al, al                                  ; 10F0 _ 84. C0
        jz      Unnamed_1_ED1                           ; 10F2 _ 74, 1D
        test    rdi, rdi                                ; 10F4 _ 48: 85. FF
        jnz     Unnamed_1_ED1                           ; 10F7 _ 75, 18
        lea     rcx, ptr [?_355]                        ; 10F9 _ 48: 8D. 0D, 00005936(rel)
        lea     r8, ptr [?_319]                         ; 1100 _ 4C: 8D. 05, 000051FB(rel)
        mov     edx, 219                                ; 1107 _ BA, 000000DB
        call    _DebugAssert                            ; 110C _ E8, FFFFF13A
Unnamed_1_ED1:
        mov     qword ptr [rdi], rsi                    ; 1111 _ 48: 89. 37
        mov     rax, rsi                                ; 1114 _ 48: 89. F0
        add     rsp, 32                                 ; 1117 _ 48: 83. C4, 20
        pop     rdi                                     ; 111B _ 5F
        pop     rsi                                     ; 111C _ 5E
        pop     rbp                                     ; 111D _ 5D
        ret                                             ; 111E _ C3
_WriteUnaligned64 ENDP

_InternalSwitchStack PROC
        push    rbp                                     ; 111F _ 55
        mov     rbp, rsp                                ; 1120 _ 48: 89. E5
        mov     rax, rcx                                ; 1123 _ 48: 89. C8
        mov     rcx, rdx                                ; 1126 _ 48: 89. D1
        mov     rdx, r8                                 ; 1129 _ 4C: 89. C2
        lea     rsp, ptr [r9-20H]                       ; 112C _ 49: 8D. 61, E0
        push    0                                       ; 1130 _ 6A, 00
        jmp     rax                                     ; 1132 _ FF. E0
_InternalSwitchStack ENDP

_SetJump PROC
        push    rcx                                     ; 1134 _ 51
        add     rsp, -32                                ; 1135 _ 48: 83. C4, E0
        call    _InternalAssertJumpBuffer               ; 1139 _ E8, FFFFF4AB
        add     rsp, 32                                 ; 113E _ 48: 83. C4, 20
        pop     rcx                                     ; 1142 _ 59
        pop     rdx                                     ; 1143 _ 5A
        mov     qword ptr [rcx], rbx                    ; 1144 _ 48: 89. 19
        mov     qword ptr [rcx+8H], rsp                 ; 1147 _ 48: 89. 61, 08
        mov     qword ptr [rcx+10H], rbp                ; 114B _ 48: 89. 69, 10
        mov     qword ptr [rcx+18H], rdi                ; 114F _ 48: 89. 79, 18
        mov     qword ptr [rcx+20H], rsi                ; 1153 _ 48: 89. 71, 20
        mov     qword ptr [rcx+28H], r12                ; 1157 _ 4C: 89. 61, 28
        mov     qword ptr [rcx+30H], r13                ; 115B _ 4C: 89. 69, 30
        mov     qword ptr [rcx+38H], r14                ; 115F _ 4C: 89. 71, 38
        mov     qword ptr [rcx+40H], r15                ; 1163 _ 4C: 89. 79, 40
        mov     qword ptr [rcx+48H], rdx                ; 1167 _ 48: 89. 51, 48
        stmxcsr dword ptr [rcx+50H]                     ; 116B _ 0F AE. 59, 50
        movdqu  xmmword ptr [rcx+58H], xmm6             ; 116F _ F3: 0F 7F. 71, 58
        movdqu  xmmword ptr [rcx+68H], xmm7             ; 1174 _ F3: 0F 7F. 79, 68
        movdqu  xmmword ptr [rcx+78H], xmm8             ; 1179 _ F3 44: 0F 7F. 41, 78
        movdqu  xmmword ptr [rcx+88H], xmm9             ; 117F _ F3 44: 0F 7F. 89, 00000088
        movdqu  xmmword ptr [rcx+98H], xmm10            ; 1188 _ F3 44: 0F 7F. 91, 00000098
        movdqu  xmmword ptr [rcx+0A8H], xmm11           ; 1191 _ F3 44: 0F 7F. 99, 000000A8
        movdqu  xmmword ptr [rcx+0B8H], xmm12           ; 119A _ F3 44: 0F 7F. A1, 000000B8
        movdqu  xmmword ptr [rcx+0C8H], xmm13           ; 11A3 _ F3 44: 0F 7F. A9, 000000C8
        movdqu  xmmword ptr [rcx+0D8H], xmm14           ; 11AC _ F3 44: 0F 7F. B1, 000000D8
        movdqu  xmmword ptr [rcx+0E8H], xmm15           ; 11B5 _ F3 44: 0F 7F. B9, 000000E8
        xor     rax, rax                                ; 11BE _ 48: 31. C0
        jmp     rdx                                     ; 11C1 _ FF. E2
_SetJump ENDP

_InternalLongJump PROC
        mov     rbx, qword ptr [rcx]                    ; 11C3 _ 48: 8B. 19
        mov     rsp, qword ptr [rcx+8H]                 ; 11C6 _ 48: 8B. 61, 08
        mov     rbp, qword ptr [rcx+10H]                ; 11CA _ 48: 8B. 69, 10
        mov     rdi, qword ptr [rcx+18H]                ; 11CE _ 48: 8B. 79, 18
        mov     rsi, qword ptr [rcx+20H]                ; 11D2 _ 48: 8B. 71, 20
        mov     r12, qword ptr [rcx+28H]                ; 11D6 _ 4C: 8B. 61, 28
        mov     r13, qword ptr [rcx+30H]                ; 11DA _ 4C: 8B. 69, 30
        mov     r14, qword ptr [rcx+38H]                ; 11DE _ 4C: 8B. 71, 38
        mov     r15, qword ptr [rcx+40H]                ; 11E2 _ 4C: 8B. 79, 40
        ldmxcsr dword ptr [rcx+50H]                     ; 11E6 _ 0F AE. 51, 50
        movdqu  xmm6, xmmword ptr [rcx+58H]             ; 11EA _ F3: 0F 6F. 71, 58
        movdqu  xmm7, xmmword ptr [rcx+68H]             ; 11EF _ F3: 0F 6F. 79, 68
        movdqu  xmm8, xmmword ptr [rcx+78H]             ; 11F4 _ F3 44: 0F 6F. 41, 78
        movdqu  xmm9, xmmword ptr [rcx+88H]             ; 11FA _ F3 44: 0F 6F. 89, 00000088
        movdqu  xmm10, xmmword ptr [rcx+98H]            ; 1203 _ F3 44: 0F 6F. 91, 00000098
        movdqu  xmm11, xmmword ptr [rcx+0A8H]           ; 120C _ F3 44: 0F 6F. 99, 000000A8
        movdqu  xmm12, xmmword ptr [rcx+0B8H]           ; 1215 _ F3 44: 0F 6F. A1, 000000B8
        movdqu  xmm13, xmmword ptr [rcx+0C8H]           ; 121E _ F3 44: 0F 6F. A9, 000000C8
        movdqu  xmm14, xmmword ptr [rcx+0D8H]           ; 1227 _ F3 44: 0F 6F. B1, 000000D8
        movdqu  xmm15, xmmword ptr [rcx+0E8H]           ; 1230 _ F3 44: 0F 6F. B9, 000000E8
        mov     rax, rdx                                ; 1239 _ 48: 89. D0
        jmp     qword ptr [rcx+48H]                     ; 123C _ FF. 61, 48
_InternalLongJump ENDP

_EnableDisableInterrupts PROC
        sti                                             ; 123F _ FB
        cli                                             ; 1240 _ FA
        ret                                             ; 1241 _ C3
_EnableDisableInterrupts ENDP

_InternalX86DisablePaging64 PROC
        cli                                             ; 1242 _ FA
        lea     rsi, ptr [?_047]                        ; 1243 _ 48: 8D. 35, 00000032(rel)
        mov     edi, dword ptr [rsp+28H]                ; 124A _ 8B. 7C 24, 28
        lea     rax, ptr [_AsmCpuid]                    ; 124E _ 48: 8D. 05, 0000004F(rel)
        sub     rax, rsi                                ; 1255 _ 48: 29. F0
        add     rax, 4                                  ; 1258 _ 48: 83. C0, 04
        and     al, 0FFFFFFFCH                          ; 125C _ 24, FC
        sub     rdi, rax                                ; 125E _ 48: 29. C7
        mov     r10d, edi                               ; 1261 _ 41: 89. FA
        push    rcx                                     ; 1264 _ 51
        mov     rcx, rax                                ; 1265 _ 48: 89. C1
        rep movsb                                       ; 1268 _ F3: A4
        pop     rcx                                     ; 126A _ 59
        mov     esi, r8d                                ; 126B _ 44: 89. C6
        mov     edi, r9d                                ; 126E _ 44: 89. CF
        mov     eax, r10d                               ; 1271 _ 44: 89. D0
        sub     eax, 4                                  ; 1274 _ 83. E8, 04
        push    rcx                                     ; 1277 _ 51
        push    r10                                     ; 1278 _ 41: 52
; Note: Prefix valid but unnecessary
; Note: Prefix bit or byte has no meaning in this context
        retf                                            ; 127A _ 48: CB
_InternalX86DisablePaging64 ENDP

?_047   LABEL NEAR
        mov     esp, eax                                ; 127C _ 89. C4
        mov     rax, cr0                                ; 127E _ 0F 20. C0
        btr     eax, 31                                 ; 1281 _ 0F BA. F0, 1F
        mov     cr0, rax                                ; 1285 _ 0F 22. C0
        mov     ebx, edx                                ; 1288 _ 89. D3
        mov     ecx, 3221225600                         ; 128A _ B9, C0000080
        rdmsr                                           ; 128F _ 0F 32
        and     ah, 0FFFFFFFEH                          ; 1291 _ 80. E4, FE
        wrmsr                                           ; 1294 _ 0F 30
        mov     rax, cr4                                ; 1296 _ 0F 20. E0
        and     al, 0FFFFFFDFH                          ; 1299 _ 24, DF
        mov     cr4, rax                                ; 129B _ 0F 22. E0
        push    rdi                                     ; 129E _ 57
        push    rsi                                     ; 129F _ 56
        call    rbx                                     ; 12A0 _ FF. D3
?_048:  jmp     ?_048                                   ; 12A2 _ EB, FE

_AsmCpuid PROC

_mTransitionEnd LABEL NEAR
        push    rbx                                     ; 12A4 _ 53
        mov     eax, ecx                                ; 12A5 _ 89. C8
        push    rax                                     ; 12A7 _ 50
        push    rdx                                     ; 12A8 _ 52
        cpuid                                           ; 12A9 _ 0F A2
        test    r9, r9                                  ; 12AB _ 4D: 85. C9
        jz      ?_049                                   ; 12AE _ 74, 03
        mov     dword ptr [r9], ecx                     ; 12B0 _ 41: 89. 09
?_049:  pop     rcx                                     ; 12B3 _ 59
        jrcxz   ?_050                                   ; 12B4 _ E3, 02
        mov     dword ptr [rcx], eax                    ; 12B6 _ 89. 01
?_050:  mov     rcx, r8                                 ; 12B8 _ 4C: 89. C1
        jrcxz   ?_051                                   ; 12BB _ E3, 02
        mov     dword ptr [rcx], ebx                    ; 12BD _ 89. 19
?_051:  mov     rcx, qword ptr [rsp+38H]                ; 12BF _ 48: 8B. 4C 24, 38
        jrcxz   ?_052                                   ; 12C4 _ E3, 02
        mov     dword ptr [rcx], edx                    ; 12C6 _ 89. 11
?_052:  pop     rax                                     ; 12C8 _ 58
        pop     rbx                                     ; 12C9 _ 5B
        ret                                             ; 12CA _ C3
_AsmCpuid ENDP

_AsmCpuidEx PROC
        push    rbx                                     ; 12CB _ 53
        mov     eax, ecx                                ; 12CC _ 89. C8
        mov     ecx, edx                                ; 12CE _ 89. D1
        push    rax                                     ; 12D0 _ 50
        cpuid                                           ; 12D1 _ 0F A2
        mov     r10, qword ptr [rsp+38H]                ; 12D3 _ 4C: 8B. 54 24, 38
        test    r10, r10                                ; 12D8 _ 4D: 85. D2
        jz      ?_053                                   ; 12DB _ 74, 03
        mov     dword ptr [r10], ecx                    ; 12DD _ 41: 89. 0A
?_053:  mov     rcx, r8                                 ; 12E0 _ 4C: 89. C1
        jrcxz   ?_054                                   ; 12E3 _ E3, 02
        mov     dword ptr [rcx], eax                    ; 12E5 _ 89. 01
?_054:  mov     rcx, r9                                 ; 12E7 _ 4C: 89. C9
        jrcxz   ?_055                                   ; 12EA _ E3, 02
        mov     dword ptr [rcx], ebx                    ; 12EC _ 89. 19
?_055:  mov     rcx, qword ptr [rsp+40H]                ; 12EE _ 48: 8B. 4C 24, 40
        jrcxz   ?_056                                   ; 12F3 _ E3, 02
        mov     dword ptr [rcx], edx                    ; 12F5 _ 89. 11
?_056:  pop     rax                                     ; 12F7 _ 58
        pop     rbx                                     ; 12F8 _ 5B
        ret                                             ; 12F9 _ C3
_AsmCpuidEx ENDP

_AsmEnableCache PROC
        wbinvd                                          ; 12FA _ 0F 09
        mov     rax, cr0                                ; 12FC _ 0F 20. C0
        btr     rax, 30                                 ; 12FF _ 48: 0F BA. F0, 1E
        btr     rax, 29                                 ; 1304 _ 48: 0F BA. F0, 1D
        mov     cr0, rax                                ; 1309 _ 0F 22. C0
        ret                                             ; 130C _ C3
_AsmEnableCache ENDP

_AsmDisableCache PROC
        mov     rax, cr0                                ; 130D _ 0F 20. C0
        bts     rax, 30                                 ; 1310 _ 48: 0F BA. E8, 1E
        btr     rax, 29                                 ; 1315 _ 48: 0F BA. F0, 1D
        mov     cr0, rax                                ; 131A _ 0F 22. C0
        wbinvd                                          ; 131D _ 0F 09
        ret                                             ; 131F _ C3
_AsmDisableCache ENDP

_AsmRdRand16 PROC
        rdrand  eax                                     ; 1320 _ 0F C7. F0
; Note: Immediate operand could be made smaller by sign extension
        jc      rn16_ok                                 ; 1323 _ 0F 82, 00000004
        xor     rax, rax                                ; 1329 _ 48: 31. C0
        ret                                             ; 132C _ C3
_AsmRdRand16 ENDP

rn16_ok LABEL NEAR
        mov     word ptr [rcx], ax                      ; 132D _ 66: 89. 01
        mov     rax, 1                                  ; 1330 _ 48: C7. C0, 00000001
        ret                                             ; 1337 _ C3

_AsmRdRand32 PROC
        rdrand  eax                                     ; 1338 _ 0F C7. F0
; Note: Immediate operand could be made smaller by sign extension
        jc      rn32_ok                                 ; 133B _ 0F 82, 00000004
        xor     rax, rax                                ; 1341 _ 48: 31. C0
        ret                                             ; 1344 _ C3
_AsmRdRand32 ENDP

rn32_ok LABEL NEAR
        mov     dword ptr [rcx], eax                    ; 1345 _ 89. 01
        mov     rax, 1                                  ; 1347 _ 48: C7. C0, 00000001
        ret                                             ; 134E _ C3

_AsmRdRand64 PROC
        rdrand  rax                                     ; 134F _ 48: 0F C7. F0
; Note: Immediate operand could be made smaller by sign extension
        jc      rn64_ok                                 ; 1353 _ 0F 82, 00000004
        xor     rax, rax                                ; 1359 _ 48: 31. C0
        ret                                             ; 135C _ C3
_AsmRdRand64 ENDP

rn64_ok LABEL NEAR
        mov     qword ptr [rcx], rax                    ; 135D _ 48: 89. 01
        mov     rax, 1                                  ; 1360 _ 48: C7. C0, 00000001
        ret                                             ; 1367 _ C3

_UefiBootServicesTableLibConstructor PROC
        push    rbp                                     ; 1368 _ 55
        mov     rbp, rsp                                ; 1369 _ 48: 89. E5
        push    rsi                                     ; 136C _ 56
        sub     rsp, 40                                 ; 136D _ 48: 83. EC, 28
        mov     rsi, rdx                                ; 1371 _ 48: 89. D6
        mov     qword ptr [_gImageHandle], rcx          ; 1374 _ 48: 89. 0D, 00007DBD(rel)
        call    _DebugAssertEnabled                     ; 137B _ E8, FFFFEECC
        test    al, al                                  ; 1380 _ 84. C0
        jz      Unnamed_1_1168                          ; 1382 _ 74, 24
        mov     rax, qword ptr [_gImageHandle]          ; 1384 _ 48: 8B. 05, 00007DAD(rel)
        test    rax, rax                                ; 138B _ 48: 85. C0
        jnz     Unnamed_1_1168                          ; 138E _ 75, 18
        lea     rcx, ptr [?_356]                        ; 1390 _ 48: 8D. 0D, 000056F5(rel)
        lea     r8, ptr [?_357]                         ; 1397 _ 4C: 8D. 05, 00005764(rel)
        mov     edx, 51                                 ; 139E _ BA, 00000033
        call    _DebugAssert                            ; 13A3 _ E8, FFFFEEA3
Unnamed_1_1168:
        mov     qword ptr [_gST], rsi                   ; 13A8 _ 48: 89. 35, 00007D91(rel)
        call    _DebugAssertEnabled                     ; 13AF _ E8, FFFFEE98
        test    al, al                                  ; 13B4 _ 84. C0
        jz      Unnamed_1_119C                          ; 13B6 _ 74, 24
        mov     rax, qword ptr [_gST]                   ; 13B8 _ 48: 8B. 05, 00007D81(rel)
        test    rax, rax                                ; 13BF _ 48: 85. C0
        jnz     Unnamed_1_119C                          ; 13C2 _ 75, 18
        lea     rcx, ptr [?_356]                        ; 13C4 _ 48: 8D. 0D, 000056C1(rel)
        lea     r8, ptr [?_358]                         ; 13CB _ 4C: 8D. 05, 0000574D(rel)
        mov     edx, 57                                 ; 13D2 _ BA, 00000039
        call    _DebugAssert                            ; 13D7 _ E8, FFFFEE6F
Unnamed_1_119C:
        mov     rax, qword ptr [rsi+60H]                ; 13DC _ 48: 8B. 46, 60
        mov     qword ptr [_gBS], rax                   ; 13E0 _ 48: 89. 05, 00007D61(rel)
        call    _DebugAssertEnabled                     ; 13E7 _ E8, FFFFEE60
        test    al, al                                  ; 13EC _ 84. C0
        jz      Unnamed_1_11D4                          ; 13EE _ 74, 24
        mov     rax, qword ptr [_gBS]                   ; 13F0 _ 48: 8B. 05, 00007D51(rel)
        test    rax, rax                                ; 13F7 _ 48: 85. C0
        jnz     Unnamed_1_11D4                          ; 13FA _ 75, 18
        lea     rcx, ptr [?_356]                        ; 13FC _ 48: 8D. 0D, 00005689(rel)
        lea     r8, ptr [?_359]                         ; 1403 _ 4C: 8D. 05, 00005729(rel)
        mov     edx, 63                                 ; 140A _ BA, 0000003F
        call    _DebugAssert                            ; 140F _ E8, FFFFEE37
Unnamed_1_11D4:
        xor     eax, eax                                ; 1414 _ 31. C0
        add     rsp, 40                                 ; 1416 _ 48: 83. C4, 28
        pop     rsi                                     ; 141A _ 5E
        pop     rbp                                     ; 141B _ 5D
        ret                                             ; 141C _ C3
_UefiBootServicesTableLibConstructor ENDP

_InternalAllocateAlignedPages PROC
        push    rbp                                     ; 141D _ 55
        mov     rbp, rsp                                ; 141E _ 48: 89. E5
        push    r15                                     ; 1421 _ 41: 57
        push    r14                                     ; 1423 _ 41: 56
        push    rsi                                     ; 1425 _ 56
        push    rdi                                     ; 1426 _ 57
        push    rbx                                     ; 1427 _ 53
        sub     rsp, 40                                 ; 1428 _ 48: 83. EC, 28
        mov     rsi, r8                                 ; 142C _ 4C: 89. C6
        mov     r15, rdx                                ; 142F _ 49: 89. D7
        mov     r14d, ecx                               ; 1432 _ 41: 89. CE
        call    _DebugAssertEnabled                     ; 1435 _ E8, FFFFEE12
        test    al, al                                  ; 143A _ 84. C0
        jz      Unnamed_1_121F                          ; 143C _ 74, 21
        lea     rax, ptr [rsi-1H]                       ; 143E _ 48: 8D. 46, FF
        test    rsi, rax                                ; 1442 _ 48: 85. C6
        jz      Unnamed_1_121F                          ; 1445 _ 74, 18
        lea     rcx, ptr [?_360]                        ; 1447 _ 48: 8D. 0D, 000056F9(rel)
        lea     r8, ptr [?_361]                         ; 144E _ 4C: 8D. 05, 00005762(rel)
        mov     edx, 190                                ; 1455 _ BA, 000000BE
        call    _DebugAssert                            ; 145A _ E8, FFFFEDEC
Unnamed_1_121F:
        xor     eax, eax                                ; 145F _ 31. C0
        test    r15, r15                                ; 1461 _ 4D: 85. FF
        je      Unnamed_1_13CE                          ; 1464 _ 0F 84, 000001A4
        cmp     rsi, 4097                               ; 146A _ 48: 81. FE, 00001001
        jc      ?_057                                   ; 1471 _ 0F 82, 00000170
        mov     rbx, rsi                                ; 1477 _ 48: 89. F3
        shr     rbx, 12                                 ; 147A _ 48: C1. EB, 0C
        mov     rax, rsi                                ; 147E _ 48: 89. F0
        and     rax, 0FFFH                              ; 1481 _ 48: 25, 00000FFF
        cmp     rax, 1                                  ; 1487 _ 48: 83. F8, 01
        sbb     rbx, -1                                 ; 148B _ 48: 83. DB, FF
        lea     rdi, ptr [rbx+r15]                      ; 148F _ 4A: 8D. 3C 3B
        call    _DebugAssertEnabled                     ; 1493 _ E8, FFFFEDB4
        test    al, al                                  ; 1498 _ 84. C0
        jz      Unnamed_1_1279                          ; 149A _ 74, 1D
        cmp     rdi, r15                                ; 149C _ 4C: 39. FF
        ja      Unnamed_1_1279                          ; 149F _ 77, 18
        lea     rcx, ptr [?_360]                        ; 14A1 _ 48: 8D. 0D, 0000569F(rel)
        lea     r8, ptr [?_362]                         ; 14A8 _ 4C: 8D. 05, 0000572B(rel)
        mov     edx, 204                                ; 14AF _ BA, 000000CC
        call    _DebugAssert                            ; 14B4 _ E8, FFFFED92
Unnamed_1_1279:
        mov     rax, qword ptr [_gBS]                   ; 14B9 _ 48: 8B. 05, 00007C88(rel)
        lea     r9, ptr [rbp-30H]                       ; 14C0 _ 4C: 8D. 4D, D0
        xor     ecx, ecx                                ; 14C4 _ 31. C9
        mov     edx, r14d                               ; 14C6 _ 44: 89. F2
        mov     r8, rdi                                 ; 14C9 _ 49: 89. F8
        call    qword ptr [rax+28H]                     ; 14CC _ FF. 50, 28
        mov     rcx, rax                                ; 14CF _ 48: 89. C1
        xor     eax, eax                                ; 14D2 _ 31. C0
        test    rcx, rcx                                ; 14D4 _ 48: 85. C9
        js      Unnamed_1_13CE                          ; 14D7 _ 0F 88, 00000131
        mov     rcx, qword ptr [rbp-30H]                ; 14DD _ 48: 8B. 4D, D0
        lea     rax, ptr [rsi+rcx-1H]                   ; 14E1 _ 48: 8D. 44 0E, FF
        neg     rsi                                     ; 14E6 _ 48: F7. DE
        and     rsi, rax                                ; 14E9 _ 48: 21. C6
        mov     rdx, rsi                                ; 14EC _ 48: 89. F2
        sub     rdx, rcx                                ; 14EF _ 48: 29. CA
        mov     rax, rdx                                ; 14F2 _ 48: 89. D0
        shr     rax, 12                                 ; 14F5 _ 48: C1. E8, 0C
; Note: Length-changing prefix causes delay on Intel processors
        test    dx, 0FFFH                               ; 14F9 _ 66: F7. C2, 0FFF
        setne   dl                                      ; 14FE _ 0F 95. C2
        movzx   edi, dl                                 ; 1501 _ 0F B6. FA
        add     rdi, rax                                ; 1504 _ 48: 01. C7
        jz      Unnamed_1_132A                          ; 1507 _ 74, 61
        mov     rax, qword ptr [_gBS]                   ; 1509 _ 48: 8B. 05, 00007C38(rel)
        mov     rdx, rdi                                ; 1510 _ 48: 89. FA
        call    qword ptr [rax+30H]                     ; 1513 _ FF. 50, 30
        mov     r14, rax                                ; 1516 _ 49: 89. C6
        call    _DebugAssertEnabled                     ; 1519 _ E8, FFFFED2E
        test    al, al                                  ; 151E _ 84. C0
        jz      Unnamed_1_132A                          ; 1520 _ 74, 48
        test    r14, r14                                ; 1522 _ 4D: 85. F6
        jns     Unnamed_1_132A                          ; 1525 _ 79, 43
        call    _DebugPrintEnabled                      ; 1527 _ E8, FFFFED23
        test    al, al                                  ; 152C _ 84. C0
        jz      Unnamed_1_1312                          ; 152E _ 74, 22
        mov     ecx, 2147483648                         ; 1530 _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 1535 _ E8, FFFFED18
        test    al, al                                  ; 153A _ 84. C0
        jz      Unnamed_1_1312                          ; 153C _ 74, 14
        lea     rdx, ptr [?_317]                        ; 153E _ 48: 8D. 15, 00004D88(rel)
        mov     ecx, 2147483648                         ; 1545 _ B9, 80000000
        mov     r8, r14                                 ; 154A _ 4D: 89. F0
        call    _DebugPrint                             ; 154D _ E8, FFFFECEE
Unnamed_1_1312:
        lea     rcx, ptr [?_360]                        ; 1552 _ 48: 8D. 0D, 000055EE(rel)
        lea     r8, ptr [?_318]                         ; 1559 _ 4C: 8D. 05, 00004D8E(rel)
        mov     edx, 217                                ; 1560 _ BA, 000000D9
        call    _DebugAssert                            ; 1565 _ E8, FFFFECE1
Unnamed_1_132A:
        shl     r15, 12                                 ; 156A _ 49: C1. E7, 0C
        add     r15, rsi                                ; 156E _ 49: 01. F7
        mov     qword ptr [rbp-30H], r15                ; 1571 _ 4C: 89. 7D, D0
        cmp     rbx, rdi                                ; 1575 _ 48: 39. FB
        je      Unnamed_1_13CB                          ; 1578 _ 0F 84, 0000008D
        sub     rbx, rdi                                ; 157E _ 48: 29. FB
        mov     rax, qword ptr [_gBS]                   ; 1581 _ 48: 8B. 05, 00007BC0(rel)
        mov     rcx, r15                                ; 1588 _ 4C: 89. F9
        mov     rdx, rbx                                ; 158B _ 48: 89. DA
        call    qword ptr [rax+30H]                     ; 158E _ FF. 50, 30
        mov     rdi, rax                                ; 1591 _ 48: 89. C7
        call    _DebugAssertEnabled                     ; 1594 _ E8, FFFFECB3
        test    al, al                                  ; 1599 _ 84. C0
        jz      Unnamed_1_13CB                          ; 159B _ 74, 6E
        test    rdi, rdi                                ; 159D _ 48: 85. FF
        jns     Unnamed_1_13CB                          ; 15A0 _ 79, 69
        call    _DebugPrintEnabled                      ; 15A2 _ E8, FFFFECA8
        test    al, al                                  ; 15A7 _ 84. C0
        jz      Unnamed_1_138D                          ; 15A9 _ 74, 22
        mov     ecx, 2147483648                         ; 15AB _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 15B0 _ E8, FFFFEC9D
        test    al, al                                  ; 15B5 _ 84. C0
        jz      Unnamed_1_138D                          ; 15B7 _ 74, 14
        lea     rdx, ptr [?_317]                        ; 15B9 _ 48: 8D. 15, 00004D0D(rel)
        mov     ecx, 2147483648                         ; 15C0 _ B9, 80000000
        mov     r8, rdi                                 ; 15C5 _ 49: 89. F8
        call    _DebugPrint                             ; 15C8 _ E8, FFFFEC73
Unnamed_1_138D:
        lea     rcx, ptr [?_360]                        ; 15CD _ 48: 8D. 0D, 00005573(rel)
        lea     r8, ptr [?_318]                         ; 15D4 _ 4C: 8D. 05, 00004D13(rel)
        mov     edx, 226                                ; 15DB _ BA, 000000E2
        call    _DebugAssert                            ; 15E0 _ E8, FFFFEC66
        jmp     Unnamed_1_13CB                          ; 15E5 _ EB, 24

?_057:  mov     rax, qword ptr [_gBS]                   ; 15E7 _ 48: 8B. 05, 00007B5A(rel)
        lea     r9, ptr [rbp-30H]                       ; 15EE _ 4C: 8D. 4D, D0
        xor     ecx, ecx                                ; 15F2 _ 31. C9
        mov     edx, r14d                               ; 15F4 _ 44: 89. F2
        mov     r8, r15                                 ; 15F7 _ 4D: 89. F8
        call    qword ptr [rax+28H]                     ; 15FA _ FF. 50, 28
        mov     rcx, rax                                ; 15FD _ 48: 89. C1
        xor     eax, eax                                ; 1600 _ 31. C0
        test    rcx, rcx                                ; 1602 _ 48: 85. C9
        js      Unnamed_1_13CE                          ; 1605 _ 78, 07
        mov     rsi, qword ptr [rbp-30H]                ; 1607 _ 48: 8B. 75, D0
Unnamed_1_13CB:
        mov     rax, rsi                                ; 160B _ 48: 89. F0
Unnamed_1_13CE:
        add     rsp, 40                                 ; 160E _ 48: 83. C4, 28
        pop     rbx                                     ; 1612 _ 5B
        pop     rdi                                     ; 1613 _ 5F
        pop     rsi                                     ; 1614 _ 5E
        pop     r14                                     ; 1615 _ 41: 5E
        pop     r15                                     ; 1617 _ 41: 5F
        pop     rbp                                     ; 1619 _ 5D
        ret                                             ; 161A _ C3
_InternalAllocateAlignedPages ENDP

_AllocateAlignedPages PROC
        mov     rax, rdx                                ; 161B _ 48: 89. D0
        mov     rdx, rcx                                ; 161E _ 48: 89. CA
        mov     ecx, 4                                  ; 1621 _ B9, 00000004
        mov     r8, rax                                 ; 1626 _ 49: 89. C0
        jmp     _InternalAllocateAlignedPages           ; 1629 _ E9, FFFFFDEF
_AllocateAlignedPages ENDP

_InternalAllocatePool PROC
        push    rbp                                     ; 162E _ 55
        mov     rbp, rsp                                ; 162F _ 48: 89. E5
        sub     rsp, 48                                 ; 1632 _ 48: 83. EC, 30
        mov     rax, qword ptr [_gBS]                   ; 1636 _ 48: 8B. 05, 00007B0B(rel)
        lea     r8, ptr [rbp-8H]                        ; 163D _ 4C: 8D. 45, F8
        call    qword ptr [rax+40H]                     ; 1641 _ FF. 50, 40
        test    rax, rax                                ; 1644 _ 48: 85. C0
        js      ?_058                                   ; 1647 _ 78, 06
        mov     rax, qword ptr [rbp-8H]                 ; 1649 _ 48: 8B. 45, F8
        jmp     ?_059                                   ; 164D _ EB, 0A

?_058:  mov     qword ptr [rbp-8H], 0                   ; 164F _ 48: C7. 45, F8, 00000000
        xor     eax, eax                                ; 1657 _ 31. C0
?_059:  add     rsp, 48                                 ; 1659 _ 48: 83. C4, 30
        pop     rbp                                     ; 165D _ 5D
        ret                                             ; 165E _ C3
_InternalAllocatePool ENDP

_AllocatePool PROC
        mov     rax, rcx                                ; 165F _ 48: 89. C8
        mov     ecx, 4                                  ; 1662 _ B9, 00000004
        mov     rdx, rax                                ; 1667 _ 48: 89. C2
; Note: Immediate operand could be made smaller by sign extension
        jmp     _InternalAllocatePool                   ; 166A _ E9, FFFFFFBF
_AllocatePool ENDP

_InternalAllocateZeroPool PROC
        push    rbp                                     ; 166F _ 55
        mov     rbp, rsp                                ; 1670 _ 48: 89. E5
        push    rsi                                     ; 1673 _ 56
        sub     rsp, 40                                 ; 1674 _ 48: 83. EC, 28
        mov     rsi, rdx                                ; 1678 _ 48: 89. D6
        call    _InternalAllocatePool                   ; 167B _ E8, FFFFFFAE
        test    rax, rax                                ; 1680 _ 48: 85. C0
        jnz     ?_060                                   ; 1683 _ 75, 09
        xor     eax, eax                                ; 1685 _ 31. C0
        add     rsp, 40                                 ; 1687 _ 48: 83. C4, 28
        pop     rsi                                     ; 168B _ 5E
        pop     rbp                                     ; 168C _ 5D
        ret                                             ; 168D _ C3
_InternalAllocateZeroPool ENDP

?_060   LABEL NEAR
        mov     rcx, rax                                ; 168E _ 48: 89. C1
        mov     rdx, rsi                                ; 1691 _ 48: 89. F2
        add     rsp, 40                                 ; 1694 _ 48: 83. C4, 28
        pop     rsi                                     ; 1698 _ 5E
        pop     rbp                                     ; 1699 _ 5D
        jmp     _ZeroMem                                ; 169A _ E9, FFFFEBCD

_AllocateZeroPool PROC
        mov     rax, rcx                                ; 169F _ 48: 89. C8
        mov     ecx, 4                                  ; 16A2 _ B9, 00000004
        mov     rdx, rax                                ; 16A7 _ 48: 89. C2
; Note: Immediate operand could be made smaller by sign extension
        jmp     _InternalAllocateZeroPool               ; 16AA _ E9, FFFFFFC0
_AllocateZeroPool ENDP

_InternalAllocateCopyPool PROC
        push    rbp                                     ; 16AF _ 55
        mov     rbp, rsp                                ; 16B0 _ 48: 89. E5
        push    rsi                                     ; 16B3 _ 56
        push    rdi                                     ; 16B4 _ 57
        push    rbx                                     ; 16B5 _ 53
        sub     rsp, 40                                 ; 16B6 _ 48: 83. EC, 28
        mov     rsi, r8                                 ; 16BA _ 4C: 89. C6
        mov     rdi, rdx                                ; 16BD _ 48: 89. D7
        mov     ebx, ecx                                ; 16C0 _ 89. CB
        call    _DebugAssertEnabled                     ; 16C2 _ E8, FFFFEB85
        test    al, al                                  ; 16C7 _ 84. C0
        jz      Unnamed_1_14A8                          ; 16C9 _ 74, 1D
        test    rsi, rsi                                ; 16CB _ 48: 85. F6
        jnz     Unnamed_1_14A8                          ; 16CE _ 75, 18
        lea     rcx, ptr [?_360]                        ; 16D0 _ 48: 8D. 0D, 00005470(rel)
        lea     r8, ptr [?_319]                         ; 16D7 _ 4C: 8D. 05, 00004C24(rel)
        mov     edx, 569                                ; 16DE _ BA, 00000239
        call    _DebugAssert                            ; 16E3 _ E8, FFFFEB63
Unnamed_1_14A8:
        call    _DebugAssertEnabled                     ; 16E8 _ E8, FFFFEB5F
        test    al, al                                  ; 16ED _ 84. C0
        jz      Unnamed_1_14D4                          ; 16EF _ 74, 23
        mov     rax, rsi                                ; 16F1 _ 48: 89. F0
        neg     rax                                     ; 16F4 _ 48: F7. D8
        cmp     rdi, rax                                ; 16F7 _ 48: 39. C7
        jbe     Unnamed_1_14D4                          ; 16FA _ 76, 18
        lea     rcx, ptr [?_360]                        ; 16FC _ 48: 8D. 0D, 00005444(rel)
        lea     r8, ptr [?_363]                         ; 1703 _ 4C: 8D. 05, 000054E2(rel)
        mov     edx, 570                                ; 170A _ BA, 0000023A
        call    _DebugAssert                            ; 170F _ E8, FFFFEB37
Unnamed_1_14D4:
        mov     ecx, ebx                                ; 1714 _ 89. D9
        mov     rdx, rdi                                ; 1716 _ 48: 89. FA
        call    _InternalAllocatePool                   ; 1719 _ E8, FFFFFF10
        test    rax, rax                                ; 171E _ 48: 85. C0
        jnz     ?_061                                   ; 1721 _ 75, 0B
        xor     eax, eax                                ; 1723 _ 31. C0
        add     rsp, 40                                 ; 1725 _ 48: 83. C4, 28
        pop     rbx                                     ; 1729 _ 5B
        pop     rdi                                     ; 172A _ 5F
        pop     rsi                                     ; 172B _ 5E
        pop     rbp                                     ; 172C _ 5D
        ret                                             ; 172D _ C3
_InternalAllocateCopyPool ENDP

?_061   LABEL NEAR
        mov     rcx, rax                                ; 172E _ 48: 89. C1
        mov     rdx, rsi                                ; 1731 _ 48: 89. F2
        mov     r8, rdi                                 ; 1734 _ 49: 89. F8
        add     rsp, 40                                 ; 1737 _ 48: 83. C4, 28
        pop     rbx                                     ; 173B _ 5B
        pop     rdi                                     ; 173C _ 5F
        pop     rsi                                     ; 173D _ 5E
        pop     rbp                                     ; 173E _ 5D
        jmp     _CopyMem                                ; 173F _ E9, FFFFED00

_AllocateCopyPool PROC
        mov     rax, rdx                                ; 1744 _ 48: 89. D0
        mov     rdx, rcx                                ; 1747 _ 48: 89. CA
        mov     ecx, 4                                  ; 174A _ B9, 00000004
        mov     r8, rax                                 ; 174F _ 49: 89. C0
        jmp     _InternalAllocateCopyPool               ; 1752 _ E9, FFFFFF58
_AllocateCopyPool ENDP

_FreePool PROC
        push    rbp                                     ; 1757 _ 55
        mov     rbp, rsp                                ; 1758 _ 48: 89. E5
        push    rsi                                     ; 175B _ 56
        sub     rsp, 40                                 ; 175C _ 48: 83. EC, 28
        mov     rax, qword ptr [_gBS]                   ; 1760 _ 48: 8B. 05, 000079E1(rel)
        call    qword ptr [rax+48H]                     ; 1767 _ FF. 50, 48
        mov     rsi, rax                                ; 176A _ 48: 89. C6
        call    _DebugAssertEnabled                     ; 176D _ E8, FFFFEADA
        test    al, al                                  ; 1772 _ 84. C0
        jz      Unnamed_1_1584                          ; 1774 _ 74, 4E
        test    rsi, rsi                                ; 1776 _ 48: 85. F6
        jns     Unnamed_1_1584                          ; 1779 _ 79, 49
        call    _DebugPrintEnabled                      ; 177B _ E8, FFFFEACF
        test    al, al                                  ; 1780 _ 84. C0
        jz      Unnamed_1_1566                          ; 1782 _ 74, 22
        mov     ecx, 2147483648                         ; 1784 _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 1789 _ E8, FFFFEAC4
        test    al, al                                  ; 178E _ 84. C0
        jz      Unnamed_1_1566                          ; 1790 _ 74, 14
        lea     rdx, ptr [?_317]                        ; 1792 _ 48: 8D. 15, 00004B34(rel)
        mov     ecx, 2147483648                         ; 1799 _ B9, 80000000
        mov     r8, rsi                                 ; 179E _ 49: 89. F0
        call    _DebugPrint                             ; 17A1 _ E8, FFFFEA9A
Unnamed_1_1566:
        lea     rcx, ptr [?_360]                        ; 17A6 _ 48: 8D. 0D, 0000539A(rel)
        lea     r8, ptr [?_318]                         ; 17AD _ 4C: 8D. 05, 00004B3A(rel)
        mov     edx, 819                                ; 17B4 _ BA, 00000333
        add     rsp, 40                                 ; 17B9 _ 48: 83. C4, 28
        pop     rsi                                     ; 17BD _ 5E
        pop     rbp                                     ; 17BE _ 5D
        jmp     _DebugAssert                            ; 17BF _ E9, FFFFEA87
_FreePool ENDP

Unnamed_1_1584 LABEL NEAR
        add     rsp, 40                                 ; 17C4 _ 48: 83. C4, 28
        pop     rsi                                     ; 17C8 _ 5E
        pop     rbp                                     ; 17C9 _ 5D
        ret                                             ; 17CA _ C3

        nop                                             ; 17CB _ 90

_BasePrintLibValueToString PROC
        push    rbp                                     ; 17CC _ 55
        mov     rbp, rsp                                ; 17CD _ 48: 89. E5
        push    r14                                     ; 17D0 _ 41: 56
        push    rsi                                     ; 17D2 _ 56
        push    rdi                                     ; 17D3 _ 57
        push    rbx                                     ; 17D4 _ 53
        sub     rsp, 48                                 ; 17D5 _ 48: 83. EC, 30
        mov     rsi, r8                                 ; 17D9 _ 4C: 89. C6
        mov     rax, rdx                                ; 17DC _ 48: 89. D0
        mov     rdi, rcx                                ; 17DF _ 48: 89. CF
        mov     byte ptr [rdi], 0                       ; 17E2 _ C6. 07, 00
        lea     r14, ptr [rbp-24H]                      ; 17E5 _ 4C: 8D. 75, DC
        lea     rbx, ptr [_mHexStr]                     ; 17E9 _ 48: 8D. 1D, 000061F0(rel)
?_062:  mov     rcx, rax                                ; 17F0 _ 48: 89. C1
        mov     edx, esi                                ; 17F3 _ 89. F2
        mov     r8, r14                                 ; 17F5 _ 4D: 89. F0
        call    _DivU64x32Remainder                     ; 17F8 _ E8, FFFFEE52
        mov     ecx, dword ptr [rbp-24H]                ; 17FD _ 8B. 4D, DC
        mov     cl, byte ptr [rcx+rbx]                  ; 1800 _ 8A. 0C 19
        mov     byte ptr [rdi+1H], cl                   ; 1803 _ 88. 4F, 01
        inc     rdi                                     ; 1806 _ 48: FF. C7
        test    rax, rax                                ; 1809 _ 48: 85. C0
        jnz     ?_062                                   ; 180C _ 75, E2
        mov     rax, rdi                                ; 180E _ 48: 89. F8
        add     rsp, 48                                 ; 1811 _ 48: 83. C4, 30
        pop     rbx                                     ; 1815 _ 5B
        pop     rdi                                     ; 1816 _ 5F
        pop     rsi                                     ; 1817 _ 5E
        pop     r14                                     ; 1818 _ 41: 5E
        pop     rbp                                     ; 181A _ 5D
        ret                                             ; 181B _ C3
_BasePrintLibValueToString ENDP

_BasePrintLibSPrintMarker PROC
        push    rbp                                     ; 181C _ 55
        mov     rbp, rsp                                ; 181D _ 48: 89. E5
        push    r15                                     ; 1820 _ 41: 57
        push    r14                                     ; 1822 _ 41: 56
        push    r13                                     ; 1824 _ 41: 55
        push    r12                                     ; 1826 _ 41: 54
        push    rsi                                     ; 1828 _ 56
        push    rdi                                     ; 1829 _ 57
        push    rbx                                     ; 182A _ 53
        sub     rsp, 376                                ; 182B _ 48: 81. EC, 00000178
        mov     rdi, r9                                 ; 1832 _ 4C: 89. CF
        mov     r14, r8                                 ; 1835 _ 4D: 89. C6
        mov     rsi, rdx                                ; 1838 _ 48: 89. D6
        mov     rbx, rcx                                ; 183B _ 48: 89. CB
        mov     rax, r14                                ; 183E _ 4C: 89. F0
        mov     rcx, qword ptr [rbp+38H]                ; 1841 _ 48: 8B. 4D, 38
        mov     qword ptr [rbp-0A8H], rcx               ; 1845 _ 48: 89. 8D, FFFFFF58
        test    ah, 20H                                 ; 184C _ F6. C4, 20
        jz      ?_063                                   ; 184F _ 74, 0B
        xor     eax, eax                                ; 1851 _ 31. C0
        test    rsi, rsi                                ; 1853 _ 48: 85. F6
        cmove   rbx, rax                                ; 1856 _ 48: 0F 44. D8
        jmp     Unnamed_1_164D                          ; 185A _ EB, 31

?_063:  xor     eax, eax                                ; 185C _ 31. C0
        test    rsi, rsi                                ; 185E _ 48: 85. F6
        je      Unnamed_1_26DA                          ; 1861 _ 0F 84, 000010B3
        call    _DebugAssertEnabled                     ; 1867 _ E8, FFFFE9E0
        test    al, al                                  ; 186C _ 84. C0
        jz      Unnamed_1_164D                          ; 186E _ 74, 1D
        test    rbx, rbx                                ; 1870 _ 48: 85. DB
        jnz     Unnamed_1_164D                          ; 1873 _ 75, 18
        lea     rcx, ptr [?_364]                        ; 1875 _ 48: 8D. 0D, 000055E4(rel)
        lea     r8, ptr [?_319]                         ; 187C _ 4C: 8D. 05, 00004A7F(rel)
        mov     edx, 366                                ; 1883 _ BA, 0000016E
        call    _DebugAssert                            ; 1888 _ E8, FFFFE9BE
Unnamed_1_164D:
        mov     rax, r14                                ; 188D _ 4C: 89. F0
        and     rax, 40H                                ; 1890 _ 48: 83. E0, 40
        mov     qword ptr [rbp-78H], rax                ; 1894 _ 48: 89. 45, 88
        shr     rax, 6                                  ; 1898 _ 48: C1. E8, 06
        mov     qword ptr [rbp-90H], rax                ; 189C _ 48: 89. 85, FFFFFF70
        lea     rax, ptr [rax+1H]                       ; 18A3 _ 48: 8D. 40, 01
        xor     edx, edx                                ; 18A7 _ 31. D2
        test    rbx, rbx                                ; 18A9 _ 48: 85. DB
        mov     ecx, 0                                  ; 18AC _ B9, 00000000
        jz      ?_064                                   ; 18B1 _ 74, 10
        dec     rsi                                     ; 18B3 _ 48: FF. CE
        imul    rsi, rax                                ; 18B6 _ 48: 0F AF. F0
        add     rsi, rbx                                ; 18BA _ 48: 01. DE
        mov     rdx, rsi                                ; 18BD _ 48: 89. F2
        mov     rcx, rbx                                ; 18C0 _ 48: 89. D9
?_064:  mov     qword ptr [rbp-0C0H], rbx               ; 18C3 _ 48: 89. 9D, FFFFFF40
        mov     rsi, rdx                                ; 18CA _ 48: 89. D6
        mov     qword ptr [rbp-108H], rcx               ; 18CD _ 48: 89. 8D, FFFFFEF8
        mov     qword ptr [rbp-98H], rax                ; 18D4 _ 48: 89. 85, FFFFFF68
        mov     rbx, r14                                ; 18DB _ 4C: 89. F3
        call    _DebugAssertEnabled                     ; 18DE _ E8, FFFFE969
        test    bh, 01H                                 ; 18E3 _ F6. C7, 01
        jz      ?_067                                   ; 18E6 _ 74, 6A
        test    al, al                                  ; 18E8 _ 84. C0
        mov     rdx, rdi                                ; 18EA _ 48: 89. FA
        jnz     ?_065                                   ; 18ED _ 75, 17
        mov     eax, 65535                              ; 18EF _ B8, 0000FFFF
        mov     qword ptr [rbp-0D8H], rax               ; 18F4 _ 48: 89. 85, FFFFFF28
        mov     r13d, 2                                 ; 18FB _ 41: BD, 00000002
        jmp     Unnamed_1_177E                          ; 1901 _ E9, 000000B8

?_065:  mov     rcx, rdx                                ; 1906 _ 48: 89. D1
        mov     rdi, rdx                                ; 1909 _ 48: 89. D7
        call    _StrSize                                ; 190C _ E8, FFFFF02B
        test    rax, rax                                ; 1911 _ 48: 85. C0
        jz      ?_066                                   ; 1914 _ 74, 17
        mov     eax, 65535                              ; 1916 _ B8, 0000FFFF
        mov     qword ptr [rbp-0D8H], rax               ; 191B _ 48: 89. 85, FFFFFF28
        mov     r13d, 2                                 ; 1922 _ 41: BD, 00000002
        jmp     Unnamed_1_177B                          ; 1928 _ E9, 0000008E

?_066:  lea     rcx, ptr [?_364]                        ; 192D _ 48: 8D. 0D, 0000552C(rel)
        lea     r8, ptr [?_365]                         ; 1934 _ 4C: 8D. 05, 00005587(rel)
        mov     edx, 397                                ; 193B _ BA, 0000018D
        call    _DebugAssert                            ; 1940 _ E8, FFFFE906
        mov     r13d, 2                                 ; 1945 _ 41: BD, 00000002
        mov     eax, 65535                              ; 194B _ B8, 0000FFFF
        jmp     ?_070                                   ; 1950 _ EB, 62

?_067:  test    al, al                                  ; 1952 _ 84. C0
        mov     rdx, rdi                                ; 1954 _ 48: 89. FA
        jnz     ?_068                                   ; 1957 _ 75, 14
        mov     eax, 255                                ; 1959 _ B8, 000000FF
        mov     qword ptr [rbp-0D8H], rax               ; 195E _ 48: 89. 85, FFFFFF28
        mov     r13d, 1                                 ; 1965 _ 41: BD, 00000001
        jmp     Unnamed_1_177E                          ; 196B _ EB, 51

?_068:  mov     rcx, rdx                                ; 196D _ 48: 89. D1
        mov     rdi, rdx                                ; 1970 _ 48: 89. D7
        call    _AsciiStrSize                           ; 1973 _ E8, FFFFEFDC
        test    rax, rax                                ; 1978 _ 48: 85. C0
        jz      ?_069                                   ; 197B _ 74, 14
        mov     eax, 255                                ; 197D _ B8, 000000FF
        mov     qword ptr [rbp-0D8H], rax               ; 1982 _ 48: 89. 85, FFFFFF28
        mov     r13d, 1                                 ; 1989 _ 41: BD, 00000001
        jmp     Unnamed_1_177B                          ; 198F _ EB, 2A

?_069:  lea     rcx, ptr [?_364]                        ; 1991 _ 48: 8D. 0D, 000054C8(rel)
        lea     r8, ptr [?_366]                         ; 1998 _ 4C: 8D. 05, 00005544(rel)
        mov     edx, 405                                ; 199F _ BA, 00000195
        call    _DebugAssert                            ; 19A4 _ E8, FFFFE8A2
        mov     r13d, 1                                 ; 19A9 _ 41: BD, 00000001
        mov     eax, 255                                ; 19AF _ B8, 000000FF
?_070:  mov     qword ptr [rbp-0D8H], rax               ; 19B4 _ 48: 89. 85, FFFFFF28
Unnamed_1_177B:
        mov     rdx, rdi                                ; 19BB _ 48: 89. FA
Unnamed_1_177E:
        movzx   ecx, byte ptr [rdx]                     ; 19BE _ 0F B6. 0A
        movzx   edi, byte ptr [rdx+1H]                  ; 19C1 _ 0F B6. 7A, 01
        mov     rbx, rdx                                ; 19C5 _ 48: 89. D3
        shl     rdi, 8                                  ; 19C8 _ 48: C1. E7, 08
        or      rdi, rcx                                ; 19CC _ 48: 09. CF
        mov     rcx, r13                                ; 19CF _ 4C: 89. E9
        neg     rcx                                     ; 19D2 _ 48: F7. D9
        mov     qword ptr [rbp-0C8H], rcx               ; 19D5 _ 48: 89. 8D, FFFFFF38
        lea     rcx, ptr [r13+1H]                       ; 19DC _ 49: 8D. 4D, 01
        mov     qword ptr [rbp-0B0H], rcx               ; 19E0 _ 48: 89. 8D, FFFFFF50
        xor     eax, eax                                ; 19E7 _ 31. C0
        mov     r9, rsi                                 ; 19E9 _ 49: 89. F1
        mov     qword ptr [rbp-0F8H], r9                ; 19EC _ 4C: 89. 8D, FFFFFF08
        jmp     ?_075                                   ; 19F3 _ E9, 00000086

Unnamed_1_17B8:
        test    rsi, rsi                                ; 19F8 _ 48: 85. F6
        mov     rdx, qword ptr [rbp-0E0H]               ; 19FB _ 48: 8B. 95, FFFFFF20
        je      Unnamed_1_25F0                          ; 1A02 _ 0F 84, 00000E28
        sub     rcx, rdx                                ; 1A08 _ 48: 29. D1
        test    rcx, rcx                                ; 1A0B _ 48: 85. C9
        jle     Unnamed_1_25F0                          ; 1A0E _ 0F 8E, 00000E1C
        cmp     rsi, r9                                 ; 1A14 _ 4C: 39. CE
        jnc     Unnamed_1_25F0                          ; 1A17 _ 0F 83, 00000E13
        inc     rsi                                     ; 1A1D _ 48: FF. C6
        mov     ebx, 1                                  ; 1A20 _ BB, 00000001
?_071:  mov     byte ptr [rsi-1H], 32                   ; 1A25 _ C6. 46, FF, 20
        cmp     qword ptr [rbp-78H], 0                  ; 1A29 _ 48: 83. 7D, 88, 00
        jz      ?_072                                   ; 1A2E _ 74, 03
        mov     byte ptr [rsi], 0                       ; 1A30 _ C6. 06, 00
?_072:  lea     rdx, ptr [rsi+r10]                      ; 1A33 _ 4A: 8D. 14 16
        cmp     rbx, rcx                                ; 1A37 _ 48: 39. CB
        jge     ?_073                                   ; 1A3A _ 7D, 12
        add     rsi, qword ptr [rbp-90H]                ; 1A3C _ 48: 03. B5, FFFFFF70
        inc     rbx                                     ; 1A43 _ 48: FF. C3
        cmp     rsi, r9                                 ; 1A46 _ 4C: 39. CE
        mov     rsi, rdx                                ; 1A49 _ 48: 89. D6
        jc      ?_071                                   ; 1A4C _ 72, D7
?_073:  dec     rdx                                     ; 1A4E _ 48: FF. CA
        mov     qword ptr [rbp-0C0H], rdx               ; 1A51 _ 48: 89. 95, FFFFFF40
?_074:  mov     qword ptr [rbp-98H], r10                ; 1A58 _ 4C: 89. 95, FFFFFF68
        mov     rdx, qword ptr [rbp-0E8H]               ; 1A5F _ 48: 8B. 95, FFFFFF18
        movzx   ecx, byte ptr [rdx+r13]                 ; 1A66 _ 42: 0F B6. 0C 2A
        movzx   edi, byte ptr [rdx+r13+1H]              ; 1A6B _ 42: 0F B6. 7C 2A, 01
        shl     rdi, 8                                  ; 1A71 _ 48: C1. E7, 08
        or      rdi, rcx                                ; 1A75 _ 48: 09. CF
        add     rdx, r13                                ; 1A78 _ 4C: 01. EA
        mov     rbx, rdx                                ; 1A7B _ 48: 89. D3
?_075:  and     rdi, qword ptr [rbp-0D8H]               ; 1A7E _ 48: 23. BD, FFFFFF28
        mov     qword ptr [rbp-68H], rdi                ; 1A85 _ 48: 89. 7D, 98
        test    rdi, rdi                                ; 1A89 _ 48: 85. FF
        je      Unnamed_1_25FC                          ; 1A8C _ 0F 84, 00000DAA
        cmp     qword ptr [rbp-0C0H], 0                 ; 1A92 _ 48: 83. BD, FFFFFF40, 00
        jz      ?_076                                   ; 1A9A _ 74, 0D
        cmp     qword ptr [rbp-0C0H], r9                ; 1A9C _ 4C: 39. 8D, FFFFFF40
        jnc     Unnamed_1_25FC                          ; 1AA3 _ 0F 83, 00000D93
?_076:  mov     qword ptr [rbp-0F0H], rax               ; 1AA9 _ 48: 89. 85, FFFFFF10
        and     r14, 2140H                              ; 1AB0 _ 49: 81. E6, 00002140
        cmp     rdi, 10                                 ; 1AB7 _ 48: 83. FF, 0A
        je      ?_129                                   ; 1ABB _ 0F 84, 000008D7
        cmp     rdi, 13                                 ; 1AC1 _ 48: 83. FF, 0D
        mov     r9, qword ptr [rbp-0D8H]                ; 1AC5 _ 4C: 8B. 8D, FFFFFF28
        je      ?_128                                   ; 1ACC _ 0F 84, 00000871
        cmp     rdi, 37                                 ; 1AD2 _ 48: 83. FF, 25
        jne     ?_130                                   ; 1AD6 _ 0F 85, 0000090D
        xor     r11d, r11d                              ; 1ADC _ 45: 31. DB
        mov     r12d, 1                                 ; 1ADF _ 41: BC, 00000001
        mov     rax, rbx                                ; 1AE5 _ 48: 89. D8
        mov     r15, r11                                ; 1AE8 _ 4D: 89. DF
        mov     rsi, qword ptr [rbp+30H]                ; 1AEB _ 48: 8B. 75, 30
        mov     r8, rsi                                 ; 1AEF _ 49: 89. F0
        mov     rsi, qword ptr [rbp-0A8H]               ; 1AF2 _ 48: 8B. B5, FFFFFF58
        lea     r10, ptr [?_162]                        ; 1AF9 _ 4C: 8D. 15, 00000E30(rel)
        jmp     Unnamed_1_195D                          ; 1B00 _ E9, 00000098

Unnamed_1_18C5:
        cmp     rcx, 107                                ; 1B05 _ 48: 83. F9, 6B
        jg      ?_088                                   ; 1B09 _ 0F 8F, 000001BD
        cmp     rcx, 75                                 ; 1B0F _ 48: 83. F9, 4B
        jg      ?_081                                   ; 1B13 _ 0F 8F, 00000138
        lea     rdx, ptr [rcx-20H]                      ; 1B19 _ 48: 8D. 51, E0
        cmp     rdx, 25                                 ; 1B1D _ 48: 83. FA, 19
        ja      Unnamed_1_1A92                          ; 1B21 _ 0F 87, 000001AB
        jmp     ?_080                                   ; 1B27 _ E9, 000000DD

; Note: No jump seems to point here
        lea     rdx, ptr [rcx-30H]                      ; 1B2C _ 48: 8D. 51, D0
        xor     r15d, r15d                              ; 1B30 _ 45: 31. FF
        cmp     rdx, 9                                  ; 1B33 _ 48: 83. FA, 09
        ja      ?_079                                   ; 1B37 _ 77, 38
?_077:  xor     r15d, r15d                              ; 1B39 _ 45: 31. FF
?_078:  movzx   ebx, byte ptr [rax+r13*2]               ; 1B3C _ 42: 0F B6. 1C 68
        movzx   edx, byte ptr [rax+r13*2+1H]            ; 1B41 _ 42: 0F B6. 54 68, 01
        shl     rdx, 8                                  ; 1B47 _ 48: C1. E2, 08
        or      edx, ebx                                ; 1B4B _ 09. DA
        and     rdx, r9                                 ; 1B4D _ 4C: 21. CA
        mov     qword ptr [rbp-68H], rdx                ; 1B50 _ 48: 89. 55, 98
        lea     rbx, ptr [rdx-30H]                      ; 1B54 _ 48: 8D. 5A, D0
        add     rax, r13                                ; 1B58 _ 4C: 01. E8
        lea     rdi, ptr [r15+r15*4]                    ; 1B5B _ 4B: 8D. 3C BF
        lea     r15, ptr [rcx+rdi*2-30H]                ; 1B5F _ 4C: 8D. 7C 79, D0
        cmp     rbx, 10                                 ; 1B64 _ 48: 83. FB, 0A
        mov     rcx, rdx                                ; 1B68 _ 48: 89. D1
        jc      ?_078                                   ; 1B6B _ 72, CF
        lea     rbx, ptr [rax+r13]                      ; 1B6D _ 4A: 8D. 1C 28
?_079:  mov     rcx, r14                                ; 1B71 _ 4C: 89. F1
        or      rcx, 200H                               ; 1B74 _ 48: 81. C9, 00000200
        mov     rax, r14                                ; 1B7B _ 4C: 89. F0
        and     rax, 800H                               ; 1B7E _ 48: 25, 00000800
        cmove   r14, rcx                                ; 1B84 _ 4C: 0F 44. F1
        cmovne  r12, r15                                ; 1B88 _ 4D: 0F 45. E7
        test    rax, rax                                ; 1B8C _ 48: 85. C0
        cmove   r11, r15                                ; 1B8F _ 4D: 0F 44. DF
        add     rbx, qword ptr [rbp-0C8H]               ; 1B93 _ 48: 03. 9D, FFFFFF38
        mov     rax, rbx                                ; 1B9A _ 48: 89. D8
Unnamed_1_195D:
        movzx   edx, byte ptr [rax+r13]                 ; 1B9D _ 42: 0F B6. 14 28
        mov     rcx, qword ptr [rbp-0B0H]               ; 1BA2 _ 48: 8B. 8D, FFFFFF50
        movzx   ecx, byte ptr [rax+rcx]                 ; 1BA9 _ 0F B6. 0C 08
        shl     rcx, 8                                  ; 1BAD _ 48: C1. E1, 08
        or      ecx, edx                                ; 1BB1 _ 09. D1
        and     rcx, r9                                 ; 1BB3 _ 4C: 21. C9
        mov     qword ptr [rbp-68H], rcx                ; 1BB6 _ 48: 89. 4D, 98
        lea     rbx, ptr [rax+r13]                      ; 1BBA _ 4A: 8D. 1C 28
        cmp     rcx, 31                                 ; 1BBE _ 48: 83. F9, 1F
        jg      Unnamed_1_18C5                          ; 1BC2 _ 0F 8F, FFFFFF3D
        test    rcx, rcx                                ; 1BC8 _ 48: 85. C9
        jne     Unnamed_1_1A92                          ; 1BCB _ 0F 85, 00000101
        mov     qword ptr [rbp-0D0H], r11               ; 1BD1 _ 4C: 89. 9D, FFFFFF30
        mov     qword ptr [rbp-0A0H], 0                 ; 1BD8 _ 48: C7. 85, FFFFFF60, 00000000
        mov     rbx, rax                                ; 1BE3 _ 48: 89. C3

Unnamed_1_19A6 LABEL NEAR
        mov     qword ptr [rbp-0A8H], rsi               ; 1BE6 _ 48: 89. B5, FFFFFF58
        or      r14, 400H                               ; 1BED _ 49: 81. CE, 00000400
        xor     al, al                                  ; 1BF4 _ 30. C0
        mov     dword ptr [rbp-7CH], eax                ; 1BF6 _ 89. 45, 84
        xor     edi, edi                                ; 1BF9 _ 31. FF
        xor     r10b, r10b                              ; 1BFB _ 45: 30. D2
        xor     cl, cl                                  ; 1BFE _ 30. C9
        lea     r12, ptr [rbp-68H]                      ; 1C00 _ 4C: 8D. 65, 98
        jmp     Unnamed_1_21D8                          ; 1C04 _ E9, 0000080F

?_080:  movsxd  rdx, dword ptr [r10+rdx*4]              ; 1C09 _ 49: 63. 14 92
        add     rdx, r10                                ; 1C0D _ 4C: 01. D2
        jmp     rdx                                     ; 1C10 _ FF. E2

; Note: No jump seems to point here
        or      r14, 800H                               ; 1C12 _ 49: 81. CE, 00000800
        mov     rax, rbx                                ; 1C19 _ 48: 89. D8
        jmp     Unnamed_1_195D                          ; 1C1C _ E9, FFFFFF7C

; Note: No jump seems to point here
        or      r14, 01H                                ; 1C21 _ 49: 83. CE, 01
        mov     rax, rbx                                ; 1C25 _ 48: 89. D8
        jmp     Unnamed_1_195D                          ; 1C28 _ E9, FFFFFF70

; Note: No jump seems to point here
        or      r14, 02H                                ; 1C2D _ 49: 83. CE, 02
        mov     rax, rbx                                ; 1C31 _ 48: 89. D8
        jmp     Unnamed_1_195D                          ; 1C34 _ E9, FFFFFF64

; Note: No jump seems to point here
        or      r14, 04H                                ; 1C39 _ 49: 83. CE, 04
        mov     rax, rbx                                ; 1C3D _ 48: 89. D8
        jmp     Unnamed_1_195D                          ; 1C40 _ E9, FFFFFF58

; Note: No jump seems to point here
        or      r14, 08H                                ; 1C45 _ 49: 83. CE, 08
        mov     rax, rbx                                ; 1C49 _ 48: 89. D8
        jmp     Unnamed_1_195D                          ; 1C4C _ E9, FFFFFF4C

?_081:  cmp     rcx, 76                                 ; 1C51 _ 48: 83. F9, 4C
        jnz     Unnamed_1_1A92                          ; 1C55 _ 75, 7B
?_082:  or      r14, 10H                                ; 1C57 _ 49: 83. CE, 10
        mov     rax, rbx                                ; 1C5B _ 48: 89. D8
        jmp     Unnamed_1_195D                          ; 1C5E _ E9, FFFFFF3A

; Note: No jump seems to point here
        mov     rax, r14                                ; 1C63 _ 4C: 89. F0
        test    ah, 08H                                 ; 1C66 _ F6. C4, 08
        jnz     ?_086                                   ; 1C69 _ 75, 32
        or      r14, 200H                               ; 1C6B _ 49: 81. CE, 00000200
        test    rsi, rsi                                ; 1C72 _ 48: 85. F6
        jnz     ?_084                                   ; 1C75 _ 75, 17
        mov     rax, qword ptr [r8]                     ; 1C77 _ 49: 8B. 00
        lea     rcx, ptr [rax+8H]                       ; 1C7A _ 48: 8D. 48, 08
        mov     qword ptr [r8], rcx                     ; 1C7E _ 49: 89. 08
        mov     r11, qword ptr [rax]                    ; 1C81 _ 4C: 8B. 18
?_083:  xor     esi, esi                                ; 1C84 _ 31. F6
        mov     rax, rbx                                ; 1C86 _ 48: 89. D8
        jmp     Unnamed_1_195D                          ; 1C89 _ E9, FFFFFF0F

?_084:  mov     r11, qword ptr [rsi]                    ; 1C8E _ 4C: 8B. 1E
?_085:  add     rsi, 8                                  ; 1C91 _ 48: 83. C6, 08
        mov     rax, rbx                                ; 1C95 _ 48: 89. D8
        jmp     Unnamed_1_195D                          ; 1C98 _ E9, FFFFFF00

?_086:  test    rsi, rsi                                ; 1C9D _ 48: 85. F6
        jnz     ?_087                                   ; 1CA0 _ 75, 0F
        mov     rax, qword ptr [r8]                     ; 1CA2 _ 49: 8B. 00
        lea     rcx, ptr [rax+8H]                       ; 1CA5 _ 48: 8D. 48, 08
        mov     qword ptr [r8], rcx                     ; 1CA9 _ 49: 89. 08
        mov     r12, qword ptr [rax]                    ; 1CAC _ 4C: 8B. 20
        jmp     ?_083                                   ; 1CAF _ EB, D3

?_087:  mov     r12, qword ptr [rsi]                    ; 1CB1 _ 4C: 8B. 26
        jmp     ?_085                                   ; 1CB4 _ EB, DB

; Note: No jump seems to point here
        mov     rdx, r14                                ; 1CB6 _ 4C: 89. F2
        or      rdx, 20H                                ; 1CB9 _ 48: 83. CA, 20
        mov     rbx, r14                                ; 1CBD _ 4C: 89. F3
        test    bh, 08H                                 ; 1CC0 _ F6. C7, 08
        cmove   r14, rdx                                ; 1CC3 _ 4C: 0F 44. F2
        jmp     ?_077                                   ; 1CC7 _ E9, FFFFFE6D

?_088:  cmp     rcx, 108                                ; 1CCC _ 48: 83. F9, 6C
        jz      ?_082                                   ; 1CD0 _ 74, 85
Unnamed_1_1A92:
        mov     qword ptr [rbp-0A0H], r12               ; 1CD2 _ 4C: 89. A5, FFFFFF60
        mov     qword ptr [rbp-0D0H], r11               ; 1CD9 _ 4C: 89. 9D, FFFFFF30
        cmp     rcx, 82                                 ; 1CE0 _ 48: 83. F9, 52
        jg      ?_089                                   ; 1CE4 _ 7F, 69
        cmp     rcx, 10                                 ; 1CE6 _ 48: 83. F9, 0A
        je      ?_127                                   ; 1CEA _ 0F 84, 00000604
        cmp     rcx, 13                                 ; 1CF0 _ 48: 83. F9, 0D
        jne     Unnamed_1_19A6                          ; 1CF4 _ 0F 85, FFFFFEEC
        mov     qword ptr [rbp-0A8H], rsi               ; 1CFA _ 48: 89. B5, FFFFFF58
        movzx   edx, byte ptr [rax+r13*2]               ; 1D01 _ 42: 0F B6. 14 68
        mov     rcx, qword ptr [rbp-0B0H]               ; 1D06 _ 48: 8B. 8D, FFFFFF50
        lea     rcx, ptr [r13+rcx]                      ; 1D0D _ 49: 8D. 4C 0D, 00
        movzx   ecx, byte ptr [rax+rcx]                 ; 1D12 _ 0F B6. 0C 08
        shl     rcx, 8                                  ; 1D16 _ 48: C1. E1, 08
        or      ecx, edx                                ; 1D1A _ 09. D1
        xor     dl, dl                                  ; 1D1C _ 30. D2
        xor     edi, edi                                ; 1D1E _ 31. FF
        lea     rax, ptr [rax+r13*2]                    ; 1D20 _ 4A: 8D. 04 68
        and     rcx, r9                                 ; 1D24 _ 4C: 21. C9
        mov     qword ptr [rbp-68H], rcx                ; 1D27 _ 48: 89. 4D, 98
        cmp     rcx, 10                                 ; 1D2B _ 48: 83. F9, 0A
        cmove   rbx, rax                                ; 1D2F _ 48: 0F 44. D8
        lea     r12, ptr [?_374]                        ; 1D33 _ 4C: 8D. 25, 0000523D(rel)
        lea     rax, ptr [?_373]                        ; 1D3A _ 48: 8D. 05, 00005233(rel)
        cmove   r12, rax                                ; 1D41 _ 4C: 0F 44. E0
        mov     r10b, dl                                ; 1D45 _ 41: 88. D2
        mov     cl, dl                                  ; 1D48 _ 88. D1
        jmp     ?_126                                   ; 1D4A _ E9, 00000568

?_089:  cmp     rcx, 111                                ; 1D4F _ 48: 83. F9, 6F
        jg      ?_091                                   ; 1D53 _ 7F, 3A
        cmp     rcx, 96                                 ; 1D55 _ 48: 83. F9, 60
        jg      ?_090                                   ; 1D59 _ 7F, 16
        cmp     rcx, 83                                 ; 1D5B _ 48: 83. F9, 53
        je      ?_105                                   ; 1D5F _ 0F 84, 00000256
        cmp     rcx, 88                                 ; 1D65 _ 48: 83. F9, 58
        jne     Unnamed_1_19A6                          ; 1D69 _ 0F 85, FFFFFE77
        jmp     ?_093                                   ; 1D6F _ EB, 44

?_090:  add     rcx, -97                                ; 1D71 _ 48: 83. C1, 9F
        cmp     rcx, 6                                  ; 1D75 _ 48: 83. F9, 06
        ja      Unnamed_1_19A6                          ; 1D79 _ 0F 87, FFFFFE67
        lea     rdx, ptr [?_164]                        ; 1D7F _ 48: 8D. 15, 00000C36(rel)
        movsxd  rax, dword ptr [rdx+rcx*4]              ; 1D86 _ 48: 63. 04 8A
        add     rax, rdx                                ; 1D8A _ 48: 01. D0
        jmp     rax                                     ; 1D8D _ FF. E0

?_091:  add     rcx, -112                               ; 1D8F _ 48: 83. C1, 90
        cmp     rcx, 8                                  ; 1D93 _ 48: 83. F9, 08
        ja      Unnamed_1_19A6                          ; 1D97 _ 0F 87, FFFFFE49
        lea     rdx, ptr [?_163]                        ; 1D9D _ 48: 8D. 15, 00000BF4(rel)
        movsxd  rax, dword ptr [rdx+rcx*4]              ; 1DA4 _ 48: 63. 04 8A
        add     rax, rdx                                ; 1DA8 _ 48: 01. D0
        jmp     rax                                     ; 1DAB _ FF. E0

?_092   LABEL NEAR
        and     r14, 0FFFFFFFFFFFFFFC9H                 ; 1DAD _ 49: 83. E6, C9
        or      r14, 10H                                ; 1DB1 _ 49: 83. CE, 10
?_093:  or      r14, 20H                                ; 1DB5 _ 49: 83. CE, 20

?_094   LABEL NEAR
        or      r14, 80H                                ; 1DB9 _ 49: 81. CE, 00000080

?_095   LABEL NEAR
        test    r14b, 0FFFFFF80H                        ; 1DC0 _ 41: F6. C6, 80
        jnz     Unnamed_1_1B94                          ; 1DC4 _ 75, 0E
        and     r14, 0FFFFFFFFFFFFBFFDH                 ; 1DC6 _ 49: 81. E6, FFFFBFFD
        or      r14, 4000H                              ; 1DCD _ 49: 81. CE, 00004000

Unnamed_1_1B94 LABEL NEAR
        mov     rcx, r14                                ; 1DD4 _ 4C: 89. F1
        mov     r12, r9                                 ; 1DD7 _ 4D: 89. CC
        and     rcx, 10H                                ; 1DDA _ 48: 83. E1, 10
        jnz     ?_097                                   ; 1DDE _ 75, 1B
        test    rsi, rsi                                ; 1DE0 _ 48: 85. F6
        jnz     ?_096                                   ; 1DE3 _ 75, 11
        mov     rax, qword ptr [r8]                     ; 1DE5 _ 49: 8B. 00
        lea     rdx, ptr [rax+8H]                       ; 1DE8 _ 48: 8D. 50, 08
        mov     qword ptr [r8], rdx                     ; 1DEC _ 49: 89. 10
        movsxd  rax, dword ptr [rax]                    ; 1DEF _ 48: 63. 00
        xor     esi, esi                                ; 1DF2 _ 31. F6
        jmp     Unnamed_1_1BD8                          ; 1DF4 _ EB, 22

?_096:  movsxd  rax, dword ptr [rsi]                    ; 1DF6 _ 48: 63. 06
        jmp     ?_099                                   ; 1DF9 _ EB, 19

?_097:  test    rsi, rsi                                ; 1DFB _ 48: 85. F6
        jnz     ?_098                                   ; 1DFE _ 75, 11
        mov     rax, qword ptr [r8]                     ; 1E00 _ 49: 8B. 00
        lea     rdx, ptr [rax+8H]                       ; 1E03 _ 48: 8D. 50, 08
        mov     qword ptr [r8], rdx                     ; 1E07 _ 49: 89. 10
        mov     rax, qword ptr [rax]                    ; 1E0A _ 48: 8B. 00
        xor     esi, esi                                ; 1E0D _ 31. F6
        jmp     Unnamed_1_1BD8                          ; 1E0F _ EB, 07

?_098:  mov     rax, qword ptr [rsi]                    ; 1E11 _ 48: 8B. 06
?_099:  add     rsi, 8                                  ; 1E14 _ 48: 83. C6, 08
Unnamed_1_1BD8:
        test    r14b, 02H                               ; 1E18 _ 41: F6. C6, 02
        jnz     ?_100                                   ; 1E1C _ 75, 0B
        mov     edx, r14d                               ; 1E1E _ 44: 89. F2
        and     edx, 04H                                ; 1E21 _ 83. E2, 04
        shl     dl, 3                                   ; 1E24 _ C0. E2, 03
        jmp     ?_101                                   ; 1E27 _ EB, 02

?_100:  mov     dl, 43                                  ; 1E29 _ B2, 2B
?_101:  mov     dword ptr [rbp-0B4H], edx               ; 1E2B _ 89. 95, FFFFFF4C
        mov     qword ptr [rbp-0A8H], rsi               ; 1E31 _ 48: 89. B5, FFFFFF58
        test    r14b, 0FFFFFF80H                        ; 1E38 _ 41: F6. C6, 80
        jne     ?_102                                   ; 1E3C _ 0F 85, 00000083
        mov     rcx, r14                                ; 1E42 _ 4C: 89. F1
        and     rcx, 08H                                ; 1E45 _ 48: 83. E1, 08
        mov     edx, ecx                                ; 1E49 _ 89. CA
        shr     edx, 3                                  ; 1E4B _ C1. EA, 03
        xor     edx, 01H                                ; 1E4E _ 83. F2, 01
        xor     dl, 01H                                 ; 1E51 _ 80. F2, 01
        mov     dword ptr [rbp-7CH], edx                ; 1E54 _ 89. 55, 84
        mov     rdx, r14                                ; 1E57 _ 4C: 89. F2
        and     rdx, 0FFFFFFFFFFFFFFDFH                 ; 1E5A _ 48: 83. E2, DF
        test    rcx, rcx                                ; 1E5E _ 48: 85. C9
        cmove   rdx, r14                                ; 1E61 _ 49: 0F 44. D6
        mov     r14, rdx                                ; 1E65 _ 49: 89. D6
        mov     ecx, 1                                  ; 1E68 _ B9, 00000001
        mov     rdx, qword ptr [rbp-0A0H]               ; 1E6D _ 48: 8B. 95, FFFFFF60
        cmovne  rdx, rcx                                ; 1E74 _ 48: 0F 45. D1
        mov     qword ptr [rbp-0A0H], rdx               ; 1E78 _ 48: 89. 95, FFFFFF60
        test    rax, rax                                ; 1E7F _ 48: 85. C0
        jns     Unnamed_1_1C66                          ; 1E82 _ 79, 22
        mov     rcx, r14                                ; 1E84 _ 4C: 89. F1
        test    ch, 40H                                 ; 1E87 _ F6. C5, 40
        jnz     Unnamed_1_1C66                          ; 1E8A _ 75, 1A
        neg     rax                                     ; 1E8C _ 48: F7. D8
        or      r14, 02H                                ; 1E8F _ 49: 83. CE, 02
        mov     cl, 45                                  ; 1E93 _ B1, 2D
        mov     dword ptr [rbp-0B4H], ecx               ; 1E95 _ 89. 8D, FFFFFF4C
        mov     r8d, 10                                 ; 1E9B _ 41: B8, 0000000A
        mov     rsi, rax                                ; 1EA1 _ 48: 89. C6
        jmp     Unnamed_1_1CA4                          ; 1EA4 _ EB, 3E

Unnamed_1_1C66:
        mov     esi, eax                                ; 1EA6 _ 89. C6
        mov     rcx, r14                                ; 1EA8 _ 4C: 89. F1
        and     rcx, 4010H                              ; 1EAB _ 48: 81. E1, 00004010
        cmp     rcx, 16384                              ; 1EB2 _ 48: 81. F9, 00004000
        cmovne  rsi, rax                                ; 1EB9 _ 48: 0F 45. F0
        mov     r8d, 10                                 ; 1EBD _ 41: B8, 0000000A
        jmp     Unnamed_1_1CA4                          ; 1EC3 _ EB, 1F

?_102:  mov     esi, eax                                ; 1EC5 _ 89. C6
        test    rax, rax                                ; 1EC7 _ 48: 85. C0
        sets    dl                                      ; 1ECA _ 0F 98. C2
        test    rcx, rcx                                ; 1ECD _ 48: 85. C9
        sete    cl                                      ; 1ED0 _ 0F 94. C1
        test    dl, cl                                  ; 1ED3 _ 84. CA
        cmove   rsi, rax                                ; 1ED5 _ 48: 0F 44. F0
        xor     al, al                                  ; 1ED9 _ 30. C0
        mov     dword ptr [rbp-7CH], eax                ; 1EDB _ 89. 45, 84
        mov     r8d, 16                                 ; 1EDE _ 41: B8, 00000010
Unnamed_1_1CA4:
        lea     rdi, ptr [rbp-60H]                      ; 1EE4 _ 48: 8D. 7D, A0
        mov     rcx, rdi                                ; 1EE8 _ 48: 89. F9
        mov     rdx, rsi                                ; 1EEB _ 48: 89. F2
        call    _BasePrintLibValueToString              ; 1EEE _ E8, FFFFF8D9
        mov     rcx, rax                                ; 1EF3 _ 48: 89. C1
        sub     rcx, rdi                                ; 1EF6 _ 48: 29. F9
        or      rsi, qword ptr [rbp-0A0H]               ; 1EF9 _ 48: 0B. B5, FFFFFF60
        mov     esi, 0                                  ; 1F00 _ BE, 00000000
        cmove   rcx, rsi                                ; 1F05 _ 48: 0F 44. CE
        mov     rax, rcx                                ; 1F09 _ 48: 89. C8
        mov     rdx, 0AAAAAAAAAAAAAAABH                 ; 1F0C _ 48: BA, AAAAAAAAAAAAAAAB
        mul     rdx                                     ; 1F16 _ 48: F7. E2
        shr     rdx, 1                                  ; 1F19 _ 48: D1. EA
        lea     rax, ptr [rdx+rdx*2]                    ; 1F1C _ 48: 8D. 04 52
        mov     rdi, rcx                                ; 1F20 _ 48: 89. CF
        sub     rdi, rax                                ; 1F23 _ 48: 29. C7
        xor     rdi, 03H                                ; 1F26 _ 48: 83. F7, 03
        mov     rdx, rcx                                ; 1F2A _ 48: 89. CA
        sub     rdx, rax                                ; 1F2D _ 48: 29. C2
        cmove   rdi, rsi                                ; 1F30 _ 48: 0F 44. FE
        mov     eax, dword ptr [rbp-7CH]                ; 1F34 _ 8B. 45, 84
        test    al, al                                  ; 1F37 _ 84. C0
        mov     r15, rcx                                ; 1F39 _ 49: 89. CF
        jz      Unnamed_1_1D20                          ; 1F3C _ 74, 22
        test    rcx, rcx                                ; 1F3E _ 48: 85. C9
        mov     r15, rcx                                ; 1F41 _ 49: 89. CF
        jz      Unnamed_1_1D20                          ; 1F44 _ 74, 1A
        lea     rax, ptr [rcx-1H]                       ; 1F46 _ 48: 8D. 41, FF
        mov     rdx, 0AAAAAAAAAAAAAAABH                 ; 1F4A _ 48: BA, AAAAAAAAAAAAAAAB
        mul     rdx                                     ; 1F54 _ 48: F7. E2
        mov     r15, rdx                                ; 1F57 _ 49: 89. D7
        shr     r15, 1                                  ; 1F5A _ 49: D1. EF
        add     r15, rcx                                ; 1F5D _ 49: 01. CF
Unnamed_1_1D20:
        mov     eax, dword ptr [rbp-0B4H]               ; 1F60 _ 8B. 85, FFFFFF4C
        test    al, al                                  ; 1F66 _ 84. C0
        mov     r9, r12                                 ; 1F68 _ 4D: 89. E1
        jnz     ?_103                                   ; 1F6B _ 75, 09
        mov     rdx, qword ptr [rbp-0A0H]               ; 1F6D _ 48: 8B. 95, FFFFFF60
        jmp     ?_104                                   ; 1F74 _ EB, 0D

?_103:  mov     rdx, qword ptr [rbp-0A0H]               ; 1F76 _ 48: 8B. 95, FFFFFF60
        inc     rdx                                     ; 1F7D _ 48: FF. C2
        inc     r15                                     ; 1F80 _ 49: FF. C7
?_104:  lea     r12, ptr [rbp+rcx-60H]                  ; 1F83 _ 4C: 8D. 64 0D, A0
        mov     rax, r14                                ; 1F88 _ 4C: 89. F0
        and     rax, 0A21H                              ; 1F8B _ 48: 25, 00000A21
        cmp     rax, 544                                ; 1F91 _ 48: 3D, 00000220
        cmove   rdx, qword ptr [rbp-0D0H]               ; 1F97 _ 48: 0F 44. 95, FFFFFF30
        mov     qword ptr [rbp-0A0H], rdx               ; 1F9F _ 48: 89. 95, FFFFFF60
        or      r14, 1000H                              ; 1FA6 _ 49: 81. CE, 00001000
        mov     r10b, 1                                 ; 1FAD _ 41: B2, 01
        mov     ecx, dword ptr [rbp-0B4H]               ; 1FB0 _ 8B. 8D, FFFFFF4C
        jmp     Unnamed_1_21D8                          ; 1FB6 _ E9, 0000045D

?_105   LABEL NEAR
        or      r14, 400H                               ; 1FBB _ 49: 81. CE, 00000400

?_106   LABEL NEAR
        test    rsi, rsi                                ; 1FC2 _ 48: 85. F6
        jnz     ?_107                                   ; 1FC5 _ 75, 17
        mov     rax, qword ptr [r8]                     ; 1FC7 _ 49: 8B. 00
        lea     rcx, ptr [rax+8H]                       ; 1FCA _ 48: 8D. 48, 08
        mov     qword ptr [r8], rcx                     ; 1FCE _ 49: 89. 08
        mov     qword ptr [rbp-0A8H], 0                 ; 1FD1 _ 48: C7. 85, FFFFFF58, 00000000
        jmp     ?_108                                   ; 1FDC _ EB, 0E

?_107:  lea     rcx, ptr [rsi+8H]                       ; 1FDE _ 48: 8D. 4E, 08
        mov     rax, rsi                                ; 1FE2 _ 48: 89. F0
        mov     qword ptr [rbp-0A8H], rcx               ; 1FE5 _ 48: 89. 8D, FFFFFF58
?_108:  mov     rcx, r14                                ; 1FEC _ 4C: 89. F1
        and     rcx, 0FFFFFFFFFFFFFBFFH                 ; 1FEF _ 48: 81. E1, FFFFFBFF
        mov     r12, qword ptr [rax]                    ; 1FF6 _ 4C: 8B. 20
        test    r12, r12                                ; 1FF9 _ 4D: 85. E4
        lea     rax, ptr [?_367]                        ; 1FFC _ 48: 8D. 05, 00004EFB(rel)
        cmove   r12, rax                                ; 2003 _ 4C: 0F 44. E0
        cmove   r14, rcx                                ; 2007 _ 4C: 0F 44. F1
        mov     rax, r14                                ; 200B _ 4C: 89. F0
        shl     rax, 52                                 ; 200E _ 48: C1. E0, 34
        sar     rax, 63                                 ; 2012 _ 48: C1. F8, 3F
        and     qword ptr [rbp-0A0H], rax               ; 2016 _ 48: 21. 85, FFFFFF60
        xor     al, al                                  ; 201D _ 30. C0
        xor     edi, edi                                ; 201F _ 31. FF
        jmp     ?_125                                   ; 2021 _ E9, 0000028C

?_109   LABEL NEAR
        test    rsi, rsi                                ; 2026 _ 48: 85. F6
        jnz     ?_110                                   ; 2029 _ 75, 17
        mov     rax, qword ptr [r8]                     ; 202B _ 49: 8B. 00
        lea     rcx, ptr [rax+8H]                       ; 202E _ 48: 8D. 48, 08
        mov     qword ptr [r8], rcx                     ; 2032 _ 49: 89. 08
        mov     qword ptr [rbp-0A8H], 0                 ; 2035 _ 48: C7. 85, FFFFFF58, 00000000
        jmp     ?_111                                   ; 2040 _ EB, 0E

?_110:  lea     rcx, ptr [rsi+8H]                       ; 2042 _ 48: 8D. 4E, 08
        mov     rax, rsi                                ; 2046 _ 48: 89. F0
        mov     qword ptr [rbp-0A8H], rcx               ; 2049 _ 48: 89. 8D, FFFFFF58
?_111:  mov     rax, qword ptr [rax]                    ; 2050 _ 48: 8B. 00
        mov     ecx, 65535                              ; 2053 _ B9, 0000FFFF
        and     rax, rcx                                ; 2058 _ 48: 21. C8
        mov     qword ptr [rbp-70H], rax                ; 205B _ 48: 89. 45, 90
        or      r14, 400H                               ; 205F _ 49: 81. CE, 00000400
        xor     al, al                                  ; 2066 _ 30. C0
        xor     edi, edi                                ; 2068 _ 31. FF
        mov     r10b, al                                ; 206A _ 41: 88. C2
        mov     cl, al                                  ; 206D _ 88. C1
        xor     al, al                                  ; 206F _ 30. C0
        mov     dword ptr [rbp-7CH], eax                ; 2071 _ 89. 45, 84
        lea     r12, ptr [rbp-70H]                      ; 2074 _ 4C: 8D. 65, 90
        jmp     Unnamed_1_21D8                          ; 2078 _ E9, 0000039B

?_112   LABEL NEAR
        test    rsi, rsi                                ; 207D _ 48: 85. F6
        jnz     ?_113                                   ; 2080 _ 75, 0E
        mov     rsi, qword ptr [r8]                     ; 2082 _ 49: 8B. 30
        lea     rax, ptr [rsi+8H]                       ; 2085 _ 48: 8D. 46, 08
        mov     qword ptr [r8], rax                     ; 2089 _ 49: 89. 00
        xor     eax, eax                                ; 208C _ 31. C0
        jmp     ?_114                                   ; 208E _ EB, 04

?_113:  lea     rax, ptr [rsi+8H]                       ; 2090 _ 48: 8D. 46, 08
?_114:  mov     qword ptr [rbp-88H], rax                ; 2094 _ 48: 89. 85, FFFFFF78
        mov     r12, qword ptr [rsi]                    ; 209B _ 4C: 8B. 26
        test    r12, r12                                ; 209E _ 4D: 85. E4
        jnz     ?_115                                   ; 20A1 _ 75, 28
        xor     edi, edi                                ; 20A3 _ 31. FF
        xor     al, al                                  ; 20A5 _ 30. C0
        mov     r10b, al                                ; 20A7 _ 41: 88. C2
        mov     cl, al                                  ; 20AA _ 88. C1
        xor     al, al                                  ; 20AC _ 30. C0
        mov     dword ptr [rbp-7CH], eax                ; 20AE _ 89. 45, 84
        lea     r12, ptr [?_368]                        ; 20B1 _ 4C: 8D. 25, 00004E54(rel)
Unnamed_1_1E78:
        mov     rax, qword ptr [rbp-88H]                ; 20B8 _ 48: 8B. 85, FFFFFF78
        mov     qword ptr [rbp-0A8H], rax               ; 20BF _ 48: 89. 85, FFFFFF58
        jmp     Unnamed_1_21D8                          ; 20C6 _ E9, 0000034D

?_115:  mov     rcx, r12                                ; 20CB _ 4C: 89. E1
        mov     qword ptr [rbp-0E8H], rbx               ; 20CE _ 48: 89. 9D, FFFFFF18
        call    _ReadUnaligned32                        ; 20D5 _ E8, FFFFEF8A
        mov     dword ptr [rbp-7CH], eax                ; 20DA _ 89. 45, 84
        lea     rcx, ptr [r12+4H]                       ; 20DD _ 49: 8D. 4C 24, 04
        call    _ReadUnaligned16                        ; 20E2 _ E8, FFFFEF41
        mov     word ptr [rbp-0A8H], ax                 ; 20E7 _ 66: 89. 85, FFFFFF58
        lea     rcx, ptr [r12+6H]                       ; 20EE _ 49: 8D. 4C 24, 06
        call    _ReadUnaligned16                        ; 20F3 _ E8, FFFFEF30
        movzx   r8d, byte ptr [r12+8H]                  ; 20F8 _ 45: 0F B6. 44 24, 08
        movzx   r9d, byte ptr [r12+9H]                  ; 20FE _ 45: 0F B6. 4C 24, 09
        movzx   r10d, byte ptr [r12+0AH]                ; 2104 _ 45: 0F B6. 54 24, 0A
        movzx   edi, byte ptr [r12+0BH]                 ; 210A _ 41: 0F B6. 7C 24, 0B
        movzx   esi, byte ptr [r12+0CH]                 ; 2110 _ 41: 0F B6. 74 24, 0C
        movzx   ecx, byte ptr [r12+0DH]                 ; 2116 _ 41: 0F B6. 4C 24, 0D
        movzx   edx, byte ptr [r12+0EH]                 ; 211C _ 41: 0F B6. 54 24, 0E
        movzx   ebx, byte ptr [r12+0FH]                 ; 2122 _ 41: 0F B6. 5C 24, 0F
        mov     dword ptr [rsp+70H], ebx                ; 2128 _ 89. 5C 24, 70
        mov     dword ptr [rsp+68H], edx                ; 212C _ 89. 54 24, 68
        mov     dword ptr [rsp+60H], ecx                ; 2130 _ 89. 4C 24, 60
        mov     dword ptr [rsp+58H], esi                ; 2134 _ 89. 74 24, 58
        mov     dword ptr [rsp+50H], edi                ; 2138 _ 89. 7C 24, 50
        xor     edi, edi                                ; 213C _ 31. FF
        mov     dword ptr [rsp+48H], r10d               ; 213E _ 44: 89. 54 24, 48
        mov     dword ptr [rsp+40H], r9d                ; 2143 _ 44: 89. 4C 24, 40
        mov     dword ptr [rsp+38H], r8d                ; 2148 _ 44: 89. 44 24, 38
        movzx   eax, ax                                 ; 214D _ 0F B7. C0
        mov     dword ptr [rsp+30H], eax                ; 2150 _ 89. 44 24, 30
        movzx   eax, word ptr [rbp-0A8H]                ; 2154 _ 0F B7. 85, FFFFFF58
        mov     dword ptr [rsp+28H], eax                ; 215B _ 89. 44 24, 28
        mov     eax, dword ptr [rbp-7CH]                ; 215F _ 8B. 45, 84
        mov     dword ptr [rsp+20H], eax                ; 2162 _ 89. 44 24, 20
        lea     rsi, ptr [rbp-60H]                      ; 2166 _ 48: 8D. 75, A0
        mov     rcx, rsi                                ; 216A _ 48: 89. F1
        mov     edx, 38                                 ; 216D _ BA, 00000026
        xor     r8d, r8d                                ; 2172 _ 45: 31. C0
        lea     r9, ptr [?_369]                         ; 2175 _ 4C: 8D. 0D, 00004D9C(rel)
        call    _BasePrintLibSPrint                     ; 217C _ E8, 00000857
        mov     r9, qword ptr [rbp-0D8H]                ; 2181 _ 4C: 8B. 8D, FFFFFF28
        mov     rbx, qword ptr [rbp-0E8H]               ; 2188 _ 48: 8B. 9D, FFFFFF18
        xor     al, al                                  ; 218F _ 30. C0
        mov     r10b, al                                ; 2191 _ 41: 88. C2
        mov     cl, al                                  ; 2194 _ 88. C1
        xor     al, al                                  ; 2196 _ 30. C0
        mov     dword ptr [rbp-7CH], eax                ; 2198 _ 89. 45, 84
        mov     r12, rsi                                ; 219B _ 49: 89. F4
        jmp     Unnamed_1_1E78                          ; 219E _ E9, FFFFFF15

?_116   LABEL NEAR
        test    rsi, rsi                                ; 21A3 _ 48: 85. F6
        jnz     ?_117                                   ; 21A6 _ 75, 0E
        mov     rsi, qword ptr [r8]                     ; 21A8 _ 49: 8B. 30
        lea     rax, ptr [rsi+8H]                       ; 21AB _ 48: 8D. 46, 08
        mov     qword ptr [r8], rax                     ; 21AF _ 49: 89. 00
        xor     eax, eax                                ; 21B2 _ 31. C0
        jmp     ?_118                                   ; 21B4 _ EB, 04

?_117:  lea     rax, ptr [rsi+8H]                       ; 21B6 _ 48: 8D. 46, 08
?_118:  mov     qword ptr [rbp-88H], rax                ; 21BA _ 48: 89. 85, FFFFFF78
        mov     rdx, qword ptr [rsi]                    ; 21C1 _ 48: 8B. 16
        test    rdx, rdx                                ; 21C4 _ 48: 85. D2
        jnz     ?_119                                   ; 21C7 _ 75, 1A
        xor     edi, edi                                ; 21C9 _ 31. FF
        xor     al, al                                  ; 21CB _ 30. C0
        mov     r10b, al                                ; 21CD _ 41: 88. C2
        mov     cl, al                                  ; 21D0 _ 88. C1
        xor     al, al                                  ; 21D2 _ 30. C0
        mov     dword ptr [rbp-7CH], eax                ; 21D4 _ 89. 45, 84
        lea     r12, ptr [?_370]                        ; 21D7 _ 4C: 8D. 25, 00004D6B(rel)
        jmp     Unnamed_1_1E78                          ; 21DE _ E9, FFFFFED5

?_119:  movzx   eax, byte ptr [rdx+2H]                  ; 21E3 _ 0F B6. 42, 02
        movzx   ecx, byte ptr [rdx+3H]                  ; 21E7 _ 0F B6. 4A, 03
        movzx   esi, word ptr [rdx]                     ; 21EB _ 0F B7. 32
        movzx   edi, byte ptr [rdx+4H]                  ; 21EE _ 0F B6. 7A, 04
        movzx   edx, byte ptr [rdx+5H]                  ; 21F2 _ 0F B6. 52, 05
        mov     dword ptr [rsp+40H], edx                ; 21F6 _ 89. 54 24, 40
        mov     dword ptr [rsp+38H], edi                ; 21FA _ 89. 7C 24, 38
        mov     dword ptr [rsp+30H], esi                ; 21FE _ 89. 74 24, 30
        mov     dword ptr [rsp+28H], ecx                ; 2202 _ 89. 4C 24, 28
        mov     dword ptr [rsp+20H], eax                ; 2206 _ 89. 44 24, 20
        lea     rdi, ptr [rbp-60H]                      ; 220A _ 48: 8D. 7D, A0
        mov     rcx, rdi                                ; 220E _ 48: 89. F9
        mov     edx, 38                                 ; 2211 _ BA, 00000026
        xor     r8d, r8d                                ; 2216 _ 45: 31. C0
        mov     rsi, r9                                 ; 2219 _ 4C: 89. CE
        lea     r9, ptr [?_371]                         ; 221C _ 4C: 8D. 0D, 00004D32(rel)
        call    _BasePrintLibSPrint                     ; 2223 _ E8, 000007B0
        mov     r9, rsi                                 ; 2228 _ 49: 89. F1
        xor     al, al                                  ; 222B _ 30. C0
        mov     r10b, al                                ; 222D _ 41: 88. C2
        mov     cl, al                                  ; 2230 _ 88. C1
        xor     al, al                                  ; 2232 _ 30. C0
        mov     dword ptr [rbp-7CH], eax                ; 2234 _ 89. 45, 84
        mov     r12, rdi                                ; 2237 _ 49: 89. FC
        xor     edi, edi                                ; 223A _ 31. FF
        jmp     Unnamed_1_1E78                          ; 223C _ E9, FFFFFE77

?_120   LABEL NEAR
        test    rsi, rsi                                ; 2241 _ 48: 85. F6
        jnz     ?_121                                   ; 2244 _ 75, 0E
        mov     rax, qword ptr [r8]                     ; 2246 _ 49: 8B. 00
        lea     rcx, ptr [rax+8H]                       ; 2249 _ 48: 8D. 48, 08
        mov     qword ptr [r8], rcx                     ; 224D _ 49: 89. 08
        xor     ecx, ecx                                ; 2250 _ 31. C9
        jmp     ?_122                                   ; 2252 _ EB, 07

?_121:  lea     rcx, ptr [rsi+8H]                       ; 2254 _ 48: 8D. 4E, 08
        mov     rax, rsi                                ; 2258 _ 48: 89. F0
?_122:  lea     rdx, ptr [rbp-60H]                      ; 225B _ 48: 8D. 55, A0
        mov     qword ptr [rbp-0A8H], rcx               ; 225F _ 48: 89. 8D, FFFFFF58
        mov     rax, qword ptr [rax]                    ; 2266 _ 48: 8B. 00
        test    rax, rax                                ; 2269 _ 48: 85. C0
        jns     ?_123                                   ; 226C _ 79, 24
        mov     rcx, rax                                ; 226E _ 48: 89. C1
        mov     rdi, 7FFFFFFFFFFFFFFFH                  ; 2271 _ 48: BF, 7FFFFFFFFFFFFFFF
        and     rcx, rdi                                ; 227B _ 48: 21. F9
        mov     r12, rdx                                ; 227E _ 49: 89. D4
        jz      Unnamed_1_2081                          ; 2281 _ 74, 3E
        cmp     rcx, 33                                 ; 2283 _ 48: 83. F9, 21
        mov     r12, rdx                                ; 2287 _ 49: 89. D4
        ja      Unnamed_1_2081                          ; 228A _ 77, 35
        add     rcx, 5                                  ; 228C _ 48: 83. C1, 05
        jmp     ?_124                                   ; 2290 _ EB, 0C

?_123:  cmp     rax, 5                                  ; 2292 _ 48: 83. F8, 05
        mov     rcx, rax                                ; 2296 _ 48: 89. C1
        mov     r12, rdx                                ; 2299 _ 49: 89. D4
        ja      Unnamed_1_2081                          ; 229C _ 77, 23
?_124:  lea     rdi, ptr [_mStatusString]               ; 229E _ 48: 8D. 3D, 00006A5B(rel)
        mov     r12, qword ptr [rdi+rcx*8]              ; 22A5 _ 4C: 8B. 24 CF
        cmp     r12, rdx                                ; 22A9 _ 49: 39. D4
        jz      Unnamed_1_2081                          ; 22AC _ 74, 13
        xor     edi, edi                                ; 22AE _ 31. FF
        xor     al, al                                  ; 22B0 _ 30. C0
?_125:  mov     r10b, al                                ; 22B2 _ 41: 88. C2
        mov     cl, al                                  ; 22B5 _ 88. C1
?_126:  xor     al, al                                  ; 22B7 _ 30. C0
        mov     dword ptr [rbp-7CH], eax                ; 22B9 _ 89. 45, 84
        jmp     Unnamed_1_21D8                          ; 22BC _ E9, 00000157

Unnamed_1_2081:
        mov     qword ptr [rsp+20H], rax                ; 22C1 _ 48: 89. 44 24, 20
        xor     edi, edi                                ; 22C6 _ 31. FF
        mov     rcx, rdx                                ; 22C8 _ 48: 89. D1
        mov     edx, 38                                 ; 22CB _ BA, 00000026
        xor     r8d, r8d                                ; 22D0 _ 45: 31. C0
        mov     rsi, r9                                 ; 22D3 _ 4C: 89. CE
        lea     r9, ptr [?_372]                         ; 22D6 _ 4C: 8D. 0D, 00004C92(rel)
        call    _BasePrintLibSPrint                     ; 22DD _ E8, 000006F6
        mov     r9, rsi                                 ; 22E2 _ 49: 89. F1
        xor     al, al                                  ; 22E5 _ 30. C0
        mov     dword ptr [rbp-7CH], eax                ; 22E7 _ 89. 45, 84
        xor     r10b, r10b                              ; 22EA _ 45: 30. D2
        xor     cl, cl                                  ; 22ED _ 30. C9
        jmp     Unnamed_1_21D8                          ; 22EF _ E9, 00000124

?_127:  mov     qword ptr [rbp-0A8H], rsi               ; 22F4 _ 48: 89. B5, FFFFFF58
        movzx   edx, byte ptr [rax+r13*2]               ; 22FB _ 42: 0F B6. 14 68
        mov     rcx, qword ptr [rbp-0B0H]               ; 2300 _ 48: 8B. 8D, FFFFFF50
        lea     rcx, ptr [r13+rcx]                      ; 2307 _ 49: 8D. 4C 0D, 00
        movzx   ecx, byte ptr [rax+rcx]                 ; 230C _ 0F B6. 0C 08
        shl     rcx, 8                                  ; 2310 _ 48: C1. E1, 08
        or      ecx, edx                                ; 2314 _ 09. D1
        xor     dl, dl                                  ; 2316 _ 30. D2
        xor     edi, edi                                ; 2318 _ 31. FF
        lea     rax, ptr [rax+r13*2]                    ; 231A _ 4A: 8D. 04 68
        and     rcx, r9                                 ; 231E _ 4C: 21. C9
        mov     qword ptr [rbp-68H], rcx                ; 2321 _ 48: 89. 4D, 98
        cmp     rcx, 13                                 ; 2325 _ 48: 83. F9, 0D
        cmove   rbx, rax                                ; 2329 _ 48: 0F 44. D8
        mov     r10b, dl                                ; 232D _ 41: 88. D2
        mov     cl, dl                                  ; 2330 _ 88. D1
        xor     al, al                                  ; 2332 _ 30. C0
        mov     dword ptr [rbp-7CH], eax                ; 2334 _ 89. 45, 84
        lea     r12, ptr [?_373]                        ; 2337 _ 4C: 8D. 25, 00004C36(rel)
        jmp     Unnamed_1_21D8                          ; 233E _ E9, 000000D5

?_128:  movzx   ecx, byte ptr [rbx+r13]                 ; 2343 _ 42: 0F B6. 0C 2B
        movzx   eax, byte ptr [rbx+r13+1H]              ; 2348 _ 42: 0F B6. 44 2B, 01
        shl     rax, 8                                  ; 234E _ 48: C1. E0, 08
        or      eax, ecx                                ; 2352 _ 09. C8
        and     rax, r9                                 ; 2354 _ 4C: 21. C8
        mov     qword ptr [rbp-68H], rax                ; 2357 _ 48: 89. 45, 98
        lea     rcx, ptr [rbx+r13]                      ; 235B _ 4A: 8D. 0C 2B
        mov     edx, 1                                  ; 235F _ BA, 00000001
        mov     qword ptr [rbp-0A0H], rdx               ; 2364 _ 48: 89. 95, FFFFFF60
        xor     dl, dl                                  ; 236B _ 30. D2
        xor     edi, edi                                ; 236D _ 31. FF
        cmp     rax, 10                                 ; 236F _ 48: 83. F8, 0A
        cmove   rbx, rcx                                ; 2373 _ 48: 0F 44. D9
        lea     r12, ptr [?_374]                        ; 2377 _ 4C: 8D. 25, 00004BF9(rel)
        lea     rax, ptr [?_373]                        ; 237E _ 48: 8D. 05, 00004BEF(rel)
        cmove   r12, rax                                ; 2385 _ 4C: 0F 44. E0
        mov     r10b, dl                                ; 2389 _ 41: 88. D2
        mov     cl, dl                                  ; 238C _ 88. D1
        xor     al, al                                  ; 238E _ 30. C0
        mov     dword ptr [rbp-7CH], eax                ; 2390 _ 89. 45, 84
        mov     r15, rdi                                ; 2393 _ 49: 89. FF
        jmp     Unnamed_1_21D1                          ; 2396 _ EB, 79

?_129:  movzx   ecx, byte ptr [rbx+r13]                 ; 2398 _ 42: 0F B6. 0C 2B
        movzx   eax, byte ptr [rbx+r13+1H]              ; 239D _ 42: 0F B6. 44 2B, 01
        shl     rax, 8                                  ; 23A3 _ 48: C1. E0, 08
        or      eax, ecx                                ; 23A7 _ 09. C8
        mov     r9, qword ptr [rbp-0D8H]                ; 23A9 _ 4C: 8B. 8D, FFFFFF28
        and     rax, r9                                 ; 23B0 _ 4C: 21. C8
        mov     ecx, 1                                  ; 23B3 _ B9, 00000001
        mov     qword ptr [rbp-0A0H], rcx               ; 23B8 _ 48: 89. 8D, FFFFFF60
        mov     qword ptr [rbp-68H], rax                ; 23BF _ 48: 89. 45, 98
        lea     rcx, ptr [rbx+r13]                      ; 23C3 _ 4A: 8D. 0C 2B
        xor     dl, dl                                  ; 23C7 _ 30. D2
        xor     edi, edi                                ; 23C9 _ 31. FF
        cmp     rax, 13                                 ; 23CB _ 48: 83. F8, 0D
        cmove   rbx, rcx                                ; 23CF _ 48: 0F 44. D9
        mov     r10b, dl                                ; 23D3 _ 41: 88. D2
        mov     cl, dl                                  ; 23D6 _ 88. D1
        xor     al, al                                  ; 23D8 _ 30. C0
        mov     dword ptr [rbp-7CH], eax                ; 23DA _ 89. 45, 84
        mov     r15, rdi                                ; 23DD _ 49: 89. FF
        lea     r12, ptr [?_373]                        ; 23E0 _ 4C: 8D. 25, 00004B8D(rel)
        jmp     Unnamed_1_21D1                          ; 23E7 _ EB, 28

?_130:  mov     eax, 1                                  ; 23E9 _ B8, 00000001
        mov     qword ptr [rbp-0A0H], rax               ; 23EE _ 48: 89. 85, FFFFFF60
        or      r14, 400H                               ; 23F5 _ 49: 81. CE, 00000400
        xor     al, al                                  ; 23FC _ 30. C0
        xor     edi, edi                                ; 23FE _ 31. FF
        mov     r10b, al                                ; 2400 _ 41: 88. C2
        mov     cl, al                                  ; 2403 _ 88. C1
        xor     al, al                                  ; 2405 _ 30. C0
        mov     dword ptr [rbp-7CH], eax                ; 2407 _ 89. 45, 84
        mov     r15, rdi                                ; 240A _ 49: 89. FF
        lea     r12, ptr [rbp-68H]                      ; 240D _ 4C: 8D. 65, 98
Unnamed_1_21D1:
        mov     qword ptr [rbp-0D0H], rdi               ; 2411 _ 48: 89. BD, FFFFFF30
Unnamed_1_21D8:
        mov     dword ptr [rbp-0B4H], ecx               ; 2418 _ 89. 8D, FFFFFF4C
        mov     qword ptr [rbp-88H], rdi                ; 241E _ 48: 89. BD, FFFFFF78
        mov     qword ptr [rbp-0D8H], r9                ; 2425 _ 4C: 89. 8D, FFFFFF28
        mov     qword ptr [rbp-0E8H], rbx               ; 242C _ 48: 89. 9D, FFFFFF18
        mov     r8, r14                                 ; 2433 _ 4D: 89. F0
        and     r8, 400H                                ; 2436 _ 49: 81. E0, 00000400
        mov     r11d, 65535                             ; 243D _ 41: BB, 0000FFFF
        mov     eax, 255                                ; 2443 _ B8, 000000FF
        cmove   r11, rax                                ; 2448 _ 4C: 0F 44. D8
        shr     r8, 10                                  ; 244C _ 49: C1. E8, 0A
        mov     rax, r14                                ; 2450 _ 4C: 89. F0
        test    ah, 10H                                 ; 2453 _ F6. C4, 10
        jnz     ?_133                                   ; 2456 _ 75, 4E
        lea     rax, ptr [r12+1H]                       ; 2458 _ 49: 8D. 44 24, 01
        mov     rdi, r14                                ; 245D _ 4C: 89. F7
        and     rdi, 800H                               ; 2460 _ 48: 81. E7, 00000800
        lea     rdx, ptr [r8+1H]                        ; 2467 _ 49: 8D. 50, 01
        inc     r8                                      ; 246B _ 49: FF. C0
        xor     r15d, r15d                              ; 246E _ 45: 31. FF
        mov     r9, qword ptr [rbp-0F8H]                ; 2471 _ 4C: 8B. 8D, FFFFFF08
        jmp     ?_131                                   ; 2478 _ EB, 19

Unnamed_1_223A:
        movzx   ebx, byte ptr [rax-1H]                  ; 247A _ 0F B6. 58, FF
        movzx   ecx, byte ptr [rax]                     ; 247E _ 0F B6. 08
        shl     rcx, 8                                  ; 2481 _ 48: C1. E1, 08
        or      rcx, rbx                                ; 2485 _ 48: 09. D9
        test    r11, rcx                                ; 2488 _ 49: 85. CB
        jz      ?_132                                   ; 248B _ 74, 14
        add     rax, r8                                 ; 248D _ 4C: 01. C0
        inc     r15                                     ; 2490 _ 49: FF. C7
?_131:  cmp     r15, qword ptr [rbp-0A0H]               ; 2493 _ 4C: 3B. BD, FFFFFF60
        jc      Unnamed_1_223A                          ; 249A _ 72, DE
        test    rdi, rdi                                ; 249C _ 48: 85. FF
        jz      Unnamed_1_223A                          ; 249F _ 74, D9
?_132:  mov     r8, rdx                                 ; 24A1 _ 49: 89. D0
        jmp     ?_134                                   ; 24A4 _ EB, 0A

?_133:  not     r8                                      ; 24A6 _ 49: F7. D0
        mov     r9, qword ptr [rbp-0F8H]                ; 24A9 _ 4C: 8B. 8D, FFFFFF08
?_134:  mov     rax, qword ptr [rbp-0A0H]               ; 24B0 _ 48: 8B. 85, FFFFFF60
        cmp     rax, r15                                ; 24B7 _ 4C: 39. F8
        mov     rcx, rax                                ; 24BA _ 48: 89. C1
        cmovc   rcx, r15                                ; 24BD _ 49: 0F 42. CF
        mov     rax, r14                                ; 24C1 _ 4C: 89. F0
        and     rax, 201H                               ; 24C4 _ 48: 25, 00000201
        mov     qword ptr [rbp-100H], rax               ; 24CA _ 48: 89. 85, FFFFFF00
        cmp     rax, 512                                ; 24D1 _ 48: 3D, 00000200
        mov     rsi, qword ptr [rbp-0C0H]               ; 24D7 _ 48: 8B. B5, FFFFFF40
        jz      ?_135                                   ; 24DE _ 74, 10
        mov     qword ptr [rbp-0E0H], rcx               ; 24E0 _ 48: 89. 8D, FFFFFF20
        mov     rdx, qword ptr [rbp-0F0H]               ; 24E7 _ 48: 8B. 95, FFFFFF10
        jmp     Unnamed_1_22DB                          ; 24EE _ EB, 2B

?_135:  mov     rax, qword ptr [rbp-0D0H]               ; 24F0 _ 48: 8B. 85, FFFFFF30
        sub     rax, rcx                                ; 24F7 _ 48: 29. C8
        mov     qword ptr [rbp-0E0H], rcx               ; 24FA _ 48: 89. 8D, FFFFFF20
        mov     rdx, rax                                ; 2501 _ 48: 89. C2
        imul    rdx, qword ptr [rbp-98H]                ; 2504 _ 48: 0F AF. 95, FFFFFF68
        add     rdx, qword ptr [rbp-0F0H]               ; 250C _ 48: 03. 95, FFFFFF10
        mov     rcx, r14                                ; 2513 _ 4C: 89. F1
        test    ch, 20H                                 ; 2516 _ F6. C5, 20
        jz      ?_136                                   ; 2519 _ 74, 05
Unnamed_1_22DB:
        mov     rdi, rsi                                ; 251B _ 48: 89. F7
        jmp     ?_140                                   ; 251E _ EB, 4A

?_136:  test    rsi, rsi                                ; 2520 _ 48: 85. F6
        jz      Unnamed_1_22DB                          ; 2523 _ 74, F6
        test    rax, rax                                ; 2525 _ 48: 85. C0
        jle     Unnamed_1_22DB                          ; 2528 _ 7E, F1
        cmp     rsi, r9                                 ; 252A _ 4C: 39. CE
        jnc     Unnamed_1_22DB                          ; 252D _ 73, EC
        inc     rsi                                     ; 252F _ 48: FF. C6
        mov     ecx, 1                                  ; 2532 _ B9, 00000001
?_137:  mov     byte ptr [rsi-1H], 32                   ; 2537 _ C6. 46, FF, 20
        cmp     qword ptr [rbp-78H], 0                  ; 253B _ 48: 83. 7D, 88, 00
        jz      ?_138                                   ; 2540 _ 74, 03
        mov     byte ptr [rsi], 0                       ; 2542 _ C6. 06, 00
?_138:  mov     rbx, qword ptr [rbp-98H]                ; 2545 _ 48: 8B. 9D, FFFFFF68
        lea     rdi, ptr [rsi+rbx]                      ; 254C _ 48: 8D. 3C 1E
        cmp     rcx, rax                                ; 2550 _ 48: 39. C1
        jge     ?_139                                   ; 2553 _ 7D, 12
        add     rsi, qword ptr [rbp-90H]                ; 2555 _ 48: 03. B5, FFFFFF70
        inc     rcx                                     ; 255C _ 48: FF. C1
        cmp     rsi, r9                                 ; 255F _ 4C: 39. CE
        mov     rsi, rdi                                ; 2562 _ 48: 89. FE
        jc      ?_137                                   ; 2565 _ 72, D0
?_139:  dec     rdi                                     ; 2567 _ 48: FF. CF
?_140:  test    r10b, r10b                              ; 256A _ 45: 84. D2
        je      ?_147                                   ; 256D _ 0F 84, 000000C7
        mov     eax, dword ptr [rbp-0B4H]               ; 2573 _ 8B. 85, FFFFFF4C
        test    al, al                                  ; 2579 _ 84. C0
        jnz     ?_141                                   ; 257B _ 75, 13
        mov     rsi, r14                                ; 257D _ 4C: 89. F6
        and     rsi, 2000H                              ; 2580 _ 48: 81. E6, 00002000
        mov     r10, qword ptr [rbp-98H]                ; 2587 _ 4C: 8B. 95, FFFFFF68
        jmp     Unnamed_1_238B                          ; 258E _ EB, 3B

?_141:  mov     r10, qword ptr [rbp-98H]                ; 2590 _ 4C: 8B. 95, FFFFFF68
        add     rdx, r10                                ; 2597 _ 4C: 01. D2
        mov     rsi, r14                                ; 259A _ 4C: 89. F6
        and     rsi, 2000H                              ; 259D _ 48: 81. E6, 00002000
        test    rdi, rdi                                ; 25A4 _ 48: 85. FF
        jz      Unnamed_1_238B                          ; 25A7 _ 74, 22
        test    rsi, rsi                                ; 25A9 _ 48: 85. F6
        jnz     Unnamed_1_238B                          ; 25AC _ 75, 1D
        cmp     rdi, r9                                 ; 25AE _ 4C: 39. CF
        jnc     Unnamed_1_238B                          ; 25B1 _ 73, 18
        mov     eax, dword ptr [rbp-0B4H]               ; 25B3 _ 8B. 85, FFFFFF4C
        mov     byte ptr [rdi], al                      ; 25B9 _ 88. 07
        cmp     qword ptr [rbp-78H], 0                  ; 25BB _ 48: 83. 7D, 88, 00
        jz      ?_142                                   ; 25C0 _ 74, 04
        mov     byte ptr [rdi+1H], 0                    ; 25C2 _ C6. 47, 01, 00
?_142:  add     rdi, r10                                ; 25C6 _ 4C: 01. D7
        xor     esi, esi                                ; 25C9 _ 31. F6
Unnamed_1_238B:
        mov     rax, qword ptr [rbp-0E0H]               ; 25CB _ 48: 8B. 85, FFFFFF20
        sub     rax, r15                                ; 25D2 _ 4C: 29. F8
        mov     rcx, rax                                ; 25D5 _ 48: 89. C1
        imul    rcx, r10                                ; 25D8 _ 49: 0F AF. CA
        add     rdx, rcx                                ; 25DC _ 48: 01. CA
        test    rsi, rsi                                ; 25DF _ 48: 85. F6
        jz      ?_143                                   ; 25E2 _ 74, 0B
Unnamed_1_23A4:
        mov     rbx, r9                                 ; 25E4 _ 4C: 89. CB
        mov     rsi, rdi                                ; 25E7 _ 48: 89. FE
        jmp     Unnamed_1_24C8                          ; 25EA _ E9, 00000119

?_143:  test    rdi, rdi                                ; 25EF _ 48: 85. FF
        jz      Unnamed_1_23A4                          ; 25F2 _ 74, F0
        test    rax, rax                                ; 25F4 _ 48: 85. C0
        jle     Unnamed_1_23A4                          ; 25F7 _ 7E, EB
        cmp     rdi, r9                                 ; 25F9 _ 4C: 39. CF
        jnc     Unnamed_1_23A4                          ; 25FC _ 73, E6
        inc     rdi                                     ; 25FE _ 48: FF. C7
        mov     ecx, 1                                  ; 2601 _ B9, 00000001
?_144:  mov     byte ptr [rdi-1H], 48                   ; 2606 _ C6. 47, FF, 30
        cmp     qword ptr [rbp-78H], 0                  ; 260A _ 48: 83. 7D, 88, 00
        jz      ?_145                                   ; 260F _ 74, 03
        mov     byte ptr [rdi], 0                       ; 2611 _ C6. 07, 00
?_145:  lea     rsi, ptr [rdi+r10]                      ; 2614 _ 4A: 8D. 34 17
        cmp     rcx, rax                                ; 2618 _ 48: 39. C1
        jge     ?_146                                   ; 261B _ 7D, 12
        add     rdi, qword ptr [rbp-90H]                ; 261D _ 48: 03. BD, FFFFFF70
        inc     rcx                                     ; 2624 _ 48: FF. C1
        cmp     rdi, r9                                 ; 2627 _ 4C: 39. CF
        mov     rdi, rsi                                ; 262A _ 48: 89. F7
        jc      ?_144                                   ; 262D _ 72, D7
?_146:  mov     rbx, r9                                 ; 262F _ 4C: 89. CB
        dec     rsi                                     ; 2632 _ 48: FF. CE
        jmp     Unnamed_1_24C8                          ; 2635 _ E9, 000000CE

?_147:  mov     rax, qword ptr [rbp-0E0H]               ; 263A _ 48: 8B. 85, FFFFFF20
        sub     rax, r15                                ; 2641 _ 4C: 29. F8
        mov     r10, r14                                ; 2644 _ 4D: 89. F2
        and     r10, 2000H                              ; 2647 _ 49: 81. E2, 00002000
        jz      ?_148                                   ; 264E _ 74, 05
Unnamed_1_2410:
        mov     rsi, rdi                                ; 2650 _ 48: 89. FE
        jmp     ?_152                                   ; 2653 _ EB, 51

?_148:  test    rdi, rdi                                ; 2655 _ 48: 85. FF
        jz      Unnamed_1_2410                          ; 2658 _ 74, F6
        test    rax, rax                                ; 265A _ 48: 85. C0
        jle     Unnamed_1_2410                          ; 265D _ 7E, F1
        cmp     rdi, r9                                 ; 265F _ 4C: 39. CF
        jnc     Unnamed_1_2410                          ; 2662 _ 73, EC
        mov     rbx, r9                                 ; 2664 _ 4C: 89. CB
        inc     rdi                                     ; 2667 _ 48: FF. C7
        mov     r9d, 1                                  ; 266A _ 41: B9, 00000001
?_149:  mov     byte ptr [rdi-1H], 32                   ; 2670 _ C6. 47, FF, 20
        cmp     qword ptr [rbp-78H], 0                  ; 2674 _ 48: 83. 7D, 88, 00
        jz      ?_150                                   ; 2679 _ 74, 03
        mov     byte ptr [rdi], 0                       ; 267B _ C6. 07, 00
?_150:  mov     rcx, qword ptr [rbp-98H]                ; 267E _ 48: 8B. 8D, FFFFFF68
        lea     rsi, ptr [rdi+rcx]                      ; 2685 _ 48: 8D. 34 0F
        cmp     r9, rax                                 ; 2689 _ 49: 39. C1
        jge     ?_151                                   ; 268C _ 7D, 12
        add     rdi, qword ptr [rbp-90H]                ; 268E _ 48: 03. BD, FFFFFF70
        inc     r9                                      ; 2695 _ 49: FF. C1
        cmp     rdi, rbx                                ; 2698 _ 48: 39. DF
        mov     rdi, rsi                                ; 269B _ 48: 89. F7
        jc      ?_149                                   ; 269E _ 72, D0
?_151:  dec     rsi                                     ; 26A0 _ 48: FF. CE
        mov     r9, rbx                                 ; 26A3 _ 49: 89. D9
?_152:  mov     rcx, qword ptr [rbp-98H]                ; 26A6 _ 48: 8B. 8D, FFFFFF68
        imul    rax, rcx                                ; 26AD _ 48: 0F AF. C1
        add     rdx, rax                                ; 26B1 _ 48: 01. C2
        mov     eax, dword ptr [rbp-0B4H]               ; 26B4 _ 8B. 85, FFFFFF4C
        test    al, al                                  ; 26BA _ 84. C0
        jnz     ?_153                                   ; 26BC _ 75, 08
        mov     rbx, r9                                 ; 26BE _ 4C: 89. CB
        mov     r10, rcx                                ; 26C1 _ 49: 89. CA
        jmp     Unnamed_1_24C8                          ; 26C4 _ EB, 42

?_153:  add     rdx, rcx                                ; 26C6 _ 48: 01. CA
        mov     rdi, rcx                                ; 26C9 _ 48: 89. CF
        test    rsi, rsi                                ; 26CC _ 48: 85. F6
        setne   al                                      ; 26CF _ 0F 95. C0
        test    r10, r10                                ; 26D2 _ 4D: 85. D2
        sete    cl                                      ; 26D5 _ 0F 94. C1
        cmp     rsi, r9                                 ; 26D8 _ 4C: 39. CE
        jc      ?_155                                   ; 26DB _ 72, 08
?_154:  mov     rbx, r9                                 ; 26DD _ 4C: 89. CB
        mov     r10, rdi                                ; 26E0 _ 49: 89. FA
        jmp     Unnamed_1_24C8                          ; 26E3 _ EB, 23

?_155:  and     cl, al                                  ; 26E5 _ 20. C1
        cmp     cl, 1                                   ; 26E7 _ 80. F9, 01
        jnz     ?_154                                   ; 26EA _ 75, F1
        mov     rbx, r9                                 ; 26EC _ 4C: 89. CB
        mov     eax, dword ptr [rbp-0B4H]               ; 26EF _ 8B. 85, FFFFFF4C
        mov     byte ptr [rsi], al                      ; 26F5 _ 88. 06
        cmp     qword ptr [rbp-78H], 0                  ; 26F7 _ 48: 83. 7D, 88, 00
        mov     r10, rdi                                ; 26FC _ 49: 89. FA
        jz      ?_156                                   ; 26FF _ 74, 04
        mov     byte ptr [rsi+1H], 0                    ; 2701 _ C6. 46, 01, 00
?_156:  add     rsi, r10                                ; 2705 _ 4C: 01. D6
Unnamed_1_24C8:
        mov     rdi, r14                                ; 2708 _ 4C: 89. F7
        and     rdi, 2000H                              ; 270B _ 48: 81. E7, 00002000
        mov     eax, dword ptr [rbp-0B4H]               ; 2712 _ 8B. 85, FFFFFF4C
        test    al, al                                  ; 2718 _ 84. C0
        setne   al                                      ; 271A _ 0F 95. C0
        movzx   eax, al                                 ; 271D _ 0F B6. C0
        jmp     Unnamed_1_25A7                          ; 2720 _ E9, 000000C2

Unnamed_1_24E5:
        test    rsi, rsi                                ; 2725 _ 48: 85. F6
        setne   cl                                      ; 2728 _ 0F 95. C1
        test    rdi, rdi                                ; 272B _ 48: 85. FF
        sete    bl                                      ; 272E _ 0F 94. C3
        cmp     rsi, r9                                 ; 2731 _ 4C: 39. CE
        jnc     Unnamed_1_251D                          ; 2734 _ 73, 27
        and     bl, cl                                  ; 2736 _ 20. CB
        cmp     bl, 1                                   ; 2738 _ 80. FB, 01
        jnz     Unnamed_1_251D                          ; 273B _ 75, 20
        movzx   ecx, byte ptr [r12+1H]                  ; 273D _ 41: 0F B6. 4C 24, 01
        mov     bl, byte ptr [r12]                      ; 2743 _ 41: 8A. 1C 24
        mov     byte ptr [rsi], bl                      ; 2747 _ 88. 1E
        cmp     qword ptr [rbp-78H], 0                  ; 2749 _ 48: 83. 7D, 88, 00
        jz      ?_157                                   ; 274E _ 74, 0A
        shl     rcx, 8                                  ; 2750 _ 48: C1. E1, 08
        and     ecx, r11d                               ; 2754 _ 44: 21. D9
        mov     byte ptr [rsi+1H], ch                   ; 2757 _ 88. 6E, 01
?_157:  add     rsi, r10                                ; 275A _ 4C: 01. D6
Unnamed_1_251D:
        add     rdx, r10                                ; 275D _ 4C: 01. D2
        add     r12, r8                                 ; 2760 _ 4D: 01. C4
        inc     rax                                     ; 2763 _ 48: FF. C0
        mov     ecx, dword ptr [rbp-7CH]                ; 2766 _ 8B. 4D, 84
        test    cl, cl                                  ; 2769 _ 84. C9
        jz      ?_159                                   ; 276B _ 74, 7D
        mov     rbx, r9                                 ; 276D _ 4C: 89. CB
        mov     rcx, qword ptr [rbp-88H]                ; 2770 _ 48: 8B. 8D, FFFFFF78
        inc     rcx                                     ; 2777 _ 48: FF. C1
        mov     qword ptr [rbp-88H], rcx                ; 277A _ 48: 89. 8D, FFFFFF78
        cmp     rcx, 3                                  ; 2781 _ 48: 83. F9, 03
        jnz     Unnamed_1_25A7                          ; 2785 _ 75, 60
        inc     rax                                     ; 2787 _ 48: FF. C0
        mov     qword ptr [rbp-88H], 0                  ; 278A _ 48: C7. 85, FFFFFF78, 00000000
        cmp     rax, r15                                ; 2795 _ 4C: 39. F8
        jnc     Unnamed_1_25A7                          ; 2798 _ 73, 4D
        test    rsi, rsi                                ; 279A _ 48: 85. F6
        mov     rcx, qword ptr [rbp-90H]                ; 279D _ 48: 8B. 8D, FFFFFF70
        lea     rdx, ptr [rcx+rdx+1H]                   ; 27A4 _ 48: 8D. 54 11, 01
        setne   r9b                                     ; 27A9 _ 41: 0F 95. C1
        test    rdi, rdi                                ; 27AD _ 48: 85. FF
        sete    cl                                      ; 27B0 _ 0F 94. C1
        mov     qword ptr [rbp-88H], 0                  ; 27B3 _ 48: C7. 85, FFFFFF78, 00000000
        cmp     rsi, rbx                                ; 27BE _ 48: 39. DE
        jnc     Unnamed_1_25A7                          ; 27C1 _ 73, 24
        and     cl, r9b                                 ; 27C3 _ 44: 20. C9
        cmp     cl, 1                                   ; 27C6 _ 80. F9, 01
        jnz     Unnamed_1_25A7                          ; 27C9 _ 75, 1C
        mov     byte ptr [rsi], 44                      ; 27CB _ C6. 06, 2C
        cmp     qword ptr [rbp-78H], 0                  ; 27CE _ 48: 83. 7D, 88, 00
        jz      ?_158                                   ; 27D3 _ 74, 04
        mov     byte ptr [rsi+1H], 0                    ; 27D5 _ C6. 46, 01, 00
?_158:  add     rsi, r10                                ; 27D9 _ 4C: 01. D6
        mov     qword ptr [rbp-88H], 0                  ; 27DC _ 48: C7. 85, FFFFFF78, 00000000
Unnamed_1_25A7:
        mov     r9, rbx                                 ; 27E7 _ 49: 89. D9
?_159:  cmp     rax, r15                                ; 27EA _ 4C: 39. F8
        jc      Unnamed_1_24E5                          ; 27ED _ 0F 82, FFFFFF32
        cmp     qword ptr [rbp-100H], 513               ; 27F3 _ 48: 81. BD, FFFFFF00, 00000201
        jz      ?_160                                   ; 27FE _ 74, 05
        mov     rax, rdx                                ; 2800 _ 48: 89. D0
        jmp     Unnamed_1_25F0                          ; 2803 _ EB, 2B

?_160:  mov     rax, qword ptr [rbp-0A0H]               ; 2805 _ 48: 8B. 85, FFFFFF60
        cmp     rax, r15                                ; 280C _ 4C: 39. F8
        cmova   r15, rax                                ; 280F _ 4C: 0F 47. F8
        mov     rcx, qword ptr [rbp-0D0H]               ; 2813 _ 48: 8B. 8D, FFFFFF30
        mov     rax, rcx                                ; 281A _ 48: 89. C8
        sub     rax, r15                                ; 281D _ 4C: 29. F8
        imul    rax, r10                                ; 2820 _ 49: 0F AF. C2
        add     rax, rdx                                ; 2824 _ 48: 01. D0
        test    rdi, rdi                                ; 2827 _ 48: 85. FF
        je      Unnamed_1_17B8                          ; 282A _ 0F 84, FFFFF1C8
Unnamed_1_25F0:
        mov     qword ptr [rbp-0C0H], rsi               ; 2830 _ 48: 89. B5, FFFFFF40
        jmp     ?_074                                   ; 2837 _ E9, FFFFF21C

Unnamed_1_25FC:
        mov     rcx, r14                                ; 283C _ 4C: 89. F1
        test    ch, 20H                                 ; 283F _ F6. C5, 20
        jz      ?_161                                   ; 2842 _ 74, 0E
        xor     edx, edx                                ; 2844 _ 31. D2
        div     qword ptr [rbp-98H]                     ; 2846 _ 48: F7. B5, FFFFFF68
        jmp     Unnamed_1_26DA                          ; 284D _ E9, 000000C8

?_161:  mov     rsi, r9                                 ; 2852 _ 4C: 89. CE
        call    _DebugAssertEnabled                     ; 2855 _ E8, FFFFD9F2
        test    al, al                                  ; 285A _ 84. C0
        mov     rdi, qword ptr [rbp-0C0H]               ; 285C _ 48: 8B. BD, FFFFFF40
        jz      Unnamed_1_2642                          ; 2863 _ 74, 1D
        test    rdi, rdi                                ; 2865 _ 48: 85. FF
        jnz     Unnamed_1_2642                          ; 2868 _ 75, 18
        lea     rcx, ptr [?_364]                        ; 286A _ 48: 8D. 0D, 000045EF(rel)
        lea     r8, ptr [?_319]                         ; 2871 _ 4C: 8D. 05, 00003A8A(rel)
        mov     edx, 973                                ; 2878 _ BA, 000003CD
        call    _DebugAssert                            ; 287D _ E8, FFFFD9C9
Unnamed_1_2642:
        add     rsi, qword ptr [rbp-98H]                ; 2882 _ 48: 03. B5, FFFFFF68
        cmp     rdi, rsi                                ; 2889 _ 48: 39. F7
        mov     rsi, qword ptr [rbp-108H]               ; 288C _ 48: 8B. B5, FFFFFEF8
        jnc     Unnamed_1_2663                          ; 2893 _ 73, 0E
        mov     byte ptr [rdi], 0                       ; 2895 _ C6. 07, 00
        cmp     qword ptr [rbp-78H], 0                  ; 2898 _ 48: 83. 7D, 88, 00
        jz      Unnamed_1_2663                          ; 289D _ 74, 04
        mov     byte ptr [rdi+1H], 0                    ; 289F _ C6. 47, 01, 00
Unnamed_1_2663:
        call    _DebugAssertEnabled                     ; 28A3 _ E8, FFFFD9A4
        test    al, al                                  ; 28A8 _ 84. C0
        jz      Unnamed_1_2697                          ; 28AA _ 74, 2B
        test    r14b, 40H                               ; 28AC _ 41: F6. C6, 40
        jz      Unnamed_1_2697                          ; 28B0 _ 74, 25
        mov     rcx, rsi                                ; 28B2 _ 48: 89. F1
        call    _StrSize                                ; 28B5 _ E8, FFFFE082
        test    rax, rax                                ; 28BA _ 48: 85. C0
        jnz     Unnamed_1_2697                          ; 28BD _ 75, 18
        lea     rcx, ptr [?_364]                        ; 28BF _ 48: 8D. 0D, 0000459A(rel)
        lea     r8, ptr [?_375]                         ; 28C6 _ 4C: 8D. 05, 000046AC(rel)
        mov     edx, 982                                ; 28CD _ BA, 000003D6
        call    _DebugAssert                            ; 28D2 _ E8, FFFFD974
Unnamed_1_2697:
        call    _DebugAssertEnabled                     ; 28D7 _ E8, FFFFD970
        test    al, al                                  ; 28DC _ 84. C0
        jz      Unnamed_1_26CB                          ; 28DE _ 74, 2B
        test    r14b, 40H                               ; 28E0 _ 41: F6. C6, 40
        jnz     Unnamed_1_26CB                          ; 28E4 _ 75, 25
        mov     rcx, rsi                                ; 28E6 _ 48: 89. F1
        call    _AsciiStrSize                           ; 28E9 _ E8, FFFFE066
        test    rax, rax                                ; 28EE _ 48: 85. C0
        jnz     Unnamed_1_26CB                          ; 28F1 _ 75, 18
        lea     rcx, ptr [?_364]                        ; 28F3 _ 48: 8D. 0D, 00004566(rel)
        lea     r8, ptr [?_376]                         ; 28FA _ 4C: 8D. 05, 000046C4(rel)
        mov     edx, 987                                ; 2901 _ BA, 000003DB
        call    _DebugAssert                            ; 2906 _ E8, FFFFD940
Unnamed_1_26CB:
        sub     rdi, rsi                                ; 290B _ 48: 29. F7
        mov     rax, rdi                                ; 290E _ 48: 89. F8
        cqo                                             ; 2911 _ 48: 99
        idiv    qword ptr [rbp-98H]                     ; 2913 _ 48: F7. BD, FFFFFF68
Unnamed_1_26DA:
        add     rsp, 376                                ; 291A _ 48: 81. C4, 00000178
        pop     rbx                                     ; 2921 _ 5B
        pop     rdi                                     ; 2922 _ 5F
        pop     rsi                                     ; 2923 _ 5E
        pop     r12                                     ; 2924 _ 41: 5C
        pop     r13                                     ; 2926 _ 41: 5D
        pop     r14                                     ; 2928 _ 41: 5E
        pop     r15                                     ; 292A _ 41: 5F
        pop     rbp                                     ; 292C _ 5D
        ret                                             ; 292D _ C3
_BasePrintLibSPrintMarker ENDP

; Filling space: 2H
; Filler type: NOP with prefixes
;       db 66H, 90H

ALIGN   8

?_162   label byte
        db 09H, 0F3H, 0FFH, 0FFH, 0A2H, 0F3H, 0FFH, 0FFH; 2930 _ ........
        db 0A2H, 0F3H, 0FFH, 0FFH, 0A2H, 0F3H, 0FFH, 0FFH; 2938 _ ........
        db 0A2H, 0F3H, 0FFH, 0FFH, 0A2H, 0F3H, 0FFH, 0FFH; 2940 _ ........
        db 0A2H, 0F3H, 0FFH, 0FFH, 0A2H, 0F3H, 0FFH, 0FFH; 2948 _ ........
        db 0A2H, 0F3H, 0FFH, 0FFH, 0A2H, 0F3H, 0FFH, 0FFH; 2950 _ ........
        db 33H, 0F3H, 0FFH, 0FFH, 0FDH, 0F2H, 0FFH, 0FFH; 2958 _ 3.......
        db 15H, 0F3H, 0FFH, 0FFH, 0F1H, 0F2H, 0FFH, 0FFH; 2960 _ ........
        db 0E2H, 0F2H, 0FFH, 0FFH, 0A2H, 0F3H, 0FFH, 0FFH; 2968 _ ........
        db 86H, 0F3H, 0FFH, 0FFH, 0FCH, 0F1H, 0FFH, 0FFH; 2970 _ ........
        db 0FCH, 0F1H, 0FFH, 0FFH, 0FCH, 0F1H, 0FFH, 0FFH; 2978 _ ........
        db 0FCH, 0F1H, 0FFH, 0FFH, 0FCH, 0F1H, 0FFH, 0FFH; 2980 _ ........
        db 0FCH, 0F1H, 0FFH, 0FFH, 0FCH, 0F1H, 0FFH, 0FFH; 2988 _ ........
        db 0FCH, 0F1H, 0FFH, 0FFH, 0FCH, 0F1H, 0FFH, 0FFH; 2990 _ ........

?_163   label dword                                     ; switch/case jump table
        dd ?_092-?_163                                  ; 2998 _ FFFFF415 (refpoint)
        dd Unnamed_1_19A6-?_163                         ; 299C _ FFFFF24E (refpoint)
        dd ?_120-?_163                                  ; 29A0 _ FFFFF8A9 (refpoint)
        dd ?_105-?_163                                  ; 29A4 _ FFFFF623 (refpoint)
        dd ?_116-?_163                                  ; 29A8 _ FFFFF80B (refpoint)
        dd ?_095-?_163                                  ; 29AC _ FFFFF428 (refpoint)
        dd Unnamed_1_19A6-?_163                         ; 29B0 _ FFFFF24E (refpoint)
        dd Unnamed_1_19A6-?_163                         ; 29B4 _ FFFFF24E (refpoint)
        dd ?_094-?_163                                  ; 29B8 _ FFFFF421 (refpoint)

?_164   label dword                                     ; switch/case jump table
        dd ?_106-?_164                                  ; 29BC _ FFFFF606 (refpoint)
        dd Unnamed_1_19A6-?_164                         ; 29C0 _ FFFFF22A (refpoint)
        dd ?_109-?_164                                  ; 29C4 _ FFFFF66A (refpoint)
        dd Unnamed_1_1B94-?_164                         ; 29C8 _ FFFFF418 (refpoint)
        dd Unnamed_1_19A6-?_164                         ; 29CC _ FFFFF22A (refpoint)
        dd Unnamed_1_19A6-?_164                         ; 29D0 _ FFFFF22A (refpoint)
        dd ?_112-?_164                                  ; 29D4 _ FFFFF6C1 (refpoint)

_BasePrintLibSPrint LABEL NEAR
        push    rbp                                     ; 29D8 _ 55
        mov     rbp, rsp                                ; 29D9 _ 48: 89. E5
        sub     rsp, 80                                 ; 29DC _ 48: 83. EC, 50
        lea     rax, ptr [rbp+30H]                      ; 29E0 _ 48: 8D. 45, 30
        mov     qword ptr [rbp-20H], rax                ; 29E4 _ 48: 89. 45, E0
        lea     rax, ptr [rbp-20H]                      ; 29E8 _ 48: 8D. 45, E0
        mov     qword ptr [rsp+20H], rax                ; 29EC _ 48: 89. 44 24, 20
        mov     qword ptr [rsp+28H], 0                  ; 29F1 _ 48: C7. 44 24, 28, 00000000
        call    _BasePrintLibSPrintMarker               ; 29FA _ E8, FFFFEE1D
        add     rsp, 80                                 ; 29FF _ 48: 83. C4, 50
        pop     rbp                                     ; 2A03 _ 5D
        ret                                             ; 2A04 _ C3

_UnicodeVSPrint PROC
        push    rbp                                     ; 2A05 _ 55
        mov     rbp, rsp                                ; 2A06 _ 48: 89. E5
        push    r14                                     ; 2A09 _ 41: 56
        push    rsi                                     ; 2A0B _ 56
        push    rdi                                     ; 2A0C _ 57
        push    rbx                                     ; 2A0D _ 53
        sub     rsp, 48                                 ; 2A0E _ 48: 83. EC, 30
        mov     r14, r9                                 ; 2A12 _ 4D: 89. CE
        mov     rsi, r8                                 ; 2A15 _ 4C: 89. C6
        mov     rdi, rdx                                ; 2A18 _ 48: 89. D7
        mov     rbx, rcx                                ; 2A1B _ 48: 89. CB
        call    _DebugAssertEnabled                     ; 2A1E _ E8, FFFFD829
        test    al, al                                  ; 2A23 _ 84. C0
        jz      Unnamed_1_2804                          ; 2A25 _ 74, 1D
        test    bl, 01H                                 ; 2A27 _ F6. C3, 01
        jz      Unnamed_1_2804                          ; 2A2A _ 74, 18
        lea     rcx, ptr [?_377]                        ; 2A2C _ 48: 8D. 0D, 000045D8(rel)
        lea     r8, ptr [?_378]                         ; 2A33 _ 4C: 8D. 05, 0000462B(rel)
        mov     edx, 71                                 ; 2A3A _ BA, 00000047
        call    _DebugAssert                            ; 2A3F _ E8, FFFFD807
Unnamed_1_2804:
        call    _DebugAssertEnabled                     ; 2A44 _ E8, FFFFD803
        test    al, al                                  ; 2A49 _ 84. C0
        jz      Unnamed_1_282B                          ; 2A4B _ 74, 1E
        test    sil, 01H                                ; 2A4D _ 40: F6. C6, 01
        jz      Unnamed_1_282B                          ; 2A51 _ 74, 18
        lea     rcx, ptr [?_377]                        ; 2A53 _ 48: 8D. 0D, 000045B1(rel)
        lea     r8, ptr [?_379]                         ; 2A5A _ 4C: 8D. 05, 0000462C(rel)
        mov     edx, 72                                 ; 2A61 _ BA, 00000048
        call    _DebugAssert                            ; 2A66 _ E8, FFFFD7E0
Unnamed_1_282B:
        mov     qword ptr [rsp+20H], r14                ; 2A6B _ 4C: 89. 74 24, 20
        mov     qword ptr [rsp+28H], 0                  ; 2A70 _ 48: C7. 44 24, 28, 00000000
        shr     rdi, 1                                  ; 2A79 _ 48: D1. EF
        mov     rcx, rbx                                ; 2A7C _ 48: 89. D9
        mov     rdx, rdi                                ; 2A7F _ 48: 89. FA
        mov     r8d, 320                                ; 2A82 _ 41: B8, 00000140
        mov     r9, rsi                                 ; 2A88 _ 49: 89. F1
        call    _BasePrintLibSPrintMarker               ; 2A8B _ E8, FFFFED8C
        add     rsp, 48                                 ; 2A90 _ 48: 83. C4, 30
        pop     rbx                                     ; 2A94 _ 5B
        pop     rdi                                     ; 2A95 _ 5F
        pop     rsi                                     ; 2A96 _ 5E
        pop     r14                                     ; 2A97 _ 41: 5E
        pop     rbp                                     ; 2A99 _ 5D
        ret                                             ; 2A9A _ C3
_UnicodeVSPrint ENDP

_IsDevicePathEnd PROC
        push    rbp                                     ; 2A9B _ 55
        mov     rbp, rsp                                ; 2A9C _ 48: 89. E5
        push    rsi                                     ; 2A9F _ 56
        sub     rsp, 40                                 ; 2AA0 _ 48: 83. EC, 28
        mov     rsi, rcx                                ; 2AA4 _ 48: 89. CE
        call    _DebugAssertEnabled                     ; 2AA7 _ E8, FFFFD7A0
        test    al, al                                  ; 2AAC _ 84. C0
        jz      Unnamed_1_288D                          ; 2AAE _ 74, 1D
        test    rsi, rsi                                ; 2AB0 _ 48: 85. F6
        jnz     Unnamed_1_288D                          ; 2AB3 _ 75, 18
        lea     rcx, ptr [?_380]                        ; 2AB5 _ 48: 8D. 0D, 000045F8(rel)
        lea     r8, ptr [?_336]                         ; 2ABC _ 4C: 8D. 05, 00003C30(rel)
        mov     edx, 237                                ; 2AC3 _ BA, 000000ED
        call    _DebugAssert                            ; 2AC8 _ E8, FFFFD77E
Unnamed_1_288D:
        mov     rcx, rsi                                ; 2ACD _ 48: 89. F1
        call    _IsDevicePathEndType                    ; 2AD0 _ E8, 00000122
        xor     cl, cl                                  ; 2AD5 _ 30. C9
        test    al, al                                  ; 2AD7 _ 84. C0
        jz      ?_165                                   ; 2AD9 _ 74, 0D
        mov     rcx, rsi                                ; 2ADB _ 48: 89. F1
        call    _DevicePathSubType                      ; 2ADE _ E8, 000000D7
        cmp     al, -1                                  ; 2AE3 _ 3C, FF
        sete    cl                                      ; 2AE5 _ 0F 94. C1
?_165:  movzx   eax, cl                                 ; 2AE8 _ 0F B6. C1
        add     rsp, 40                                 ; 2AEB _ 48: 83. C4, 28
        pop     rsi                                     ; 2AEF _ 5E
        pop     rbp                                     ; 2AF0 _ 5D
        ret                                             ; 2AF1 _ C3
_IsDevicePathEnd ENDP

_DevicePathNodeLength PROC
        push    rbp                                     ; 2AF2 _ 55
        mov     rbp, rsp                                ; 2AF3 _ 48: 89. E5
        push    rsi                                     ; 2AF6 _ 56
        sub     rsp, 40                                 ; 2AF7 _ 48: 83. EC, 28
        mov     rsi, rcx                                ; 2AFB _ 48: 89. CE
        call    _DebugAssertEnabled                     ; 2AFE _ E8, FFFFD749
        test    al, al                                  ; 2B03 _ 84. C0
        jz      Unnamed_1_28E4                          ; 2B05 _ 74, 1D
        test    rsi, rsi                                ; 2B07 _ 48: 85. F6
        jnz     Unnamed_1_28E4                          ; 2B0A _ 75, 18
        lea     rcx, ptr [?_380]                        ; 2B0C _ 48: 8D. 0D, 000045A1(rel)
        lea     r8, ptr [?_336]                         ; 2B13 _ 4C: 8D. 05, 00003BD9(rel)
        mov     edx, 156                                ; 2B1A _ BA, 0000009C
        call    _DebugAssert                            ; 2B1F _ E8, FFFFD727
Unnamed_1_28E4:
        add     rsi, 2                                  ; 2B24 _ 48: 83. C6, 02
        mov     rcx, rsi                                ; 2B28 _ 48: 89. F1
        call    _ReadUnaligned16                        ; 2B2B _ E8, FFFFE4F8
        movzx   eax, ax                                 ; 2B30 _ 0F B7. C0
        add     rsp, 40                                 ; 2B33 _ 48: 83. C4, 28
        pop     rsi                                     ; 2B37 _ 5E
        pop     rbp                                     ; 2B38 _ 5D
        ret                                             ; 2B39 _ C3
_DevicePathNodeLength ENDP

_NextDevicePathNode PROC
        push    rbp                                     ; 2B3A _ 55
        mov     rbp, rsp                                ; 2B3B _ 48: 89. E5
        push    rsi                                     ; 2B3E _ 56
        sub     rsp, 40                                 ; 2B3F _ 48: 83. EC, 28
        mov     rsi, rcx                                ; 2B43 _ 48: 89. CE
        call    _DebugAssertEnabled                     ; 2B46 _ E8, FFFFD701
        test    al, al                                  ; 2B4B _ 84. C0
        jz      Unnamed_1_292C                          ; 2B4D _ 74, 1D
        test    rsi, rsi                                ; 2B4F _ 48: 85. F6
        jnz     Unnamed_1_292C                          ; 2B52 _ 75, 18
        lea     rcx, ptr [?_380]                        ; 2B54 _ 48: 8D. 0D, 00004559(rel)
        lea     r8, ptr [?_336]                         ; 2B5B _ 4C: 8D. 05, 00003B91(rel)
        mov     edx, 180                                ; 2B62 _ BA, 000000B4
        call    _DebugAssert                            ; 2B67 _ E8, FFFFD6DF
Unnamed_1_292C:
        mov     rcx, rsi                                ; 2B6C _ 48: 89. F1
        call    _DevicePathNodeLength                   ; 2B6F _ E8, FFFFFF7E
        add     rax, rsi                                ; 2B74 _ 48: 01. F0
        add     rsp, 40                                 ; 2B77 _ 48: 83. C4, 28
        pop     rsi                                     ; 2B7B _ 5E
        pop     rbp                                     ; 2B7C _ 5D
        ret                                             ; 2B7D _ C3
_NextDevicePathNode ENDP

_DevicePathType PROC
        push    rbp                                     ; 2B7E _ 55
        mov     rbp, rsp                                ; 2B7F _ 48: 89. E5
        push    rsi                                     ; 2B82 _ 56
        sub     rsp, 40                                 ; 2B83 _ 48: 83. EC, 28
        mov     rsi, rcx                                ; 2B87 _ 48: 89. CE
        call    _DebugAssertEnabled                     ; 2B8A _ E8, FFFFD6BD
        test    al, al                                  ; 2B8F _ 84. C0
        jz      Unnamed_1_2970                          ; 2B91 _ 74, 1D
        test    rsi, rsi                                ; 2B93 _ 48: 85. F6
        jnz     Unnamed_1_2970                          ; 2B96 _ 75, 18
        lea     rcx, ptr [?_380]                        ; 2B98 _ 48: 8D. 0D, 00004515(rel)
        lea     r8, ptr [?_336]                         ; 2B9F _ 4C: 8D. 05, 00003B4D(rel)
        mov     edx, 109                                ; 2BA6 _ BA, 0000006D
        call    _DebugAssert                            ; 2BAB _ E8, FFFFD69B
Unnamed_1_2970:
        movzx   eax, byte ptr [rsi]                     ; 2BB0 _ 0F B6. 06
        add     rsp, 40                                 ; 2BB3 _ 48: 83. C4, 28
        pop     rsi                                     ; 2BB7 _ 5E
        pop     rbp                                     ; 2BB8 _ 5D
        ret                                             ; 2BB9 _ C3
_DevicePathType ENDP

_DevicePathSubType PROC
        push    rbp                                     ; 2BBA _ 55
        mov     rbp, rsp                                ; 2BBB _ 48: 89. E5
        push    rsi                                     ; 2BBE _ 56
        sub     rsp, 40                                 ; 2BBF _ 48: 83. EC, 28
        mov     rsi, rcx                                ; 2BC3 _ 48: 89. CE
        call    _DebugAssertEnabled                     ; 2BC6 _ E8, FFFFD681
        test    al, al                                  ; 2BCB _ 84. C0
        jz      Unnamed_1_29AC                          ; 2BCD _ 74, 1D
        test    rsi, rsi                                ; 2BCF _ 48: 85. F6
        jnz     Unnamed_1_29AC                          ; 2BD2 _ 75, 18
        lea     rcx, ptr [?_380]                        ; 2BD4 _ 48: 8D. 0D, 000044D9(rel)
        lea     r8, ptr [?_336]                         ; 2BDB _ 4C: 8D. 05, 00003B11(rel)
        mov     edx, 131                                ; 2BE2 _ BA, 00000083
        call    _DebugAssert                            ; 2BE7 _ E8, FFFFD65F
Unnamed_1_29AC:
        movzx   eax, byte ptr [rsi+1H]                  ; 2BEC _ 0F B6. 46, 01
        add     rsp, 40                                 ; 2BF0 _ 48: 83. C4, 28
        pop     rsi                                     ; 2BF4 _ 5E
        pop     rbp                                     ; 2BF5 _ 5D
        ret                                             ; 2BF6 _ C3
_DevicePathSubType ENDP

_IsDevicePathEndType PROC
        push    rbp                                     ; 2BF7 _ 55
        mov     rbp, rsp                                ; 2BF8 _ 48: 89. E5
        push    rsi                                     ; 2BFB _ 56
        sub     rsp, 40                                 ; 2BFC _ 48: 83. EC, 28
        mov     rsi, rcx                                ; 2C00 _ 48: 89. CE
        call    _DebugAssertEnabled                     ; 2C03 _ E8, FFFFD644
        test    al, al                                  ; 2C08 _ 84. C0
        jz      Unnamed_1_29E9                          ; 2C0A _ 74, 1D
        test    rsi, rsi                                ; 2C0C _ 48: 85. F6
        jnz     Unnamed_1_29E9                          ; 2C0F _ 75, 18
        lea     rcx, ptr [?_380]                        ; 2C11 _ 48: 8D. 0D, 0000449C(rel)
        lea     r8, ptr [?_336]                         ; 2C18 _ 4C: 8D. 05, 00003AD4(rel)
        mov     edx, 210                                ; 2C1F _ BA, 000000D2
        call    _DebugAssert                            ; 2C24 _ E8, FFFFD622
Unnamed_1_29E9:
        mov     rcx, rsi                                ; 2C29 _ 48: 89. F1
        call    _DevicePathType                         ; 2C2C _ E8, FFFFFF4D
        cmp     al, 127                                 ; 2C31 _ 3C, 7F
        sete    al                                      ; 2C33 _ 0F 94. C0
        movzx   eax, al                                 ; 2C36 _ 0F B6. C0
        add     rsp, 40                                 ; 2C39 _ 48: 83. C4, 28
        pop     rsi                                     ; 2C3D _ 5E
        pop     rbp                                     ; 2C3E _ 5D
        ret                                             ; 2C3F _ C3
_IsDevicePathEndType ENDP

_UefiRuntimeServicesTableLibConstructor PROC
        push    rbp                                     ; 2C40 _ 55
        mov     rbp, rsp                                ; 2C41 _ 48: 89. E5
        sub     rsp, 32                                 ; 2C44 _ 48: 83. EC, 20
        mov     rax, qword ptr [rdx+58H]                ; 2C48 _ 48: 8B. 42, 58
        mov     qword ptr [_gRT], rax                   ; 2C4C _ 48: 89. 05, 000064FD(rel)
        call    _DebugAssertEnabled                     ; 2C53 _ E8, FFFFD5F4
        test    al, al                                  ; 2C58 _ 84. C0
        jz      Unnamed_1_2A40                          ; 2C5A _ 74, 24
        mov     rax, qword ptr [_gRT]                   ; 2C5C _ 48: 8B. 05, 000064ED(rel)
        test    rax, rax                                ; 2C63 _ 48: 85. C0
        jnz     Unnamed_1_2A40                          ; 2C66 _ 75, 18
        lea     rcx, ptr [?_381]                        ; 2C68 _ 48: 8D. 0D, 000044AF(rel)
        lea     r8, ptr [?_382]                         ; 2C6F _ 4C: 8D. 05, 00004524(rel)
        mov     edx, 47                                 ; 2C76 _ BA, 0000002F
        call    _DebugAssert                            ; 2C7B _ E8, FFFFD5CB
Unnamed_1_2A40:
        xor     eax, eax                                ; 2C80 _ 31. C0
        add     rsp, 32                                 ; 2C82 _ 48: 83. C4, 20
        pop     rbp                                     ; 2C86 _ 5D
        ret                                             ; 2C87 _ C3
_UefiRuntimeServicesTableLibConstructor ENDP

_UefiHiiServicesLibConstructor PROC
        push    rbp                                     ; 2C88 _ 55
        mov     rbp, rsp                                ; 2C89 _ 48: 89. E5
        push    rsi                                     ; 2C8C _ 56
        sub     rsp, 40                                 ; 2C8D _ 48: 83. EC, 28
        mov     rax, qword ptr [_gBS]                   ; 2C91 _ 48: 8B. 05, 000064B0(rel)
        lea     rcx, ptr [_gEfiHiiStringProtocolGuid]   ; 2C98 _ 48: 8D. 0D, 00006259(rel)
        lea     r8, ptr [_gHiiString]                   ; 2C9F _ 4C: 8D. 05, 000064BA(rel)
        xor     edx, edx                                ; 2CA6 _ 31. D2
        call    qword ptr [rax+140H]                    ; 2CA8 _ FF. 90, 00000140
        mov     rsi, rax                                ; 2CAE _ 48: 89. C6
        call    _DebugAssertEnabled                     ; 2CB1 _ E8, FFFFD596
        test    al, al                                  ; 2CB6 _ 84. C0
        jz      Unnamed_1_2AC2                          ; 2CB8 _ 74, 48
        test    rsi, rsi                                ; 2CBA _ 48: 85. F6
        jns     Unnamed_1_2AC2                          ; 2CBD _ 79, 43
        call    _DebugPrintEnabled                      ; 2CBF _ E8, FFFFD58B
        test    al, al                                  ; 2CC4 _ 84. C0
        jz      Unnamed_1_2AAA                          ; 2CC6 _ 74, 22
        mov     ecx, 2147483648                         ; 2CC8 _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 2CCD _ E8, FFFFD580
        test    al, al                                  ; 2CD2 _ 84. C0
        jz      Unnamed_1_2AAA                          ; 2CD4 _ 74, 14
        lea     rdx, ptr [?_317]                        ; 2CD6 _ 48: 8D. 15, 000035F0(rel)
        mov     ecx, 2147483648                         ; 2CDD _ B9, 80000000
        mov     r8, rsi                                 ; 2CE2 _ 49: 89. F0
        call    _DebugPrint                             ; 2CE5 _ E8, FFFFD556
Unnamed_1_2AAA:
        lea     rcx, ptr [?_383]                        ; 2CEA _ 48: 8D. 0D, 000044BD(rel)
        lea     r8, ptr [?_318]                         ; 2CF1 _ 4C: 8D. 05, 000035F6(rel)
        mov     edx, 88                                 ; 2CF8 _ BA, 00000058
        call    _DebugAssert                            ; 2CFD _ E8, FFFFD549
Unnamed_1_2AC2:
        mov     rax, qword ptr [_gBS]                   ; 2D02 _ 48: 8B. 05, 0000643F(rel)
        lea     rcx, ptr [_gEfiHiiDatabaseProtocolGuid] ; 2D09 _ 48: 8D. 0D, 00006208(rel)
        lea     r8, ptr [_gHiiDatabase]                 ; 2D10 _ 4C: 8D. 05, 00006459(rel)
        xor     edx, edx                                ; 2D17 _ 31. D2
        call    qword ptr [rax+140H]                    ; 2D19 _ FF. 90, 00000140
        mov     rsi, rax                                ; 2D1F _ 48: 89. C6
        call    _DebugAssertEnabled                     ; 2D22 _ E8, FFFFD525
        test    al, al                                  ; 2D27 _ 84. C0
        jz      Unnamed_1_2B33                          ; 2D29 _ 74, 48
        test    rsi, rsi                                ; 2D2B _ 48: 85. F6
        jns     Unnamed_1_2B33                          ; 2D2E _ 79, 43
        call    _DebugPrintEnabled                      ; 2D30 _ E8, FFFFD51A
        test    al, al                                  ; 2D35 _ 84. C0
        jz      Unnamed_1_2B1B                          ; 2D37 _ 74, 22
        mov     ecx, 2147483648                         ; 2D39 _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 2D3E _ E8, FFFFD50F
        test    al, al                                  ; 2D43 _ 84. C0
        jz      Unnamed_1_2B1B                          ; 2D45 _ 74, 14
        lea     rdx, ptr [?_317]                        ; 2D47 _ 48: 8D. 15, 0000357F(rel)
        mov     ecx, 2147483648                         ; 2D4E _ B9, 80000000
        mov     r8, rsi                                 ; 2D53 _ 49: 89. F0
        call    _DebugPrint                             ; 2D56 _ E8, FFFFD4E5
Unnamed_1_2B1B:
        lea     rcx, ptr [?_383]                        ; 2D5B _ 48: 8D. 0D, 0000444C(rel)
        lea     r8, ptr [?_318]                         ; 2D62 _ 4C: 8D. 05, 00003585(rel)
        mov     edx, 94                                 ; 2D69 _ BA, 0000005E
        call    _DebugAssert                            ; 2D6E _ E8, FFFFD4D8
Unnamed_1_2B33:
        mov     rax, qword ptr [_gBS]                   ; 2D73 _ 48: 8B. 05, 000063CE(rel)
        lea     rcx, ptr [_gEfiHiiConfigRoutingProtocolGuid]; 2D7A _ 48: 8D. 0D, 000061A7(rel)
        lea     r8, ptr [_gHiiConfigRouting]            ; 2D81 _ 4C: 8D. 05, 000063F0(rel)
        xor     edx, edx                                ; 2D88 _ 31. D2
        call    qword ptr [rax+140H]                    ; 2D8A _ FF. 90, 00000140
        mov     rsi, rax                                ; 2D90 _ 48: 89. C6
        call    _DebugAssertEnabled                     ; 2D93 _ E8, FFFFD4B4
        test    al, al                                  ; 2D98 _ 84. C0
        jz      Unnamed_1_2BA4                          ; 2D9A _ 74, 48
        test    rsi, rsi                                ; 2D9C _ 48: 85. F6
        jns     Unnamed_1_2BA4                          ; 2D9F _ 79, 43
        call    _DebugPrintEnabled                      ; 2DA1 _ E8, FFFFD4A9
        test    al, al                                  ; 2DA6 _ 84. C0
        jz      Unnamed_1_2B8C                          ; 2DA8 _ 74, 22
        mov     ecx, 2147483648                         ; 2DAA _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 2DAF _ E8, FFFFD49E
        test    al, al                                  ; 2DB4 _ 84. C0
        jz      Unnamed_1_2B8C                          ; 2DB6 _ 74, 14
        lea     rdx, ptr [?_317]                        ; 2DB8 _ 48: 8D. 15, 0000350E(rel)
        mov     ecx, 2147483648                         ; 2DBF _ B9, 80000000
        mov     r8, rsi                                 ; 2DC4 _ 49: 89. F0
        call    _DebugPrint                             ; 2DC7 _ E8, FFFFD474
Unnamed_1_2B8C:
        lea     rcx, ptr [?_383]                        ; 2DCC _ 48: 8D. 0D, 000043DB(rel)
        lea     r8, ptr [?_318]                         ; 2DD3 _ 4C: 8D. 05, 00003514(rel)
        mov     edx, 100                                ; 2DDA _ BA, 00000064
        call    _DebugAssert                            ; 2DDF _ E8, FFFFD467
Unnamed_1_2BA4:
        mov     rax, qword ptr [_gBS]                   ; 2DE4 _ 48: 8B. 05, 0000635D(rel)
        lea     rcx, ptr [_gEfiHiiFontProtocolGuid]     ; 2DEB _ 48: 8D. 0D, 000060F6(rel)
        lea     r8, ptr [_gHiiFont]                     ; 2DF2 _ 4C: 8D. 05, 0000635F(rel)
        xor     edx, edx                                ; 2DF9 _ 31. D2
        call    qword ptr [rax+140H]                    ; 2DFB _ FF. 90, 00000140
        mov     rax, qword ptr [_gBS]                   ; 2E01 _ 48: 8B. 05, 00006340(rel)
        lea     rcx, ptr [_gEfiHiiImageProtocolGuid]    ; 2E08 _ 48: 8D. 0D, 000060F9(rel)
        lea     r8, ptr [_gHiiImage]                    ; 2E0F _ 4C: 8D. 05, 00006352(rel)
        xor     edx, edx                                ; 2E16 _ 31. D2
        call    qword ptr [rax+140H]                    ; 2E18 _ FF. 90, 00000140
        xor     eax, eax                                ; 2E1E _ 31. C0
        add     rsp, 40                                 ; 2E20 _ 48: 83. C4, 28
        pop     rsi                                     ; 2E24 _ 5E
        pop     rbp                                     ; 2E25 _ 5D
        ret                                             ; 2E26 _ C3
_UefiHiiServicesLibConstructor ENDP

_InternalPrint PROC
        push    rbp                                     ; 2E27 _ 55
        mov     rbp, rsp                                ; 2E28 _ 48: 89. E5
        push    r15                                     ; 2E2B _ 41: 57
        push    r14                                     ; 2E2D _ 41: 56
        push    rsi                                     ; 2E2F _ 56
        push    rdi                                     ; 2E30 _ 57
        push    rbx                                     ; 2E31 _ 53
        sub     rsp, 40                                 ; 2E32 _ 48: 83. EC, 28
        mov     r14, r8                                 ; 2E36 _ 4D: 89. C6
        mov     rsi, rdx                                ; 2E39 _ 48: 89. D6
        mov     r15, rcx                                ; 2E3C _ 49: 89. CF
        call    _DebugAssertEnabled                     ; 2E3F _ E8, FFFFD408
        test    al, al                                  ; 2E44 _ 84. C0
        jz      Unnamed_1_2C25                          ; 2E46 _ 74, 1D
        test    r15, r15                                ; 2E48 _ 4D: 85. FF
        jnz     Unnamed_1_2C25                          ; 2E4B _ 75, 18
        lea     rcx, ptr [?_384]                        ; 2E4D _ 48: 8D. 0D, 000043CA(rel)
        lea     r8, ptr [?_385]                         ; 2E54 _ 4C: 8D. 05, 0000441C(rel)
        mov     edx, 67                                 ; 2E5B _ BA, 00000043
        call    _DebugAssert                            ; 2E60 _ E8, FFFFD3E6
Unnamed_1_2C25:
        call    _DebugAssertEnabled                     ; 2E65 _ E8, FFFFD3E2
        test    al, al                                  ; 2E6A _ 84. C0
        jz      Unnamed_1_2C4C                          ; 2E6C _ 74, 1E
        test    r15b, 01H                               ; 2E6E _ 41: F6. C7, 01
        jz      Unnamed_1_2C4C                          ; 2E72 _ 74, 18
        lea     rcx, ptr [?_384]                        ; 2E74 _ 48: 8D. 0D, 000043A3(rel)
        lea     r8, ptr [?_386]                         ; 2E7B _ 4C: 8D. 05, 0000440C(rel)
        mov     edx, 68                                 ; 2E82 _ BA, 00000044
        call    _DebugAssert                            ; 2E87 _ E8, FFFFD3BF
Unnamed_1_2C4C:
        call    _DebugAssertEnabled                     ; 2E8C _ E8, FFFFD3BB
        test    al, al                                  ; 2E91 _ 84. C0
        jz      Unnamed_1_2C72                          ; 2E93 _ 74, 1D
        test    rsi, rsi                                ; 2E95 _ 48: 85. F6
        jnz     Unnamed_1_2C72                          ; 2E98 _ 75, 18
        lea     rcx, ptr [?_384]                        ; 2E9A _ 48: 8D. 0D, 0000437D(rel)
        lea     r8, ptr [?_387]                         ; 2EA1 _ 4C: 8D. 05, 00004409(rel)
        mov     edx, 69                                 ; 2EA8 _ BA, 00000045
        call    _DebugAssert                            ; 2EAD _ E8, FFFFD399
Unnamed_1_2C72:
        mov     ebx, dword ptr [__gPcd_FixedAtBuild_PcdUefiLibMaxPrintBufferSize]; 2EB2 _ 8B. 1D, 00004B44(rel)
        inc     ebx                                     ; 2EB8 _ FF. C3
        add     rbx, rbx                                ; 2EBA _ 48: 01. DB
        mov     rcx, rbx                                ; 2EBD _ 48: 89. D9
        call    _AllocatePool                           ; 2EC0 _ E8, FFFFE79A
        mov     rdi, rax                                ; 2EC5 _ 48: 89. C7
        call    _DebugAssertEnabled                     ; 2EC8 _ E8, FFFFD37F
        test    al, al                                  ; 2ECD _ 84. C0
        jz      Unnamed_1_2CAE                          ; 2ECF _ 74, 1D
        test    rdi, rdi                                ; 2ED1 _ 48: 85. FF
        jnz     Unnamed_1_2CAE                          ; 2ED4 _ 75, 18
        lea     rcx, ptr [?_384]                        ; 2ED6 _ 48: 8D. 0D, 00004341(rel)
        lea     r8, ptr [?_319]                         ; 2EDD _ 4C: 8D. 05, 0000341E(rel)
        mov     edx, 74                                 ; 2EE4 _ BA, 0000004A
        call    _DebugAssert                            ; 2EE9 _ E8, FFFFD35D
Unnamed_1_2CAE:
        mov     rcx, rdi                                ; 2EEE _ 48: 89. F9
        mov     rdx, rbx                                ; 2EF1 _ 48: 89. DA
        mov     r8, r15                                 ; 2EF4 _ 4D: 89. F8
        mov     r9, r14                                 ; 2EF7 _ 4D: 89. F1
        call    _UnicodeVSPrint                         ; 2EFA _ E8, FFFFFB06
        mov     rbx, rax                                ; 2EFF _ 48: 89. C3
        test    rsi, rsi                                ; 2F02 _ 48: 85. F6
        jz      Unnamed_1_2CDE                          ; 2F05 _ 74, 17
        test    rbx, rbx                                ; 2F07 _ 48: 85. DB
        jz      Unnamed_1_2CDE                          ; 2F0A _ 74, 12
        mov     rcx, rsi                                ; 2F0C _ 48: 89. F1
        mov     rdx, rdi                                ; 2F0F _ 48: 89. FA
        call    qword ptr [rsi+8H]                      ; 2F12 _ FF. 56, 08
        xor     ecx, ecx                                ; 2F15 _ 31. C9
        test    rax, rax                                ; 2F17 _ 48: 85. C0
        cmovs   rbx, rcx                                ; 2F1A _ 48: 0F 48. D9
Unnamed_1_2CDE:
        mov     rcx, rdi                                ; 2F1E _ 48: 89. F9
        call    _FreePool                               ; 2F21 _ E8, FFFFE831
        mov     rax, rbx                                ; 2F26 _ 48: 89. D8
        add     rsp, 40                                 ; 2F29 _ 48: 83. C4, 28
        pop     rbx                                     ; 2F2D _ 5B
        pop     rdi                                     ; 2F2E _ 5F
        pop     rsi                                     ; 2F2F _ 5E
        pop     r14                                     ; 2F30 _ 41: 5E
        pop     r15                                     ; 2F32 _ 41: 5F
        pop     rbp                                     ; 2F34 _ 5D
        ret                                             ; 2F35 _ C3
_InternalPrint ENDP

_Print  PROC
        push    rbp                                     ; 2F36 _ 55
        mov     rbp, rsp                                ; 2F37 _ 48: 89. E5
        sub     rsp, 64                                 ; 2F3A _ 48: 83. EC, 40
        mov     qword ptr [rbp+28H], r9                 ; 2F3E _ 4C: 89. 4D, 28
        mov     qword ptr [rbp+20H], r8                 ; 2F42 _ 4C: 89. 45, 20
        mov     qword ptr [rbp+18H], rdx                ; 2F46 _ 48: 89. 55, 18
        lea     rax, ptr [rbp+18H]                      ; 2F4A _ 48: 8D. 45, 18
        mov     qword ptr [rbp-20H], rax                ; 2F4E _ 48: 89. 45, E0
        mov     rax, qword ptr [_gST]                   ; 2F52 _ 48: 8B. 05, 000061E7(rel)
        mov     rdx, qword ptr [rax+40H]                ; 2F59 _ 48: 8B. 50, 40
        lea     r8, ptr [rbp-20H]                       ; 2F5D _ 4C: 8D. 45, E0
        call    _InternalPrint                          ; 2F61 _ E8, FFFFFEC1
        add     rsp, 64                                 ; 2F66 _ 48: 83. C4, 40
        pop     rbp                                     ; 2F6A _ 5D
        ret                                             ; 2F6B _ C3
_Print  ENDP

_EfiGetNameGuidFromFwVolDevicePathNode PROC
        push    rbp                                     ; 2F6C _ 55
        mov     rbp, rsp                                ; 2F6D _ 48: 89. E5
        push    rsi                                     ; 2F70 _ 56
        sub     rsp, 40                                 ; 2F71 _ 48: 83. EC, 28
        mov     rsi, rcx                                ; 2F75 _ 48: 89. CE
        call    _DebugAssertEnabled                     ; 2F78 _ E8, FFFFD2CF
        test    al, al                                  ; 2F7D _ 84. C0
        jz      Unnamed_1_2D5E                          ; 2F7F _ 74, 1D
        test    rsi, rsi                                ; 2F81 _ 48: 85. F6
        jnz     Unnamed_1_2D5E                          ; 2F84 _ 75, 18
        lea     rcx, ptr [?_388]                        ; 2F86 _ 48: 8D. 0D, 0000433C(rel)
        lea     r8, ptr [?_389]                         ; 2F8D _ 4C: 8D. 05, 0000438E(rel)
        mov     edx, 290                                ; 2F94 _ BA, 00000122
        call    _DebugAssert                            ; 2F99 _ E8, FFFFD2AD
Unnamed_1_2D5E:
        mov     rcx, rsi                                ; 2F9E _ 48: 89. F1
        call    _DevicePathType                         ; 2FA1 _ E8, FFFFFBD8
        cmp     al, 4                                   ; 2FA6 _ 3C, 04
        jnz     ?_166                                   ; 2FA8 _ 75, 19
        mov     rcx, rsi                                ; 2FAA _ 48: 89. F1
        call    _DevicePathSubType                      ; 2FAD _ E8, FFFFFC08
        add     rsi, 4                                  ; 2FB2 _ 48: 83. C6, 04
        cmp     al, 6                                   ; 2FB6 _ 3C, 06
        mov     eax, 0                                  ; 2FB8 _ B8, 00000000
        cmove   rax, rsi                                ; 2FBD _ 48: 0F 44. C6
        jmp     ?_167                                   ; 2FC1 _ EB, 02

?_166:  xor     eax, eax                                ; 2FC3 _ 31. C0
?_167:  add     rsp, 40                                 ; 2FC5 _ 48: 83. C4, 28
        pop     rsi                                     ; 2FC9 _ 5E
        pop     rbp                                     ; 2FCA _ 5D
        ret                                             ; 2FCB _ C3
_EfiGetNameGuidFromFwVolDevicePathNode ENDP

_UefiLibConstructor PROC
        xor     eax, eax                                ; 2FCC _ 31. C0
        ret                                             ; 2FCE _ C3
_UefiLibConstructor ENDP

_EfiGetSystemConfigurationTable PROC
        push    rbp                                     ; 2FCF _ 55
        mov     rbp, rsp                                ; 2FD0 _ 48: 89. E5
        push    r15                                     ; 2FD3 _ 41: 57
        push    r14                                     ; 2FD5 _ 41: 56
        push    r12                                     ; 2FD7 _ 41: 54
        push    rsi                                     ; 2FD9 _ 56
        push    rdi                                     ; 2FDA _ 57
        push    rbx                                     ; 2FDB _ 53
        sub     rsp, 32                                 ; 2FDC _ 48: 83. EC, 20
        mov     r14, rdx                                ; 2FE0 _ 49: 89. D6
        mov     r15, rcx                                ; 2FE3 _ 49: 89. CF
        call    _DebugAssertEnabled                     ; 2FE6 _ E8, FFFFD261
        test    al, al                                  ; 2FEB _ 84. C0
        jz      Unnamed_1_2DCC                          ; 2FED _ 74, 1D
        test    r15, r15                                ; 2FEF _ 4D: 85. FF
        jnz     Unnamed_1_2DCC                          ; 2FF2 _ 75, 18
        lea     rcx, ptr [?_390]                        ; 2FF4 _ 48: 8D. 0D, 00004348(rel)
        lea     r8, ptr [?_391]                         ; 2FFB _ 4C: 8D. 05, 00004395(rel)
        mov     edx, 97                                 ; 3002 _ BA, 00000061
        call    _DebugAssert                            ; 3007 _ E8, FFFFD23F
Unnamed_1_2DCC:
        call    _DebugAssertEnabled                     ; 300C _ E8, FFFFD23B
        test    al, al                                  ; 3011 _ 84. C0
        jz      Unnamed_1_2DF2                          ; 3013 _ 74, 1D
        test    r14, r14                                ; 3015 _ 4D: 85. F6
        jnz     Unnamed_1_2DF2                          ; 3018 _ 75, 18
        lea     rcx, ptr [?_390]                        ; 301A _ 48: 8D. 0D, 00004322(rel)
        lea     r8, ptr [?_392]                         ; 3021 _ 4C: 8D. 05, 00004389(rel)
        mov     edx, 98                                 ; 3028 _ BA, 00000062
        call    _DebugAssert                            ; 302D _ E8, FFFFD219
Unnamed_1_2DF2:
        mov     r12, qword ptr [_gST]                   ; 3032 _ 4C: 8B. 25, 00006107(rel)
        mov     qword ptr [r14], 0                      ; 3039 _ 49: C7. 06, 00000000
        xor     ebx, ebx                                ; 3040 _ 31. DB
        mov     rsi, -1                                 ; 3042 _ 48: C7. C6, FFFFFFFF
?_168:  mov     rdi, rbx                                ; 3049 _ 48: 89. DF
        inc     rsi                                     ; 304C _ 48: FF. C6
        mov     rax, 800000000000000EH                  ; 304F _ 48: B8, 800000000000000E
        cmp     rsi, qword ptr [r12+68H]                ; 3059 _ 49: 3B. 74 24, 68
        jnc     ?_169                                   ; 305E _ 73, 27
        lea     rbx, ptr [rdi+18H]                      ; 3060 _ 48: 8D. 5F, 18
        mov     rdx, qword ptr [r12+70H]                ; 3064 _ 49: 8B. 54 24, 70
        add     rdx, rdi                                ; 3069 _ 48: 01. FA
        mov     rcx, r15                                ; 306C _ 4C: 89. F9
        call    _CompareGuid                            ; 306F _ E8, FFFFD4E9
        test    al, al                                  ; 3074 _ 84. C0
        jz      ?_168                                   ; 3076 _ 74, D1
        mov     rax, qword ptr [r12+70H]                ; 3078 _ 49: 8B. 44 24, 70
        mov     rax, qword ptr [rax+rdi+10H]            ; 307D _ 48: 8B. 44 38, 10
        mov     qword ptr [r14], rax                    ; 3082 _ 49: 89. 06
        xor     eax, eax                                ; 3085 _ 31. C0
?_169:  add     rsp, 32                                 ; 3087 _ 48: 83. C4, 20
        pop     rbx                                     ; 308B _ 5B
        pop     rdi                                     ; 308C _ 5F
        pop     rsi                                     ; 308D _ 5E
        pop     r12                                     ; 308E _ 41: 5C
        pop     r14                                     ; 3090 _ 41: 5E
        pop     r15                                     ; 3092 _ 41: 5F
        pop     rbp                                     ; 3094 _ 5D
        ret                                             ; 3095 _ C3
_EfiGetSystemConfigurationTable ENDP

_GetVariable2 PROC
        push    rbp                                     ; 3096 _ 55
        mov     rbp, rsp                                ; 3097 _ 48: 89. E5
        push    r15                                     ; 309A _ 41: 57
        push    r14                                     ; 309C _ 41: 56
        push    rsi                                     ; 309E _ 56
        push    rdi                                     ; 309F _ 57
        push    rbx                                     ; 30A0 _ 53
        sub     rsp, 56                                 ; 30A1 _ 48: 83. EC, 38
        mov     rsi, r9                                 ; 30A5 _ 4C: 89. CE
        mov     rdi, r8                                 ; 30A8 _ 4C: 89. C7
        mov     r14, rdx                                ; 30AB _ 49: 89. D6
        mov     r15, rcx                                ; 30AE _ 49: 89. CF
        call    _DebugAssertEnabled                     ; 30B1 _ E8, FFFFD196
        test    al, al                                  ; 30B6 _ 84. C0
        jz      Unnamed_1_2EA1                          ; 30B8 _ 74, 27
        test    r15, r15                                ; 30BA _ 4D: 85. FF
        jz      Unnamed_1_2E89                          ; 30BD _ 74, 0A
        test    r14, r14                                ; 30BF _ 4D: 85. F6
        jz      Unnamed_1_2E89                          ; 30C2 _ 74, 05
        test    rdi, rdi                                ; 30C4 _ 48: 85. FF
        jnz     Unnamed_1_2EA1                          ; 30C7 _ 75, 18
Unnamed_1_2E89:
        lea     rcx, ptr [?_390]                        ; 30C9 _ 48: 8D. 0D, 00004273(rel)
        lea     r8, ptr [?_393]                         ; 30D0 _ 4C: 8D. 05, 000042F0(rel)
        mov     edx, 1383                               ; 30D7 _ BA, 00000567
        call    _DebugAssert                            ; 30DC _ E8, FFFFD16A
Unnamed_1_2EA1:
        mov     qword ptr [rbp-30H], 0                  ; 30E1 _ 48: C7. 45, D0, 00000000
        mov     qword ptr [rdi], 0                      ; 30E9 _ 48: C7. 07, 00000000
        test    rsi, rsi                                ; 30F0 _ 48: 85. F6
        jz      ?_170                                   ; 30F3 _ 74, 07
        mov     qword ptr [rsi], 0                      ; 30F5 _ 48: C7. 06, 00000000
?_170:  mov     rax, qword ptr [_gRT]                   ; 30FC _ 48: 8B. 05, 0000604D(rel)
        mov     qword ptr [rsp+20H], 0                  ; 3103 _ 48: C7. 44 24, 20, 00000000
        lea     r9, ptr [rbp-30H]                       ; 310C _ 4C: 8D. 4D, D0
        mov     rcx, r15                                ; 3110 _ 4C: 89. F9
        mov     rdx, r14                                ; 3113 _ 4C: 89. F2
        xor     r8d, r8d                                ; 3116 _ 45: 31. C0
        call    qword ptr [rax+48H]                     ; 3119 _ FF. 50, 48
        mov     rbx, rax                                ; 311C _ 48: 89. C3
        mov     rax, 8000000000000005H                  ; 311F _ 48: B8, 8000000000000005
        cmp     rbx, rax                                ; 3129 _ 48: 39. C3
        jne     Unnamed_1_2F78                          ; 312C _ 0F 85, 00000086
        mov     rcx, qword ptr [rbp-30H]                ; 3132 _ 48: 8B. 4D, D0
        call    _AllocatePool                           ; 3136 _ E8, FFFFE524
        mov     qword ptr [rdi], rax                    ; 313B _ 48: 89. 07
        call    _DebugAssertEnabled                     ; 313E _ E8, FFFFD109
        test    al, al                                  ; 3143 _ 84. C0
        jz      ?_171                                   ; 3145 _ 74, 20
        mov     rax, qword ptr [rdi]                    ; 3147 _ 48: 8B. 07
        test    rax, rax                                ; 314A _ 48: 85. C0
        jnz     ?_172                                   ; 314D _ 75, 2A
        lea     rcx, ptr [?_390]                        ; 314F _ 48: 8D. 0D, 000041ED(rel)
        lea     r8, ptr [?_394]                         ; 3156 _ 4C: 8D. 05, 000042B0(rel)
        mov     edx, 1403                               ; 315D _ BA, 0000057B
        call    _DebugAssert                            ; 3162 _ E8, FFFFD0E4
?_171:  mov     rax, qword ptr [rdi]                    ; 3167 _ 48: 8B. 07
        mov     rbx, 8000000000000009H                  ; 316A _ 48: BB, 8000000000000009
        test    rax, rax                                ; 3174 _ 48: 85. C0
        jz      Unnamed_1_2F78                          ; 3177 _ 74, 3F
?_172:  mov     rbx, qword ptr [_gRT]                   ; 3179 _ 48: 8B. 1D, 00005FD0(rel)
        mov     qword ptr [rsp+20H], rax                ; 3180 _ 48: 89. 44 24, 20
        lea     r9, ptr [rbp-30H]                       ; 3185 _ 4C: 8D. 4D, D0
        mov     rcx, r15                                ; 3189 _ 4C: 89. F9
        mov     rdx, r14                                ; 318C _ 4C: 89. F2
        xor     r8d, r8d                                ; 318F _ 45: 31. C0
        call    qword ptr [rbx+48H]                     ; 3192 _ FF. 53, 48
        mov     rbx, rax                                ; 3195 _ 48: 89. C3
        test    rbx, rbx                                ; 3198 _ 48: 85. DB
        jns     ?_173                                   ; 319B _ 79, 0F
        mov     rcx, qword ptr [rdi]                    ; 319D _ 48: 8B. 0F
        call    _FreePool                               ; 31A0 _ E8, FFFFE5B2
        mov     qword ptr [rdi], 0                      ; 31A5 _ 48: C7. 07, 00000000
?_173:  test    rsi, rsi                                ; 31AC _ 48: 85. F6
        jz      Unnamed_1_2F78                          ; 31AF _ 74, 07
        mov     rax, qword ptr [rbp-30H]                ; 31B1 _ 48: 8B. 45, D0
        mov     qword ptr [rsi], rax                    ; 31B5 _ 48: 89. 06
Unnamed_1_2F78:
        mov     rax, rbx                                ; 31B8 _ 48: 89. D8
        add     rsp, 56                                 ; 31BB _ 48: 83. C4, 38
        pop     rbx                                     ; 31BF _ 5B
        pop     rdi                                     ; 31C0 _ 5F
        pop     rsi                                     ; 31C1 _ 5E
        pop     r14                                     ; 31C2 _ 41: 5E
        pop     r15                                     ; 31C4 _ 41: 5F
        pop     rbp                                     ; 31C6 _ 5D
        ret                                             ; 31C7 _ C3
_GetVariable2 ENDP

_GetEfiGlobalVariable2 PROC
        mov     r9, r8                                  ; 31C8 _ 4D: 89. C1
        mov     rax, rdx                                ; 31CB _ 48: 89. D0
        lea     rdx, ptr [_gEfiGlobalVariableGuid]      ; 31CE _ 48: 8D. 15, 00005CB3(rel)
        mov     r8, rax                                 ; 31D5 _ 49: 89. C0
        jmp     _GetVariable2                           ; 31D8 _ E9, FFFFFEB9
_GetEfiGlobalVariable2 ENDP

_GetBestLanguage PROC
        push    rbp                                     ; 31DD _ 55
        mov     rbp, rsp                                ; 31DE _ 48: 89. E5
        push    r15                                     ; 31E1 _ 41: 57
        push    r14                                     ; 31E3 _ 41: 56
        push    r12                                     ; 31E5 _ 41: 54
        push    rsi                                     ; 31E7 _ 56
        push    rdi                                     ; 31E8 _ 57
        push    rbx                                     ; 31E9 _ 53
        sub     rsp, 64                                 ; 31EA _ 48: 83. EC, 40
        mov     esi, edx                                ; 31EE _ 89. D6
        mov     r14, rcx                                ; 31F0 _ 49: 89. CE
        mov     qword ptr [rbp+28H], r9                 ; 31F3 _ 4C: 89. 4D, 28
        mov     qword ptr [rbp+20H], r8                 ; 31F7 _ 4C: 89. 45, 20
        call    _DebugAssertEnabled                     ; 31FB _ E8, FFFFD04C
        test    al, al                                  ; 3200 _ 84. C0
        jz      Unnamed_1_2FE1                          ; 3202 _ 74, 1D
        test    r14, r14                                ; 3204 _ 4D: 85. F6
        jnz     Unnamed_1_2FE1                          ; 3207 _ 75, 18
        lea     rcx, ptr [?_390]                        ; 3209 _ 48: 8D. 0D, 00004133(rel)
        lea     r8, ptr [?_395]                         ; 3210 _ 4C: 8D. 05, 0000420D(rel)
        mov     edx, 1510                               ; 3217 _ BA, 000005E6
        call    _DebugAssert                            ; 321C _ E8, FFFFD02A
Unnamed_1_2FE1:
        lea     rax, ptr [rbp+20H]                      ; 3221 _ 48: 8D. 45, 20
        mov     qword ptr [rbp-50H], rax                ; 3225 _ 48: 89. 45, B0
        jmp     ?_175                                   ; 3229 _ EB, 2D

Unnamed_1_2FEB:
        xor     eax, eax                                ; 322B _ 31. C0
        test    sil, sil                                ; 322D _ 40: 84. F6
        jnz     Unnamed_1_300D                          ; 3230 _ 75, 1B
?_174:  lea     rcx, ptr [r12-1H]                       ; 3232 _ 49: 8D. 4C 24, FF
        xor     eax, eax                                ; 3237 _ 31. C0
        cmp     r12, 1                                  ; 3239 _ 49: 83. FC, 01
        jz      Unnamed_1_300D                          ; 323D _ 74, 0E
        cmp     byte ptr [r15+r12-1H], 45               ; 323F _ 43: 80. 7C 27, FF, 2D
        mov     r12, rcx                                ; 3245 _ 49: 89. CC
        jnz     ?_174                                   ; 3248 _ 75, E8
        mov     rax, rcx                                ; 324A _ 48: 89. C8
Unnamed_1_300D:
        mov     r12, rax                                ; 324D _ 49: 89. C4
        test    r12, r12                                ; 3250 _ 4D: 85. E4
        mov     rbx, r14                                ; 3253 _ 4C: 89. F3
        jnz     ?_180                                   ; 3256 _ 75, 5B
?_175:  mov     rax, qword ptr [rbp-50H]                ; 3258 _ 48: 8B. 45, B0
        lea     rcx, ptr [rax+8H]                       ; 325C _ 48: 8D. 48, 08
        mov     qword ptr [rbp-50H], rcx                ; 3260 _ 48: 89. 4D, B0
        mov     r15, qword ptr [rax]                    ; 3264 _ 4C: 8B. 38
        test    r15, r15                                ; 3267 _ 4D: 85. FF
        je      ?_185                                   ; 326A _ 0F 84, 000000A9
        mov     rcx, r15                                ; 3270 _ 4C: 89. F9
        call    _AsciiStrLen                            ; 3273 _ E8, FFFFD6F2
        mov     rcx, rax                                ; 3278 _ 48: 89. C1
        mov     eax, 3                                  ; 327B _ B8, 00000003
        cmp     rcx, 3                                  ; 3280 _ 48: 83. F9, 03
        ja      ?_176                                   ; 3284 _ 77, 08
        mov     rcx, r15                                ; 3286 _ 4C: 89. F9
        call    _AsciiStrLen                            ; 3289 _ E8, FFFFD6DC
?_176:  xor     ecx, ecx                                ; 328E _ 31. C9
        test    sil, sil                                ; 3290 _ 40: 84. F6
        jnz     ?_179                                   ; 3293 _ 75, 14
        jmp     ?_177                                   ; 3295 _ EB, 07

Unnamed_1_3057:
        cmp     al, 59                                  ; 3297 _ 3C, 3B
        jz      ?_178                                   ; 3299 _ 74, 0B
        inc     rcx                                     ; 329B _ 48: FF. C1
?_177:  mov     al, byte ptr [r15+rcx]                  ; 329E _ 41: 8A. 04 0F
        test    al, al                                  ; 32A2 _ 84. C0
        jnz     Unnamed_1_3057                          ; 32A4 _ 75, F1
?_178:  mov     rax, rcx                                ; 32A6 _ 48: 89. C8
?_179:  mov     edi, 3                                  ; 32A9 _ BF, 00000003
        jmp     Unnamed_1_300D                          ; 32AE _ EB, 9D

Unnamed_1_3070:
        add     rbx, rdi                                ; 32B0 _ 48: 01. FB
?_180:  mov     al, byte ptr [rbx]                      ; 32B3 _ 8A. 03
        test    al, al                                  ; 32B5 _ 84. C0
        je      Unnamed_1_2FEB                          ; 32B7 _ 0F 84, FFFFFF6E
        test    sil, sil                                ; 32BD _ 40: 84. F6
        jz      ?_181                                   ; 32C0 _ 74, 08
        jmp     ?_184                                   ; 32C2 _ EB, 22

Unnamed_1_3084:
        mov     al, byte ptr [rbx+1H]                   ; 32C4 _ 8A. 43, 01
        inc     rbx                                     ; 32C7 _ 48: FF. C3
?_181:  cmp     al, 59                                  ; 32CA _ 3C, 3B
        jz      Unnamed_1_3084                          ; 32CC _ 74, F6
        xor     edi, edi                                ; 32CE _ 31. FF
        jmp     ?_182                                   ; 32D0 _ EB, 07

Unnamed_1_3092:
        mov     al, byte ptr [rbx+rdi+1H]               ; 32D2 _ 8A. 44 3B, 01
        inc     rdi                                     ; 32D6 _ 48: FF. C7
?_182:  test    al, al                                  ; 32D9 _ 84. C0
        jz      ?_183                                   ; 32DB _ 74, 04
        cmp     al, 59                                  ; 32DD _ 3C, 3B
        jnz     Unnamed_1_3092                          ; 32DF _ 75, F1
?_183:  cmp     r12, rdi                                ; 32E1 _ 49: 39. FC
        ja      Unnamed_1_3070                          ; 32E4 _ 77, CA
?_184:  mov     rcx, rbx                                ; 32E6 _ 48: 89. D9
        mov     rdx, r15                                ; 32E9 _ 4C: 89. FA
        mov     r8, r12                                 ; 32EC _ 4D: 89. E0
        call    _AsciiStrnCmp                           ; 32EF _ E8, FFFFD87B
        test    rax, rax                                ; 32F4 _ 48: 85. C0
        jnz     Unnamed_1_3070                          ; 32F7 _ 75, B7
        lea     rcx, ptr [rdi+1H]                       ; 32F9 _ 48: 8D. 4F, 01
        call    _AllocateZeroPool                       ; 32FD _ E8, FFFFE39D
        mov     rcx, rax                                ; 3302 _ 48: 89. C1
        xor     eax, eax                                ; 3305 _ 31. C0
        test    rcx, rcx                                ; 3307 _ 48: 85. C9
        jz      Unnamed_1_30DB                          ; 330A _ 74, 0F
        mov     rdx, rbx                                ; 330C _ 48: 89. DA
        mov     r8, rdi                                 ; 330F _ 49: 89. F8
        call    _CopyMem                                ; 3312 _ E8, FFFFD12D
        jmp     Unnamed_1_30DB                          ; 3317 _ EB, 02

?_185:  xor     eax, eax                                ; 3319 _ 31. C0
Unnamed_1_30DB:
        add     rsp, 64                                 ; 331B _ 48: 83. C4, 40
        pop     rbx                                     ; 331F _ 5B
        pop     rdi                                     ; 3320 _ 5F
        pop     rsi                                     ; 3321 _ 5E
        pop     r12                                     ; 3322 _ 41: 5C
        pop     r14                                     ; 3324 _ 41: 5E
        pop     r15                                     ; 3326 _ 41: 5F
        pop     rbp                                     ; 3328 _ 5D
        ret                                             ; 3329 _ C3
_GetBestLanguage ENDP

        nop                                             ; 332A _ 90
        nop                                             ; 332B _ 90

_HiiAddPackages PROC
        push    rbp                                     ; 332C _ 55
        mov     rbp, rsp                                ; 332D _ 48: 89. E5
        push    r15                                     ; 3330 _ 41: 57
        push    r14                                     ; 3332 _ 41: 56
        push    r12                                     ; 3334 _ 41: 54
        push    rsi                                     ; 3336 _ 56
        push    rdi                                     ; 3337 _ 57
        push    rbx                                     ; 3338 _ 53
        sub     rsp, 80                                 ; 3339 _ 48: 83. EC, 50
        mov     r14, rdx                                ; 333D _ 49: 89. D6
        mov     rbx, rcx                                ; 3340 _ 48: 89. CB
        mov     qword ptr [rbp+28H], r9                 ; 3343 _ 4C: 89. 4D, 28
        mov     qword ptr [rbp+20H], r8                 ; 3347 _ 4C: 89. 45, 20
        call    _DebugAssertEnabled                     ; 334B _ E8, FFFFCEFC
        test    al, al                                  ; 3350 _ 84. C0
        jz      Unnamed_1_3131                          ; 3352 _ 74, 1D
        test    rbx, rbx                                ; 3354 _ 48: 85. DB
        jnz     Unnamed_1_3131                          ; 3357 _ 75, 18
        lea     rcx, ptr [?_396]                        ; 3359 _ 48: 8D. 0D, 000040E7(rel)
        lea     r8, ptr [?_397]                         ; 3360 _ 4C: 8D. 05, 0000413C(rel)
        mov     edx, 160                                ; 3367 _ BA, 000000A0
        call    _DebugAssert                            ; 336C _ E8, FFFFCEDA
Unnamed_1_3131:
        lea     r12, ptr [rbp+20H]                      ; 3371 _ 4C: 8D. 65, 20
        mov     qword ptr [rbp-50H], r12                ; 3375 _ 4C: 89. 65, B0
        lea     rdi, ptr [rbp+28H]                      ; 3379 _ 48: 8D. 7D, 28
        mov     qword ptr [rbp-50H], rdi                ; 337D _ 48: 89. 7D, B0
        mov     rcx, qword ptr [rbp+20H]                ; 3381 _ 48: 8B. 4D, 20
        test    rcx, rcx                                ; 3385 _ 48: 85. C9
        je      ?_189                                   ; 3388 _ 0F 84, 000000EC
        xor     esi, esi                                ; 338E _ 31. F6
?_186:  call    _ReadUnaligned32                        ; 3390 _ E8, FFFFDCCF
        mov     rcx, qword ptr [rbp-50H]                ; 3395 _ 48: 8B. 4D, B0
        lea     rdx, ptr [rcx+8H]                       ; 3399 _ 48: 8D. 51, 08
        mov     qword ptr [rbp-50H], rdx                ; 339D _ 48: 89. 55, B0
        lea     esi, ptr [rsi+rax-4H]                   ; 33A1 _ 8D. 74 06, FC
        mov     rcx, qword ptr [rcx]                    ; 33A5 _ 48: 8B. 09
        test    rcx, rcx                                ; 33A8 _ 48: 85. C9
        jnz     ?_186                                   ; 33AB _ 75, E3
        xor     eax, eax                                ; 33AD _ 31. C0
        test    esi, esi                                ; 33AF _ 85. F6
        je      Unnamed_1_322B                          ; 33B1 _ 0F 84, 000000B4
        add     esi, 24                                 ; 33B7 _ 83. C6, 18
        mov     rcx, rsi                                ; 33BA _ 48: 89. F1
        call    _AllocateZeroPool                       ; 33BD _ E8, FFFFE2DD
        mov     r15, rax                                ; 33C2 _ 49: 89. C7
        xor     eax, eax                                ; 33C5 _ 31. C0
        test    r15, r15                                ; 33C7 _ 4D: 85. FF
        je      Unnamed_1_322B                          ; 33CA _ 0F 84, 0000009B
        mov     rcx, r15                                ; 33D0 _ 4C: 89. F9
        mov     rdx, rbx                                ; 33D3 _ 48: 89. DA
        call    _CopyGuid                               ; 33D6 _ E8, FFFFD13F
        mov     dword ptr [r15+10H], esi                ; 33DB _ 41: 89. 77, 10
        mov     qword ptr [rbp-50H], r12                ; 33DF _ 4C: 89. 65, B0
        mov     qword ptr [rbp-50H], rdi                ; 33E3 _ 48: 89. 7D, B0
        lea     rsi, ptr [r15+14H]                      ; 33E7 _ 49: 8D. 77, 14
        mov     rbx, qword ptr [rbp+20H]                ; 33EB _ 48: 8B. 5D, 20
        jmp     ?_187                                   ; 33EF _ EB, 31

Unnamed_1_31B1:
        mov     rcx, rbx                                ; 33F1 _ 48: 89. D9
        call    _ReadUnaligned32                        ; 33F4 _ E8, FFFFDC6B
        mov     edi, eax                                ; 33F9 _ 89. C7
        add     rbx, 4                                  ; 33FB _ 48: 83. C3, 04
        add     edi, -4                                 ; 33FF _ 83. C7, FC
        mov     rcx, rsi                                ; 3402 _ 48: 89. F1
        mov     rdx, rbx                                ; 3405 _ 48: 89. DA
        mov     r8, rdi                                 ; 3408 _ 49: 89. F8
        call    _CopyMem                                ; 340B _ E8, FFFFD034
        mov     rax, qword ptr [rbp-50H]                ; 3410 _ 48: 8B. 45, B0
        lea     rcx, ptr [rax+8H]                       ; 3414 _ 48: 8D. 48, 08
        mov     qword ptr [rbp-50H], rcx                ; 3418 _ 48: 89. 4D, B0
        add     rsi, rdi                                ; 341C _ 48: 01. FE
        mov     rbx, qword ptr [rax]                    ; 341F _ 48: 8B. 18
?_187:  test    rbx, rbx                                ; 3422 _ 48: 85. DB
        jnz     Unnamed_1_31B1                          ; 3425 _ 75, CA
        lea     rdx, ptr [_mEndOfPakageList]            ; 3427 _ 48: 8D. 15, 000045C2(rel)
        mov     rcx, rsi                                ; 342E _ 48: 89. F1
        mov     r8d, 4                                  ; 3431 _ 41: B8, 00000004
        call    _CopyMem                                ; 3437 _ E8, FFFFD008
        mov     rax, qword ptr [_gHiiDatabase]          ; 343C _ 48: 8B. 05, 00005D2D(rel)
        lea     r9, ptr [rbp-58H]                       ; 3443 _ 4C: 8D. 4D, A8
        mov     rcx, rax                                ; 3447 _ 48: 89. C1
        mov     rdx, r15                                ; 344A _ 4C: 89. FA
        mov     r8, r14                                 ; 344D _ 4D: 89. F0
        call    qword ptr [rax]                         ; 3450 _ FF. 10
        test    rax, rax                                ; 3452 _ 48: 85. C0
        jns     ?_188                                   ; 3455 _ 79, 08
        mov     qword ptr [rbp-58H], 0                  ; 3457 _ 48: C7. 45, A8, 00000000
?_188:  mov     rcx, r15                                ; 345F _ 4C: 89. F9
        call    _FreePool                               ; 3462 _ E8, FFFFE2F0
        mov     rax, qword ptr [rbp-58H]                ; 3467 _ 48: 8B. 45, A8
Unnamed_1_322B:
        add     rsp, 80                                 ; 346B _ 48: 83. C4, 50
        pop     rbx                                     ; 346F _ 5B
        pop     rdi                                     ; 3470 _ 5F
        pop     rsi                                     ; 3471 _ 5E
        pop     r12                                     ; 3472 _ 41: 5C
        pop     r14                                     ; 3474 _ 41: 5E
        pop     r15                                     ; 3476 _ 41: 5F
        pop     rbp                                     ; 3478 _ 5D
        ret                                             ; 3479 _ C3
_HiiAddPackages ENDP

?_189   LABEL NEAR
        xor     eax, eax                                ; 347A _ 31. C0
        jmp     Unnamed_1_322B                          ; 347C _ EB, ED

_HiiGetString PROC
        push    rbp                                     ; 347E _ 55
        mov     rbp, rsp                                ; 347F _ 48: 89. E5
        push    r15                                     ; 3482 _ 41: 57
        push    r14                                     ; 3484 _ 41: 56
        push    r13                                     ; 3486 _ 41: 55
        push    r12                                     ; 3488 _ 41: 54
        push    rsi                                     ; 348A _ 56
        push    rdi                                     ; 348B _ 57
        push    rbx                                     ; 348C _ 53
        sub     rsp, 88                                 ; 348D _ 48: 83. EC, 58
        mov     r12, r8                                 ; 3491 _ 4D: 89. C4
        mov     ebx, edx                                ; 3494 _ 89. D3
        mov     r14, rcx                                ; 3496 _ 49: 89. CE
        call    _DebugAssertEnabled                     ; 3499 _ E8, FFFFCDAE
        test    al, al                                  ; 349E _ 84. C0
        jz      Unnamed_1_327F                          ; 34A0 _ 74, 1D
        test    r14, r14                                ; 34A2 _ 4D: 85. F6
        jnz     Unnamed_1_327F                          ; 34A5 _ 75, 18
        lea     rcx, ptr [?_399]                        ; 34A7 _ 48: 8D. 0D, 0000402F(rel)
        lea     r8, ptr [?_398]                         ; 34AE _ 4C: 8D. 05, 0000400E(rel)
        mov     edx, 238                                ; 34B5 _ BA, 000000EE
        call    _DebugAssert                            ; 34BA _ E8, FFFFCD8C
Unnamed_1_327F:
        call    _DebugAssertEnabled                     ; 34BF _ E8, FFFFCD88
        test    al, al                                  ; 34C4 _ 84. C0
        jz      Unnamed_1_32A5                          ; 34C6 _ 74, 1D
        test    bx, bx                                  ; 34C8 _ 66: 85. DB
        jnz     Unnamed_1_32A5                          ; 34CB _ 75, 18
        lea     rcx, ptr [?_399]                        ; 34CD _ 48: 8D. 0D, 00004009(rel)
        lea     r8, ptr [?_400]                         ; 34D4 _ 4C: 8D. 05, 00004061(rel)
        mov     edx, 239                                ; 34DB _ BA, 000000EF
        call    _DebugAssert                            ; 34E0 _ E8, FFFFCD66
Unnamed_1_32A5:
        mov     qword ptr [rbp-50H], 0                  ; 34E5 _ 48: C7. 45, B0, 00000000
        mov     rcx, r14                                ; 34ED _ 4C: 89. F1
        call    _HiiGetSupportedLanguages               ; 34F0 _ E8, 0000013F
        mov     r15, rax                                ; 34F5 _ 49: 89. C7
        xor     r13d, r13d                              ; 34F8 _ 45: 31. ED
        test    r15, r15                                ; 34FB _ 4D: 85. FF
        mov     edi, 0                                  ; 34FE _ BF, 00000000
        je      ?_191                                   ; 3503 _ 0F 84, 000000FC
        lea     rcx, ptr [?_426]                        ; 3509 _ 48: 8D. 0D, 000044F6(rel)
        lea     rdx, ptr [rbp-50H]                      ; 3510 _ 48: 8D. 55, B0
        xor     r13d, r13d                              ; 3514 _ 45: 31. ED
        xor     r8d, r8d                                ; 3517 _ 45: 31. C0
        call    _GetEfiGlobalVariable2                  ; 351A _ E8, FFFFFCA9
        mov     rax, qword ptr [rbp-50H]                ; 351F _ 48: 8B. 45, B0
        mov     qword ptr [rsp+20H], r15                ; 3523 _ 4C: 89. 7C 24, 20
        mov     qword ptr [rsp+28H], 0                  ; 3528 _ 48: C7. 44 24, 28, 00000000
        lea     r9, ptr [?_401]                         ; 3531 _ 4C: 8D. 0D, 00004012(rel)
        test    r12, r12                                ; 3538 _ 4D: 85. E4
        cmove   r12, r9                                 ; 353B _ 4D: 0F 44. E1
        test    rax, rax                                ; 353F _ 48: 85. C0
        cmovne  r9, rax                                 ; 3542 _ 4C: 0F 45. C8
        mov     rcx, r15                                ; 3546 _ 4C: 89. F9
        xor     edx, edx                                ; 3549 _ 31. D2
        mov     r8, r12                                 ; 354B _ 4D: 89. E0
        call    _GetBestLanguage                        ; 354E _ E8, FFFFFC8A
        mov     rsi, rax                                ; 3553 _ 48: 89. C6
        test    rsi, rsi                                ; 3556 _ 48: 85. F6
        mov     edi, 0                                  ; 3559 _ BF, 00000000
        je      ?_190                                   ; 355E _ 0F 84, 00000099
        mov     qword ptr [rbp-40H], 0                  ; 3564 _ 48: C7. 45, C0, 00000000
        mov     rax, qword ptr [_gHiiString]            ; 356C _ 48: 8B. 05, 00005BED(rel)
        lea     r12, ptr [rbp-40H]                      ; 3573 _ 4C: 8D. 65, C0
        mov     qword ptr [rsp+28H], r12                ; 3577 _ 4C: 89. 64 24, 28
        lea     rcx, ptr [rbp-42H]                      ; 357C _ 48: 8D. 4D, BE
        mov     qword ptr [rsp+20H], rcx                ; 3580 _ 48: 89. 4C 24, 20
        mov     qword ptr [rsp+30H], 0                  ; 3585 _ 48: C7. 44 24, 30, 00000000
        movzx   ebx, bx                                 ; 358E _ 0F B7. DB
        mov     rcx, rax                                ; 3591 _ 48: 89. C1
        mov     rdx, rsi                                ; 3594 _ 48: 89. F2
        mov     r8, r14                                 ; 3597 _ 4D: 89. F0
        mov     r9d, ebx                                ; 359A _ 41: 89. D9
        call    qword ptr [rax+8H]                      ; 359D _ FF. 50, 08
        xor     edi, edi                                ; 35A0 _ 31. FF
        mov     rcx, 8000000000000005H                  ; 35A2 _ 48: B9, 8000000000000005
        cmp     rax, rcx                                ; 35AC _ 48: 39. C8
        jnz     Unnamed_1_33BA                          ; 35AF _ 75, 49
        mov     rcx, qword ptr [rbp-40H]                ; 35B1 _ 48: 8B. 4D, C0
        call    _AllocateZeroPool                       ; 35B5 _ E8, FFFFE0E5
        mov     rdi, rax                                ; 35BA _ 48: 89. C7
        test    rdi, rdi                                ; 35BD _ 48: 85. FF
        jz      Unnamed_1_33BA                          ; 35C0 _ 74, 38
        mov     rax, qword ptr [_gHiiString]            ; 35C2 _ 48: 8B. 05, 00005B97(rel)
        mov     qword ptr [rsp+28H], r12                ; 35C9 _ 4C: 89. 64 24, 28
        mov     qword ptr [rsp+20H], rdi                ; 35CE _ 48: 89. 7C 24, 20
        mov     qword ptr [rsp+30H], 0                  ; 35D3 _ 48: C7. 44 24, 30, 00000000
        mov     rcx, rax                                ; 35DC _ 48: 89. C1
        mov     rdx, rsi                                ; 35DF _ 48: 89. F2
        mov     r8, r14                                 ; 35E2 _ 4D: 89. F0
        mov     r9d, ebx                                ; 35E5 _ 41: 89. D9
        call    qword ptr [rax+8H]                      ; 35E8 _ FF. 50, 08
        test    rax, rax                                ; 35EB _ 48: 85. C0
        jns     Unnamed_1_33BA                          ; 35EE _ 79, 0A
        mov     rcx, rdi                                ; 35F0 _ 48: 89. F9
        call    _FreePool                               ; 35F3 _ E8, FFFFE15F
        xor     edi, edi                                ; 35F8 _ 31. FF
Unnamed_1_33BA:
        mov     r13, rsi                                ; 35FA _ 49: 89. F5
?_190:  mov     rcx, r15                                ; 35FD _ 4C: 89. F9
        call    _FreePool                               ; 3600 _ E8, FFFFE152
?_191:  mov     rcx, qword ptr [rbp-50H]                ; 3605 _ 48: 8B. 4D, B0
        test    rcx, rcx                                ; 3609 _ 48: 85. C9
        jz      ?_192                                   ; 360C _ 74, 05
        call    _FreePool                               ; 360E _ E8, FFFFE144
?_192:  test    r13, r13                                ; 3613 _ 4D: 85. ED
        jz      ?_193                                   ; 3616 _ 74, 08
        mov     rcx, r13                                ; 3618 _ 4C: 89. E9
        call    _FreePool                               ; 361B _ E8, FFFFE137
?_193:  mov     rax, rdi                                ; 3620 _ 48: 89. F8
        add     rsp, 88                                 ; 3623 _ 48: 83. C4, 58
        pop     rbx                                     ; 3627 _ 5B
        pop     rdi                                     ; 3628 _ 5F
        pop     rsi                                     ; 3629 _ 5E
        pop     r12                                     ; 362A _ 41: 5C
        pop     r13                                     ; 362C _ 41: 5D
        pop     r14                                     ; 362E _ 41: 5E
        pop     r15                                     ; 3630 _ 41: 5F
        pop     rbp                                     ; 3632 _ 5D
        ret                                             ; 3633 _ C3
_HiiGetString ENDP

_HiiGetSupportedLanguages PROC
        push    rbp                                     ; 3634 _ 55
        mov     rbp, rsp                                ; 3635 _ 48: 89. E5
        push    rsi                                     ; 3638 _ 56
        push    rdi                                     ; 3639 _ 57
        sub     rsp, 48                                 ; 363A _ 48: 83. EC, 30
        mov     rsi, rcx                                ; 363E _ 48: 89. CE
        call    _DebugAssertEnabled                     ; 3641 _ E8, FFFFCC06
        test    al, al                                  ; 3646 _ 84. C0
        jz      Unnamed_1_3427                          ; 3648 _ 74, 1D
        test    rsi, rsi                                ; 364A _ 48: 85. F6
        jnz     Unnamed_1_3427                          ; 364D _ 75, 18
        lea     rcx, ptr [?_402]                        ; 364F _ 48: 8D. 0D, 00003EF5(rel)
        lea     r8, ptr [?_398]                         ; 3656 _ 4C: 8D. 05, 00003E66(rel)
        mov     edx, 47                                 ; 365D _ BA, 0000002F
        call    _DebugAssert                            ; 3662 _ E8, FFFFCBE4
Unnamed_1_3427:
        mov     qword ptr [rbp-18H], 0                  ; 3667 _ 48: C7. 45, E8, 00000000
        mov     rax, qword ptr [_gHiiString]            ; 366F _ 48: 8B. 05, 00005AEA(rel)
        lea     r8, ptr [rbp-19H]                       ; 3676 _ 4C: 8D. 45, E7
        lea     r9, ptr [rbp-18H]                       ; 367A _ 4C: 8D. 4D, E8
        mov     rcx, rax                                ; 367E _ 48: 89. C1
        mov     rdx, rsi                                ; 3681 _ 48: 89. F2
        call    qword ptr [rax+18H]                     ; 3684 _ FF. 50, 18
        mov     rcx, rax                                ; 3687 _ 48: 89. C1
        xor     eax, eax                                ; 368A _ 31. C0
        mov     rdx, 8000000000000005H                  ; 368C _ 48: BA, 8000000000000005
        cmp     rcx, rdx                                ; 3696 _ 48: 39. D1
        jnz     Unnamed_1_3499                          ; 3699 _ 75, 3E
        mov     rcx, qword ptr [rbp-18H]                ; 369B _ 48: 8B. 4D, E8
        call    _AllocateZeroPool                       ; 369F _ E8, FFFFDFFB
        mov     rdi, rax                                ; 36A4 _ 48: 89. C7
        xor     eax, eax                                ; 36A7 _ 31. C0
        test    rdi, rdi                                ; 36A9 _ 48: 85. FF
        jz      Unnamed_1_3499                          ; 36AC _ 74, 2B
        mov     rax, qword ptr [_gHiiString]            ; 36AE _ 48: 8B. 05, 00005AAB(rel)
        lea     r9, ptr [rbp-18H]                       ; 36B5 _ 4C: 8D. 4D, E8
        mov     rcx, rax                                ; 36B9 _ 48: 89. C1
        mov     rdx, rsi                                ; 36BC _ 48: 89. F2
        mov     r8, rdi                                 ; 36BF _ 49: 89. F8
        call    qword ptr [rax+18H]                     ; 36C2 _ FF. 50, 18
        test    rax, rax                                ; 36C5 _ 48: 85. C0
        js      ?_194                                   ; 36C8 _ 78, 05
        mov     rax, rdi                                ; 36CA _ 48: 89. F8
        jmp     Unnamed_1_3499                          ; 36CD _ EB, 0A

?_194:  mov     rcx, rdi                                ; 36CF _ 48: 89. F9
        call    _FreePool                               ; 36D2 _ E8, FFFFE080
        xor     eax, eax                                ; 36D7 _ 31. C0
Unnamed_1_3499:
        add     rsp, 48                                 ; 36D9 _ 48: 83. C4, 30
        pop     rdi                                     ; 36DD _ 5F
        pop     rsi                                     ; 36DE _ 5E
        pop     rbp                                     ; 36DF _ 5D
        ret                                             ; 36E0 _ C3
_HiiGetSupportedLanguages ENDP

_DxeServicesTableLibConstructor PROC
        push    rbp                                     ; 36E1 _ 55
        mov     rbp, rsp                                ; 36E2 _ 48: 89. E5
        push    rsi                                     ; 36E5 _ 56
        sub     rsp, 40                                 ; 36E6 _ 48: 83. EC, 28
        lea     rcx, ptr [_gEfiDxeServicesTableGuid]    ; 36EA _ 48: 8D. 0D, 000057A7(rel)
        lea     rdx, ptr [_gDS]                         ; 36F1 _ 48: 8D. 15, 00005A88(rel)
        call    _EfiGetSystemConfigurationTable         ; 36F8 _ E8, FFFFF8D2
        mov     rsi, rax                                ; 36FD _ 48: 89. C6
        call    _DebugAssertEnabled                     ; 3700 _ E8, FFFFCB47
        test    al, al                                  ; 3705 _ 84. C0
        jz      Unnamed_1_3511                          ; 3707 _ 74, 48
        test    rsi, rsi                                ; 3709 _ 48: 85. F6
        jns     Unnamed_1_3511                          ; 370C _ 79, 43
        call    _DebugPrintEnabled                      ; 370E _ E8, FFFFCB3C
        test    al, al                                  ; 3713 _ 84. C0
        jz      Unnamed_1_34F9                          ; 3715 _ 74, 22
        mov     ecx, 2147483648                         ; 3717 _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 371C _ E8, FFFFCB31
        test    al, al                                  ; 3721 _ 84. C0
        jz      Unnamed_1_34F9                          ; 3723 _ 74, 14
        lea     rdx, ptr [?_317]                        ; 3725 _ 48: 8D. 15, 00002BA1(rel)
        mov     ecx, 2147483648                         ; 372C _ B9, 80000000
        mov     r8, rsi                                 ; 3731 _ 49: 89. F0
        call    _DebugPrint                             ; 3734 _ E8, FFFFCB07
Unnamed_1_34F9:
        lea     rcx, ptr [?_403]                        ; 3739 _ 48: 8D. 0D, 00003E6C(rel)
        lea     r8, ptr [?_318]                         ; 3740 _ 4C: 8D. 05, 00002BA7(rel)
        mov     edx, 64                                 ; 3747 _ BA, 00000040
        call    _DebugAssert                            ; 374C _ E8, FFFFCAFA
Unnamed_1_3511:
        call    _DebugAssertEnabled                     ; 3751 _ E8, FFFFCAF6
        test    al, al                                  ; 3756 _ 84. C0
        jz      Unnamed_1_353E                          ; 3758 _ 74, 24
        mov     rax, qword ptr [_gDS]                   ; 375A _ 48: 8B. 05, 00005A1F(rel)
        test    rax, rax                                ; 3761 _ 48: 85. C0
        jnz     Unnamed_1_353E                          ; 3764 _ 75, 18
        lea     rcx, ptr [?_403]                        ; 3766 _ 48: 8D. 0D, 00003E3F(rel)
        lea     r8, ptr [?_404]                         ; 376D _ 4C: 8D. 05, 00003EA4(rel)
        mov     edx, 65                                 ; 3774 _ BA, 00000041
        call    _DebugAssert                            ; 3779 _ E8, FFFFCACD
Unnamed_1_353E:
        mov     rax, rsi                                ; 377E _ 48: 89. F0
        add     rsp, 40                                 ; 3781 _ 48: 83. C4, 28
        pop     rsi                                     ; 3785 _ 5E
        pop     rbp                                     ; 3786 _ 5D
        ret                                             ; 3787 _ C3
_DxeServicesTableLibConstructor ENDP

__DriverUnloadHandler PROC
        push    rbp                                     ; 3788 _ 55
        mov     rbp, rsp                                ; 3789 _ 48: 89. E5
        push    rsi                                     ; 378C _ 56
        push    rdi                                     ; 378D _ 57
        sub     rsp, 32                                 ; 378E _ 48: 83. EC, 20
        mov     rsi, rcx                                ; 3792 _ 48: 89. CE
        call    _ProcessModuleUnloadList                ; 3795 _ E8, 00002B30
        mov     rdi, rax                                ; 379A _ 48: 89. C7
        test    rdi, rdi                                ; 379D _ 48: 85. FF
        js      ?_195                                   ; 37A0 _ 78, 0F
        mov     rdx, qword ptr [_gST]                   ; 37A2 _ 48: 8B. 15, 00005997(rel)
        mov     rcx, rsi                                ; 37A9 _ 48: 89. F1
        call    _ProcessLibraryDestructorList           ; 37AC _ E8, 00002B13
?_195:  mov     rax, rdi                                ; 37B1 _ 48: 89. F8
        add     rsp, 32                                 ; 37B4 _ 48: 83. C4, 20
        pop     rdi                                     ; 37B8 _ 5F
        pop     rsi                                     ; 37B9 _ 5E
        pop     rbp                                     ; 37BA _ 5D
        ret                                             ; 37BB _ C3
__DriverUnloadHandler ENDP

__ModuleEntryPoint PROC
        push    rbp                                     ; 37BC _ 55
        mov     rbp, rsp                                ; 37BD _ 48: 89. E5
        push    rsi                                     ; 37C0 _ 56
        push    rdi                                     ; 37C1 _ 57
        push    rbx                                     ; 37C2 _ 53
        sub     rsp, 40                                 ; 37C3 _ 48: 83. EC, 28
        mov     rsi, rdx                                ; 37C7 _ 48: 89. D6
        mov     rdi, rcx                                ; 37CA _ 48: 89. CF
        mov     eax, dword ptr [__gUefiDriverRevision]  ; 37CD _ 8B. 05, 0000422D(rel)
        test    eax, eax                                ; 37D3 _ 85. C0
        jz      ?_196                                   ; 37D5 _ 74, 13
        mov     rbx, 8000000000000019H                  ; 37D7 _ 48: BB, 8000000000000019
        cmp     dword ptr [rsi+8H], eax                 ; 37E1 _ 39. 46, 08
        jc      Unnamed_1_365A                          ; 37E4 _ 0F 82, 000000B0
?_196:  mov     rcx, rdi                                ; 37EA _ 48: 89. F9
        mov     rdx, rsi                                ; 37ED _ 48: 89. F2
        call    _ProcessLibraryConstructorList          ; 37F0 _ E8, 000028D8
        cmp     byte ptr [__gDriverUnloadImageCount], 0 ; 37F5 _ 80. 3D, 00004208(rel), 00
        jz      ?_197                                   ; 37FC _ 74, 7E
        mov     rax, qword ptr [_gBS]                   ; 37FE _ 48: 8B. 05, 00005943(rel)
        lea     rdx, ptr [_gEfiLoadedImageProtocolGuid] ; 3805 _ 48: 8D. 15, 000056CC(rel)
        lea     r8, ptr [rbp-20H]                       ; 380C _ 4C: 8D. 45, E0
        mov     rcx, rdi                                ; 3810 _ 48: 89. F9
        call    qword ptr [rax+98H]                     ; 3813 _ FF. 90, 00000098
        mov     rbx, rax                                ; 3819 _ 48: 89. C3
        call    _DebugAssertEnabled                     ; 381C _ E8, FFFFCA2B
        test    al, al                                  ; 3821 _ 84. C0
        jz      Unnamed_1_362D                          ; 3823 _ 74, 48
        test    rbx, rbx                                ; 3825 _ 48: 85. DB
        jns     Unnamed_1_362D                          ; 3828 _ 79, 43
        call    _DebugPrintEnabled                      ; 382A _ E8, FFFFCA20
        test    al, al                                  ; 382F _ 84. C0
        jz      Unnamed_1_3615                          ; 3831 _ 74, 22
        mov     ecx, 2147483648                         ; 3833 _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 3838 _ E8, FFFFCA15
        test    al, al                                  ; 383D _ 84. C0
        jz      Unnamed_1_3615                          ; 383F _ 74, 14
        lea     rdx, ptr [?_317]                        ; 3841 _ 48: 8D. 15, 00002A85(rel)
        mov     ecx, 2147483648                         ; 3848 _ B9, 80000000
        mov     r8, rbx                                 ; 384D _ 49: 89. D8
        call    _DebugPrint                             ; 3850 _ E8, FFFFC9EB
Unnamed_1_3615:
        lea     rcx, ptr [?_405]                        ; 3855 _ 48: 8D. 0D, 00003DD0(rel)
        lea     r8, ptr [?_318]                         ; 385C _ 4C: 8D. 05, 00002A8B(rel)
        mov     edx, 126                                ; 3863 _ BA, 0000007E
        call    _DebugAssert                            ; 3868 _ E8, FFFFC9DE
Unnamed_1_362D:
        mov     rax, qword ptr [rbp-20H]                ; 386D _ 48: 8B. 45, E0
        lea     rcx, ptr [__DriverUnloadHandler]        ; 3871 _ 48: 8D. 0D, FFFFFF10(rel)
        mov     qword ptr [rax+58H], rcx                ; 3878 _ 48: 89. 48, 58
?_197:  mov     rcx, rdi                                ; 387C _ 48: 89. F9
        mov     rdx, rsi                                ; 387F _ 48: 89. F2
        call    _ProcessModuleEntryPointList            ; 3882 _ E8, 00002A3E
        mov     rbx, rax                                ; 3887 _ 48: 89. C3
        test    rbx, rbx                                ; 388A _ 48: 85. DB
        jns     Unnamed_1_365A                          ; 388D _ 79, 0B
        mov     rcx, rdi                                ; 388F _ 48: 89. F9
        mov     rdx, rsi                                ; 3892 _ 48: 89. F2
        call    _ProcessLibraryDestructorList           ; 3895 _ E8, 00002A2A
Unnamed_1_365A:
        mov     rax, rbx                                ; 389A _ 48: 89. D8
        add     rsp, 40                                 ; 389D _ 48: 83. C4, 28
        pop     rbx                                     ; 38A1 _ 5B
        pop     rdi                                     ; 38A2 _ 5F
        pop     rsi                                     ; 38A3 _ 5E
        pop     rbp                                     ; 38A4 _ 5D
        ret                                             ; 38A5 _ C3
__ModuleEntryPoint ENDP

_PerformUpdateOnFirmwareVolume PROC
        push    rbp                                     ; 38A6 _ 55
        mov     rbp, rsp                                ; 38A7 _ 48: 89. E5
        push    r15                                     ; 38AA _ 41: 57
        push    r14                                     ; 38AC _ 41: 56
        push    r13                                     ; 38AE _ 41: 55
        push    r12                                     ; 38B0 _ 41: 54
        push    rsi                                     ; 38B2 _ 56
        push    rdi                                     ; 38B3 _ 57
        push    rbx                                     ; 38B4 _ 53
        sub     rsp, 120                                ; 38B5 _ 48: 83. EC, 78
        mov     dword ptr [rbp-74H], r9d                ; 38B9 _ 44: 89. 4D, 8C
        mov     qword ptr [rbp-70H], r8                 ; 38BD _ 4C: 89. 45, 90
        mov     qword ptr [rbp-68H], rdx                ; 38C1 _ 48: 89. 55, 98
        mov     rdi, rcx                                ; 38C5 _ 48: 89. CF
        mov     qword ptr [rbp-50H], 0                  ; 38C8 _ 48: C7. 45, B0, 00000000
        mov     rax, qword ptr [_gBS]                   ; 38D0 _ 48: 8B. 05, 00005871(rel)
        lea     rcx, ptr [rbp-50H]                      ; 38D7 _ 48: 8D. 4D, B0
        mov     qword ptr [rsp+20H], rcx                ; 38DB _ 48: 89. 4C 24, 20
        lea     rdx, ptr [_gEfiFirmwareVolumeBlockProtocolGuid]; 38E0 _ 48: 8D. 15, 000055E1(rel)
        lea     r9, ptr [rbp-48H]                       ; 38E7 _ 4C: 8D. 4D, B8
        mov     ecx, 2                                  ; 38EB _ B9, 00000002
        xor     r8d, r8d                                ; 38F0 _ 45: 31. C0
        call    qword ptr [rax+138H]                    ; 38F3 _ FF. 90, 00000138
        mov     rcx, qword ptr [rbp-50H]                ; 38F9 _ 48: 8B. 4D, B0
        test    rax, rax                                ; 38FD _ 48: 85. C0
        js      Unnamed_1_36D0                          ; 3900 _ 78, 0E
        mov     rax, qword ptr [rbp-48H]                ; 3902 _ 48: 8B. 45, B8
        test    rax, rax                                ; 3906 _ 48: 85. C0
        jz      Unnamed_1_36D0                          ; 3909 _ 74, 05
        test    rcx, rcx                                ; 390B _ 48: 85. C9
        jnz     ?_198                                   ; 390E _ 75, 27
Unnamed_1_36D0:
        mov     rbx, 800000000000000EH                  ; 3910 _ 48: BB, 800000000000000E
        test    rcx, rcx                                ; 391A _ 48: 85. C9
        je      Unnamed_1_383B                          ; 391D _ 0F 84, 00000158
        call    _FreePool                               ; 3923 _ E8, FFFFDE2F
        mov     rbx, 800000000000000EH                  ; 3928 _ 48: BB, 800000000000000E
        jmp     Unnamed_1_383B                          ; 3932 _ E9, 00000144

?_198:  mov     qword ptr [rbp-40H], 0                  ; 3937 _ 48: C7. 45, C0, 00000000
        xor     r12d, r12d                              ; 393F _ 45: 31. E4
        lea     r13, ptr [_gEfiFirmwareVolumeBlockProtocolGuid]; 3942 _ 4C: 8D. 2D, 0000557F(rel)
        lea     rsi, ptr [rbp-40H]                      ; 3949 _ 48: 8D. 75, C0
        lea     r14, ptr [rbp-5CH]                      ; 394D _ 4C: 8D. 75, A4
        lea     r15, ptr [rbp-58H]                      ; 3951 _ 4C: 8D. 7D, A8
        jmp     ?_199                                   ; 3955 _ EB, 15

Unnamed_1_3717:
        mov     rax, qword ptr [rbp-58H]                ; 3957 _ 48: 8B. 45, A8
        cmp     rax, qword ptr [rdi+10H]                ; 395B _ 48: 3B. 47, 10
        je      ?_200                                   ; 395F _ 0F 84, 0000008B
Unnamed_1_3725:
        inc     r12                                     ; 3965 _ 49: FF. C4
        mov     rax, qword ptr [rbp-48H]                ; 3968 _ 48: 8B. 45, B8
?_199:  cmp     r12, rax                                ; 396C _ 49: 39. C4
        jnc     Unnamed_1_377D                          ; 396F _ 73, 4C
        mov     rax, qword ptr [rbp-50H]                ; 3971 _ 48: 8B. 45, B0
        mov     rcx, qword ptr [rax+r12*8]              ; 3975 _ 4A: 8B. 0C E0
        mov     rax, qword ptr [_gBS]                   ; 3979 _ 48: 8B. 05, 000057C8(rel)
        mov     rdx, r13                                ; 3980 _ 4C: 89. EA
        mov     r8, rsi                                 ; 3983 _ 49: 89. F0
        call    qword ptr [rax+98H]                     ; 3986 _ FF. 90, 00000098
        test    rax, rax                                ; 398C _ 48: 85. C0
        js      Unnamed_1_377D                          ; 398F _ 78, 2C
        mov     rax, qword ptr [rbp-40H]                ; 3991 _ 48: 8B. 45, C0
        mov     rcx, rax                                ; 3995 _ 48: 89. C1
        mov     rdx, r14                                ; 3998 _ 4C: 89. F2
        call    qword ptr [rax]                         ; 399B _ FF. 10
        test    rax, rax                                ; 399D _ 48: 85. C0
        js      Unnamed_1_3725                          ; 39A0 _ 78, C3
        test    byte ptr [rbp-5CH], 20H                 ; 39A2 _ F6. 45, A4, 20
        jz      Unnamed_1_3725                          ; 39A6 _ 74, BD
        mov     rax, qword ptr [rbp-40H]                ; 39A8 _ 48: 8B. 45, C0
        mov     rcx, rax                                ; 39AC _ 48: 89. C1
        mov     rdx, r15                                ; 39AF _ 4C: 89. FA
        call    qword ptr [rax+10H]                     ; 39B2 _ FF. 50, 10
        mov     rbx, rax                                ; 39B5 _ 48: 89. C3
        test    rbx, rbx                                ; 39B8 _ 48: 85. DB
        jns     Unnamed_1_3717                          ; 39BB _ 79, 9A
Unnamed_1_377D:
        mov     rbx, 800000000000000EH                  ; 39BD _ 48: BB, 800000000000000E
        mov     rcx, qword ptr [rbp-50H]                ; 39C7 _ 48: 8B. 4D, B0
        test    rcx, rcx                                ; 39CB _ 48: 85. C9
        je      Unnamed_1_383B                          ; 39CE _ 0F 84, 000000A7
        call    _FreePool                               ; 39D4 _ E8, FFFFDD7E
        mov     qword ptr [rbp-50H], 0                  ; 39D9 _ 48: C7. 45, B0, 00000000
        mov     rbx, 800000000000000EH                  ; 39E1 _ 48: BB, 800000000000000E
        jmp     Unnamed_1_383B                          ; 39EB _ E9, 0000008B

?_200:  mov     eax, dword ptr [rdi+8H]                 ; 39F0 _ 8B. 47, 08
        cmp     eax, 1                                  ; 39F3 _ 83. F8, 01
        jz      ?_201                                   ; 39F6 _ 74, 38
        test    eax, eax                                ; 39F8 _ 85. C0
        jnz     Unnamed_1_3825                          ; 39FA _ 75, 69
        mov     rbx, 8000000000000002H                  ; 39FC _ 48: BB, 8000000000000002
        mov     eax, dword ptr [rbp-74H]                ; 3A06 _ 8B. 45, 8C
        cmp     al, 11                                  ; 3A09 _ 3C, 0B
        jnz     Unnamed_1_3825                          ; 3A0B _ 75, 58
        mov     rax, qword ptr [rbp-50H]                ; 3A0D _ 48: 8B. 45, B0
        mov     rcx, qword ptr [rax+r12*8]              ; 3A11 _ 4A: 8B. 0C E0
        mov     rdx, qword ptr [rbp-40H]                ; 3A15 _ 48: 8B. 55, C0
        mov     rax, qword ptr [rbp-70H]                ; 3A19 _ 48: 8B. 45, 90
        mov     qword ptr [rsp+20H], rax                ; 3A1D _ 48: 89. 44 24, 20
        mov     r8, rdi                                 ; 3A22 _ 49: 89. F8
        mov     r9, qword ptr [rbp-68H]                 ; 3A25 _ 4C: 8B. 4D, 98
        call    _PerformUpdateOnWholeFv                 ; 3A29 _ E8, 00001C3B
        jmp     ?_202                                   ; 3A2E _ EB, 32

?_201:  mov     rax, qword ptr [rbp-50H]                ; 3A30 _ 48: 8B. 45, B0
        mov     rcx, qword ptr [rax+r12*8]              ; 3A34 _ 4A: 8B. 0C E0
        mov     rdx, qword ptr [rbp-40H]                ; 3A38 _ 48: 8B. 55, C0
        mov     eax, dword ptr [rbp+30H]                ; 3A3C _ 8B. 45, 30
        mov     dword ptr [rsp+30H], eax                ; 3A3F _ 89. 44 24, 30
        mov     eax, dword ptr [rbp-74H]                ; 3A43 _ 8B. 45, 8C
        movzx   eax, al                                 ; 3A46 _ 0F B6. C0
        mov     dword ptr [rsp+28H], eax                ; 3A49 _ 89. 44 24, 28
        mov     rax, qword ptr [rbp-70H]                ; 3A4D _ 48: 8B. 45, 90
        mov     qword ptr [rsp+20H], rax                ; 3A51 _ 48: 89. 44 24, 20
        mov     r8, rdi                                 ; 3A56 _ 49: 89. F8
        mov     r9, qword ptr [rbp-68H]                 ; 3A59 _ 4C: 8B. 4D, 98
        call    _PerformUpdateOnFvFile                  ; 3A5D _ E8, 00001D73
?_202:  mov     rbx, rax                                ; 3A62 _ 48: 89. C3
Unnamed_1_3825:
        mov     rcx, qword ptr [rbp-50H]                ; 3A65 _ 48: 8B. 4D, B0
        test    rcx, rcx                                ; 3A69 _ 48: 85. C9
        jz      Unnamed_1_383B                          ; 3A6C _ 74, 0D
        call    _FreePool                               ; 3A6E _ E8, FFFFDCE4
        mov     qword ptr [rbp-50H], 0                  ; 3A73 _ 48: C7. 45, B0, 00000000
Unnamed_1_383B:
        mov     rax, rbx                                ; 3A7B _ 48: 89. D8
        add     rsp, 120                                ; 3A7E _ 48: 83. C4, 78
        pop     rbx                                     ; 3A82 _ 5B
        pop     rdi                                     ; 3A83 _ 5F
        pop     rsi                                     ; 3A84 _ 5E
        pop     r12                                     ; 3A85 _ 41: 5C
        pop     r13                                     ; 3A87 _ 41: 5D
        pop     r14                                     ; 3A89 _ 41: 5E
        pop     r15                                     ; 3A8B _ 41: 5F
        pop     rbp                                     ; 3A8D _ 5D
        ret                                             ; 3A8E _ C3
_PerformUpdateOnFirmwareVolume ENDP

_PerformUpdateOnFlashArea PROC
        push    rbp                                     ; 3A8F _ 55
        mov     rbp, rsp                                ; 3A90 _ 48: 89. E5
        push    r15                                     ; 3A93 _ 41: 57
        push    r14                                     ; 3A95 _ 41: 56
        push    r13                                     ; 3A97 _ 41: 55
        push    r12                                     ; 3A99 _ 41: 54
        push    rsi                                     ; 3A9B _ 56
        push    rdi                                     ; 3A9C _ 57
        push    rbx                                     ; 3A9D _ 53
        sub     rsp, 120                                ; 3A9E _ 48: 83. EC, 78
        mov     rdi, r8                                 ; 3AA2 _ 4C: 89. C7
        mov     qword ptr [rbp-70H], rdx                ; 3AA5 _ 48: 89. 55, 90
        mov     qword ptr [rbp-78H], rcx                ; 3AA9 _ 48: 89. 4D, 88
        mov     r14, qword ptr [rcx+10H]                ; 3AAD _ 4C: 8B. 71, 10
        mov     qword ptr [rbp-50H], 0                  ; 3AB1 _ 48: C7. 45, B0, 00000000
        mov     rcx, qword ptr [_gHiiHandle]            ; 3AB9 _ 48: 8B. 0D, 000056C8(rel)
        mov     edx, 4                                  ; 3AC0 _ BA, 00000004
        xor     r8d, r8d                                ; 3AC5 _ 45: 31. C0
        call    _HiiGetString                           ; 3AC8 _ E8, FFFFF9B1
        mov     rsi, rax                                ; 3ACD _ 48: 89. C6
        test    rsi, rsi                                ; 3AD0 _ 48: 85. F6
        jz      ?_203                                   ; 3AD3 _ 74, 17
        lea     r8, ptr [r14+rdi]                       ; 3AD5 _ 4D: 8D. 04 3E
        mov     rcx, rsi                                ; 3AD9 _ 48: 89. F1
        mov     rdx, r14                                ; 3ADC _ 4C: 89. F2
        call    _Print                                  ; 3ADF _ E8, FFFFF452
        mov     rcx, rsi                                ; 3AE4 _ 48: 89. F1
        call    _FreePool                               ; 3AE7 _ E8, FFFFDC6B
?_203:  mov     rsi, rdi                                ; 3AEC _ 48: 89. FE
        mov     rax, qword ptr [_gBS]                   ; 3AEF _ 48: 8B. 05, 00005652(rel)
        lea     rcx, ptr [rbp-50H]                      ; 3AF6 _ 48: 8D. 4D, B0
        mov     qword ptr [rsp+20H], rcx                ; 3AFA _ 48: 89. 4C 24, 20
        lea     rdx, ptr [_gEfiFirmwareVolumeBlockProtocolGuid]; 3AFF _ 48: 8D. 15, 000053C2(rel)
        lea     r9, ptr [rbp-48H]                       ; 3B06 _ 4C: 8D. 4D, B8
        mov     ecx, 2                                  ; 3B0A _ B9, 00000002
        xor     r8d, r8d                                ; 3B0F _ 45: 31. C0
        call    qword ptr [rax+138H]                    ; 3B12 _ FF. 90, 00000138
        mov     r15, rax                                ; 3B18 _ 49: 89. C7
        mov     rcx, qword ptr [rbp-50H]                ; 3B1B _ 48: 8B. 4D, B0
        test    r15, r15                                ; 3B1F _ 4D: 85. FF
        js      Unnamed_1_3A51                          ; 3B22 _ 0F 88, 00000169
        mov     rax, qword ptr [rbp-48H]                ; 3B28 _ 48: 8B. 45, B8
        test    rax, rax                                ; 3B2C _ 48: 85. C0
        je      Unnamed_1_3A51                          ; 3B2F _ 0F 84, 0000015C
        test    rcx, rcx                                ; 3B35 _ 48: 85. C9
        je      Unnamed_1_3A51                          ; 3B38 _ 0F 84, 00000153
        lea     r13, ptr [_gEfiFirmwareVolumeBlockProtocolGuid]; 3B3E _ 4C: 8D. 2D, 00005383(rel)
        lea     rdi, ptr [rbp-40H]                      ; 3B45 _ 48: 8D. 7D, C0
        lea     r12, ptr [rbp-64H]                      ; 3B49 _ 4C: 8D. 65, 9C
        jmp     ?_205                                   ; 3B4D _ EB, 67

Unnamed_1_390F:
        mov     qword ptr [rsp+28H], r12                ; 3B4F _ 4C: 89. 64 24, 28
        mov     qword ptr [rsp+20H], rax                ; 3B54 _ 48: 89. 44 24, 20
        mov     rcx, qword ptr [rbp-70H]                ; 3B59 _ 48: 8B. 4D, 90
        mov     rsi, r15                                ; 3B5D _ 4C: 89. FE
        mov     rdx, rsi                                ; 3B60 _ 48: 89. F2
        lea     r8, ptr [rbp-60H]                       ; 3B63 _ 4C: 8D. 45, A0
        mov     r9, r14                                 ; 3B67 _ 4D: 89. F1
        call    _NonFaultTolerantUpdateOnPartFv         ; 3B6A _ E8, 00002357
?_204:  mov     r15, rax                                ; 3B6F _ 49: 89. C7
        test    r15, r15                                ; 3B72 _ 4D: 85. FF
        js      Unnamed_1_3AB3                          ; 3B75 _ 0F 88, 00000178
        mov     r9, qword ptr [rbp-40H]                 ; 3B7B _ 4C: 8B. 4D, C0
        mov     rax, qword ptr [_gBS]                   ; 3B7F _ 48: 8B. 05, 000055C2(rel)
        mov     rcx, r12                                ; 3B86 _ 4C: 89. E1
        mov     rdx, r13                                ; 3B89 _ 4C: 89. EA
        mov     r8, r9                                  ; 3B8C _ 4D: 89. C8
        call    qword ptr [rax+88H]                     ; 3B8F _ FF. 90, 00000088
        mov     r15, rax                                ; 3B95 _ 49: 89. C7
        test    r15, r15                                ; 3B98 _ 4D: 85. FF
        lea     rdi, ptr [rbp-40H]                      ; 3B9B _ 48: 8D. 7D, C0
        js      Unnamed_1_3AB3                          ; 3B9F _ 0F 88, 0000014E
        mov     rax, qword ptr [rbp-60H]                ; 3BA5 _ 48: 8B. 45, A0
        add     qword ptr [rbp-70H], rax                ; 3BA9 _ 48: 01. 45, 90
        add     r14, rax                                ; 3BAD _ 49: 01. C6
        sub     rsi, rax                                ; 3BB0 _ 48: 29. C6
        mov     r12, rbx                                ; 3BB3 _ 49: 89. DC
?_205:  lea     rbx, ptr [rbp-58H]                      ; 3BB6 _ 48: 8D. 5D, A8
        test    rsi, rsi                                ; 3BBA _ 48: 85. F6
        je      ?_208                                   ; 3BBD _ 0F 84, 0000011A
        mov     r15, rsi                                ; 3BC3 _ 49: 89. F7
        mov     qword ptr [rbp-40H], 0                  ; 3BC6 _ 48: C7. 45, C0, 00000000
        xor     esi, esi                                ; 3BCE _ 31. F6
?_206:  cmp     rsi, qword ptr [rbp-48H]                ; 3BD0 _ 48: 3B. 75, B8
        jnc     Unnamed_1_3A71                          ; 3BD4 _ 0F 83, 000000D7
        mov     rax, qword ptr [rbp-50H]                ; 3BDA _ 48: 8B. 45, B0
        mov     rcx, qword ptr [rax+rsi*8]              ; 3BDE _ 48: 8B. 0C F0
        mov     rax, qword ptr [_gBS]                   ; 3BE2 _ 48: 8B. 05, 0000555F(rel)
        mov     rdx, r13                                ; 3BE9 _ 4C: 89. EA
        mov     r8, rdi                                 ; 3BEC _ 49: 89. F8
        call    qword ptr [rax+98H]                     ; 3BEF _ FF. 90, 00000098
        test    rax, rax                                ; 3BF5 _ 48: 85. C0
        js      Unnamed_1_3A71                          ; 3BF8 _ 0F 88, 000000B3
        mov     rax, qword ptr [rbp-40H]                ; 3BFE _ 48: 8B. 45, C0
        mov     rcx, rax                                ; 3C02 _ 48: 89. C1
        mov     rdx, r12                                ; 3C05 _ 4C: 89. E2
        call    qword ptr [rax]                         ; 3C08 _ FF. 10
        test    rax, rax                                ; 3C0A _ 48: 85. C0
        js      Unnamed_1_39FD                          ; 3C0D _ 78, 2E
        test    byte ptr [rbp-64H], 20H                 ; 3C0F _ F6. 45, 9C, 20
        jz      Unnamed_1_39FD                          ; 3C13 _ 74, 28
        mov     rax, qword ptr [rbp-40H]                ; 3C15 _ 48: 8B. 45, C0
        mov     rcx, rax                                ; 3C19 _ 48: 89. C1
        mov     rdx, rbx                                ; 3C1C _ 48: 89. DA
        call    qword ptr [rax+10H]                     ; 3C1F _ FF. 50, 10
        test    rax, rax                                ; 3C22 _ 48: 85. C0
        js      Unnamed_1_3A71                          ; 3C25 _ 0F 88, 00000086
        mov     rax, qword ptr [rbp-58H]                ; 3C2B _ 48: 8B. 45, A8
        cmp     r14, rax                                ; 3C2F _ 49: 39. C6
        jc      Unnamed_1_39FD                          ; 3C32 _ 72, 09
        add     rax, qword ptr [rax+20H]                ; 3C34 _ 48: 03. 40, 20
        cmp     r14, rax                                ; 3C38 _ 49: 39. C6
        jc      ?_207                                   ; 3C3B _ 72, 05
Unnamed_1_39FD:
        inc     rsi                                     ; 3C3D _ 48: FF. C6
        jmp     ?_206                                   ; 3C40 _ EB, 8E

?_207:  mov     rbx, r12                                ; 3C42 _ 4C: 89. E3
        mov     rax, qword ptr [rbp-50H]                ; 3C45 _ 48: 8B. 45, B0
        mov     r12, qword ptr [rax+rsi*8]              ; 3C49 _ 4C: 8B. 24 F0
        mov     qword ptr [rbp-60H], 0                  ; 3C4D _ 48: C7. 45, A0, 00000000
        mov     rax, qword ptr [rbp-40H]                ; 3C55 _ 48: 8B. 45, C0
        mov     rdi, qword ptr [rbp-78H]                ; 3C59 _ 48: 8B. 7D, 88
        cmp     byte ptr [rdi+30H], 0                   ; 3C5D _ 80. 7F, 30, 00
        je      Unnamed_1_390F                          ; 3C61 _ 0F 84, FFFFFEE8
        mov     qword ptr [rsp+30H], r12                ; 3C67 _ 4C: 89. 64 24, 30
        mov     qword ptr [rsp+28H], rax                ; 3C6C _ 48: 89. 44 24, 28
        mov     qword ptr [rsp+20H], r14                ; 3C71 _ 4C: 89. 74 24, 20
        mov     rcx, qword ptr [rbp-70H]                ; 3C76 _ 48: 8B. 4D, 90
        mov     rsi, r15                                ; 3C7A _ 4C: 89. FE
        mov     rdx, rsi                                ; 3C7D _ 48: 89. F2
        lea     r8, ptr [rbp-60H]                       ; 3C80 _ 4C: 8D. 45, A0
        mov     r9, rdi                                 ; 3C84 _ 49: 89. F9
        call    _FaultTolerantUpdateOnPartFv            ; 3C87 _ E8, 00001C4E
        jmp     ?_204                                   ; 3C8C _ E9, FFFFFEDE

Unnamed_1_3A51:
        mov     r15, 800000000000000EH                  ; 3C91 _ 49: BF, 800000000000000E
        test    rcx, rcx                                ; 3C9B _ 48: 85. C9
        jz      Unnamed_1_3AB3                          ; 3C9E _ 74, 53
        call    _FreePool                               ; 3CA0 _ E8, FFFFDAB2
        mov     r15, 800000000000000EH                  ; 3CA5 _ 49: BF, 800000000000000E
        jmp     Unnamed_1_3AB3                          ; 3CAF _ EB, 42

Unnamed_1_3A71:
        mov     r15, 800000000000000EH                  ; 3CB1 _ 49: BF, 800000000000000E
        mov     rcx, qword ptr [rbp-50H]                ; 3CBB _ 48: 8B. 4D, B0
        test    rcx, rcx                                ; 3CBF _ 48: 85. C9
        jz      Unnamed_1_3AB3                          ; 3CC2 _ 74, 2F
        call    _FreePool                               ; 3CC4 _ E8, FFFFDA8E
        mov     qword ptr [rbp-50H], 0                  ; 3CC9 _ 48: C7. 45, B0, 00000000
        mov     r15, 800000000000000EH                  ; 3CD1 _ 49: BF, 800000000000000E
        jmp     Unnamed_1_3AB3                          ; 3CDB _ EB, 16

?_208:  mov     rcx, qword ptr [rbp-50H]                ; 3CDD _ 48: 8B. 4D, B0
        test    rcx, rcx                                ; 3CE1 _ 48: 85. C9
        jz      Unnamed_1_3AB3                          ; 3CE4 _ 74, 0D
        call    _FreePool                               ; 3CE6 _ E8, FFFFDA6C
        mov     qword ptr [rbp-50H], 0                  ; 3CEB _ 48: C7. 45, B0, 00000000
Unnamed_1_3AB3:
        mov     rax, r15                                ; 3CF3 _ 4C: 89. F8
        add     rsp, 120                                ; 3CF6 _ 48: 83. C4, 78
        pop     rbx                                     ; 3CFA _ 5B
        pop     rdi                                     ; 3CFB _ 5F
        pop     rsi                                     ; 3CFC _ 5E
        pop     r12                                     ; 3CFD _ 41: 5C
        pop     r13                                     ; 3CFF _ 41: 5D
        pop     r14                                     ; 3D01 _ 41: 5E
        pop     r15                                     ; 3D03 _ 41: 5F
        pop     rbp                                     ; 3D05 _ 5D
        ret                                             ; 3D06 _ C3
_PerformUpdateOnFlashArea ENDP

_PerformUpdate PROC
        push    rbp                                     ; 3D07 _ 55
        mov     rbp, rsp                                ; 3D08 _ 48: 89. E5
        push    r15                                     ; 3D0B _ 41: 57
        push    r14                                     ; 3D0D _ 41: 56
        push    r13                                     ; 3D0F _ 41: 55
        push    r12                                     ; 3D11 _ 41: 54
        push    rsi                                     ; 3D13 _ 56
        push    rdi                                     ; 3D14 _ 57
        push    rbx                                     ; 3D15 _ 53
        sub     rsp, 88                                 ; 3D16 _ 48: 83. EC, 58
        mov     rdi, rdx                                ; 3D1A _ 48: 89. D7
        mov     rbx, rcx                                ; 3D1D _ 48: 89. CB
        mov     qword ptr [rbp-40H], 0                  ; 3D20 _ 48: C7. 45, C0, 00000000
        mov     qword ptr [rbp-48H], 0                  ; 3D28 _ 48: C7. 45, B8, 00000000
        lea     rax, ptr [rbp-50H]                      ; 3D30 _ 48: 8D. 45, B0
        lea     r13, ptr [rbp-54H]                      ; 3D34 _ 4C: 8D. 6D, AC
        mov     qword ptr [rsp+30H], r13                ; 3D38 _ 4C: 89. 6C 24, 30
        mov     qword ptr [rsp+28H], rax                ; 3D3D _ 48: 89. 44 24, 28
        lea     rax, ptr [rbp-49H]                      ; 3D42 _ 48: 8D. 45, B7
        mov     qword ptr [rsp+20H], rax                ; 3D46 _ 48: 89. 44 24, 20
        lea     r14, ptr [rdi+18H]                      ; 3D4B _ 4C: 8D. 77, 18
        lea     r15, ptr [rbp-40H]                      ; 3D4F _ 4C: 8D. 7D, C0
        lea     r12, ptr [rbp-48H]                      ; 3D53 _ 4C: 8D. 65, B8
        mov     rdx, r14                                ; 3D57 _ 4C: 89. F2
        mov     r8, r15                                 ; 3D5A _ 4D: 89. F8
        mov     r9, r12                                 ; 3D5D _ 4D: 89. E1
        call    qword ptr [rbx+10H]                     ; 3D60 _ FF. 53, 10
        mov     rsi, rax                                ; 3D63 _ 48: 89. C6
        test    rsi, rsi                                ; 3D66 _ 48: 85. F6
        js      Unnamed_1_3CEF                          ; 3D69 _ 0F 88, 000001C0
        mov     eax, dword ptr [rdi+8H]                 ; 3D6F _ 8B. 47, 08
        cmp     eax, 2                                  ; 3D72 _ 83. F8, 02
        je      ?_212                                   ; 3D75 _ 0F 84, 000000F4
        cmp     eax, 1                                  ; 3D7B _ 83. F8, 01
        je      Unnamed_1_3C82                          ; 3D7E _ 0F 84, 0000013E
        mov     rsi, 8000000000000002H                  ; 3D84 _ 48: BE, 8000000000000002
        test    eax, eax                                ; 3D8E _ 85. C0
        jne     Unnamed_1_3CD9                          ; 3D90 _ 0F 85, 00000183
        cmp     byte ptr [rbp-49H], 11                  ; 3D96 _ 80. 7D, B7, 0B
        jz      ?_210                                   ; 3D9A _ 74, 53
        call    _DebugPrintEnabled                      ; 3D9C _ E8, FFFFC4AE
        mov     rsi, 8000000000000002H                  ; 3DA1 _ 48: BE, 8000000000000002
        test    al, al                                  ; 3DAB _ 84. C0
        je      Unnamed_1_3CD9                          ; 3DAD _ 0F 84, 00000166
        mov     ecx, 2147483648                         ; 3DB3 _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 3DB8 _ E8, FFFFC495
        mov     rsi, 8000000000000002H                  ; 3DBD _ 48: BE, 8000000000000002
        test    al, al                                  ; 3DC7 _ 84. C0
        je      Unnamed_1_3CD9                          ; 3DC9 _ 0F 84, 0000014A
        lea     rdx, ptr [?_406]                        ; 3DCF _ 48: 8D. 15, 000038C0(rel)
?_209:  mov     ecx, 2147483648                         ; 3DD6 _ B9, 80000000
        call    _DebugPrint                             ; 3DDB _ E8, FFFFC460
        mov     rsi, 8000000000000002H                  ; 3DE0 _ 48: BE, 8000000000000002
        jmp     Unnamed_1_3CD9                          ; 3DEA _ E9, 0000012A

?_210:  mov     rcx, qword ptr [rbp-40H]                ; 3DEF _ 48: 8B. 4D, C0
        test    rcx, rcx                                ; 3DF3 _ 48: 85. C9
        jz      ?_211                                   ; 3DF6 _ 74, 05
        call    _FreePool                               ; 3DF8 _ E8, FFFFD95A
?_211:  mov     qword ptr [rbp-40H], 0                  ; 3DFD _ 48: C7. 45, C0, 00000000
        mov     qword ptr [rbp-48H], 0                  ; 3E05 _ 48: C7. 45, B8, 00000000
        mov     qword ptr [rsp+30H], r13                ; 3E0D _ 4C: 89. 6C 24, 30
        mov     qword ptr [rsp+28H], r12                ; 3E12 _ 4C: 89. 64 24, 28
        mov     qword ptr [rsp+20H], r15                ; 3E17 _ 4C: 89. 7C 24, 20
        mov     rcx, rbx                                ; 3E1C _ 48: 89. D9
        mov     rdx, r14                                ; 3E1F _ 4C: 89. F2
        mov     r8d, 23                                 ; 3E22 _ 41: B8, 00000017
        xor     r9d, r9d                                ; 3E28 _ 45: 31. C9
        call    qword ptr [rbx+18H]                     ; 3E2B _ FF. 53, 18
        mov     rsi, rax                                ; 3E2E _ 48: 89. C6
        test    rsi, rsi                                ; 3E31 _ 48: 85. F6
        jns     Unnamed_1_3C82                          ; 3E34 _ 0F 89, 00000088
        call    _DebugPrintEnabled                      ; 3E3A _ E8, FFFFC410
        test    al, al                                  ; 3E3F _ 84. C0
        je      Unnamed_1_3CD9                          ; 3E41 _ 0F 84, 000000D2
        mov     ecx, 2147483648                         ; 3E47 _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 3E4C _ E8, FFFFC401
        test    al, al                                  ; 3E51 _ 84. C0
        je      Unnamed_1_3CD9                          ; 3E53 _ 0F 84, 000000C0
        lea     rdx, ptr [?_407]                        ; 3E59 _ 48: 8D. 15, 00003887(rel)
        mov     ecx, 2147483648                         ; 3E60 _ B9, 80000000
        call    _DebugPrint                             ; 3E65 _ E8, FFFFC3D6
        jmp     Unnamed_1_3CD9                          ; 3E6A _ E9, 000000AA

?_212:  cmp     byte ptr [rbp-49H], 1                   ; 3E6F _ 80. 7D, B7, 01
        jz      ?_213                                   ; 3E73 _ 74, 3B
        call    _DebugPrintEnabled                      ; 3E75 _ E8, FFFFC3D5
        mov     rsi, 8000000000000002H                  ; 3E7A _ 48: BE, 8000000000000002
        test    al, al                                  ; 3E84 _ 84. C0
        je      Unnamed_1_3CD9                          ; 3E86 _ 0F 84, 0000008D
        mov     ecx, 2147483648                         ; 3E8C _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 3E91 _ E8, FFFFC3BC
        mov     rsi, 8000000000000002H                  ; 3E96 _ 48: BE, 8000000000000002
        test    al, al                                  ; 3EA0 _ 84. C0
        jz      Unnamed_1_3CD9                          ; 3EA2 _ 74, 75
        lea     rdx, ptr [?_408]                        ; 3EA4 _ 48: 8D. 15, 00003895(rel)
        jmp     ?_209                                   ; 3EAB _ E9, FFFFFF26

?_213:  mov     r8, qword ptr [rbp-48H]                 ; 3EB0 _ 4C: 8B. 45, B8
        mov     rdx, qword ptr [rbp-40H]                ; 3EB4 _ 48: 8B. 55, C0
        mov     rcx, rdi                                ; 3EB8 _ 48: 89. F9
        call    _PerformUpdateOnFlashArea               ; 3EBB _ E8, FFFFFBCF
        jmp     ?_214                                   ; 3EC0 _ EB, 1C

Unnamed_1_3C82:
        movzx   r9d, byte ptr [rbp-49H]                 ; 3EC2 _ 44: 0F B6. 4D, B7
        mov     r8, qword ptr [rbp-48H]                 ; 3EC7 _ 4C: 8B. 45, B8
        mov     rdx, qword ptr [rbp-40H]                ; 3ECB _ 48: 8B. 55, C0
        mov     eax, dword ptr [rbp-50H]                ; 3ECF _ 8B. 45, B0
        mov     dword ptr [rsp+20H], eax                ; 3ED2 _ 89. 44 24, 20
        mov     rcx, rdi                                ; 3ED6 _ 48: 89. F9
        call    _PerformUpdateOnFirmwareVolume          ; 3ED9 _ E8, FFFFF9C8
?_214:  mov     rsi, rax                                ; 3EDE _ 48: 89. C6
        mov     rcx, qword ptr [_gHiiHandle]            ; 3EE1 _ 48: 8B. 0D, 000052A0(rel)
        test    rsi, rsi                                ; 3EE8 _ 48: 85. F6
        jns     ?_215                                   ; 3EEB _ 79, 07
        mov     edx, 5                                  ; 3EED _ BA, 00000005
        jmp     ?_216                                   ; 3EF2 _ EB, 05

?_215:  mov     edx, 3                                  ; 3EF4 _ BA, 00000003
?_216:  xor     r8d, r8d                                ; 3EF9 _ 45: 31. C0
        call    _HiiGetString                           ; 3EFC _ E8, FFFFF57D
        mov     rdi, rax                                ; 3F01 _ 48: 89. C7
        test    rdi, rdi                                ; 3F04 _ 48: 85. FF
        jz      Unnamed_1_3CD9                          ; 3F07 _ 74, 10
        mov     rcx, rdi                                ; 3F09 _ 48: 89. F9
        call    _Print                                  ; 3F0C _ E8, FFFFF025
        mov     rcx, rdi                                ; 3F11 _ 48: 89. F9
        call    _FreePool                               ; 3F14 _ E8, FFFFD83E
Unnamed_1_3CD9:
        mov     rcx, qword ptr [rbp-40H]                ; 3F19 _ 48: 8B. 4D, C0
        test    rcx, rcx                                ; 3F1D _ 48: 85. C9
        jz      Unnamed_1_3CEF                          ; 3F20 _ 74, 0D
        call    _FreePool                               ; 3F22 _ E8, FFFFD830
        mov     qword ptr [rbp-40H], 0                  ; 3F27 _ 48: C7. 45, C0, 00000000
Unnamed_1_3CEF:
        mov     rax, rsi                                ; 3F2F _ 48: 89. F0
        add     rsp, 88                                 ; 3F32 _ 48: 83. C4, 58
        pop     rbx                                     ; 3F36 _ 5B
        pop     rdi                                     ; 3F37 _ 5F
        pop     rsi                                     ; 3F38 _ 5E
        pop     r12                                     ; 3F39 _ 41: 5C
        pop     r13                                     ; 3F3B _ 41: 5D
        pop     r14                                     ; 3F3D _ 41: 5E
        pop     r15                                     ; 3F3F _ 41: 5F
        pop     rbp                                     ; 3F41 _ 5D
        ret                                             ; 3F42 _ C3
_PerformUpdate ENDP

_ProcessUpdateImage PROC
        push    rbp                                     ; 3F43 _ 55
        mov     rbp, rsp                                ; 3F44 _ 48: 89. E5
        push    r14                                     ; 3F47 _ 41: 56
        push    rsi                                     ; 3F49 _ 56
        push    rdi                                     ; 3F4A _ 57
        push    rbx                                     ; 3F4B _ 53
        sub     rsp, 48                                 ; 3F4C _ 48: 83. EC, 30
        mov     r14, r8                                 ; 3F50 _ 4D: 89. C6
        mov     rdi, rdx                                ; 3F53 _ 48: 89. D7
        mov     rbx, rcx                                ; 3F56 _ 48: 89. CB
        mov     rax, 800000000000000AH                  ; 3F59 _ 48: B8, 800000000000000A
        cmp     qword ptr [rbx+20H], rdi                ; 3F63 _ 48: 39. 7B, 20
        jne     Unnamed_1_3DC5                          ; 3F67 _ 0F 85, 00000098
        mov     cl, byte ptr [rbx+2EH]                  ; 3F6D _ 8A. 4B, 2E
        mov     eax, 1                                  ; 3F70 _ B8, 00000001
        shl     eax, cl                                 ; 3F75 _ D3. E0
        cmp     eax, 8                                  ; 3F77 _ 83. F8, 08
        mov     esi, 8                                  ; 3F7A _ BE, 00000008
        cmovnc  rsi, rax                                ; 3F7F _ 48: 0F 43. F0
        mov     rax, rbx                                ; 3F83 _ 48: 89. D8
        xor     edx, edx                                ; 3F86 _ 31. D2
        div     rsi                                     ; 3F88 _ 48: F7. F6
        test    rdx, rdx                                ; 3F8B _ 48: 85. D2
        jz      ?_217                                   ; 3F8E _ 74, 43
        mov     rcx, rdi                                ; 3F90 _ 48: 89. F9
        shr     rcx, 12                                 ; 3F93 _ 48: C1. E9, 0C
        mov     rax, rdi                                ; 3F97 _ 48: 89. F8
        and     rax, 0FFFH                              ; 3F9A _ 48: 25, 00000FFF
        cmp     rax, 1                                  ; 3FA0 _ 48: 83. F8, 01
        sbb     rcx, -1                                 ; 3FA4 _ 48: 83. D9, FF
        mov     rdx, rsi                                ; 3FA8 _ 48: 89. F2
        call    _AllocateAlignedPages                   ; 3FAB _ E8, FFFFD66B
        mov     rsi, rax                                ; 3FB0 _ 48: 89. C6
        mov     rax, 8000000000000009H                  ; 3FB3 _ 48: B8, 8000000000000009
        test    rsi, rsi                                ; 3FBD _ 48: 85. F6
        jz      Unnamed_1_3DC5                          ; 3FC0 _ 74, 43
        mov     rcx, rsi                                ; 3FC2 _ 48: 89. F1
        mov     rdx, rbx                                ; 3FC5 _ 48: 89. DA
        mov     r8, rdi                                 ; 3FC8 _ 49: 89. F8
        call    _CopyMem                                ; 3FCB _ E8, FFFFC474
        mov     rbx, rsi                                ; 3FD0 _ 48: 89. F3
?_217:  mov     rax, qword ptr [_gDS]                   ; 3FD3 _ 48: 8B. 05, 000051A6(rel)
        lea     r8, ptr [rbp-28H]                       ; 3FDA _ 4C: 8D. 45, D8
        mov     rcx, rbx                                ; 3FDE _ 48: 89. D9
        mov     rdx, rdi                                ; 3FE1 _ 48: 89. FA
        call    qword ptr [rax+98H]                     ; 3FE4 _ FF. 90, 00000098
        mov     rcx, qword ptr [rbp-28H]                ; 3FEA _ 48: 8B. 4D, D8
        mov     rax, qword ptr [_gBS]                   ; 3FEE _ 48: 8B. 05, 00005153(rel)
        lea     rdx, ptr [_gEfiFirmwareVolume2ProtocolGuid]; 3FF5 _ 48: 8D. 15, 00004EBC(rel)
        mov     r8, r14                                 ; 3FFC _ 4D: 89. F0
        call    qword ptr [rax+98H]                     ; 3FFF _ FF. 90, 00000098
Unnamed_1_3DC5:
        add     rsp, 48                                 ; 4005 _ 48: 83. C4, 30
        pop     rbx                                     ; 4009 _ 5B
        pop     rdi                                     ; 400A _ 5F
        pop     rsi                                     ; 400B _ 5E
        pop     r14                                     ; 400C _ 41: 5E
        pop     rbp                                     ; 400E _ 5D
        ret                                             ; 400F _ C3
_ProcessUpdateImage ENDP

_InitializeUpdateDriver PROC
        push    rbp                                     ; 4010 _ 55
        mov     rbp, rsp                                ; 4011 _ 48: 89. E5
        push    r14                                     ; 4014 _ 41: 56
        push    rsi                                     ; 4016 _ 56
        push    rdi                                     ; 4017 _ 57
        push    rbx                                     ; 4018 _ 53
        sub     rsp, 128                                ; 4019 _ 48: 81. EC, 00000080
        mov     rsi, rcx                                ; 4020 _ 48: 89. CE
        mov     rax, qword ptr [_gST]                   ; 4023 _ 48: 8B. 05, 00005116(rel)
        mov     rax, qword ptr [rax+40H]                ; 402A _ 48: 8B. 40, 40
        test    rax, rax                                ; 402E _ 48: 85. C0
        jz      ?_218                                   ; 4031 _ 74, 2F
        mov     rcx, rax                                ; 4033 _ 48: 89. C1
        call    qword ptr [rax+30H]                     ; 4036 _ FF. 50, 30
        mov     rax, qword ptr [_gST]                   ; 4039 _ 48: 8B. 05, 00005100(rel)
        mov     rax, qword ptr [rax+40H]                ; 4040 _ 48: 8B. 40, 40
        mov     rcx, rax                                ; 4044 _ 48: 89. C1
        mov     edx, 14                                 ; 4047 _ BA, 0000000E
        call    qword ptr [rax+28H]                     ; 404C _ FF. 50, 28
        mov     rax, qword ptr [_gST]                   ; 404F _ 48: 8B. 05, 000050EA(rel)
        mov     rax, qword ptr [rax+40H]                ; 4056 _ 48: 8B. 40, 40
        mov     rcx, rax                                ; 405A _ 48: 89. C1
        xor     edx, edx                                ; 405D _ 31. D2
        call    qword ptr [rax+40H]                     ; 405F _ FF. 50, 40
?_218:  lea     rcx, ptr [_gEfiCallerIdGuid]            ; 4062 _ 48: 8D. 0D, 00004DE7(rel)
        lea     r8, ptr [_UpdateDriverDxeStrings]       ; 4069 _ 4C: 8D. 05, 00004ED0(rel)
        xor     edx, edx                                ; 4070 _ 31. D2
        xor     r9d, r9d                                ; 4072 _ 45: 31. C9
        call    _HiiAddPackages                         ; 4075 _ E8, FFFFF2B2
        mov     qword ptr [_gHiiHandle], rax            ; 407A _ 48: 89. 05, 00005107(rel)
        call    _DebugAssertEnabled                     ; 4081 _ E8, FFFFC1C6
        test    al, al                                  ; 4086 _ 84. C0
        jz      Unnamed_1_3E6E                          ; 4088 _ 74, 24
        mov     rax, qword ptr [_gHiiHandle]            ; 408A _ 48: 8B. 05, 000050F7(rel)
        test    rax, rax                                ; 4091 _ 48: 85. C0
        jnz     Unnamed_1_3E6E                          ; 4094 _ 75, 18
        lea     rcx, ptr [?_409]                        ; 4096 _ 48: 8D. 0D, 000036DF(rel)
        lea     r8, ptr [?_410]                         ; 409D _ 4C: 8D. 05, 0000375F(rel)
        mov     edx, 635                                ; 40A4 _ BA, 0000027B
        call    _DebugAssert                            ; 40A9 _ E8, FFFFC19D
Unnamed_1_3E6E:
        mov     rax, qword ptr [_gBS]                   ; 40AE _ 48: 8B. 05, 00005093(rel)
        mov     dword ptr [rsp+28H], 2                  ; 40B5 _ C7. 44 24, 28, 00000002
        mov     qword ptr [rsp+20H], 0                  ; 40BD _ 48: C7. 44 24, 20, 00000000
        lea     rdx, ptr [_gEfiLoadedImageProtocolGuid] ; 40C6 _ 48: 8D. 15, 00004E0B(rel)
        lea     r8, ptr [rbp-28H]                       ; 40CD _ 4C: 8D. 45, D8
        mov     rcx, rsi                                ; 40D1 _ 48: 89. F1
        mov     r9, rsi                                 ; 40D4 _ 49: 89. F1
        call    qword ptr [rax+118H]                    ; 40D7 _ FF. 90, 00000118
        mov     rsi, rax                                ; 40DD _ 48: 89. C6
        test    rsi, rsi                                ; 40E0 _ 48: 85. F6
        js      Unnamed_1_41C7                          ; 40E3 _ 0F 88, 0000031E
        mov     rax, qword ptr [rbp-28H]                ; 40E9 _ 48: 8B. 45, D8
        mov     rcx, qword ptr [rax+18H]                ; 40ED _ 48: 8B. 48, 18
        mov     rax, qword ptr [_gBS]                   ; 40F1 _ 48: 8B. 05, 00005050(rel)
        lea     rdx, ptr [_gEfiFirmwareVolume2ProtocolGuid]; 40F8 _ 48: 8D. 15, 00004DB9(rel)
        lea     r8, ptr [rbp-30H]                       ; 40FF _ 4C: 8D. 45, D0
        call    qword ptr [rax+98H]                     ; 4103 _ FF. 90, 00000098
        mov     rsi, 800000000000000EH                  ; 4109 _ 48: BE, 800000000000000E
        test    rax, rax                                ; 4113 _ 48: 85. C0
        js      Unnamed_1_41C7                          ; 4116 _ 0F 88, 000002EB
        mov     rax, qword ptr [rbp-28H]                ; 411C _ 48: 8B. 45, D8
        mov     rdi, qword ptr [rax+20H]                ; 4120 _ 48: 8B. 78, 20
        mov     rsi, 800000000000000EH                  ; 4124 _ 48: BE, 800000000000000E
        jmp     ?_219                                   ; 412E _ EB, 0B

Unnamed_1_3EF0:
        mov     rcx, rdi                                ; 4130 _ 48: 89. F9
        call    _NextDevicePathNode                     ; 4133 _ E8, FFFFEA02
        mov     rdi, rax                                ; 4138 _ 48: 89. C7
?_219:  mov     rcx, rdi                                ; 413B _ 48: 89. F9
        call    _IsDevicePathEnd                        ; 413E _ E8, FFFFE958
        test    al, al                                  ; 4143 _ 84. C0
        jne     Unnamed_1_41C7                          ; 4145 _ 0F 85, 000002BC
        mov     rcx, rdi                                ; 414B _ 48: 89. F9
        call    _EfiGetNameGuidFromFwVolDevicePathNode  ; 414E _ E8, FFFFEE19
        test    rax, rax                                ; 4153 _ 48: 85. C0
        jz      Unnamed_1_3EF0                          ; 4156 _ 74, D8
        mov     rsi, 800000000000000EH                  ; 4158 _ 48: BE, 800000000000000E
        test    rdi, rdi                                ; 4162 _ 48: 85. FF
        je      Unnamed_1_41C7                          ; 4165 _ 0F 84, 0000029C
        mov     rcx, rdi                                ; 416B _ 48: 89. F9
        call    _DevicePathNodeLength                   ; 416E _ E8, FFFFE97F
        mov     rcx, rax                                ; 4173 _ 48: 89. C1
        mov     rdx, rdi                                ; 4176 _ 48: 89. FA
        call    _AllocateCopyPool                       ; 4179 _ E8, FFFFD5C6
        mov     rdi, rax                                ; 417E _ 48: 89. C7
        mov     qword ptr [rbp-40H], 0                  ; 4181 _ 48: C7. 45, C0, 00000000
        mov     qword ptr [rbp-48H], 0                  ; 4189 _ 48: C7. 45, B8, 00000000
        mov     rax, qword ptr [rbp-30H]                ; 4191 _ 48: 8B. 45, D0
        lea     rbx, ptr [rdi+4H]                       ; 4195 _ 48: 8D. 5F, 04
        lea     rcx, ptr [rbp-40H]                      ; 4199 _ 48: 8D. 4D, C0
        lea     rdx, ptr [rbp-48H]                      ; 419D _ 48: 8D. 55, B8
        lea     r14, ptr [rbp-54H]                      ; 41A1 _ 4C: 8D. 75, AC
        mov     qword ptr [rsp+30H], r14                ; 41A5 _ 4C: 89. 74 24, 30
        mov     qword ptr [rsp+28H], rdx                ; 41AA _ 48: 89. 54 24, 28
        mov     qword ptr [rsp+20H], rcx                ; 41AF _ 48: 89. 4C 24, 20
        mov     rcx, rax                                ; 41B4 _ 48: 89. C1
        mov     rdx, rbx                                ; 41B7 _ 48: 89. DA
        mov     r8d, 16                                 ; 41BA _ 41: B8, 00000010
        xor     r9d, r9d                                ; 41C0 _ 45: 31. C9
        call    qword ptr [rax+18H]                     ; 41C3 _ FF. 50, 18
        mov     rsi, rax                                ; 41C6 _ 48: 89. C6
        test    rsi, rsi                                ; 41C9 _ 48: 85. F6
        jns     ?_220                                   ; 41CC _ 79, 0D
        mov     rcx, rdi                                ; 41CE _ 48: 89. F9
        call    _FreePool                               ; 41D1 _ E8, FFFFD581
        jmp     Unnamed_1_41C7                          ; 41D6 _ E9, 0000022C

?_220:  mov     rcx, qword ptr [rbp-40H]                ; 41DB _ 48: 8B. 4D, C0
        test    rcx, rcx                                ; 41DF _ 48: 85. C9
        jz      ?_221                                   ; 41E2 _ 74, 0D
        call    _FreePool                               ; 41E4 _ E8, FFFFD56E
        mov     qword ptr [rbp-40H], 0                  ; 41E9 _ 48: C7. 45, C0, 00000000
?_221:  lea     rcx, ptr [_gEfiCallerIdGuid]            ; 41F1 _ 48: 8D. 0D, 00004C58(rel)
        mov     rdx, rbx                                ; 41F8 _ 48: 89. DA
        call    _CompareGuid                            ; 41FB _ E8, FFFFC35D
        mov     bl, al                                  ; 4200 _ 88. C3
        mov     rcx, rdi                                ; 4202 _ 48: 89. F9
        call    _FreePool                               ; 4205 _ E8, FFFFD54D
        mov     rsi, 800000000000000EH                  ; 420A _ 48: BE, 800000000000000E
        test    bl, bl                                  ; 4214 _ 84. DB
        je      Unnamed_1_41C7                          ; 4216 _ 0F 84, 000001EB
        mov     qword ptr [rbp-40H], 0                  ; 421C _ 48: C7. 45, C0, 00000000
        mov     qword ptr [rbp-48H], 0                  ; 4224 _ 48: C7. 45, B8, 00000000
        mov     rax, qword ptr [rbp-30H]                ; 422C _ 48: 8B. 45, D0
        mov     qword ptr [rsp+30H], r14                ; 4230 _ 4C: 89. 74 24, 30
        lea     rdi, ptr [rbp-50H]                      ; 4235 _ 48: 8D. 7D, B0
        mov     qword ptr [rsp+28H], rdi                ; 4239 _ 48: 89. 7C 24, 28
        lea     rbx, ptr [rbp-49H]                      ; 423E _ 48: 8D. 5D, B7
        mov     qword ptr [rsp+20H], rbx                ; 4242 _ 48: 89. 5C 24, 20
        lea     rdx, ptr [_gEfiConfigFileNameGuid]      ; 4247 _ 48: 8D. 15, 00004C1A(rel)
        lea     r8, ptr [rbp-40H]                       ; 424E _ 4C: 8D. 45, C0
        lea     r9, ptr [rbp-48H]                       ; 4252 _ 4C: 8D. 4D, B8
        mov     rcx, rax                                ; 4256 _ 48: 89. C1
        call    qword ptr [rax+10H]                     ; 4259 _ FF. 50, 10
        mov     rsi, rax                                ; 425C _ 48: 89. C6
        test    rsi, rsi                                ; 425F _ 48: 85. F6
        js      Unnamed_1_41C7                          ; 4262 _ 0F 88, 0000019F
        mov     rsi, 800000000000000EH                  ; 4268 _ 48: BE, 800000000000000E
        cmp     byte ptr [rbp-49H], 1                   ; 4272 _ 80. 7D, B7, 01
        jne     Unnamed_1_41C7                          ; 4276 _ 0F 85, 0000018B
        mov     qword ptr [rbp-60H], 0                  ; 427C _ 48: C7. 45, A0, 00000000
        mov     qword ptr [rbp-68H], 0                  ; 4284 _ 48: C7. 45, 98, 00000000
        mov     rdx, qword ptr [rbp-48H]                ; 428C _ 48: 8B. 55, B8
        mov     rcx, qword ptr [rbp-40H]                ; 4290 _ 48: 8B. 4D, C0
        lea     r8, ptr [rbp-68H]                       ; 4294 _ 4C: 8D. 45, 98
        lea     r9, ptr [rbp-60H]                       ; 4298 _ 4C: 8D. 4D, A0
        call    _ParseUpdateDataFile                    ; 429C _ E8, 00000A31
        mov     rsi, rax                                ; 42A1 _ 48: 89. C6
        mov     rcx, qword ptr [rbp-40H]                ; 42A4 _ 48: 8B. 4D, C0
        test    rcx, rcx                                ; 42A8 _ 48: 85. C9
        jz      ?_222                                   ; 42AB _ 74, 0D
        call    _FreePool                               ; 42AD _ E8, FFFFD4A5
        mov     qword ptr [rbp-40H], 0                  ; 42B2 _ 48: C7. 45, C0, 00000000
?_222:  test    rsi, rsi                                ; 42BA _ 48: 85. F6
        js      Unnamed_1_41C7                          ; 42BD _ 0F 88, 00000144
        call    _DebugAssertEnabled                     ; 42C3 _ E8, FFFFBF84
        test    al, al                                  ; 42C8 _ 84. C0
        jz      Unnamed_1_40AB                          ; 42CA _ 74, 1F
        cmp     qword ptr [rbp-60H], 0                  ; 42CC _ 48: 83. 7D, A0, 00
        jnz     Unnamed_1_40AB                          ; 42D1 _ 75, 18
        lea     rcx, ptr [?_409]                        ; 42D3 _ 48: 8D. 0D, 000034A2(rel)
        lea     r8, ptr [?_411]                         ; 42DA _ 4C: 8D. 05, 0000353D(rel)
        mov     edx, 758                                ; 42E1 _ BA, 000002F6
        call    _DebugAssert                            ; 42E6 _ E8, FFFFBF60
Unnamed_1_40AB:
        mov     qword ptr [rbp-40H], 0                  ; 42EB _ 48: C7. 45, C0, 00000000
        mov     qword ptr [rbp-48H], 0                  ; 42F3 _ 48: C7. 45, B8, 00000000
        mov     rax, qword ptr [rbp-30H]                ; 42FB _ 48: 8B. 45, D0
        mov     qword ptr [rsp+30H], r14                ; 42FF _ 4C: 89. 74 24, 30
        mov     qword ptr [rsp+28H], rdi                ; 4304 _ 48: 89. 7C 24, 28
        mov     qword ptr [rsp+20H], rbx                ; 4309 _ 48: 89. 5C 24, 20
        lea     rdx, ptr [_gEfiUpdateDataFileGuid]      ; 430E _ 48: 8D. 15, 00004B63(rel)
        lea     r8, ptr [rbp-40H]                       ; 4315 _ 4C: 8D. 45, C0
        lea     r9, ptr [rbp-48H]                       ; 4319 _ 4C: 8D. 4D, B8
        mov     rcx, rax                                ; 431D _ 48: 89. C1
        call    qword ptr [rax+10H]                     ; 4320 _ FF. 50, 10
        mov     rsi, rax                                ; 4323 _ 48: 89. C6
        test    rsi, rsi                                ; 4326 _ 48: 85. F6
        js      Unnamed_1_41C7                          ; 4329 _ 0F 88, 000000D8
        mov     rsi, 800000000000000EH                  ; 432F _ 48: BE, 800000000000000E
        cmp     byte ptr [rbp-49H], 1                   ; 4339 _ 80. 7D, B7, 01
        jne     Unnamed_1_41C7                          ; 433D _ 0F 85, 000000C4
        mov     qword ptr [rbp-38H], 0                  ; 4343 _ 48: C7. 45, C8, 00000000
        mov     rdx, qword ptr [rbp-48H]                ; 434B _ 48: 8B. 55, B8
        mov     rcx, qword ptr [rbp-40H]                ; 434F _ 48: 8B. 4D, C0
        lea     r8, ptr [rbp-38H]                       ; 4353 _ 4C: 8D. 45, C8
        call    _ProcessUpdateImage                     ; 4357 _ E8, FFFFFBE7
        mov     rsi, rax                                ; 435C _ 48: 89. C6
        test    rsi, rsi                                ; 435F _ 48: 85. F6
        jns     ?_223                                   ; 4362 _ 79, 0E
        mov     rcx, qword ptr [rbp-40H]                ; 4364 _ 48: 8B. 4D, C0
        call    _FreePool                               ; 4368 _ E8, FFFFD3EA
        jmp     Unnamed_1_41C7                          ; 436D _ E9, 00000095

?_223:  mov     rcx, qword ptr [_gHiiHandle]            ; 4372 _ 48: 8B. 0D, 00004E0F(rel)
        mov     edx, 2                                  ; 4379 _ BA, 00000002
        xor     r8d, r8d                                ; 437E _ 45: 31. C0
        call    _HiiGetString                           ; 4381 _ E8, FFFFF0F8
        mov     rdi, rax                                ; 4386 _ 48: 89. C7
        test    rdi, rdi                                ; 4389 _ 48: 85. FF
        jz      ?_224                                   ; 438C _ 74, 10
        mov     rcx, rdi                                ; 438E _ 48: 89. F9
        call    _Print                                  ; 4391 _ E8, FFFFEBA0
        mov     rcx, rdi                                ; 4396 _ 48: 89. F9
        call    _FreePool                               ; 4399 _ E8, FFFFD3B9
?_224:  mov     rbx, -1                                 ; 439E _ 48: C7. C3, FFFFFFFF
        mov     rdi, qword ptr [rbp-60H]                ; 43A5 _ 48: 8B. 7D, A0
        jmp     ?_225                                   ; 43A9 _ EB, 18

Unnamed_1_416B:
        mov     rcx, qword ptr [rbp-38H]                ; 43AB _ 48: 8B. 4D, C8
        mov     rdx, rdi                                ; 43AF _ 48: 89. FA
        lea     rdi, ptr [rdi+38H]                      ; 43B2 _ 48: 8D. 7F, 38
        call    _PerformUpdate                          ; 43B6 _ E8, FFFFF94C
        mov     rsi, rax                                ; 43BB _ 48: 89. C6
        test    rsi, rsi                                ; 43BE _ 48: 85. F6
        js      ?_226                                   ; 43C1 _ 78, 0E
?_225:  inc     rbx                                     ; 43C3 _ 48: FF. C3
        cmp     rbx, qword ptr [rbp-68H]                ; 43C6 _ 48: 3B. 5D, 98
        jc      Unnamed_1_416B                          ; 43CA _ 72, DF
        test    rsi, rsi                                ; 43CC _ 48: 85. F6
        jns     ?_227                                   ; 43CF _ 79, 18
?_226:  mov     rcx, qword ptr [rbp-60H]                ; 43D1 _ 48: 8B. 4D, A0
        test    rcx, rcx                                ; 43D5 _ 48: 85. C9
        jz      Unnamed_1_41C7                          ; 43D8 _ 74, 2D
        call    _FreePool                               ; 43DA _ E8, FFFFD378
        mov     qword ptr [rbp-60H], 0                  ; 43DF _ 48: C7. 45, A0, 00000000
        jmp     Unnamed_1_41C7                          ; 43E7 _ EB, 1E

?_227:  mov     rax, qword ptr [_gRT]                   ; 43E9 _ 48: 8B. 05, 00004D60(rel)
        xor     ecx, ecx                                ; 43F0 _ 31. C9
        xor     edx, edx                                ; 43F2 _ 31. D2
        xor     r8d, r8d                                ; 43F4 _ 45: 31. C0
        xor     r9d, r9d                                ; 43F7 _ 45: 31. C9
        call    qword ptr [rax+68H]                     ; 43FA _ FF. 50, 68
        mov     rsi, 8000000000000015H                  ; 43FD _ 48: BE, 8000000000000015
Unnamed_1_41C7:
        mov     rax, rsi                                ; 4407 _ 48: 89. F0
        add     rsp, 128                                ; 440A _ 48: 81. C4, 00000080
        pop     rbx                                     ; 4411 _ 5B
        pop     rdi                                     ; 4412 _ 5F
        pop     rsi                                     ; 4413 _ 5E
        pop     r14                                     ; 4414 _ 41: 5E
        pop     rbp                                     ; 4416 _ 5D
        ret                                             ; 4417 _ C3
_InitializeUpdateDriver ENDP

_ProfileGetLine PROC
        push    rbp                                     ; 4418 _ 55
        mov     rbp, rsp                                ; 4419 _ 48: 89. E5
        push    r14                                     ; 441C _ 41: 56
        push    rsi                                     ; 441E _ 56
        push    rdi                                     ; 441F _ 57
        push    rbx                                     ; 4420 _ 53
        sub     rsp, 32                                 ; 4421 _ 48: 83. EC, 20
        mov     rdi, r9                                 ; 4425 _ 4C: 89. CF
        mov     r14, r8                                 ; 4428 _ 4D: 89. C6
        mov     rsi, rdx                                ; 442B _ 48: 89. D6
        mov     rbx, rcx                                ; 442E _ 48: 89. CB
        lea     rcx, ptr [rbx+rsi]                      ; 4431 _ 48: 8D. 0C 33
        mov     rax, rbx                                ; 4435 _ 48: 89. D8
        jmp     ?_228                                   ; 4438 _ EB, 03

Unnamed_1_41FA:
        inc     rax                                     ; 443A _ 48: FF. C0
?_228:  cmp     rax, rcx                                ; 443D _ 48: 39. C8
        jnc     ?_229                                   ; 4440 _ 73, 05
        cmp     byte ptr [rax], 13                      ; 4442 _ 80. 38, 0D
        jnz     Unnamed_1_41FA                          ; 4445 _ 75, F3
?_229:  dec     rcx                                     ; 4447 _ 48: FF. C9
        cmp     rax, rcx                                ; 444A _ 48: 39. C8
        jnc     Unnamed_1_4224                          ; 444D _ 73, 15
        mov     rsi, rax                                ; 444F _ 48: 89. C6
        sub     rsi, rbx                                ; 4452 _ 48: 29. DE
        cmp     byte ptr [rax+1H], 10                   ; 4455 _ 80. 78, 01, 0A
        jnz     ?_230                                   ; 4459 _ 75, 06
        add     rsi, 2                                  ; 445B _ 48: 83. C6, 02
        jmp     Unnamed_1_4224                          ; 445F _ EB, 03

?_230:  inc     rsi                                     ; 4461 _ 48: FF. C6
Unnamed_1_4224:
        mov     rdx, qword ptr [rdi]                    ; 4464 _ 48: 8B. 17
        cmp     rsi, rdx                                ; 4467 _ 48: 39. D6
        jbe     ?_231                                   ; 446A _ 76, 0F
        mov     qword ptr [rdi], rsi                    ; 446C _ 48: 89. 37
        mov     rax, 8000000000000005H                  ; 446F _ 48: B8, 8000000000000005
        jmp     ?_232                                   ; 4479 _ EB, 1E

?_231:  mov     rcx, r14                                ; 447B _ 4C: 89. F1
        xor     r8d, r8d                                ; 447E _ 45: 31. C0
        call    _SetMem                                 ; 4481 _ E8, FFFFBF52
        mov     qword ptr [rdi], rsi                    ; 4486 _ 48: 89. 37
        mov     rcx, r14                                ; 4489 _ 4C: 89. F1
        mov     rdx, rbx                                ; 448C _ 48: 89. DA
        mov     r8, rsi                                 ; 448F _ 49: 89. F0
        call    _CopyMem                                ; 4492 _ E8, FFFFBFAD
        xor     eax, eax                                ; 4497 _ 31. C0
?_232:  add     rsp, 32                                 ; 4499 _ 48: 83. C4, 20
        pop     rbx                                     ; 449D _ 5B
        pop     rdi                                     ; 449E _ 5F
        pop     rsi                                     ; 449F _ 5E
        pop     r14                                     ; 44A0 _ 41: 5E
        pop     rbp                                     ; 44A2 _ 5D
        ret                                             ; 44A3 _ C3
_ProfileGetLine ENDP

_ProfileTrim PROC
        push    rsi                                     ; 44A4 _ 56
        mov     rax, qword ptr [rdx]                    ; 44A5 _ 48: 8B. 02
        test    rax, rax                                ; 44A8 _ 48: 85. C0
        je      Unnamed_1_42FE                          ; 44AB _ 0F 84, 0000008D
        lea     r8, ptr [rcx+rax-1H]                    ; 44B1 _ 4C: 8D. 44 01, FF
        mov     rax, 100002600H                         ; 44B6 _ 48: B8, 0000000100002600
        jmp     ?_233                                   ; 44C0 _ EB, 13

Unnamed_1_4282:
        movzx   esi, byte ptr [r8]                      ; 44C2 _ 41: 0F B6. 30
        cmp     rsi, 32                                 ; 44C6 _ 48: 83. FE, 20
        ja      Unnamed_1_42A3                          ; 44CA _ 77, 17
        bt      rax, rsi                                ; 44CC _ 48: 0F A3. F0
        jnc     Unnamed_1_42A3                          ; 44D0 _ 73, 11
        dec     r8                                      ; 44D2 _ 49: FF. C8
?_233:  cmp     r8, rcx                                 ; 44D5 _ 49: 39. C8
        jnc     Unnamed_1_4282                          ; 44D8 _ 73, E8
        mov     qword ptr [rdx], 0                      ; 44DA _ 48: C7. 02, 00000000
        jmp     Unnamed_1_42FE                          ; 44E1 _ EB, 5B

Unnamed_1_42A3:
        mov     r9d, 1                                  ; 44E3 _ 41: B9, 00000001
        sub     r9, rcx                                 ; 44E9 _ 49: 29. C9
        add     r9, r8                                  ; 44EC _ 4D: 01. C1
        xor     r10d, r10d                              ; 44EF _ 45: 31. D2
        mov     r11, 100002600H                         ; 44F2 _ 49: BB, 0000000100002600
        jmp     ?_234                                   ; 44FC _ EB, 03

Unnamed_1_42BE:
        inc     r10                                     ; 44FE _ 49: FF. C2
?_234:  lea     rax, ptr [rcx+r10]                      ; 4501 _ 4A: 8D. 04 11
        cmp     rax, r8                                 ; 4505 _ 4C: 39. C0
        ja      Unnamed_1_42D9                          ; 4508 _ 77, 0F
        movzx   esi, byte ptr [rax]                     ; 450A _ 0F B6. 30
        cmp     rsi, 32                                 ; 450D _ 48: 83. FE, 20
        ja      Unnamed_1_42D9                          ; 4511 _ 77, 06
        bt      r11, rsi                                ; 4513 _ 49: 0F A3. F3
        jc      Unnamed_1_42BE                          ; 4517 _ 72, E5
Unnamed_1_42D9:
        test    r10, r10                                ; 4519 _ 4D: 85. D2
        jnz     ?_235                                   ; 451C _ 75, 05
        mov     qword ptr [rdx], r9                     ; 451E _ 4C: 89. 0A
        jmp     Unnamed_1_42FE                          ; 4521 _ EB, 1B

?_235:  lea     rsi, ptr [r8+1H]                        ; 4523 _ 49: 8D. 70, 01
        sub     rsi, rax                                ; 4527 _ 48: 29. C6
        mov     qword ptr [rdx], rsi                    ; 452A _ 48: 89. 32
        jmp     ?_236                                   ; 452D _ EB, 0A

Unnamed_1_42EF:
        mov     dl, byte ptr [rax]                      ; 452F _ 8A. 10
        mov     byte ptr [rcx], dl                      ; 4531 _ 88. 11
        inc     rcx                                     ; 4533 _ 48: FF. C1
        inc     rax                                     ; 4536 _ 48: FF. C0
?_236:  cmp     rax, r8                                 ; 4539 _ 4C: 39. C0
        jbe     Unnamed_1_42EF                          ; 453C _ 76, F1
Unnamed_1_42FE:
        pop     rsi                                     ; 453E _ 5E
        ret                                             ; 453F _ C3
_ProfileTrim ENDP

_ProfileGetComments PROC
        push    rbp                                     ; 4540 _ 55
        mov     rbp, rsp                                ; 4541 _ 48: 89. E5
        push    r14                                     ; 4544 _ 41: 56
        push    rsi                                     ; 4546 _ 56
        push    rdi                                     ; 4547 _ 57
        push    rbx                                     ; 4548 _ 53
        sub     rsp, 32                                 ; 4549 _ 48: 83. EC, 20
        mov     rbx, r8                                 ; 454D _ 4C: 89. C3
        mov     rsi, rdx                                ; 4550 _ 48: 89. D6
        mov     r14, rcx                                ; 4553 _ 49: 89. CE
        mov     ecx, 16                                 ; 4556 _ B9, 00000010
        call    _AllocatePool                           ; 455B _ E8, FFFFD0FF
        mov     rdi, rax                                ; 4560 _ 48: 89. C7
        mov     rax, 8000000000000009H                  ; 4563 _ 48: B8, 8000000000000009
        test    rdi, rdi                                ; 456D _ 48: 85. FF
        jz      Unnamed_1_4378                          ; 4570 _ 74, 46
        mov     rax, qword ptr [rbx]                    ; 4572 _ 48: 8B. 03
        mov     qword ptr [rdi+8H], rax                 ; 4575 _ 48: 89. 47, 08
        mov     qword ptr [rbx], rdi                    ; 4579 _ 48: 89. 3B
        lea     rcx, ptr [rsi+1H]                       ; 457C _ 48: 8D. 4E, 01
        call    _AllocatePool                           ; 4580 _ E8, FFFFD0DA
        mov     qword ptr [rdi], rax                    ; 4585 _ 48: 89. 07
        test    rax, rax                                ; 4588 _ 48: 85. C0
        jnz     ?_237                                   ; 458B _ 75, 14
        mov     rcx, rdi                                ; 458D _ 48: 89. F9
        call    _FreePool                               ; 4590 _ E8, FFFFD1C2
        mov     rax, 8000000000000009H                  ; 4595 _ 48: B8, 8000000000000009
        jmp     Unnamed_1_4378                          ; 459F _ EB, 17

?_237:  mov     rcx, rax                                ; 45A1 _ 48: 89. C1
        mov     rdx, r14                                ; 45A4 _ 4C: 89. F2
        mov     r8, rsi                                 ; 45A7 _ 49: 89. F0
        call    _CopyMem                                ; 45AA _ E8, FFFFBE95
        mov     rax, qword ptr [rdi]                    ; 45AF _ 48: 8B. 07
        mov     byte ptr [rax+rsi], 0                   ; 45B2 _ C6. 04 30, 00
        xor     eax, eax                                ; 45B6 _ 31. C0
Unnamed_1_4378:
        add     rsp, 32                                 ; 45B8 _ 48: 83. C4, 20
        pop     rbx                                     ; 45BC _ 5B
        pop     rdi                                     ; 45BD _ 5F
        pop     rsi                                     ; 45BE _ 5E
        pop     r14                                     ; 45BF _ 41: 5E
        pop     rbp                                     ; 45C1 _ 5D
        ret                                             ; 45C2 _ C3
_ProfileGetComments ENDP

_ProfileGetSection PROC
        push    rbp                                     ; 45C3 _ 55
        mov     rbp, rsp                                ; 45C4 _ 48: 89. E5
        push    r14                                     ; 45C7 _ 41: 56
        push    rsi                                     ; 45C9 _ 56
        push    rdi                                     ; 45CA _ 57
        push    rbx                                     ; 45CB _ 53
        sub     rsp, 48                                 ; 45CC _ 48: 83. EC, 30
        mov     r14, r8                                 ; 45D0 _ 4D: 89. C6
        mov     rsi, rcx                                ; 45D3 _ 48: 89. CE
        lea     rcx, ptr [rdx+rsi-1H]                   ; 45D6 _ 48: 8D. 4C 32, FF
        xor     eax, eax                                ; 45DB _ 31. C0
        jmp     ?_238                                   ; 45DD _ EB, 03

Unnamed_1_439F:
        dec     rcx                                     ; 45DF _ 48: FF. C9
?_238:  cmp     rcx, rsi                                ; 45E2 _ 48: 39. F1
        jbe     Unnamed_1_444A                          ; 45E5 _ 0F 86, 0000009F
        cmp     byte ptr [rcx], 93                      ; 45EB _ 80. 39, 5D
        jnz     Unnamed_1_439F                          ; 45EE _ 75, EF
        mov     rax, rsi                                ; 45F0 _ 48: 89. F0
        not     rax                                     ; 45F3 _ 48: F7. D0
        add     rcx, rax                                ; 45F6 _ 48: 01. C1
        mov     qword ptr [rbp-28H], rcx                ; 45F9 _ 48: 89. 4D, D8
        inc     rsi                                     ; 45FD _ 48: FF. C6
        lea     rdx, ptr [rbp-28H]                      ; 4600 _ 48: 8D. 55, D8
        mov     rcx, rsi                                ; 4604 _ 48: 89. F1
        call    _ProfileTrim                            ; 4607 _ E8, FFFFFE98
        xor     eax, eax                                ; 460C _ 31. C0
        mov     rbx, qword ptr [rbp-28H]                ; 460E _ 48: 8B. 5D, D8
        test    rbx, rbx                                ; 4612 _ 48: 85. DB
        jz      Unnamed_1_444A                          ; 4615 _ 74, 73
        mov     ecx, 40                                 ; 4617 _ B9, 00000028
        call    _AllocatePool                           ; 461C _ E8, FFFFD03E
        mov     rdi, rax                                ; 4621 _ 48: 89. C7
        mov     rax, 8000000000000009H                  ; 4624 _ 48: B8, 8000000000000009
        test    rdi, rdi                                ; 462E _ 48: 85. FF
        jz      Unnamed_1_444A                          ; 4631 _ 74, 57
        mov     qword ptr [rdi], 0                      ; 4633 _ 48: C7. 07, 00000000
        mov     qword ptr [rdi+8H], rbx                 ; 463A _ 48: 89. 5F, 08
        mov     qword ptr [rdi+10H], 0                  ; 463E _ 48: C7. 47, 10, 00000000
        mov     qword ptr [rdi+18H], 0                  ; 4646 _ 48: C7. 47, 18, 00000000
        mov     rax, qword ptr [r14]                    ; 464E _ 49: 8B. 06
        mov     qword ptr [rdi+20H], rax                ; 4651 _ 48: 89. 47, 20
        mov     qword ptr [r14], rdi                    ; 4655 _ 49: 89. 3E
        lea     rcx, ptr [rbx+1H]                       ; 4658 _ 48: 8D. 4B, 01
        call    _AllocatePool                           ; 465C _ E8, FFFFCFFE
        mov     rcx, rax                                ; 4661 _ 48: 89. C1
        mov     rax, 8000000000000009H                  ; 4664 _ 48: B8, 8000000000000009
        mov     qword ptr [rdi], rcx                    ; 466E _ 48: 89. 0F
        test    rcx, rcx                                ; 4671 _ 48: 85. C9
        jz      Unnamed_1_444A                          ; 4674 _ 74, 14
        mov     rdx, rsi                                ; 4676 _ 48: 89. F2
        mov     r8, rbx                                 ; 4679 _ 49: 89. D8
        call    _CopyMem                                ; 467C _ E8, FFFFBDC3
        mov     rax, qword ptr [rdi]                    ; 4681 _ 48: 8B. 07
        mov     byte ptr [rax+rbx], 0                   ; 4684 _ C6. 04 18, 00
        xor     eax, eax                                ; 4688 _ 31. C0
Unnamed_1_444A:
        add     rsp, 48                                 ; 468A _ 48: 83. C4, 30
        pop     rbx                                     ; 468E _ 5B
        pop     rdi                                     ; 468F _ 5F
        pop     rsi                                     ; 4690 _ 5E
        pop     r14                                     ; 4691 _ 41: 5E
        pop     rbp                                     ; 4693 _ 5D
        ret                                             ; 4694 _ C3
_ProfileGetSection ENDP

_ProfileGetEntry PROC
        push    rbp                                     ; 4695 _ 55
        mov     rbp, rsp                                ; 4696 _ 48: 89. E5
        push    r15                                     ; 4699 _ 41: 57
        push    r14                                     ; 469B _ 41: 56
        push    r13                                     ; 469D _ 41: 55
        push    r12                                     ; 469F _ 41: 54
        push    rsi                                     ; 46A1 _ 56
        push    rdi                                     ; 46A2 _ 57
        push    rbx                                     ; 46A3 _ 53
        sub     rsp, 40                                 ; 46A4 _ 48: 83. EC, 28
        mov     r15, r8                                 ; 46A8 _ 4D: 89. C7
        mov     r14, rcx                                ; 46AB _ 49: 89. CE
        lea     rbx, ptr [rdx+r14-1H]                   ; 46AE _ 4A: 8D. 5C 32, FF
        mov     rsi, r14                                ; 46B3 _ 4C: 89. F6
        xor     eax, eax                                ; 46B6 _ 31. C0
        jmp     ?_239                                   ; 46B8 _ EB, 03

Unnamed_1_447A:
        inc     rsi                                     ; 46BA _ 48: FF. C6
?_239:  cmp     rsi, rbx                                ; 46BD _ 48: 39. DE
        ja      Unnamed_1_45D7                          ; 46C0 _ 0F 87, 00000151
        cmp     byte ptr [rsi], 61                      ; 46C6 _ 80. 3E, 3D
        jnz     Unnamed_1_447A                          ; 46C9 _ 75, EF
        mov     rax, rsi                                ; 46CB _ 48: 89. F0
        sub     rax, r14                                ; 46CE _ 4C: 29. F0
        mov     qword ptr [rbp-40H], rax                ; 46D1 _ 48: 89. 45, C0
        lea     rdx, ptr [rbp-40H]                      ; 46D5 _ 48: 8D. 55, C0
        mov     rcx, r14                                ; 46D9 _ 4C: 89. F1
        call    _ProfileTrim                            ; 46DC _ E8, FFFFFDC3
        xor     eax, eax                                ; 46E1 _ 31. C0
        mov     r12, qword ptr [rbp-40H]                ; 46E3 _ 4C: 8B. 65, C0
        test    r12, r12                                ; 46E7 _ 4D: 85. E4
        je      Unnamed_1_45D7                          ; 46EA _ 0F 84, 00000127
        mov     r13, qword ptr [r15]                    ; 46F0 _ 4D: 8B. 2F
        xor     eax, eax                                ; 46F3 _ 31. C0
        test    r13, r13                                ; 46F5 _ 4D: 85. ED
        je      Unnamed_1_45D7                          ; 46F8 _ 0F 84, 00000119
        mov     ecx, 40                                 ; 46FE _ B9, 00000028
        call    _AllocatePool                           ; 4703 _ E8, FFFFCF57
        mov     rdi, rax                                ; 4708 _ 48: 89. C7
        mov     rax, 8000000000000009H                  ; 470B _ 48: B8, 8000000000000009
        test    rdi, rdi                                ; 4715 _ 48: 85. FF
        je      Unnamed_1_45D7                          ; 4718 _ 0F 84, 000000F9
        mov     qword ptr [rdi], 0                      ; 471E _ 48: C7. 07, 00000000
        mov     qword ptr [rdi+10H], 0                  ; 4725 _ 48: C7. 47, 10, 00000000
        mov     qword ptr [rdi+18H], 0                  ; 472D _ 48: C7. 47, 18, 00000000
        mov     rax, qword ptr [r13+8H]                 ; 4735 _ 49: 8B. 45, 08
        mov     qword ptr [rdi+8H], rax                 ; 4739 _ 48: 89. 47, 08
        mov     rax, qword ptr [r15]                    ; 473D _ 49: 8B. 07
        mov     qword ptr [rdi+20H], rax                ; 4740 _ 48: 89. 47, 20
        mov     qword ptr [r15], rdi                    ; 4744 _ 49: 89. 3F
        mov     rcx, qword ptr [r13+8H]                 ; 4747 _ 49: 8B. 4D, 08
        inc     rcx                                     ; 474B _ 48: FF. C1
        call    _AllocatePool                           ; 474E _ E8, FFFFCF0C
        mov     rcx, rax                                ; 4753 _ 48: 89. C1
        mov     rax, 8000000000000009H                  ; 4756 _ 48: B8, 8000000000000009
        mov     qword ptr [rdi], rcx                    ; 4760 _ 48: 89. 0F
        test    rcx, rcx                                ; 4763 _ 48: 85. C9
        je      Unnamed_1_45D7                          ; 4766 _ 0F 84, 000000AB
        mov     rdx, qword ptr [r13]                    ; 476C _ 49: 8B. 55, 00
        mov     r8, qword ptr [r13+8H]                  ; 4770 _ 4D: 8B. 45, 08
        inc     r8                                      ; 4774 _ 49: FF. C0
        call    _CopyMem                                ; 4777 _ E8, FFFFBCC8
        lea     rcx, ptr [r12+1H]                       ; 477C _ 49: 8D. 4C 24, 01
        call    _AllocatePool                           ; 4781 _ E8, FFFFCED9
        mov     rcx, rax                                ; 4786 _ 48: 89. C1
        mov     qword ptr [rdi+10H], rcx                ; 4789 _ 48: 89. 4F, 10
        mov     rax, 8000000000000009H                  ; 478D _ 48: B8, 8000000000000009
        test    rcx, rcx                                ; 4797 _ 48: 85. C9
        jz      Unnamed_1_45D7                          ; 479A _ 74, 7B
        mov     rdx, r14                                ; 479C _ 4C: 89. F2
        mov     r8, r12                                 ; 479F _ 4D: 89. E0
        call    _CopyMem                                ; 47A2 _ E8, FFFFBC9D
        mov     rax, qword ptr [rdi+10H]                ; 47A7 _ 48: 8B. 47, 10
        mov     byte ptr [rax+r12], 0                   ; 47AB _ 42: C6. 04 20, 00
        inc     rsi                                     ; 47B0 _ 48: FF. C6
        mov     rax, rsi                                ; 47B3 _ 48: 89. F0
        jmp     ?_240                                   ; 47B6 _ EB, 03

Unnamed_1_4578:
        inc     rax                                     ; 47B8 _ 48: FF. C0
?_240:  cmp     rax, rbx                                ; 47BB _ 48: 39. D8
        ja      ?_241                                   ; 47BE _ 77, 05
        cmp     byte ptr [rax], 35                      ; 47C0 _ 80. 38, 23
        jnz     Unnamed_1_4578                          ; 47C3 _ 75, F3
?_241:  sub     rax, rsi                                ; 47C5 _ 48: 29. F0
        mov     qword ptr [rbp-40H], rax                ; 47C8 _ 48: 89. 45, C0
        lea     rdx, ptr [rbp-40H]                      ; 47CC _ 48: 8D. 55, C0
        mov     rcx, rsi                                ; 47D0 _ 48: 89. F1
        call    _ProfileTrim                            ; 47D3 _ E8, FFFFFCCC
        xor     eax, eax                                ; 47D8 _ 31. C0
        mov     rbx, qword ptr [rbp-40H]                ; 47DA _ 48: 8B. 5D, C0
        test    rbx, rbx                                ; 47DE _ 48: 85. DB
        jz      Unnamed_1_45D7                          ; 47E1 _ 74, 34
        lea     rcx, ptr [rbx+1H]                       ; 47E3 _ 48: 8D. 4B, 01
        call    _AllocatePool                           ; 47E7 _ E8, FFFFCE73
        mov     rcx, rax                                ; 47EC _ 48: 89. C1
        mov     qword ptr [rdi+18H], rcx                ; 47EF _ 48: 89. 4F, 18
        mov     rax, 8000000000000009H                  ; 47F3 _ 48: B8, 8000000000000009
        test    rcx, rcx                                ; 47FD _ 48: 85. C9
        jz      Unnamed_1_45D7                          ; 4800 _ 74, 15
        mov     rdx, rsi                                ; 4802 _ 48: 89. F2
        mov     r8, rbx                                 ; 4805 _ 49: 89. D8
        call    _CopyMem                                ; 4808 _ E8, FFFFBC37
        mov     rax, qword ptr [rdi+18H]                ; 480D _ 48: 8B. 47, 18
        mov     byte ptr [rax+rbx], 0                   ; 4811 _ C6. 04 18, 00
        xor     eax, eax                                ; 4815 _ 31. C0
Unnamed_1_45D7:
        add     rsp, 40                                 ; 4817 _ 48: 83. C4, 28
        pop     rbx                                     ; 481B _ 5B
        pop     rdi                                     ; 481C _ 5F
        pop     rsi                                     ; 481D _ 5E
        pop     r12                                     ; 481E _ 41: 5C
        pop     r13                                     ; 4820 _ 41: 5D
        pop     r14                                     ; 4822 _ 41: 5E
        pop     r15                                     ; 4824 _ 41: 5F
        pop     rbp                                     ; 4826 _ 5D
        ret                                             ; 4827 _ C3
_ProfileGetEntry ENDP

_FreeAllList PROC
        push    rbp                                     ; 4828 _ 55
        mov     rbp, rsp                                ; 4829 _ 48: 89. E5
        push    rsi                                     ; 482C _ 56
        push    rdi                                     ; 482D _ 57
        push    rbx                                     ; 482E _ 53
        sub     rsp, 40                                 ; 482F _ 48: 83. EC, 28
        mov     rsi, rdx                                ; 4833 _ 48: 89. D6
        mov     rdi, rcx                                ; 4836 _ 48: 89. CF
        test    rdi, rdi                                ; 4839 _ 48: 85. FF
        jnz     Unnamed_1_462D                          ; 483C _ 75, 2F
?_242:  test    rsi, rsi                                ; 483E _ 48: 85. F6
        jz      ?_245                                   ; 4841 _ 74, 21
?_243:  mov     rcx, qword ptr [rsi]                    ; 4843 _ 48: 8B. 0E
        mov     rdi, qword ptr [rsi+8H]                 ; 4846 _ 48: 8B. 7E, 08
        test    rcx, rcx                                ; 484A _ 48: 85. C9
        jz      ?_244                                   ; 484D _ 74, 05
        call    _FreePool                               ; 484F _ E8, FFFFCF03
?_244:  mov     rcx, rsi                                ; 4854 _ 48: 89. F1
        call    _FreePool                               ; 4857 _ E8, FFFFCEFB
        test    rdi, rdi                                ; 485C _ 48: 85. FF
        mov     rsi, rdi                                ; 485F _ 48: 89. FE
        jnz     ?_243                                   ; 4862 _ 75, DF
?_245:  add     rsp, 40                                 ; 4864 _ 48: 83. C4, 28
        pop     rbx                                     ; 4868 _ 5B
        pop     rdi                                     ; 4869 _ 5F
        pop     rsi                                     ; 486A _ 5E
        pop     rbp                                     ; 486B _ 5D
        ret                                             ; 486C _ C3
_FreeAllList ENDP

Unnamed_1_462D LABEL NEAR
        mov     rcx, qword ptr [rdi+10H]                ; 486D _ 48: 8B. 4F, 10
        mov     rbx, qword ptr [rdi+20H]                ; 4871 _ 48: 8B. 5F, 20
        test    rcx, rcx                                ; 4875 _ 48: 85. C9
        jz      ?_246                                   ; 4878 _ 74, 05
        call    _FreePool                               ; 487A _ E8, FFFFCED8
?_246:  mov     rcx, qword ptr [rdi]                    ; 487F _ 48: 8B. 0F
        test    rcx, rcx                                ; 4882 _ 48: 85. C9
        jz      ?_247                                   ; 4885 _ 74, 05
        call    _FreePool                               ; 4887 _ E8, FFFFCECB
?_247:  mov     rcx, qword ptr [rdi+18H]                ; 488C _ 48: 8B. 4F, 18
        test    rcx, rcx                                ; 4890 _ 48: 85. C9
        jz      ?_248                                   ; 4893 _ 74, 05
        call    _FreePool                               ; 4895 _ E8, FFFFCEBD
?_248:  mov     rcx, rdi                                ; 489A _ 48: 89. F9
        call    _FreePool                               ; 489D _ E8, FFFFCEB5
        test    rbx, rbx                                ; 48A2 _ 48: 85. DB
        mov     rdi, rbx                                ; 48A5 _ 48: 89. DF
        jz      ?_242                                   ; 48A8 _ 74, 94
        jmp     Unnamed_1_462D                          ; 48AA _ EB, C1

_UpdateGetProfileString PROC
        push    rbp                                     ; 48AC _ 55
        mov     rbp, rsp                                ; 48AD _ 48: 89. E5
        push    r14                                     ; 48B0 _ 41: 56
        push    rsi                                     ; 48B2 _ 56
        push    rdi                                     ; 48B3 _ 57
        push    rbx                                     ; 48B4 _ 53
        sub     rsp, 32                                 ; 48B5 _ 48: 83. EC, 20
        mov     r14, r9                                 ; 48B9 _ 4D: 89. CE
        mov     rdi, r8                                 ; 48BC _ 4C: 89. C7
        mov     rsi, rdx                                ; 48BF _ 48: 89. D6
        mov     rbx, rcx                                ; 48C2 _ 48: 89. CB
        mov     qword ptr [r14], 0                      ; 48C5 _ 49: C7. 06, 00000000
        jmp     ?_249                                   ; 48CC _ EB, 04

Unnamed_1_468E:
        mov     rbx, qword ptr [rbx+20H]                ; 48CE _ 48: 8B. 5B, 20
?_249:  mov     rax, 800000000000000EH                  ; 48D2 _ 48: B8, 800000000000000E
        test    rbx, rbx                                ; 48DC _ 48: 85. DB
        jz      ?_250                                   ; 48DF _ 74, 2F
        mov     rcx, qword ptr [rbx]                    ; 48E1 _ 48: 8B. 0B
        mov     rdx, rsi                                ; 48E4 _ 48: 89. F2
        call    _AsciiStrCmp                            ; 48E7 _ E8, FFFFC110
        test    rax, rax                                ; 48EC _ 48: 85. C0
        jnz     Unnamed_1_468E                          ; 48EF _ 75, DD
        mov     rcx, qword ptr [rbx+10H]                ; 48F1 _ 48: 8B. 4B, 10
        test    rcx, rcx                                ; 48F5 _ 48: 85. C9
        jz      Unnamed_1_468E                          ; 48F8 _ 74, D4
        mov     rdx, rdi                                ; 48FA _ 48: 89. FA
        call    _AsciiStrCmp                            ; 48FD _ E8, FFFFC0FA
        test    rax, rax                                ; 4902 _ 48: 85. C0
        jnz     Unnamed_1_468E                          ; 4905 _ 75, C7
        mov     rax, qword ptr [rbx+18H]                ; 4907 _ 48: 8B. 43, 18
        mov     qword ptr [r14], rax                    ; 490B _ 49: 89. 06
        xor     eax, eax                                ; 490E _ 31. C0
?_250:  add     rsp, 32                                 ; 4910 _ 48: 83. C4, 20
        pop     rbx                                     ; 4914 _ 5B
        pop     rdi                                     ; 4915 _ 5F
        pop     rsi                                     ; 4916 _ 5E
        pop     r14                                     ; 4917 _ 41: 5E
        pop     rbp                                     ; 4919 _ 5D
        ret                                             ; 491A _ C3
_UpdateGetProfileString ENDP

_UpdateAtoi PROC
        inc     rcx                                     ; 491B _ 48: FF. C1
        xor     eax, eax                                ; 491E _ 31. C0
        jmp     ?_251                                   ; 4920 _ EB, 03

Unnamed_1_46E2:
        inc     rcx                                     ; 4922 _ 48: FF. C1
?_251:  mov     r10b, byte ptr [rcx-1H]                 ; 4925 _ 44: 8A. 51, FF
        test    r10b, r10b                              ; 4929 _ 45: 84. D2
        jz      Unnamed_1_4710                          ; 492C _ 74, 22
        cmp     r10b, 32                                ; 492E _ 41: 80. FA, 20
        jz      Unnamed_1_46E2                          ; 4932 _ 74, EE
        cmp     r10b, 48                                ; 4934 _ 41: 80. FA, 30
        jz      ?_252                                   ; 4938 _ 74, 17
        mov     r9b, r10b                               ; 493A _ 45: 88. D1
        add     r9b, -48                                ; 493D _ 41: 80. C1, D0
        xor     eax, eax                                ; 4941 _ 31. C0
        mov     r8, -48                                 ; 4943 _ 49: C7. C0, FFFFFFD0
        cmp     r9b, 10                                 ; 494A _ 41: 80. F9, 0A
        jc      Unnamed_1_4723                          ; 494E _ 72, 13
Unnamed_1_4710:
        ret                                             ; 4950 _ C3

?_252:  mov     al, byte ptr [rcx]                      ; 4951 _ 8A. 01
        or      al, 20H                                 ; 4953 _ 0C, 20
        cmp     al, 120                                 ; 4955 _ 3C, 78
        jz      ?_253                                   ; 4957 _ 74, 2D
        mov     r10b, 48                                ; 4959 _ 41: B2, 30
        mov     r8, -48                                 ; 495C _ 49: C7. C0, FFFFFFD0
Unnamed_1_4723:
        movzx   eax, r10b                               ; 4963 _ 41: 0F B6. C2
        add     rax, r8                                 ; 4967 _ 4C: 01. C0
        mov     r10b, byte ptr [rcx]                    ; 496A _ 44: 8A. 11
        mov     dl, r10b                                ; 496D _ 44: 88. D2
        add     dl, -48                                 ; 4970 _ 80. C2, D0
        cmp     dl, 9                                   ; 4973 _ 80. FA, 09
        ja      Unnamed_1_4710                          ; 4976 _ 77, D8
        inc     rcx                                     ; 4978 _ 48: FF. C1
        lea     rax, ptr [rax+rax*4]                    ; 497B _ 48: 8D. 04 80
        lea     r8, ptr [rax+rax-30H]                   ; 497F _ 4C: 8D. 44 00, D0
        jmp     Unnamed_1_4723                          ; 4984 _ EB, DD
_UpdateAtoi ENDP

?_253   LABEL NEAR
        dec     rcx                                     ; 4986 _ 48: FF. C9
        jmp     _AsciiStrHexToUintn                     ; 4989 _ E9, FFFFC2C0

_UpdateValueToString PROC
        push    rbp                                     ; 498E _ 55
        mov     rbp, rsp                                ; 498F _ 48: 89. E5
        push    r14                                     ; 4992 _ 41: 56
        push    rsi                                     ; 4994 _ 56
        push    rdi                                     ; 4995 _ 57
        push    rbx                                     ; 4996 _ 53
        sub     rsp, 80                                 ; 4997 _ 48: 83. EC, 50
        mov     rax, rdx                                ; 499B _ 48: 89. D0
        mov     rsi, rcx                                ; 499E _ 48: 89. CE
        xor     r14d, r14d                              ; 49A1 _ 45: 31. F6
        test    rax, rax                                ; 49A4 _ 48: 85. C0
        jns     ?_254                                   ; 49A7 _ 79, 0F
        mov     byte ptr [rsi], 45                      ; 49A9 _ C6. 06, 2D
        neg     rax                                     ; 49AC _ 48: F7. D8
        inc     rsi                                     ; 49AF _ 48: FF. C6
        mov     r14d, 1                                 ; 49B2 _ 41: BE, 00000001
?_254:  mov     ebx, 1                                  ; 49B8 _ BB, 00000001
        lea     rdi, ptr [rbp-44H]                      ; 49BD _ 48: 8D. 7D, BC
?_255:  mov     rcx, rax                                ; 49C1 _ 48: 89. C1
        mov     edx, 10                                 ; 49C4 _ BA, 0000000A
        mov     r8, rdi                                 ; 49C9 _ 49: 89. F8
        call    _DivU64x32Remainder                     ; 49CC _ E8, FFFFBC7E
        mov     ecx, dword ptr [rbp-44H]                ; 49D1 _ 8B. 4D, BC
        add     ecx, 48                                 ; 49D4 _ 83. C1, 30
        mov     byte ptr [rbp+rbx-40H], cl              ; 49D7 _ 88. 4C 1D, C0
        inc     rbx                                     ; 49DB _ 48: FF. C3
        test    rax, rax                                ; 49DE _ 48: 85. C0
        jnz     ?_255                                   ; 49E1 _ 75, DE
        cmp     rbx, 1                                  ; 49E3 _ 48: 83. FB, 01
        jz      ?_257                                   ; 49E7 _ 74, 1F
        lea     rax, ptr [rsi+rbx-1H]                   ; 49E9 _ 48: 8D. 44 1E, FF
        lea     rdx, ptr [rbx-2H]                       ; 49EE _ 48: 8D. 53, FE
        jmp     ?_256                                   ; 49F2 _ EB, 0A

Unnamed_1_47B4:
        mov     cl, byte ptr [rbp+rdx-40H]              ; 49F4 _ 8A. 4C 15, C0
        dec     rdx                                     ; 49F8 _ 48: FF. CA
        inc     rsi                                     ; 49FB _ 48: FF. C6
?_256:  mov     byte ptr [rsi], cl                      ; 49FE _ 88. 0E
        test    rdx, rdx                                ; 4A00 _ 48: 85. D2
        jnz     Unnamed_1_47B4                          ; 4A03 _ 75, EF
        mov     rsi, rax                                ; 4A05 _ 48: 89. C6
?_257:  lea     rax, ptr [r14+rbx-1H]                   ; 4A08 _ 49: 8D. 44 1E, FF
        mov     byte ptr [rsi], 0                       ; 4A0D _ C6. 06, 00
        add     rsp, 80                                 ; 4A10 _ 48: 83. C4, 50
        pop     rbx                                     ; 4A14 _ 5B
        pop     rdi                                     ; 4A15 _ 5F
        pop     rsi                                     ; 4A16 _ 5E
        pop     r14                                     ; 4A17 _ 41: 5E
        pop     rbp                                     ; 4A19 _ 5D
        ret                                             ; 4A1A _ C3
_UpdateValueToString ENDP

_UpdateStringToGuid PROC
        push    rbp                                     ; 4A1B _ 55
        mov     rbp, rsp                                ; 4A1C _ 48: 89. E5
        push    r15                                     ; 4A1F _ 41: 57
        push    r14                                     ; 4A21 _ 41: 56
        push    rsi                                     ; 4A23 _ 56
        push    rdi                                     ; 4A24 _ 57
        push    rbx                                     ; 4A25 _ 53
        sub     rsp, 40                                 ; 4A26 _ 48: 83. EC, 28
        mov     rsi, rdx                                ; 4A2A _ 48: 89. D6
        mov     rdi, rcx                                ; 4A2D _ 48: 89. CF
        call    _AsciiStrLen                            ; 4A30 _ E8, FFFFBF35
        lea     rcx, ptr [rax+1H]                       ; 4A35 _ 48: 8D. 48, 01
        mov     rdx, rdi                                ; 4A39 _ 48: 89. FA
        call    _AllocateCopyPool                       ; 4A3C _ E8, FFFFCD03
        mov     r14, rax                                ; 4A41 _ 49: 89. C6
        mov     rax, 8000000000000009H                  ; 4A44 _ 48: B8, 8000000000000009
        test    r14, r14                                ; 4A4E _ 4D: 85. F6
        je      Unnamed_1_492C                          ; 4A51 _ 0F 84, 00000115
        lea     rdi, ptr [r14+1H]                       ; 4A57 _ 49: 8D. 7E, 01
        jmp     ?_258                                   ; 4A5B _ EB, 03

Unnamed_1_481D:
        inc     rdi                                     ; 4A5D _ 48: FF. C7
?_258:  mov     al, byte ptr [rdi-1H]                   ; 4A60 _ 8A. 47, FF
        test    al, al                                  ; 4A63 _ 84. C0
        je      Unnamed_1_490E                          ; 4A65 _ 0F 84, 000000E3
        cmp     al, 45                                  ; 4A6B _ 3C, 2D
        jnz     Unnamed_1_481D                          ; 4A6D _ 75, EE
        mov     byte ptr [rdi-1H], 0                    ; 4A6F _ C6. 47, FF, 00
        mov     rcx, r14                                ; 4A73 _ 4C: 89. F1
        call    _AsciiStrHexToUintn                     ; 4A76 _ E8, FFFFC1D3
        mov     dword ptr [rsi], eax                    ; 4A7B _ 89. 06
        lea     rbx, ptr [rdi+1H]                       ; 4A7D _ 48: 8D. 5F, 01
        jmp     ?_259                                   ; 4A81 _ EB, 03

Unnamed_1_4843:
        inc     rbx                                     ; 4A83 _ 48: FF. C3
?_259:  mov     al, byte ptr [rbx-1H]                   ; 4A86 _ 8A. 43, FF
        test    al, al                                  ; 4A89 _ 84. C0
        je      Unnamed_1_490E                          ; 4A8B _ 0F 84, 000000BD
        cmp     al, 45                                  ; 4A91 _ 3C, 2D
        jnz     Unnamed_1_4843                          ; 4A93 _ 75, EE
        mov     byte ptr [rbx-1H], 0                    ; 4A95 _ C6. 43, FF, 00
        mov     rcx, rdi                                ; 4A99 _ 48: 89. F9
        call    _AsciiStrHexToUintn                     ; 4A9C _ E8, FFFFC1AD
        mov     word ptr [rsi+4H], ax                   ; 4AA1 _ 66: 89. 46, 04
        lea     rdi, ptr [rbx+3H]                       ; 4AA5 _ 48: 8D. 7B, 03
        jmp     ?_260                                   ; 4AA9 _ EB, 03

Unnamed_1_486B:
        inc     rdi                                     ; 4AAB _ 48: FF. C7
?_260:  mov     al, byte ptr [rdi-3H]                   ; 4AAE _ 8A. 47, FD
        test    al, al                                  ; 4AB1 _ 84. C0
        je      Unnamed_1_490E                          ; 4AB3 _ 0F 84, 00000095
        cmp     al, 45                                  ; 4AB9 _ 3C, 2D
        jnz     Unnamed_1_486B                          ; 4ABB _ 75, EE
        mov     byte ptr [rdi-3H], 0                    ; 4ABD _ C6. 47, FD, 00
        mov     rcx, rbx                                ; 4AC1 _ 48: 89. D9
        call    _AsciiStrHexToUintn                     ; 4AC4 _ E8, FFFFC185
        mov     word ptr [rsi+6H], ax                   ; 4AC9 _ 66: 89. 46, 06
        xor     ebx, ebx                                ; 4ACD _ 31. DB
        lea     r15, ptr [rbp-2BH]                      ; 4ACF _ 4C: 8D. 7D, D5
        jmp     ?_261                                   ; 4AD3 _ EB, 2A

Unnamed_1_4895:
        test    cl, cl                                  ; 4AD5 _ 84. C9
        jz      Unnamed_1_490E                          ; 4AD7 _ 74, 75
        cmp     byte ptr [rdi-1H], 0                    ; 4AD9 _ 80. 7F, FF, 00
        jz      Unnamed_1_490E                          ; 4ADD _ 74, 6F
        mov     byte ptr [rbp-2BH], cl                  ; 4ADF _ 88. 4D, D5
        mov     al, byte ptr [rdi-1H]                   ; 4AE2 _ 8A. 47, FF
        mov     byte ptr [rbp-2AH], al                  ; 4AE5 _ 88. 45, D6
        mov     byte ptr [rbp-29H], 0                   ; 4AE8 _ C6. 45, D7, 00
        mov     rcx, r15                                ; 4AEC _ 4C: 89. F9
        call    _AsciiStrHexToUintn                     ; 4AEF _ E8, FFFFC15A
        add     rdi, 2                                  ; 4AF4 _ 48: 83. C7, 02
        mov     byte ptr [rsi+rbx+8H], al               ; 4AF8 _ 88. 44 1E, 08
        inc     rbx                                     ; 4AFC _ 48: FF. C3
?_261:  mov     cl, byte ptr [rdi-2H]                   ; 4AFF _ 8A. 4F, FE
        cmp     rbx, 1                                  ; 4B02 _ 48: 83. FB, 01
        jbe     Unnamed_1_4895                          ; 4B06 _ 76, CD
        mov     rax, 800000000000000EH                  ; 4B08 _ 48: B8, 800000000000000E
        cmp     cl, 45                                  ; 4B12 _ 80. F9, 2D
        jnz     Unnamed_1_492C                          ; 4B15 _ 75, 55
        lea     r15, ptr [rbp-2BH]                      ; 4B17 _ 4C: 8D. 7D, D5
        jmp     ?_262                                   ; 4B1B _ EB, 1F

Unnamed_1_48DD:
        mov     byte ptr [rbp-2BH], al                  ; 4B1D _ 88. 45, D5
        mov     al, byte ptr [rdi]                      ; 4B20 _ 8A. 07
        mov     byte ptr [rbp-2AH], al                  ; 4B22 _ 88. 45, D6
        mov     byte ptr [rbp-29H], 0                   ; 4B25 _ C6. 45, D7, 00
        mov     rcx, r15                                ; 4B29 _ 4C: 89. F9
        call    _AsciiStrHexToUintn                     ; 4B2C _ E8, FFFFC11D
        add     rdi, 2                                  ; 4B31 _ 48: 83. C7, 02
        mov     byte ptr [rsi+rbx+8H], al               ; 4B35 _ 88. 44 1E, 08
        inc     rbx                                     ; 4B39 _ 48: FF. C3
?_262:  cmp     rbx, 7                                  ; 4B3C _ 48: 83. FB, 07
        ja      ?_263                                   ; 4B40 _ 77, 20
        mov     al, byte ptr [rdi-1H]                   ; 4B42 _ 8A. 47, FF
        test    al, al                                  ; 4B45 _ 84. C0
        jz      Unnamed_1_490E                          ; 4B47 _ 74, 05
        cmp     byte ptr [rdi], 0                       ; 4B49 _ 80. 3F, 00
        jnz     Unnamed_1_48DD                          ; 4B4C _ 75, CF
Unnamed_1_490E:
        mov     rcx, r14                                ; 4B4E _ 4C: 89. F1
        call    _FreePool                               ; 4B51 _ E8, FFFFCC01
        mov     rax, 800000000000000EH                  ; 4B56 _ 48: B8, 800000000000000E
        jmp     Unnamed_1_492C                          ; 4B60 _ EB, 0A

?_263:  mov     rcx, r14                                ; 4B62 _ 4C: 89. F1
        call    _FreePool                               ; 4B65 _ E8, FFFFCBED
        xor     eax, eax                                ; 4B6A _ 31. C0
Unnamed_1_492C:
        add     rsp, 40                                 ; 4B6C _ 48: 83. C4, 28
        pop     rbx                                     ; 4B70 _ 5B
        pop     rdi                                     ; 4B71 _ 5F
        pop     rsi                                     ; 4B72 _ 5E
        pop     r14                                     ; 4B73 _ 41: 5E
        pop     r15                                     ; 4B75 _ 41: 5F
        pop     rbp                                     ; 4B77 _ 5D
        ret                                             ; 4B78 _ C3
_UpdateStringToGuid ENDP

_PreProcessDataFile PROC
        push    rbp                                     ; 4B79 _ 55
        mov     rbp, rsp                                ; 4B7A _ 48: 89. E5
        push    r15                                     ; 4B7D _ 41: 57
        push    r14                                     ; 4B7F _ 41: 56
        push    r13                                     ; 4B81 _ 41: 55
        push    r12                                     ; 4B83 _ 41: 54
        push    rsi                                     ; 4B85 _ 56
        push    rdi                                     ; 4B86 _ 57
        push    rbx                                     ; 4B87 _ 53
        sub     rsp, 56                                 ; 4B88 _ 48: 83. EC, 38
        mov     qword ptr [rbp-48H], r9                 ; 4B8C _ 4C: 89. 4D, B8
        mov     r15, r8                                 ; 4B90 _ 4D: 89. C7
        mov     r13, rdx                                ; 4B93 _ 49: 89. D5
        mov     rbx, rcx                                ; 4B96 _ 48: 89. CB
        mov     qword ptr [r15], 0                      ; 4B99 _ 49: C7. 07, 00000000
        mov     qword ptr [r9], 0                       ; 4BA0 _ 49: C7. 01, 00000000
        mov     r12d, 512                               ; 4BA7 _ 41: BC, 00000200
        mov     ecx, 512                                ; 4BAD _ B9, 00000200
        call    _AllocatePool                           ; 4BB2 _ E8, FFFFCAA8
        mov     rsi, rax                                ; 4BB7 _ 48: 89. C6
        mov     rdi, 8000000000000009H                  ; 4BBA _ 48: BF, 8000000000000009
        test    rsi, rsi                                ; 4BC4 _ 48: 85. F6
        je      ?_268                                   ; 4BC7 _ 0F 84, 000000E3
        add     r13, rbx                                ; 4BCD _ 49: 01. DD
        xor     edi, edi                                ; 4BD0 _ 31. FF
Unnamed_1_4992:
        cmp     rbx, r13                                ; 4BD2 _ 4C: 39. EB
        jnc     Unnamed_1_4A68                          ; 4BD5 _ 0F 83, 000000CD
        mov     qword ptr [rbp-40H], r12                ; 4BDB _ 4C: 89. 65, C0
        mov     rdx, r13                                ; 4BDF _ 4C: 89. EA
        sub     rdx, rbx                                ; 4BE2 _ 48: 29. DA
        mov     rcx, rbx                                ; 4BE5 _ 48: 89. D9
        mov     r8, rsi                                 ; 4BE8 _ 49: 89. F0
        lea     r9, ptr [rbp-40H]                       ; 4BEB _ 4C: 8D. 4D, C0
        call    _ProfileGetLine                         ; 4BEF _ E8, FFFFF824
        mov     rdi, rax                                ; 4BF4 _ 48: 89. C7
        test    rdi, rdi                                ; 4BF7 _ 48: 85. FF
        js      ?_264                                   ; 4BFA _ 78, 06
        mov     r14, qword ptr [rbp-40H]                ; 4BFC _ 4C: 8B. 75, C0
        jmp     ?_265                                   ; 4C00 _ EB, 54

?_264:  mov     rax, 8000000000000005H                  ; 4C02 _ 48: B8, 8000000000000005
        cmp     rdi, rax                                ; 4C0C _ 48: 39. C7
        jne     Unnamed_1_4A68                          ; 4C0F _ 0F 85, 00000093
        mov     rcx, rsi                                ; 4C15 _ 48: 89. F1
        call    _FreePool                               ; 4C18 _ E8, FFFFCB3A
        mov     rdi, qword ptr [rbp-40H]                ; 4C1D _ 48: 8B. 7D, C0
        mov     rcx, rdi                                ; 4C21 _ 48: 89. F9
        call    _AllocatePool                           ; 4C24 _ E8, FFFFCA36
        mov     rsi, rax                                ; 4C29 _ 48: 89. C6
        test    rsi, rsi                                ; 4C2C _ 48: 85. F6
        je      ?_269                                   ; 4C2F _ 0F 84, 0000008F
        mov     rcx, rbx                                ; 4C35 _ 48: 89. D9
        mov     rdx, rdi                                ; 4C38 _ 48: 89. FA
        mov     r8, rsi                                 ; 4C3B _ 49: 89. F0
        lea     r9, ptr [rbp-40H]                       ; 4C3E _ 4C: 8D. 4D, C0
        call    _ProfileGetLine                         ; 4C42 _ E8, FFFFF7D1
        mov     rdi, rax                                ; 4C47 _ 48: 89. C7
        test    rdi, rdi                                ; 4C4A _ 48: 85. FF
        js      Unnamed_1_4A68                          ; 4C4D _ 78, 59
        mov     r14, qword ptr [rbp-40H]                ; 4C4F _ 4C: 8B. 75, C0
        mov     r12, r14                                ; 4C53 _ 4D: 89. F4
?_265:  mov     rcx, rsi                                ; 4C56 _ 48: 89. F1
        lea     rdx, ptr [rbp-40H]                      ; 4C59 _ 48: 8D. 55, C0
        call    _ProfileTrim                            ; 4C5D _ E8, FFFFF842
        add     rbx, r14                                ; 4C62 _ 4C: 01. F3
        mov     rdx, qword ptr [rbp-40H]                ; 4C65 _ 48: 8B. 55, C0
        test    rdx, rdx                                ; 4C69 _ 48: 85. D2
        je      Unnamed_1_4992                          ; 4C6C _ 0F 84, FFFFFF60
        mov     al, byte ptr [rsi]                      ; 4C72 _ 8A. 06
        mov     rcx, rsi                                ; 4C74 _ 48: 89. F1
        cmp     al, 91                                  ; 4C77 _ 3C, 5B
        jz      ?_266                                   ; 4C79 _ 74, 0F
        cmp     al, 35                                  ; 4C7B _ 3C, 23
        jnz     ?_267                                   ; 4C7D _ 75, 15
        mov     r8, qword ptr [rbp-48H]                 ; 4C7F _ 4C: 8B. 45, B8
        call    _ProfileGetComments                     ; 4C83 _ E8, FFFFF8B8
        jmp     Unnamed_1_4A5C                          ; 4C88 _ EB, 12

?_266:  mov     r8, r15                                 ; 4C8A _ 4D: 89. F8
        call    _ProfileGetSection                      ; 4C8D _ E8, FFFFF931
        jmp     Unnamed_1_4A5C                          ; 4C92 _ EB, 08

?_267:  mov     r8, r15                                 ; 4C94 _ 4D: 89. F8
        call    _ProfileGetEntry                        ; 4C97 _ E8, FFFFF9F9
Unnamed_1_4A5C:
        mov     rdi, rax                                ; 4C9C _ 48: 89. C7
        test    rdi, rdi                                ; 4C9F _ 48: 85. FF
        jns     Unnamed_1_4992                          ; 4CA2 _ 0F 89, FFFFFF2A
Unnamed_1_4A68:
        mov     rcx, rsi                                ; 4CA8 _ 48: 89. F1
        call    _FreePool                               ; 4CAB _ E8, FFFFCAA7
?_268:  mov     rax, rdi                                ; 4CB0 _ 48: 89. F8
        add     rsp, 56                                 ; 4CB3 _ 48: 83. C4, 38
        pop     rbx                                     ; 4CB7 _ 5B
        pop     rdi                                     ; 4CB8 _ 5F
        pop     rsi                                     ; 4CB9 _ 5E
        pop     r12                                     ; 4CBA _ 41: 5C
        pop     r13                                     ; 4CBC _ 41: 5D
        pop     r14                                     ; 4CBE _ 41: 5E
        pop     r15                                     ; 4CC0 _ 41: 5F
        pop     rbp                                     ; 4CC2 _ 5D
        ret                                             ; 4CC3 _ C3
_PreProcessDataFile ENDP

?_269   LABEL NEAR
        mov     rdi, 8000000000000009H                  ; 4CC4 _ 48: BF, 8000000000000009
        xor     esi, esi                                ; 4CCE _ 31. F6
        jmp     Unnamed_1_4A68                          ; 4CD0 _ EB, D6

_ParseUpdateDataFile PROC
        push    rbp                                     ; 4CD2 _ 55
        mov     rbp, rsp                                ; 4CD3 _ 48: 89. E5
        push    r15                                     ; 4CD6 _ 41: 57
        push    r14                                     ; 4CD8 _ 41: 56
        push    r13                                     ; 4CDA _ 41: 55
        push    r12                                     ; 4CDC _ 41: 54
        push    rsi                                     ; 4CDE _ 56
        push    rdi                                     ; 4CDF _ 57
        push    rbx                                     ; 4CE0 _ 53
        sub     rsp, 600                                ; 4CE1 _ 48: 81. EC, 00000258
        mov     rsi, r9                                 ; 4CE8 _ 4C: 89. CE
        mov     qword ptr [rbp-270H], rsi               ; 4CEB _ 48: 89. B5, FFFFFD90
        mov     qword ptr [rbp-268H], r8                ; 4CF2 _ 4C: 89. 85, FFFFFD98
        mov     qword ptr [rbp-248H], 0                 ; 4CF9 _ 48: C7. 85, FFFFFDB8, 00000000
        mov     qword ptr [rbp-250H], 0                 ; 4D04 _ 48: C7. 85, FFFFFDB0, 00000000
        lea     r8, ptr [rbp-248H]                      ; 4D0F _ 4C: 8D. 85, FFFFFDB8
        lea     r9, ptr [rbp-250H]                      ; 4D16 _ 4C: 8D. 8D, FFFFFDB0
        call    _PreProcessDataFile                     ; 4D1D _ E8, FFFFFE57
        mov     r14, rax                                ; 4D22 _ 49: 89. C6
        test    r14, r14                                ; 4D25 _ 4D: 85. F6
        jns     ?_270                                   ; 4D28 _ 79, 18
Unnamed_1_4AEA:
        mov     rdx, qword ptr [rbp-250H]               ; 4D2A _ 48: 8B. 95, FFFFFDB0
        mov     rcx, qword ptr [rbp-248H]               ; 4D31 _ 48: 8B. 8D, FFFFFDB8
        call    _FreeAllList                            ; 4D38 _ E8, FFFFFAEB
        jmp     Unnamed_1_4DFC                          ; 4D3D _ E9, 000002FA

?_270:  mov     qword ptr [rbp-40H], 0                  ; 4D42 _ 48: C7. 45, C0, 00000000
        mov     rcx, qword ptr [rbp-248H]               ; 4D4A _ 48: 8B. 8D, FFFFFDB8
        lea     rdx, ptr [?_412]                        ; 4D51 _ 48: 8D. 15, 00002AE1(rel)
        lea     r8, ptr [?_413]                         ; 4D58 _ 4C: 8D. 05, 00002ADF(rel)
        lea     r9, ptr [rbp-40H]                       ; 4D5F _ 4C: 8D. 4D, C0
        call    _UpdateGetProfileString                 ; 4D63 _ E8, FFFFFB44
        mov     rcx, qword ptr [rbp-40H]                ; 4D68 _ 48: 8B. 4D, C0
        test    rcx, rcx                                ; 4D6C _ 48: 85. C9
        jnz     ?_271                                   ; 4D6F _ 75, 22
Unnamed_1_4B31:
        mov     rdx, qword ptr [rbp-250H]               ; 4D71 _ 48: 8B. 95, FFFFFDB0
        mov     rcx, qword ptr [rbp-248H]               ; 4D78 _ 48: 8B. 8D, FFFFFDB8
        call    _FreeAllList                            ; 4D7F _ E8, FFFFFAA4
        mov     r14, 800000000000000EH                  ; 4D84 _ 49: BE, 800000000000000E
        jmp     Unnamed_1_4DFC                          ; 4D8E _ E9, 000002A9

?_271:  call    _UpdateAtoi                             ; 4D93 _ E8, FFFFFB83
        test    rax, rax                                ; 4D98 _ 48: 85. C0
        jz      Unnamed_1_4B31                          ; 4D9B _ 74, D4
        mov     rcx, qword ptr [rbp-268H]               ; 4D9D _ 48: 8B. 8D, FFFFFD98
        mov     qword ptr [rcx], rax                    ; 4DA4 _ 48: 89. 01
        imul    rcx, rax, 56                            ; 4DA7 _ 48: 6B. C8, 38
        call    _AllocatePool                           ; 4DAB _ E8, FFFFC8AF
        mov     qword ptr [rsi], rax                    ; 4DB0 _ 48: 89. 06
        test    rax, rax                                ; 4DB3 _ 48: 85. C0
        je      ?_278                                   ; 4DB6 _ 0F 84, 00000297
        xor     esi, esi                                ; 4DBC _ 31. F6
        lea     rbx, ptr [rbp-240H]                     ; 4DBE _ 48: 8D. 9D, FFFFFDC0
        lea     r14, ptr [rbp-40H]                      ; 4DC5 _ 4C: 8D. 75, C0
        lea     r13, ptr [rbp-260H]                     ; 4DC9 _ 4C: 8D. AD, FFFFFDA0
        jmp     ?_273                                   ; 4DD0 _ EB, 72

Unnamed_1_4B92:
        mov     rcx, qword ptr [rbp-40H]                ; 4DD2 _ 48: 8B. 4D, C0
        lea     rdx, ptr [?_420]                        ; 4DD6 _ 48: 8D. 15, 00002AA9(rel)
        call    _AsciiStriCmp                           ; 4DDD _ E8, FFFFBCAC
        test    rax, rax                                ; 4DE2 _ 48: 85. C0
        mov     r14, rsi                                ; 4DE5 _ 49: 89. F6
        jnz     Unnamed_1_4BB2                          ; 4DE8 _ 75, 08
        mov     rax, qword ptr [rbx]                    ; 4DEA _ 48: 8B. 03
        mov     byte ptr [rax+rdi+30H], 0               ; 4DED _ C6. 44 38, 30, 00
Unnamed_1_4BB2:
        mov     rax, qword ptr [rbx]                    ; 4DF2 _ 48: 8B. 03
        cmp     dword ptr [rax+rdi+8H], 2               ; 4DF5 _ 83. 7C 38, 08, 02
        jnz     ?_272                                   ; 4DFA _ 75, 3B
        mov     qword ptr [rbp-40H], 0                  ; 4DFC _ 48: C7. 45, C0, 00000000
        mov     rcx, qword ptr [rbp-248H]               ; 4E04 _ 48: 8B. 8D, FFFFFDB8
        mov     rdx, r15                                ; 4E0B _ 4C: 89. FA
        lea     r8, ptr [?_421]                         ; 4E0E _ 4C: 8D. 05, 00002A77(rel)
        mov     r9, r14                                 ; 4E15 _ 4D: 89. F1
        call    _UpdateGetProfileString                 ; 4E18 _ E8, FFFFFA8F
        mov     rcx, qword ptr [rbp-40H]                ; 4E1D _ 48: 8B. 4D, C0
        test    rcx, rcx                                ; 4E21 _ 48: 85. C9
        je      Unnamed_1_4B31                          ; 4E24 _ 0F 84, FFFFFF47
        call    _AsciiStrHexToUintn                     ; 4E2A _ E8, FFFFBE1F
        mov     rcx, qword ptr [rbx]                    ; 4E2F _ 48: 8B. 0B
        mov     qword ptr [rcx+rdi+28H], rax            ; 4E32 _ 48: 89. 44 39, 28
?_272:  mov     rsi, r12                                ; 4E37 _ 4C: 89. E6
        inc     rsi                                     ; 4E3A _ 48: FF. C6
        lea     rbx, ptr [rbp-240H]                     ; 4E3D _ 48: 8D. 9D, FFFFFDC0
?_273:  mov     rax, qword ptr [rbp-268H]               ; 4E44 _ 48: 8B. 85, FFFFFD98
        cmp     rsi, qword ptr [rax]                    ; 4E4B _ 48: 3B. 30
        jnc     ?_277                                   ; 4E4E _ 0F 83, 000001D2
        mov     rcx, rbx                                ; 4E54 _ 48: 89. D9
        mov     edx, 512                                ; 4E57 _ BA, 00000200
        lea     r8, ptr [?_414]                         ; 4E5C _ 4C: 8D. 05, 000029E7(rel)
        call    _AsciiStrCpyS                           ; 4E63 _ E8, FFFFB834
        cmp     byte ptr [rbp-240H], 0                  ; 4E68 _ 80. BD, FFFFFDC0, 00
        mov     rdi, rbx                                ; 4E6F _ 48: 89. DF
        jz      ?_275                                   ; 4E72 _ 74, 0A
?_274:  cmp     byte ptr [rdi+1H], 0                    ; 4E74 _ 80. 7F, 01, 00
        lea     rdi, ptr [rdi+1H]                       ; 4E78 _ 48: 8D. 7F, 01
        jnz     ?_274                                   ; 4E7C _ 75, F6
?_275:  mov     rcx, rdi                                ; 4E7E _ 48: 89. F9
        mov     rdx, rsi                                ; 4E81 _ 48: 89. F2
        mov     r12, rsi                                ; 4E84 _ 49: 89. F4
        call    _UpdateValueToString                    ; 4E87 _ E8, FFFFFB02
        mov     byte ptr [rdi+rax], 0                   ; 4E8C _ C6. 04 07, 00
        mov     qword ptr [rbp-40H], 0                  ; 4E90 _ 48: C7. 45, C0, 00000000
        mov     rcx, qword ptr [rbp-248H]               ; 4E98 _ 48: 8B. 8D, FFFFFDB8
        lea     rdx, ptr [?_412]                        ; 4E9F _ 48: 8D. 15, 00002993(rel)
        mov     r8, rbx                                 ; 4EA6 _ 49: 89. D8
        mov     r9, r14                                 ; 4EA9 _ 4D: 89. F1
        call    _UpdateGetProfileString                 ; 4EAC _ E8, FFFFF9FB
        mov     r15, qword ptr [rbp-40H]                ; 4EB1 _ 4C: 8B. 7D, C0
        test    r15, r15                                ; 4EB5 _ 4D: 85. FF
        je      Unnamed_1_4B31                          ; 4EB8 _ 0F 84, FFFFFEB3
        mov     qword ptr [rbp-40H], 0                  ; 4EBE _ 48: C7. 45, C0, 00000000
        mov     rcx, qword ptr [rbp-248H]               ; 4EC6 _ 48: 8B. 8D, FFFFFDB8
        mov     rdx, r15                                ; 4ECD _ 4C: 89. FA
        lea     r8, ptr [?_415]                         ; 4ED0 _ 4C: 8D. 05, 0000297A(rel)
        mov     r9, r14                                 ; 4ED7 _ 4D: 89. F1
        mov     rsi, r14                                ; 4EDA _ 4C: 89. F6
        call    _UpdateGetProfileString                 ; 4EDD _ E8, FFFFF9CA
        mov     r14, rax                                ; 4EE2 _ 49: 89. C6
        mov     rcx, qword ptr [rbp-40H]                ; 4EE5 _ 48: 8B. 4D, C0
        test    rcx, rcx                                ; 4EE9 _ 48: 85. C9
        je      Unnamed_1_4B31                          ; 4EEC _ 0F 84, FFFFFE7F
        call    _UpdateAtoi                             ; 4EF2 _ E8, FFFFFA24
        cmp     rax, 3                                  ; 4EF7 _ 48: 83. F8, 03
        jnc     Unnamed_1_4AEA                          ; 4EFB _ 0F 83, FFFFFE29
        mov     rbx, qword ptr [rbp-270H]               ; 4F01 _ 48: 8B. 9D, FFFFFD90
        mov     rcx, qword ptr [rbx]                    ; 4F08 _ 48: 8B. 0B
        imul    rdi, r12, 56                            ; 4F0B _ 49: 6B. FC, 38
        mov     qword ptr [rcx+rdi], r12                ; 4F0F _ 4C: 89. 24 39
        mov     dword ptr [rcx+rdi+8H], eax             ; 4F13 _ 89. 44 39, 08
        mov     qword ptr [rbp-40H], 0                  ; 4F17 _ 48: C7. 45, C0, 00000000
        mov     rcx, qword ptr [rbp-248H]               ; 4F1F _ 48: 8B. 8D, FFFFFDB8
        mov     rdx, r15                                ; 4F26 _ 4C: 89. FA
        lea     r8, ptr [?_416]                         ; 4F29 _ 4C: 8D. 05, 0000292C(rel)
        mov     r9, rsi                                 ; 4F30 _ 49: 89. F1
        call    _UpdateGetProfileString                 ; 4F33 _ E8, FFFFF974
        mov     rcx, qword ptr [rbp-40H]                ; 4F38 _ 48: 8B. 4D, C0
        test    rcx, rcx                                ; 4F3C _ 48: 85. C9
        je      Unnamed_1_4B31                          ; 4F3F _ 0F 84, FFFFFE2C
        call    _AsciiStrHexToUintn                     ; 4F45 _ E8, FFFFBD04
        mov     rcx, qword ptr [rbx]                    ; 4F4A _ 48: 8B. 0B
        mov     qword ptr [rcx+rdi+10H], rax            ; 4F4D _ 48: 89. 44 39, 10
        mov     qword ptr [rbp-40H], 0                  ; 4F52 _ 48: C7. 45, C0, 00000000
        mov     rcx, qword ptr [rbp-248H]               ; 4F5A _ 48: 8B. 8D, FFFFFDB8
        mov     rdx, r15                                ; 4F61 _ 4C: 89. FA
        lea     r8, ptr [?_417]                         ; 4F64 _ 4C: 8D. 05, 000028FF(rel)
        mov     r9, rsi                                 ; 4F6B _ 49: 89. F1
        call    _UpdateGetProfileString                 ; 4F6E _ E8, FFFFF939
        mov     rcx, qword ptr [rbp-40H]                ; 4F73 _ 48: 8B. 4D, C0
        test    rcx, rcx                                ; 4F77 _ 48: 85. C9
        je      Unnamed_1_4B31                          ; 4F7A _ 0F 84, FFFFFDF1
        mov     rdx, r13                                ; 4F80 _ 4C: 89. EA
        call    _UpdateStringToGuid                     ; 4F83 _ E8, FFFFFA93
        mov     r14, rax                                ; 4F88 _ 49: 89. C6
        test    r14, r14                                ; 4F8B _ 4D: 85. F6
        js      Unnamed_1_4AEA                          ; 4F8E _ 0F 88, FFFFFD96
        mov     rax, qword ptr [rbx]                    ; 4F94 _ 48: 8B. 03
        lea     rcx, ptr [rax+rdi+18H]                  ; 4F97 _ 48: 8D. 4C 38, 18
        mov     rdx, r13                                ; 4F9C _ 4C: 89. EA
        mov     r8d, 16                                 ; 4F9F _ 41: B8, 00000010
        call    _CopyMem                                ; 4FA5 _ E8, FFFFB49A
        mov     qword ptr [rbp-40H], 0                  ; 4FAA _ 48: C7. 45, C0, 00000000
        mov     rax, qword ptr [rbx]                    ; 4FB2 _ 48: 8B. 03
        mov     byte ptr [rax+rdi+30H], 0               ; 4FB5 _ C6. 44 38, 30, 00
        mov     rcx, qword ptr [rbp-248H]               ; 4FBA _ 48: 8B. 8D, FFFFFDB8
        mov     rdx, r15                                ; 4FC1 _ 4C: 89. FA
        lea     r8, ptr [?_418]                         ; 4FC4 _ 4C: 8D. 05, 000028A8(rel)
        mov     r9, rsi                                 ; 4FCB _ 49: 89. F1
        call    _UpdateGetProfileString                 ; 4FCE _ E8, FFFFF8D9
        mov     r14, rax                                ; 4FD3 _ 49: 89. C6
        test    r14, r14                                ; 4FD6 _ 4D: 85. F6
        jns     ?_276                                   ; 4FD9 _ 79, 13
        mov     rax, 800000000000000EH                  ; 4FDB _ 48: B8, 800000000000000E
        cmp     r14, rax                                ; 4FE5 _ 49: 39. C6
        jne     Unnamed_1_4AEA                          ; 4FE8 _ 0F 85, FFFFFD3C
?_276:  mov     rcx, qword ptr [rbp-40H]                ; 4FEE _ 48: 8B. 4D, C0
        test    rcx, rcx                                ; 4FF2 _ 48: 85. C9
        mov     r14, rsi                                ; 4FF5 _ 49: 89. F6
        je      Unnamed_1_4BB2                          ; 4FF8 _ 0F 84, FFFFFDF4
        mov     rsi, r14                                ; 4FFE _ 4C: 89. F6
        lea     rdx, ptr [?_419]                        ; 5001 _ 48: 8D. 15, 00002879(rel)
        call    _AsciiStriCmp                           ; 5008 _ E8, FFFFBA81
        test    rax, rax                                ; 500D _ 48: 85. C0
        jne     Unnamed_1_4B92                          ; 5010 _ 0F 85, FFFFFDBC
        mov     rax, qword ptr [rbx]                    ; 5016 _ 48: 8B. 03
        mov     byte ptr [rax+rdi+30H], 1               ; 5019 _ C6. 44 38, 30, 01
        mov     r14, rsi                                ; 501E _ 49: 89. F6
        jmp     Unnamed_1_4BB2                          ; 5021 _ E9, FFFFFDCC

?_277:  mov     rdx, qword ptr [rbp-250H]               ; 5026 _ 48: 8B. 95, FFFFFDB0
        mov     rcx, qword ptr [rbp-248H]               ; 502D _ 48: 8B. 8D, FFFFFDB8
        call    _FreeAllList                            ; 5034 _ E8, FFFFF7EF
        xor     r14d, r14d                              ; 5039 _ 45: 31. F6
Unnamed_1_4DFC:
        mov     rax, r14                                ; 503C _ 4C: 89. F0
        add     rsp, 600                                ; 503F _ 48: 81. C4, 00000258
        pop     rbx                                     ; 5046 _ 5B
        pop     rdi                                     ; 5047 _ 5F
        pop     rsi                                     ; 5048 _ 5E
        pop     r12                                     ; 5049 _ 41: 5C
        pop     r13                                     ; 504B _ 41: 5D
        pop     r14                                     ; 504D _ 41: 5E
        pop     r15                                     ; 504F _ 41: 5F
        pop     rbp                                     ; 5051 _ 5D
        ret                                             ; 5052 _ C3
_ParseUpdateDataFile ENDP

?_278   LABEL NEAR
        mov     rdx, qword ptr [rbp-250H]               ; 5053 _ 48: 8B. 95, FFFFFDB0
        mov     rcx, qword ptr [rbp-248H]               ; 505A _ 48: 8B. 8D, FFFFFDB8
        call    _FreeAllList                            ; 5061 _ E8, FFFFF7C2
        mov     r14, 8000000000000009H                  ; 5066 _ 49: BE, 8000000000000009
        jmp     Unnamed_1_4DFC                          ; 5070 _ EB, CA

_UpdateOneBlock PROC
        push    rbp                                     ; 5072 _ 55
        mov     rbp, rsp                                ; 5073 _ 48: 89. E5
        push    r14                                     ; 5076 _ 41: 56
        push    rsi                                     ; 5078 _ 56
        push    rdi                                     ; 5079 _ 57
        push    rbx                                     ; 507A _ 53
        sub     rsp, 48                                 ; 507B _ 48: 83. EC, 30
        mov     r14, r9                                 ; 507F _ 4D: 89. CE
        mov     rsi, r8                                 ; 5082 _ 4C: 89. C6
        mov     rbx, rdx                                ; 5085 _ 48: 89. D3
        mov     rdi, rcx                                ; 5088 _ 48: 89. CF
        mov     r8d, 1                                  ; 508B _ 41: B8, 00000001
        mov     r9, -1                                  ; 5091 _ 49: C7. C1, FFFFFFFF
        call    qword ptr [rdi+30H]                     ; 5098 _ FF. 57, 30
        test    rax, rax                                ; 509B _ 48: 85. C0
        js      ?_279                                   ; 509E _ 78, 2F
        mov     qword ptr [rbp-28H], rsi                ; 50A0 _ 48: 89. 75, D8
        mov     qword ptr [rsp+20H], r14                ; 50A4 _ 4C: 89. 74 24, 20
        xor     r14d, r14d                              ; 50A9 _ 45: 31. F6
        lea     r9, ptr [rbp-28H]                       ; 50AC _ 4C: 8D. 4D, D8
        mov     rcx, rdi                                ; 50B0 _ 48: 89. F9
        mov     rdx, rbx                                ; 50B3 _ 48: 89. DA
        xor     r8d, r8d                                ; 50B6 _ 45: 31. C0
        call    qword ptr [rdi+28H]                     ; 50B9 _ FF. 57, 28
        test    rax, rax                                ; 50BC _ 48: 85. C0
        setns   cl                                      ; 50BF _ 0F 99. C1
        cmp     qword ptr [rbp-28H], rsi                ; 50C2 _ 48: 39. 75, D8
        sete    dl                                      ; 50C6 _ 0F 94. C2
        test    dl, cl                                  ; 50C9 _ 84. CA
        cmovne  rax, r14                                ; 50CB _ 49: 0F 45. C6
?_279:  add     rsp, 48                                 ; 50CF _ 48: 83. C4, 30
        pop     rbx                                     ; 50D3 _ 5B
        pop     rdi                                     ; 50D4 _ 5F
        pop     rsi                                     ; 50D5 _ 5E
        pop     r14                                     ; 50D6 _ 41: 5E
        pop     rbp                                     ; 50D8 _ 5D
        ret                                             ; 50D9 _ C3
_UpdateOneBlock ENDP

_UpdateBufferInOneBlock PROC
        push    rbp                                     ; 50DA _ 55
        mov     rbp, rsp                                ; 50DB _ 48: 89. E5
        push    r15                                     ; 50DE _ 41: 57
        push    r14                                     ; 50E0 _ 41: 56
        push    r13                                     ; 50E2 _ 41: 55
        push    r12                                     ; 50E4 _ 41: 54
        push    rsi                                     ; 50E6 _ 56
        push    rdi                                     ; 50E7 _ 57
        push    rbx                                     ; 50E8 _ 53
        sub     rsp, 56                                 ; 50E9 _ 48: 83. EC, 38
        mov     r13, r9                                 ; 50ED _ 4D: 89. CD
        mov     rdi, r8                                 ; 50F0 _ 4C: 89. C7
        mov     r12, rdx                                ; 50F3 _ 49: 89. D4
        mov     rbx, rcx                                ; 50F6 _ 48: 89. CB
        mov     r9, qword ptr [rbp+38H]                 ; 50F9 _ 4C: 8B. 4D, 38
        mov     r14, qword ptr [rbp+30H]                ; 50FD _ 4C: 8B. 75, 30
        test    rdi, rdi                                ; 5101 _ 48: 85. FF
        jnz     Unnamed_1_4EDE                          ; 5104 _ 75, 18
        cmp     r13, r14                                ; 5106 _ 4D: 39. F5
        jnz     Unnamed_1_4EDE                          ; 5109 _ 75, 13
        mov     rcx, rbx                                ; 510B _ 48: 89. D9
        mov     rdx, r12                                ; 510E _ 4C: 89. E2
        mov     r8, r13                                 ; 5111 _ 4D: 89. E8
        call    _UpdateOneBlock                         ; 5114 _ E8, FFFFFF59
        mov     r15, rax                                ; 5119 _ 49: 89. C7
        jmp     Unnamed_1_4F50                          ; 511C _ EB, 72

Unnamed_1_4EDE:
        mov     rcx, r14                                ; 511E _ 4C: 89. F1
        call    _AllocatePool                           ; 5121 _ E8, FFFFC539
        mov     rsi, rax                                ; 5126 _ 48: 89. C6
        mov     r15, 8000000000000009H                  ; 5129 _ 49: BF, 8000000000000009
        test    rsi, rsi                                ; 5133 _ 48: 85. F6
        jz      Unnamed_1_4F50                          ; 5136 _ 74, 58
        mov     qword ptr [rbp-40H], r14                ; 5138 _ 4C: 89. 75, C0
        mov     qword ptr [rsp+20H], rsi                ; 513C _ 48: 89. 74 24, 20
        lea     r9, ptr [rbp-40H]                       ; 5141 _ 4C: 8D. 4D, C0
        mov     rcx, rbx                                ; 5145 _ 48: 89. D9
        mov     rdx, r12                                ; 5148 _ 4C: 89. E2
        xor     r8d, r8d                                ; 514B _ 45: 31. C0
        call    qword ptr [rbx+20H]                     ; 514E _ FF. 53, 20
        mov     r15, rax                                ; 5151 _ 49: 89. C7
        test    r15, r15                                ; 5154 _ 4D: 85. FF
        js      Unnamed_1_4F48                          ; 5157 _ 78, 2F
        mov     rax, qword ptr [rbp-40H]                ; 5159 _ 48: 8B. 45, C0
        cmp     rax, r14                                ; 515D _ 4C: 39. F0
        jnz     Unnamed_1_4F48                          ; 5160 _ 75, 26
        add     rdi, rsi                                ; 5162 _ 48: 01. F7
        mov     rcx, rdi                                ; 5165 _ 48: 89. F9
        mov     rdx, qword ptr [rbp+38H]                ; 5168 _ 48: 8B. 55, 38
        mov     r8, r13                                 ; 516C _ 4D: 89. E8
        call    _CopyMem                                ; 516F _ E8, FFFFB2D0
        mov     rcx, rbx                                ; 5174 _ 48: 89. D9
        mov     rdx, r12                                ; 5177 _ 4C: 89. E2
        mov     r8, r14                                 ; 517A _ 4D: 89. F0
        mov     r9, rsi                                 ; 517D _ 49: 89. F1
        call    _UpdateOneBlock                         ; 5180 _ E8, FFFFFEED
        mov     r15, rax                                ; 5185 _ 49: 89. C7
Unnamed_1_4F48:
        mov     rcx, rsi                                ; 5188 _ 48: 89. F1
        call    _FreePool                               ; 518B _ E8, FFFFC5C7
Unnamed_1_4F50:
        mov     rax, r15                                ; 5190 _ 4C: 89. F8
        add     rsp, 56                                 ; 5193 _ 48: 83. C4, 38
        pop     rbx                                     ; 5197 _ 5B
        pop     rdi                                     ; 5198 _ 5F
        pop     rsi                                     ; 5199 _ 5E
        pop     r12                                     ; 519A _ 41: 5C
        pop     r13                                     ; 519C _ 41: 5D
        pop     r14                                     ; 519E _ 41: 5E
        pop     r15                                     ; 51A0 _ 41: 5F
        pop     rbp                                     ; 51A2 _ 5D
        ret                                             ; 51A3 _ C3
_UpdateBufferInOneBlock ENDP

_RetrieveLastWrite PROC
        push    rbp                                     ; 51A4 _ 55
        mov     rbp, rsp                                ; 51A5 _ 48: 89. E5
        push    r15                                     ; 51A8 _ 41: 57
        push    r14                                     ; 51AA _ 41: 56
        push    r13                                     ; 51AC _ 41: 55
        push    r12                                     ; 51AE _ 41: 54
        push    rsi                                     ; 51B0 _ 56
        push    rdi                                     ; 51B1 _ 57
        push    rbx                                     ; 51B2 _ 53
        sub     rsp, 104                                ; 51B3 _ 48: 83. EC, 68
        mov     r12, r9                                 ; 51B7 _ 4D: 89. CC
        mov     rbx, r8                                 ; 51BA _ 4C: 89. C3
        mov     rsi, rdx                                ; 51BD _ 48: 89. D6
        mov     qword ptr [rbp-60H], rcx                ; 51C0 _ 48: 89. 4D, A0
        mov     rax, qword ptr [rbp+50H]                ; 51C4 _ 48: 8B. 45, 50
        mov     byte ptr [rax], 0                       ; 51C8 _ C6. 00, 00
        mov     qword ptr [rbp-50H], r12                ; 51CB _ 4C: 89. 65, B0
        lea     rdx, ptr [rbp-50H]                      ; 51CF _ 48: 8D. 55, B0
        mov     rcx, qword ptr [rbp+30H]                ; 51D3 _ 48: 8B. 4D, 30
        lea     rax, ptr [rbp-51H]                      ; 51D7 _ 48: 8D. 45, AF
        mov     qword ptr [rsp+38H], rax                ; 51DB _ 48: 89. 44 24, 38
        mov     qword ptr [rsp+30H], rcx                ; 51E0 _ 48: 89. 4C 24, 30
        mov     qword ptr [rsp+28H], rdx                ; 51E5 _ 48: 89. 54 24, 28
        mov     rax, qword ptr [rbp+48H]                ; 51EA _ 48: 8B. 45, 48
        mov     qword ptr [rsp+20H], rax                ; 51EE _ 48: 89. 44 24, 20
        lea     rdx, ptr [rbp-48H]                      ; 51F3 _ 48: 8D. 55, B8
        mov     rdi, qword ptr [rbp+38H]                ; 51F7 _ 48: 8B. 7D, 38
        mov     rax, qword ptr [rbp+40H]                ; 51FB _ 48: 8B. 45, 40
        mov     rcx, rsi                                ; 51FF _ 48: 89. F1
        mov     r8, rdi                                 ; 5202 _ 49: 89. F8
        mov     r14, rdi                                ; 5205 _ 49: 89. FE
        mov     r9, rax                                 ; 5208 _ 49: 89. C1
        mov     r13, rax                                ; 520B _ 49: 89. C5
        call    qword ptr [rsi+28H]                     ; 520E _ FF. 56, 28
        mov     rdi, rax                                ; 5211 _ 48: 89. C7
        test    rdi, rdi                                ; 5214 _ 48: 85. FF
        jns     ?_282                                   ; 5217 _ 0F 89, 000000BE
        mov     rax, 800000000000000EH                  ; 521D _ 48: B8, 800000000000000E
        cmp     rdi, rax                                ; 5227 _ 48: 39. C7
        jnz     ?_280                                   ; 522A _ 75, 0D
        mov     cl, byte ptr [rbp-51H]                  ; 522C _ 8A. 4D, AF
        xor     eax, eax                                ; 522F _ 31. C0
        test    cl, cl                                  ; 5231 _ 84. C9
        jne     Unnamed_1_5119                          ; 5233 _ 0F 85, 00000120
?_280:  mov     rax, 8000000000000015H                  ; 5239 _ 48: B8, 8000000000000015
        mov     rcx, 8000000000000005H                  ; 5243 _ 48: B9, 8000000000000005
        cmp     rdi, rcx                                ; 524D _ 48: 39. CF
        jne     Unnamed_1_5119                          ; 5250 _ 0F 85, 00000103
        mov     rcx, qword ptr [rbp-50H]                ; 5256 _ 48: 8B. 4D, B0
        call    _AllocatePool                           ; 525A _ E8, FFFFC400
        mov     r15, rax                                ; 525F _ 49: 89. C7
        mov     rax, 8000000000000009H                  ; 5262 _ 48: B8, 8000000000000009
        test    r15, r15                                ; 526C _ 4D: 85. FF
        je      Unnamed_1_5119                          ; 526F _ 0F 84, 000000E4
        lea     rax, ptr [rbp-51H]                      ; 5275 _ 48: 8D. 45, AF
        mov     qword ptr [rsp+38H], rax                ; 5279 _ 48: 89. 44 24, 38
        mov     qword ptr [rsp+30H], r15                ; 527E _ 4C: 89. 7C 24, 30
        lea     rax, ptr [rbp-50H]                      ; 5283 _ 48: 8D. 45, B0
        mov     qword ptr [rsp+28H], rax                ; 5287 _ 48: 89. 44 24, 28
        mov     rax, qword ptr [rbp+48H]                ; 528C _ 48: 8B. 45, 48
        mov     qword ptr [rsp+20H], rax                ; 5290 _ 48: 89. 44 24, 20
        lea     rdx, ptr [rbp-48H]                      ; 5295 _ 48: 8D. 55, B8
        mov     rcx, rsi                                ; 5299 _ 48: 89. F1
        mov     r8, r14                                 ; 529C _ 4D: 89. F0
        mov     r9, r13                                 ; 529F _ 4D: 89. E9
        call    qword ptr [rsi+28H]                     ; 52A2 _ FF. 56, 28
        mov     rdi, rax                                ; 52A5 _ 48: 89. C7
        test    rdi, rdi                                ; 52A8 _ 48: 85. FF
        jns     ?_281                                   ; 52AB _ 79, 17
        mov     rcx, r15                                ; 52AD _ 4C: 89. F9
        call    _FreePool                               ; 52B0 _ E8, FFFFC4A2
        mov     rax, 8000000000000015H                  ; 52B5 _ 48: B8, 8000000000000015
        jmp     Unnamed_1_5119                          ; 52BF _ E9, 00000095

?_281:  mov     rcx, qword ptr [rbp+30H]                ; 52C4 _ 48: 8B. 4D, 30
        mov     rdx, r15                                ; 52C8 _ 4C: 89. FA
        mov     r8, r12                                 ; 52CB _ 4D: 89. E0
        call    _CopyMem                                ; 52CE _ E8, FFFFB171
        mov     rcx, r15                                ; 52D3 _ 4C: 89. F9
        call    _FreePool                               ; 52D6 _ E8, FFFFC47C
?_282:  mov     rax, qword ptr [rbp+50H]                ; 52DB _ 48: 8B. 45, 50
        mov     byte ptr [rax], 1                       ; 52DF _ C6. 00, 01
        lea     rcx, ptr [rbp-48H]                      ; 52E2 _ 48: 8D. 4D, B8
        lea     rdx, ptr [_gEfiCallerIdGuid]            ; 52E6 _ 48: 8D. 15, 00003B63(rel)
        mov     r8d, 16                                 ; 52ED _ 41: B8, 00000010
        call    _CompareMem                             ; 52F3 _ E8, FFFFAFED
        mov     rcx, rax                                ; 52F8 _ 48: 89. C1
        mov     rax, 800000000000000EH                  ; 52FB _ 48: B8, 800000000000000E
        test    rcx, rcx                                ; 5305 _ 48: 85. C9
        jnz     Unnamed_1_5119                          ; 5308 _ 75, 4F
        add     rbx, 24                                 ; 530A _ 48: 83. C3, 18
        mov     rcx, qword ptr [rbp+30H]                ; 530E _ 48: 8B. 4D, 30
        mov     rdx, rbx                                ; 5312 _ 48: 89. DA
        mov     r8d, 16                                 ; 5315 _ 41: B8, 00000010
        call    _CompareMem                             ; 531B _ E8, FFFFAFC5
        mov     rcx, rax                                ; 5320 _ 48: 89. C1
        mov     rax, 800000000000000EH                  ; 5323 _ 48: B8, 800000000000000E
        test    rcx, rcx                                ; 532D _ 48: 85. C9
        jnz     Unnamed_1_5119                          ; 5330 _ 75, 27
        cmp     byte ptr [rbp-51H], 0                   ; 5332 _ 80. 7D, AF, 00
        mov     rax, rdi                                ; 5336 _ 48: 89. F8
        jnz     Unnamed_1_5119                          ; 5339 _ 75, 1E
        mov     rcx, rsi                                ; 533B _ 48: 89. F1
        mov     rdx, qword ptr [rbp-60H]                ; 533E _ 48: 8B. 55, A0
        call    qword ptr [rsi+18H]                     ; 5342 _ FF. 56, 18
        test    rax, rax                                ; 5345 _ 48: 85. C0
        jns     Unnamed_1_5119                          ; 5348 _ 79, 0F
        mov     rcx, rsi                                ; 534A _ 48: 89. F1
        call    qword ptr [rsi+20H]                     ; 534D _ FF. 56, 20
        mov     rax, qword ptr [rbp+50H]                ; 5350 _ 48: 8B. 45, 50
        mov     byte ptr [rax], 0                       ; 5354 _ C6. 00, 00
        xor     eax, eax                                ; 5357 _ 31. C0
Unnamed_1_5119:
        add     rsp, 104                                ; 5359 _ 48: 83. C4, 68
        pop     rbx                                     ; 535D _ 5B
        pop     rdi                                     ; 535E _ 5F
        pop     rsi                                     ; 535F _ 5E
        pop     r12                                     ; 5360 _ 41: 5C
        pop     r13                                     ; 5362 _ 41: 5D
        pop     r14                                     ; 5364 _ 41: 5E
        pop     r15                                     ; 5366 _ 41: 5F
        pop     rbp                                     ; 5368 _ 5D
        ret                                             ; 5369 _ C3
_RetrieveLastWrite ENDP

_FaultTolerantUpdateOnWholeFv PROC
        push    rbp                                     ; 536A _ 55
        mov     rbp, rsp                                ; 536B _ 48: 89. E5
        push    r15                                     ; 536E _ 41: 57
        push    r14                                     ; 5370 _ 41: 56
        push    r13                                     ; 5372 _ 41: 55
        push    r12                                     ; 5374 _ 41: 54
        push    rsi                                     ; 5376 _ 56
        push    rdi                                     ; 5377 _ 57
        push    rbx                                     ; 5378 _ 53
        sub     rsp, 152                                ; 5379 _ 48: 81. EC, 00000098
        mov     r15, r9                                 ; 5380 _ 4D: 89. CF
        mov     rsi, r8                                 ; 5383 _ 4C: 89. C6
        mov     qword ptr [rbp-80H], rcx                ; 5386 _ 48: 89. 4D, 80
        mov     rax, 8000000000000002H                  ; 538A _ 48: B8, 8000000000000002
        cmp     dword ptr [r15+8H], 0                   ; 5394 _ 41: 83. 7F, 08, 00
        jne     Unnamed_1_537B                          ; 5399 _ 0F 85, 0000021C
        mov     rax, 8000000000000002H                  ; 539F _ 48: B8, 8000000000000002
        cmp     byte ptr [r15+30H], 0                   ; 53A9 _ 41: 80. 7F, 30, 00
        je      Unnamed_1_537B                          ; 53AE _ 0F 84, 00000207
        mov     rax, qword ptr [_gBS]                   ; 53B4 _ 48: 8B. 05, 00003D8D(rel)
        lea     rcx, ptr [_gEfiFaultTolerantWriteProtocolGuid]; 53BB _ 48: 8D. 0D, 00003AE6(rel)
        xor     ebx, ebx                                ; 53C2 _ 31. DB
        lea     r8, ptr [rbp-40H]                       ; 53C4 _ 4C: 8D. 45, C0
        xor     edx, edx                                ; 53C8 _ 31. D2
        call    qword ptr [rax+140H]                    ; 53CA _ FF. 90, 00000140
        mov     rcx, rax                                ; 53D0 _ 48: 89. C1
        mov     rax, 800000000000000EH                  ; 53D3 _ 48: B8, 800000000000000E
        test    rcx, rcx                                ; 53DD _ 48: 85. C9
        js      Unnamed_1_537B                          ; 53E0 _ 0F 88, 000001D5
        mov     r14, qword ptr [rbp+30H]                ; 53E6 _ 4C: 8B. 75, 30
        mov     rax, rsi                                ; 53EA _ 48: 89. F0
        xor     edi, edi                                ; 53ED _ 31. FF
        jmp     ?_283                                   ; 53EF _ EB, 0E

Unnamed_1_51B1:
        cmp     rbx, rdx                                ; 53F1 _ 48: 39. D3
        cmovc   rbx, rdx                                ; 53F4 _ 48: 0F 42. DA
        add     rdi, rcx                                ; 53F8 _ 48: 01. CF
        add     rax, 8                                  ; 53FB _ 48: 83. C0, 08
?_283:  mov     ecx, dword ptr [rax]                    ; 53FF _ 8B. 08
        test    rcx, rcx                                ; 5401 _ 48: 85. C9
        jz      ?_284                                   ; 5404 _ 74, 08
        mov     edx, dword ptr [rax+4H]                 ; 5406 _ 8B. 50, 04
        test    rdx, rdx                                ; 5409 _ 48: 85. D2
        jnz     Unnamed_1_51B1                          ; 540C _ 75, E3
?_284:  mov     r13, rsi                                ; 540E _ 49: 89. F5
        mov     rax, qword ptr [rbp-40H]                ; 5411 _ 48: 8B. 45, C0
        lea     rdx, ptr [rbp-48H]                      ; 5415 _ 48: 8D. 55, B8
        mov     rcx, rax                                ; 5419 _ 48: 89. C1
        call    qword ptr [rax]                         ; 541C _ FF. 10
        mov     rax, 8000000000000009H                  ; 541E _ 48: B8, 8000000000000009
        cmp     qword ptr [rbp-48H], rbx                ; 5428 _ 48: 39. 5D, B8
        jc      Unnamed_1_537B                          ; 542C _ 0F 82, 00000189
        mov     qword ptr [rbp-68H], 0                  ; 5432 _ 48: C7. 45, 98, 00000000
        mov     qword ptr [rbp-70H], 0                  ; 543A _ 48: C7. 45, 90, 00000000
        mov     qword ptr [rbp-78H], 0                  ; 5442 _ 48: C7. 45, 88, 00000000
        mov     byte ptr [rbp-49H], 0                   ; 544A _ C6. 45, B7, 00
        mov     rdx, qword ptr [rbp-40H]                ; 544E _ 48: 8B. 55, C0
        lea     rsi, ptr [rbp-60H]                      ; 5452 _ 48: 8D. 75, A0
        lea     r8, ptr [rbp-68H]                       ; 5456 _ 4C: 8D. 45, 98
        lea     rcx, ptr [rbp-70H]                      ; 545A _ 48: 8D. 4D, 90
        lea     rbx, ptr [rbp-78H]                      ; 545E _ 48: 8D. 5D, 88
        lea     rax, ptr [rbp-49H]                      ; 5462 _ 48: 8D. 45, B7
        mov     qword ptr [rsp+40H], rax                ; 5466 _ 48: 89. 44 24, 40
        mov     qword ptr [rsp+38H], rbx                ; 546B _ 48: 89. 5C 24, 38
        mov     qword ptr [rsp+30H], rcx                ; 5470 _ 48: 89. 4C 24, 30
        mov     qword ptr [rsp+28H], r8                 ; 5475 _ 4C: 89. 44 24, 28
        mov     qword ptr [rsp+20H], rsi                ; 547A _ 48: 89. 74 24, 20
        mov     rcx, qword ptr [rbp-80H]                ; 547F _ 48: 8B. 4D, 80
        mov     r8, r15                                 ; 5483 _ 4D: 89. F8
        mov     r9d, 16                                 ; 5486 _ 41: B9, 00000010
        call    _RetrieveLastWrite                      ; 548C _ E8, FFFFFD13
        mov     rbx, rax                                ; 5491 _ 48: 89. C3
        mov     rax, 8000000000000015H                  ; 5494 _ 48: B8, 8000000000000015
        mov     rcx, 800000000000000EH                  ; 549E _ 48: B9, 800000000000000E
        cmp     rbx, rcx                                ; 54A8 _ 48: 39. CB
        sete    cl                                      ; 54AB _ 0F 94. C1
        mov     r12b, byte ptr [rbp-49H]                ; 54AE _ 44: 8A. 65, B7
        test    r12b, r12b                              ; 54B2 _ 45: 84. E4
        setne   dl                                      ; 54B5 _ 0F 95. C2
        test    cl, dl                                  ; 54B8 _ 84. D1
        jne     Unnamed_1_537B                          ; 54BA _ 0F 85, 000000FB
        test    rbx, rbx                                ; 54C0 _ 48: 85. DB
        js      Unnamed_1_537B                          ; 54C3 _ 0F 88, 000000F2
        test    r12b, r12b                              ; 54C9 _ 45: 84. E4
        jnz     ?_285                                   ; 54CC _ 75, 26
        mov     rax, qword ptr [rbp-40H]                ; 54CE _ 48: 8B. 45, C0
        lea     rdx, ptr [_gEfiCallerIdGuid]            ; 54D2 _ 48: 8D. 15, 00003977(rel)
        mov     rcx, rax                                ; 54D9 _ 48: 89. C1
        mov     r8d, 16                                 ; 54DC _ 41: B8, 00000010
        mov     r9, rdi                                 ; 54E2 _ 49: 89. F9
        call    qword ptr [rax+8H]                      ; 54E5 _ FF. 50, 08
        mov     rbx, rax                                ; 54E8 _ 48: 89. C3
        test    rbx, rbx                                ; 54EB _ 48: 85. DB
        js      Unnamed_1_537B                          ; 54EE _ 0F 88, 000000C7
?_285:  add     r15, 24                                 ; 54F4 _ 49: 83. C7, 18
        lea     rcx, ptr [rbp-60H]                      ; 54F8 _ 48: 8D. 4D, A0
        mov     rdx, r15                                ; 54FC _ 4C: 89. FA
        mov     r8d, 16                                 ; 54FF _ 41: B8, 00000010
        call    _CopyMem                                ; 5505 _ E8, FFFFAF3A
        xor     r15d, r15d                              ; 550A _ 45: 31. FF
        mov     rcx, r13                                ; 550D _ 4C: 89. E9
        jmp     ?_290                                   ; 5510 _ E9, 00000099

Unnamed_1_52D5:
        mov     edi, dword ptr [rcx+4H]                 ; 5515 _ 8B. 79, 04
        test    rdi, rdi                                ; 5518 _ 48: 85. FF
        je      Unnamed_1_5378                          ; 551B _ 0F 84, 00000097
        xor     r13d, r13d                              ; 5521 _ 45: 31. ED
        jmp     ?_289                                   ; 5524 _ EB, 71

Unnamed_1_52E6:
        mov     rsi, rcx                                ; 5526 _ 48: 89. CE
        test    r12b, r12b                              ; 5529 _ 45: 84. E4
        jz      ?_287                                   ; 552C _ 74, 2F
        mov     rcx, qword ptr [rbp-68H]                ; 552E _ 48: 8B. 4D, 98
        cmp     rdx, rcx                                ; 5532 _ 48: 39. CA
        jnz     ?_286                                   ; 5535 _ 75, 21
        mov     rax, 8000000000000015H                  ; 5537 _ 48: B8, 8000000000000015
        cmp     qword ptr [rbp-70H], 0                  ; 5541 _ 48: 83. 7D, 90, 00
        jnz     Unnamed_1_537B                          ; 5546 _ 75, 73
        mov     rax, 8000000000000015H                  ; 5548 _ 48: B8, 8000000000000015
        cmp     qword ptr [rbp-78H], rdi                ; 5552 _ 48: 39. 7D, 88
        jnz     Unnamed_1_537B                          ; 5556 _ 75, 63
?_286:  cmp     rdx, rcx                                ; 5558 _ 48: 39. CA
        jc      ?_288                                   ; 555B _ 72, 2A
?_287:  mov     rax, qword ptr [rbp-40H]                ; 555D _ 48: 8B. 45, C0
        mov     qword ptr [rsp+30H], r14                ; 5561 _ 4C: 89. 74 24, 30
        mov     rcx, qword ptr [rbp-80H]                ; 5566 _ 48: 8B. 4D, 80
        mov     qword ptr [rsp+28H], rcx                ; 556A _ 48: 89. 4C 24, 28
        lea     rcx, ptr [rbp-60H]                      ; 556F _ 48: 8D. 4D, A0
        mov     qword ptr [rsp+20H], rcx                ; 5573 _ 48: 89. 4C 24, 20
        mov     rcx, rax                                ; 5578 _ 48: 89. C1
        xor     r8d, r8d                                ; 557B _ 45: 31. C0
        mov     r9, rdi                                 ; 557E _ 49: 89. F9
        call    qword ptr [rax+10H]                     ; 5581 _ FF. 50, 10
        mov     rbx, rax                                ; 5584 _ 48: 89. C3
?_288:  test    rbx, rbx                                ; 5587 _ 48: 85. DB
        js      Unnamed_1_5378                          ; 558A _ 78, 2C
        add     r14, rdi                                ; 558C _ 49: 01. FE
        mov     rcx, rsi                                ; 558F _ 48: 89. F1
        mov     eax, dword ptr [rcx]                    ; 5592 _ 8B. 01
        inc     r13                                     ; 5594 _ 49: FF. C5
?_289:  lea     rdx, ptr [r15+r13]                      ; 5597 _ 4B: 8D. 14 2F
        mov     eax, eax                                ; 559B _ 89. C0
        cmp     r13, rax                                ; 559D _ 49: 39. C5
        jc      Unnamed_1_52E6                          ; 55A0 _ 72, 84
        test    rbx, rbx                                ; 55A2 _ 48: 85. DB
        js      Unnamed_1_5378                          ; 55A5 _ 78, 11
        add     rcx, 8                                  ; 55A7 _ 48: 83. C1, 08
        mov     r15, rdx                                ; 55AB _ 49: 89. D7
?_290:  mov     eax, dword ptr [rcx]                    ; 55AE _ 8B. 01
        test    eax, eax                                ; 55B0 _ 85. C0
        jne     Unnamed_1_52D5                          ; 55B2 _ 0F 85, FFFFFF5D
Unnamed_1_5378:
        mov     rax, rbx                                ; 55B8 _ 48: 89. D8
Unnamed_1_537B:
        add     rsp, 152                                ; 55BB _ 48: 81. C4, 00000098
        pop     rbx                                     ; 55C2 _ 5B
        pop     rdi                                     ; 55C3 _ 5F
        pop     rsi                                     ; 55C4 _ 5E
        pop     r12                                     ; 55C5 _ 41: 5C
        pop     r13                                     ; 55C7 _ 41: 5D
        pop     r14                                     ; 55C9 _ 41: 5E
        pop     r15                                     ; 55CB _ 41: 5F
        pop     rbp                                     ; 55CD _ 5D
        ret                                             ; 55CE _ C3
_FaultTolerantUpdateOnWholeFv ENDP

_NonFaultTolerantUpdateOnWholeFv PROC
        push    rbp                                     ; 55CF _ 55
        mov     rbp, rsp                                ; 55D0 _ 48: 89. E5
        push    r15                                     ; 55D3 _ 41: 57
        push    r14                                     ; 55D5 _ 41: 56
        push    r12                                     ; 55D7 _ 41: 54
        push    rsi                                     ; 55D9 _ 56
        push    rdi                                     ; 55DA _ 57
        push    rbx                                     ; 55DB _ 53
        sub     rsp, 32                                 ; 55DC _ 48: 83. EC, 20
        mov     r15, r8                                 ; 55E0 _ 4D: 89. C7
        mov     r14, rdx                                ; 55E3 _ 49: 89. D6
        mov     rax, 8000000000000002H                  ; 55E6 _ 48: B8, 8000000000000002
        cmp     dword ptr [r9+8H], 0                    ; 55F0 _ 41: 83. 79, 08, 00
        jnz     Unnamed_1_541A                          ; 55F5 _ 75, 63
        mov     rax, 8000000000000002H                  ; 55F7 _ 48: B8, 8000000000000002
        cmp     byte ptr [r9+30H], 0                    ; 5601 _ 41: 80. 79, 30, 00
        jnz     Unnamed_1_541A                          ; 5606 _ 75, 52
        mov     rbx, qword ptr [rbp+30H]                ; 5608 _ 48: 8B. 5D, 30
        xor     eax, eax                                ; 560C _ 31. C0
        mov     r12, rax                                ; 560E _ 49: 89. C4
        jmp     ?_291                                   ; 5611 _ EB, 07

Unnamed_1_53D3:
        add     r15, 8                                  ; 5613 _ 49: 83. C7, 08
        mov     r12, rdx                                ; 5617 _ 49: 89. D4
?_291:  mov     ecx, dword ptr [r15]                    ; 561A _ 41: 8B. 0F
        test    ecx, ecx                                ; 561D _ 85. C9
        jz      Unnamed_1_541A                          ; 561F _ 74, 39
        mov     edi, dword ptr [r15+4H]                 ; 5621 _ 41: 8B. 7F, 04
        test    rdi, rdi                                ; 5625 _ 48: 85. FF
        jz      Unnamed_1_541A                          ; 5628 _ 74, 30
        xor     esi, esi                                ; 562A _ 31. F6
        jmp     ?_292                                   ; 562C _ EB, 1C

Unnamed_1_53EE:
        mov     rcx, r14                                ; 562E _ 4C: 89. F1
        mov     r8, rdi                                 ; 5631 _ 49: 89. F8
        mov     r9, rbx                                 ; 5634 _ 49: 89. D9
        call    _UpdateOneBlock                         ; 5637 _ E8, FFFFFA36
        test    rax, rax                                ; 563C _ 48: 85. C0
        js      Unnamed_1_541A                          ; 563F _ 78, 19
        add     rbx, rdi                                ; 5641 _ 48: 01. FB
        mov     ecx, dword ptr [r15]                    ; 5644 _ 41: 8B. 0F
        inc     rsi                                     ; 5647 _ 48: FF. C6
?_292:  lea     rdx, ptr [r12+rsi]                      ; 564A _ 49: 8D. 14 34
        mov     ecx, ecx                                ; 564E _ 89. C9
        cmp     rsi, rcx                                ; 5650 _ 48: 39. CE
        jc      Unnamed_1_53EE                          ; 5653 _ 72, D9
        test    rax, rax                                ; 5655 _ 48: 85. C0
        jns     Unnamed_1_53D3                          ; 5658 _ 79, B9
Unnamed_1_541A:
        add     rsp, 32                                 ; 565A _ 48: 83. C4, 20
        pop     rbx                                     ; 565E _ 5B
        pop     rdi                                     ; 565F _ 5F
        pop     rsi                                     ; 5660 _ 5E
        pop     r12                                     ; 5661 _ 41: 5C
        pop     r14                                     ; 5663 _ 41: 5E
        pop     r15                                     ; 5665 _ 41: 5F
        pop     rbp                                     ; 5667 _ 5D
        ret                                             ; 5668 _ C3
_NonFaultTolerantUpdateOnWholeFv ENDP

_PerformUpdateOnWholeFv PROC
        push    rbp                                     ; 5669 _ 55
        mov     rbp, rsp                                ; 566A _ 48: 89. E5
        push    r15                                     ; 566D _ 41: 57
        push    r14                                     ; 566F _ 41: 56
        push    r12                                     ; 5671 _ 41: 54
        push    rsi                                     ; 5673 _ 56
        push    rdi                                     ; 5674 _ 57
        push    rbx                                     ; 5675 _ 53
        sub     rsp, 48                                 ; 5676 _ 48: 83. EC, 30
        mov     r15, r9                                 ; 567A _ 4D: 89. CF
        mov     rdi, r8                                 ; 567D _ 4C: 89. C7
        mov     r12, rdx                                ; 5680 _ 49: 89. D4
        mov     r14, rcx                                ; 5683 _ 49: 89. CE
        mov     rsi, 8000000000000002H                  ; 5686 _ 48: BE, 8000000000000002
        cmp     dword ptr [rdi+8H], 0                   ; 5690 _ 83. 7F, 08, 00
        jne     Unnamed_1_5555                          ; 5694 _ 0F 85, 000000FB
        mov     rax, qword ptr [rdi+10H]                ; 569A _ 48: 8B. 47, 10
        movzx   ecx, word ptr [rax+30H]                 ; 569E _ 0F B7. 48, 30
        call    _AllocatePool                           ; 56A2 _ E8, FFFFBFB8
        mov     rbx, rax                                ; 56A7 _ 48: 89. C3
        mov     rsi, 8000000000000009H                  ; 56AA _ 48: BE, 8000000000000009
        test    rbx, rbx                                ; 56B4 _ 48: 85. DB
        je      Unnamed_1_5555                          ; 56B7 _ 0F 84, 000000D8
        mov     rsi, qword ptr [rbp+30H]                ; 56BD _ 48: 8B. 75, 30
        mov     rdx, qword ptr [rdi+10H]                ; 56C1 _ 48: 8B. 57, 10
        movzx   r8d, word ptr [rdx+30H]                 ; 56C5 _ 44: 0F B7. 42, 30
        mov     rcx, rbx                                ; 56CA _ 48: 89. D9
        call    _CopyMem                                ; 56CD _ E8, FFFFAD72
        cmp     qword ptr [rbx+20H], rsi                ; 56D2 _ 48: 39. 73, 20
        jz      ?_293                                   ; 56D6 _ 74, 17
        mov     rcx, rbx                                ; 56D8 _ 48: 89. D9
        call    _FreePool                               ; 56DB _ E8, FFFFC077
        mov     rsi, 8000000000000002H                  ; 56E0 _ 48: BE, 8000000000000002
        jmp     Unnamed_1_5555                          ; 56EA _ E9, 000000A6

?_293:  mov     rcx, qword ptr [_gHiiHandle]            ; 56EF _ 48: 8B. 0D, 00003A92(rel)
        mov     edx, 7                                  ; 56F6 _ BA, 00000007
        xor     r8d, r8d                                ; 56FB _ 45: 31. C0
        call    _HiiGetString                           ; 56FE _ E8, FFFFDD7B
        mov     rsi, rax                                ; 5703 _ 48: 89. C6
        test    rsi, rsi                                ; 5706 _ 48: 85. F6
        jz      ?_294                                   ; 5709 _ 74, 1B
        mov     rdx, qword ptr [rdi+10H]                ; 570B _ 48: 8B. 57, 10
        mov     r8, qword ptr [rbx+20H]                 ; 570F _ 4C: 8B. 43, 20
        add     r8, rdx                                 ; 5713 _ 49: 01. D0
        mov     rcx, rsi                                ; 5716 _ 48: 89. F1
        call    _Print                                  ; 5719 _ E8, FFFFD818
        mov     rcx, rsi                                ; 571E _ 48: 89. F1
        call    _FreePool                               ; 5721 _ E8, FFFFC031
?_294:  call    _DebugPrintEnabled                      ; 5726 _ E8, FFFFAB24
        test    al, al                                  ; 572B _ 84. C0
        jz      Unnamed_1_5519                          ; 572D _ 74, 2A
        mov     ecx, 2147483648                         ; 572F _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 5734 _ E8, FFFFAB19
        test    al, al                                  ; 5739 _ 84. C0
        jz      Unnamed_1_5519                          ; 573B _ 74, 1C
        mov     r8, qword ptr [rdi+10H]                 ; 573D _ 4C: 8B. 47, 10
        mov     r9, qword ptr [rbx+20H]                 ; 5741 _ 4C: 8B. 4B, 20
        add     r9, r8                                  ; 5745 _ 4D: 01. C1
        lea     rdx, ptr [?_422]                        ; 5748 _ 48: 8D. 15, 00002144(rel)
        mov     ecx, 2147483648                         ; 574F _ B9, 80000000
        call    _DebugPrint                             ; 5754 _ E8, FFFFAAE7
Unnamed_1_5519:
        lea     r8, ptr [rbx+38H]                       ; 5759 _ 4C: 8D. 43, 38
        cmp     byte ptr [rdi+30H], 0                   ; 575D _ 80. 7F, 30, 00
        jz      ?_295                                   ; 5761 _ 74, 12
        mov     qword ptr [rsp+20H], r15                ; 5763 _ 4C: 89. 7C 24, 20
        mov     rcx, r14                                ; 5768 _ 4C: 89. F1
        mov     r9, rdi                                 ; 576B _ 49: 89. F9
        call    _FaultTolerantUpdateOnWholeFv           ; 576E _ E8, FFFFFBF7
        jmp     ?_296                                   ; 5773 _ EB, 10

?_295:  mov     qword ptr [rsp+20H], r15                ; 5775 _ 4C: 89. 7C 24, 20
        mov     rdx, r12                                ; 577A _ 4C: 89. E2
        mov     r9, rdi                                 ; 577D _ 49: 89. F9
        call    _NonFaultTolerantUpdateOnWholeFv        ; 5780 _ E8, FFFFFE4A
?_296:  mov     rsi, rax                                ; 5785 _ 48: 89. C6
        mov     rcx, rbx                                ; 5788 _ 48: 89. D9
        call    _FreePool                               ; 578B _ E8, FFFFBFC7
        test    rsi, rsi                                ; 5790 _ 48: 85. F6
        jns     ?_297                                   ; 5793 _ 79, 12
Unnamed_1_5555:
        mov     rax, rsi                                ; 5795 _ 48: 89. F0
        add     rsp, 48                                 ; 5798 _ 48: 83. C4, 30
        pop     rbx                                     ; 579C _ 5B
        pop     rdi                                     ; 579D _ 5F
        pop     rsi                                     ; 579E _ 5E
        pop     r12                                     ; 579F _ 41: 5C
        pop     r14                                     ; 57A1 _ 41: 5E
        pop     r15                                     ; 57A3 _ 41: 5F
        pop     rbp                                     ; 57A5 _ 5D
        ret                                             ; 57A6 _ C3
_PerformUpdateOnWholeFv ENDP

?_297   LABEL NEAR
        mov     rax, qword ptr [_gBS]                   ; 57A7 _ 48: 8B. 05, 0000399A(rel)
        mov     rax, qword ptr [rax+88H]                ; 57AE _ 48: 8B. 80, 00000088
        lea     rdx, ptr [_gEfiFirmwareVolumeBlockProtocolGuid]; 57B5 _ 48: 8D. 15, 0000370C(rel)
        mov     rcx, r14                                ; 57BC _ 4C: 89. F1
        mov     r8, r12                                 ; 57BF _ 4D: 89. E0
        mov     r9, r12                                 ; 57C2 _ 4D: 89. E1
        add     rsp, 48                                 ; 57C5 _ 48: 83. C4, 30
        pop     rbx                                     ; 57C9 _ 5B
        pop     rdi                                     ; 57CA _ 5F
        pop     rsi                                     ; 57CB _ 5E
        pop     r12                                     ; 57CC _ 41: 5C
        pop     r14                                     ; 57CE _ 41: 5E
        pop     r15                                     ; 57D0 _ 41: 5F
        pop     rbp                                     ; 57D2 _ 5D
        jmp     rax                                     ; 57D3 _ FF. E0

_PerformUpdateOnFvFile PROC
        push    rbp                                     ; 57D5 _ 55
        mov     rbp, rsp                                ; 57D6 _ 48: 89. E5
        push    r14                                     ; 57D9 _ 41: 56
        push    rsi                                     ; 57DB _ 56
        push    rdi                                     ; 57DC _ 57
        push    rbx                                     ; 57DD _ 53
        sub     rsp, 80                                 ; 57DE _ 48: 83. EC, 50
        mov     r14, r9                                 ; 57E2 _ 4D: 89. CE
        mov     rsi, r8                                 ; 57E5 _ 4C: 89. C6
        mov     rbx, rcx                                ; 57E8 _ 48: 89. CB
        mov     rax, 8000000000000002H                  ; 57EB _ 48: B8, 8000000000000002
        cmp     dword ptr [rsi+8H], 1                   ; 57F5 _ 83. 7E, 08, 01
        jne     Unnamed_1_568F                          ; 57F9 _ 0F 85, 000000D0
        mov     rcx, qword ptr [_gHiiHandle]            ; 57FF _ 48: 8B. 0D, 00003982(rel)
        mov     edx, 6                                  ; 5806 _ BA, 00000006
        xor     r8d, r8d                                ; 580B _ 45: 31. C0
        call    _HiiGetString                           ; 580E _ E8, FFFFDC6B
        mov     rdi, rax                                ; 5813 _ 48: 89. C7
        test    rdi, rdi                                ; 5816 _ 48: 85. FF
        jz      ?_298                                   ; 5819 _ 74, 14
        lea     rdx, ptr [rsi+18H]                      ; 581B _ 48: 8D. 56, 18
        mov     rcx, rdi                                ; 581F _ 48: 89. F9
        call    _Print                                  ; 5822 _ E8, FFFFD70F
        mov     rcx, rdi                                ; 5827 _ 48: 89. F9
        call    _FreePool                               ; 582A _ E8, FFFFBF28
?_298:  call    _DebugPrintEnabled                      ; 582F _ E8, FFFFAA1B
        test    al, al                                  ; 5834 _ 84. C0
        jz      Unnamed_1_561B                          ; 5836 _ 74, 23
        mov     ecx, 2147483648                         ; 5838 _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 583D _ E8, FFFFAA10
        test    al, al                                  ; 5842 _ 84. C0
        jz      Unnamed_1_561B                          ; 5844 _ 74, 15
        lea     r8, ptr [rsi+18H]                       ; 5846 _ 4C: 8D. 46, 18
        lea     rdx, ptr [?_423]                        ; 584A _ 48: 8D. 15, 00002077(rel)
        mov     ecx, 2147483648                         ; 5851 _ B9, 80000000
        call    _DebugPrint                             ; 5856 _ E8, FFFFA9E5
Unnamed_1_561B:
        mov     rax, qword ptr [_gBS]                   ; 585B _ 48: 8B. 05, 000038E6(rel)
        lea     rdx, ptr [_gEfiFirmwareVolume2ProtocolGuid]; 5862 _ 48: 8D. 15, 0000364F(rel)
        lea     r8, ptr [rbp-28H]                       ; 5869 _ 4C: 8D. 45, D8
        mov     rcx, rbx                                ; 586D _ 48: 89. D9
        call    qword ptr [rax+98H]                     ; 5870 _ FF. 90, 00000098
        test    rax, rax                                ; 5876 _ 48: 85. C0
        js      Unnamed_1_568F                          ; 5879 _ 78, 54
        mov     cl, byte ptr [rbp+38H]                  ; 587B _ 8A. 4D, 38
        cmp     cl, 8                                   ; 587E _ 80. F9, 08
        ja      ?_299                                   ; 5881 _ 77, 18
        movzx   edx, cl                                 ; 5883 _ 0F B6. D1
        mov     rax, 8000000000000003H                  ; 5886 _ 48: B8, 8000000000000003
        mov     ebx, 336                                ; 5890 _ BB, 00000150
        bt      rbx, rdx                                ; 5895 _ 48: 0F A3. D3
        jc      Unnamed_1_568F                          ; 5899 _ 72, 34
?_299:  mov     edx, dword ptr [rbp+40H]                ; 589B _ 8B. 55, 40
        mov     rax, qword ptr [rbp+30H]                ; 589E _ 48: 8B. 45, 30
        lea     rbx, ptr [rsi+18H]                      ; 58A2 _ 48: 8D. 5E, 18
        mov     qword ptr [rbp-48H], rbx                ; 58A6 _ 48: 89. 5D, B8
        mov     byte ptr [rbp-40H], cl                  ; 58AA _ 88. 4D, C0
        mov     dword ptr [rbp-3CH], edx                ; 58AD _ 89. 55, C4
        mov     qword ptr [rbp-38H], r14                ; 58B0 _ 4C: 89. 75, C8
        mov     dword ptr [rbp-30H], eax                ; 58B4 _ 89. 45, D0
        lea     r9, ptr [rbp-48H]                       ; 58B7 _ 4C: 8D. 4D, B8
        movzx   r8d, byte ptr [rsi+30H]                 ; 58BB _ 44: 0F B6. 46, 30
        mov     rax, qword ptr [rbp-28H]                ; 58C0 _ 48: 8B. 45, D8
        mov     rcx, rax                                ; 58C4 _ 48: 89. C1
        mov     edx, 1                                  ; 58C7 _ BA, 00000001
        call    qword ptr [rax+20H]                     ; 58CC _ FF. 50, 20
Unnamed_1_568F:
        add     rsp, 80                                 ; 58CF _ 48: 83. C4, 50
        pop     rbx                                     ; 58D3 _ 5B
        pop     rdi                                     ; 58D4 _ 5F
        pop     rsi                                     ; 58D5 _ 5E
        pop     r14                                     ; 58D6 _ 41: 5E
        pop     rbp                                     ; 58D8 _ 5D
        ret                                             ; 58D9 _ C3
_PerformUpdateOnFvFile ENDP

_FaultTolerantUpdateOnPartFv PROC
        push    rbp                                     ; 58DA _ 55
        mov     rbp, rsp                                ; 58DB _ 48: 89. E5
        push    r15                                     ; 58DE _ 41: 57
        push    r14                                     ; 58E0 _ 41: 56
        push    r13                                     ; 58E2 _ 41: 55
        push    r12                                     ; 58E4 _ 41: 54
        push    rsi                                     ; 58E6 _ 56
        push    rdi                                     ; 58E7 _ 57
        push    rbx                                     ; 58E8 _ 53
        sub     rsp, 248                                ; 58E9 _ 48: 81. EC, 000000F8
        mov     qword ptr [rbp-0C0H], r9                ; 58F0 _ 4C: 89. 8D, FFFFFF40
        mov     qword ptr [rbp-0E8H], r8                ; 58F7 _ 4C: 89. 85, FFFFFF18
        mov     qword ptr [rbp-0E0H], rdx               ; 58FE _ 48: 89. 95, FFFFFF20
        mov     qword ptr [rbp-98H], rcx                ; 5905 _ 48: 89. 8D, FFFFFF68
        lea     rdx, ptr [rbp-40H]                      ; 590C _ 48: 8D. 55, C0
        mov     rax, qword ptr [rbp+38H]                ; 5910 _ 48: 8B. 45, 38
        mov     rcx, rax                                ; 5914 _ 48: 89. C1
        call    qword ptr [rax+10H]                     ; 5917 _ FF. 50, 10
        mov     rdi, rax                                ; 591A _ 48: 89. C7
        test    rdi, rdi                                ; 591D _ 48: 85. FF
        js      Unnamed_1_5C66                          ; 5920 _ 0F 88, 00000580
        mov     rbx, qword ptr [rbp+30H]                ; 5926 _ 48: 8B. 5D, 30
        mov     rdi, 8000000000000002H                  ; 592A _ 48: BF, 8000000000000002
        mov     rdx, qword ptr [rbp-40H]                ; 5934 _ 48: 8B. 55, C0
        cmp     rdx, rbx                                ; 5938 _ 48: 39. DA
        ja      Unnamed_1_5C66                          ; 593B _ 0F 87, 00000565
        mov     rax, qword ptr [rdx+20H]                ; 5941 _ 48: 8B. 42, 20
        add     rax, rdx                                ; 5945 _ 48: 01. D0
        mov     rdi, 8000000000000002H                  ; 5948 _ 48: BF, 8000000000000002
        cmp     rax, rbx                                ; 5952 _ 48: 39. D8
        jc      Unnamed_1_5C66                          ; 5955 _ 0F 82, 0000054B
        movzx   ecx, word ptr [rdx+30H]                 ; 595B _ 0F B7. 4A, 30
        mov     rsi, rbx                                ; 595F _ 48: 89. DE
        call    _AllocateCopyPool                       ; 5962 _ E8, FFFFBDDD
        mov     rcx, rsi                                ; 5967 _ 48: 89. F1
        mov     rdi, 8000000000000009H                  ; 596A _ 48: BF, 8000000000000009
        test    rax, rax                                ; 5974 _ 48: 85. C0
        je      Unnamed_1_5C66                          ; 5977 _ 0F 84, 00000529
        lea     rdx, ptr [rax+38H]                      ; 597D _ 48: 8D. 50, 38
        mov     qword ptr [rbp-0B0H], rdx               ; 5981 _ 48: 89. 95, FFFFFF50
        mov     qword ptr [rbp-0D8H], rax               ; 5988 _ 48: 89. 85, FFFFFF28
        xor     r15d, r15d                              ; 598F _ 45: 31. FF
        mov     r10, qword ptr [rbp-40H]                ; 5992 _ 4C: 8B. 55, C0
        mov     rsi, qword ptr [rbp-0E0H]               ; 5996 _ 48: 8B. B5, FFFFFF20
        mov     r9, rcx                                 ; 599D _ 49: 89. C9
        mov     qword ptr [rbp-88H], r15                ; 59A0 _ 4C: 89. BD, FFFFFF78
        mov     qword ptr [rbp-0A8H], 0                 ; 59A7 _ 48: C7. 85, FFFFFF58, 00000000
        jmp     ?_301                                   ; 59B2 _ E9, 000000EE

Unnamed_1_5777:
        mov     qword ptr [rbp-0B8H], rdx               ; 59B7 _ 48: 89. 95, FFFFFF48
        mov     rax, r15                                ; 59BE _ 4C: 89. F8
        not     rax                                     ; 59C1 _ 48: F7. D0
        mov     qword ptr [rbp-0A0H], rax               ; 59C4 _ 48: 89. 85, FFFFFF60
        lea     rax, ptr [r10-1H]                       ; 59CB _ 49: 8D. 42, FF
        mov     r8, r10                                 ; 59CF _ 4D: 89. D0
        neg     r8                                      ; 59D2 _ 49: F7. D8
        mov     r11, -1                                 ; 59D5 _ 49: C7. C3, FFFFFFFF
        mov     rdi, r10                                ; 59DC _ 4C: 89. D7
Unnamed_1_579F:
        mov     rdx, rax                                ; 59DF _ 48: 89. C2
        mov     r13, r8                                 ; 59E2 _ 4D: 89. C5
        mov     r10, rdi                                ; 59E5 _ 49: 89. FA
        inc     r11                                     ; 59E8 _ 49: FF. C3
        cmp     r11, qword ptr [rbp-90H]                ; 59EB _ 4C: 3B. 9D, FFFFFF70
        jnc     ?_300                                   ; 59F2 _ 0F 83, 000000A2
        lea     rax, ptr [rdx+r15]                      ; 59F8 _ 4A: 8D. 04 3A
        mov     r8, r13                                 ; 59FC _ 4D: 89. E8
        sub     r8, r15                                 ; 59FF _ 4D: 29. F8
        lea     rdi, ptr [r10+r15]                      ; 5A02 _ 4B: 8D. 3C 3A
        cmp     r9, r10                                 ; 5A06 _ 4D: 39. D1
        jc      Unnamed_1_579F                          ; 5A09 _ 72, D4
        lea     rcx, ptr [r15+r10]                      ; 5A0B _ 4B: 8D. 0C 17
        cmp     r9, rcx                                 ; 5A0F _ 49: 39. C9
        jnc     Unnamed_1_579F                          ; 5A12 _ 73, CB
        sub     rdx, r9                                 ; 5A14 _ 4C: 29. CA
        mov     r12, rsi                                ; 5A17 _ 49: 89. F4
        sub     rdx, r12                                ; 5A1A _ 4C: 29. E2
        mov     rcx, qword ptr [rbp-0A0H]               ; 5A1D _ 48: 8B. 8D, FFFFFF60
        cmp     rdx, rcx                                ; 5A24 _ 48: 39. CA
        mov     rsi, rcx                                ; 5A27 _ 48: 89. CE
        cmova   rsi, rdx                                ; 5A2A _ 48: 0F 47. F2
        mov     r14, r8                                 ; 5A2E _ 4D: 89. C6
        mov     r8, r10                                 ; 5A31 _ 4D: 89. D0
        sub     r8, rsi                                 ; 5A34 _ 49: 29. F0
        mov     rcx, r8                                 ; 5A37 _ 4C: 89. C1
        sub     rcx, r9                                 ; 5A3A _ 4C: 29. C9
        add     rsi, r13                                ; 5A3D _ 4C: 01. EE
        mov     rbx, r9                                 ; 5A40 _ 4C: 89. CB
        add     rbx, r12                                ; 5A43 _ 4C: 01. E3
        lea     r9, ptr [rsi+rbx+1H]                    ; 5A46 _ 4C: 8D. 4C 1E, 01
        dec     r8                                      ; 5A4B _ 49: FF. C8
        dec     rcx                                     ; 5A4E _ 48: FF. C9
        mov     rsi, qword ptr [rbp-88H]                ; 5A51 _ 48: 8B. B5, FFFFFF78
        cmp     rsi, r15                                ; 5A58 _ 4C: 39. FE
        cmovc   rsi, r15                                ; 5A5B _ 49: 0F 42. F7
        mov     qword ptr [rbp-88H], rsi                ; 5A5F _ 48: 89. B5, FFFFFF78
        inc     qword ptr [rbp-0A8H]                    ; 5A66 _ 48: FF. 85, FFFFFF58
        cmp     rcx, r12                                ; 5A6D _ 4C: 39. E1
        mov     rsi, r9                                 ; 5A70 _ 4C: 89. CE
        mov     r9, r8                                  ; 5A73 _ 4D: 89. C1
        mov     r8, r14                                 ; 5A76 _ 4D: 89. F0
        jne     Unnamed_1_579F                          ; 5A79 _ 0F 85, FFFFFF60
        not     r15                                     ; 5A7F _ 49: F7. D7
        cmp     rdx, r15                                ; 5A82 _ 4C: 39. FA
        cmova   r15, rdx                                ; 5A85 _ 4C: 0F 47. FA
        add     rbx, r15                                ; 5A89 _ 4C: 01. FB
        lea     rsi, ptr [r13+rbx+1H]                   ; 5A8C _ 49: 8D. 74 1D, 01
        mov     r9, r10                                 ; 5A91 _ 4D: 89. D1
        sub     r9, r15                                 ; 5A94 _ 4D: 29. F9
        dec     r9                                      ; 5A97 _ 49: FF. C9
?_300:  mov     rdx, qword ptr [rbp-0B8H]               ; 5A9A _ 48: 8B. 95, FFFFFF48
        add     rdx, 8                                  ; 5AA1 _ 48: 83. C2, 08
?_301:  test    rsi, rsi                                ; 5AA5 _ 48: 85. F6
        jz      Unnamed_1_5885                          ; 5AA8 _ 74, 1B
        mov     eax, dword ptr [rdx]                    ; 5AAA _ 8B. 02
        mov     qword ptr [rbp-90H], rax                ; 5AAC _ 48: 89. 85, FFFFFF70
        test    rax, rax                                ; 5AB3 _ 48: 85. C0
        jz      Unnamed_1_5885                          ; 5AB6 _ 74, 0D
        mov     r15d, dword ptr [rdx+4H]                ; 5AB8 _ 44: 8B. 7A, 04
        test    r15, r15                                ; 5ABC _ 4D: 85. FF
        jne     Unnamed_1_5777                          ; 5ABF _ 0F 85, FFFFFEF2
Unnamed_1_5885:
        mov     rax, qword ptr [_gBS]                   ; 5AC5 _ 48: 8B. 05, 0000367C(rel)
        lea     rcx, ptr [_gEfiFaultTolerantWriteProtocolGuid]; 5ACC _ 48: 8D. 0D, 000033D5(rel)
        lea     r8, ptr [rbp-48H]                       ; 5AD3 _ 4C: 8D. 45, B8
        xor     edx, edx                                ; 5AD7 _ 31. D2
        call    qword ptr [rax+140H]                    ; 5AD9 _ FF. 90, 00000140
        test    rax, rax                                ; 5ADF _ 48: 85. C0
        jns     ?_302                                   ; 5AE2 _ 79, 1B
        mov     rcx, qword ptr [rbp-0D8H]               ; 5AE4 _ 48: 8B. 8D, FFFFFF28
        call    _FreePool                               ; 5AEB _ E8, FFFFBC67
        mov     rdi, 800000000000000EH                  ; 5AF0 _ 48: BF, 800000000000000E
        jmp     Unnamed_1_5C66                          ; 5AFA _ E9, 000003A7

?_302:  mov     rax, qword ptr [rbp-48H]                ; 5AFF _ 48: 8B. 45, B8
        lea     rdx, ptr [rbp-50H]                      ; 5B03 _ 48: 8D. 55, B0
        mov     rcx, rax                                ; 5B07 _ 48: 89. C1
        call    qword ptr [rax]                         ; 5B0A _ FF. 10
        mov     rax, qword ptr [rbp-88H]                ; 5B0C _ 48: 8B. 85, FFFFFF78
        cmp     qword ptr [rbp-50H], rax                ; 5B13 _ 48: 39. 45, B0
        jnc     ?_303                                   ; 5B17 _ 73, 1B
        mov     rcx, qword ptr [rbp-0D8H]               ; 5B19 _ 48: 8B. 8D, FFFFFF28
        call    _FreePool                               ; 5B20 _ E8, FFFFBC32
        mov     rdi, 8000000000000009H                  ; 5B25 _ 48: BF, 8000000000000009
        jmp     Unnamed_1_5C66                          ; 5B2F _ E9, 00000372

?_303:  mov     qword ptr [rbp-70H], 0                  ; 5B34 _ 48: C7. 45, 90, 00000000
        mov     qword ptr [rbp-78H], 0                  ; 5B3C _ 48: C7. 45, 88, 00000000
        mov     qword ptr [rbp-80H], 0                  ; 5B44 _ 48: C7. 45, 80, 00000000
        mov     byte ptr [rbp-51H], 0                   ; 5B4C _ C6. 45, AF, 00
        mov     rdx, qword ptr [rbp-48H]                ; 5B50 _ 48: 8B. 55, B8
        lea     rsi, ptr [rbp-68H]                      ; 5B54 _ 48: 8D. 75, 98
        lea     rax, ptr [rbp-70H]                      ; 5B58 _ 48: 8D. 45, 90
        lea     rcx, ptr [rbp-78H]                      ; 5B5C _ 48: 8D. 4D, 88
        lea     rbx, ptr [rbp-80H]                      ; 5B60 _ 48: 8D. 5D, 80
        lea     rdi, ptr [rbp-51H]                      ; 5B64 _ 48: 8D. 7D, AF
        mov     qword ptr [rsp+40H], rdi                ; 5B68 _ 48: 89. 7C 24, 40
        mov     qword ptr [rsp+38H], rbx                ; 5B6D _ 48: 89. 5C 24, 38
        mov     qword ptr [rsp+30H], rcx                ; 5B72 _ 48: 89. 4C 24, 30
        mov     qword ptr [rsp+28H], rax                ; 5B77 _ 48: 89. 44 24, 28
        mov     qword ptr [rsp+20H], rsi                ; 5B7C _ 48: 89. 74 24, 20
        mov     rcx, qword ptr [rbp+40H]                ; 5B81 _ 48: 8B. 4D, 40
        mov     r8, qword ptr [rbp-0C0H]                ; 5B85 _ 4C: 8B. 85, FFFFFF40
        mov     r9d, 16                                 ; 5B8C _ 41: B9, 00000010
        call    _RetrieveLastWrite                      ; 5B92 _ E8, FFFFF60D
        mov     cl, byte ptr [rbp-51H]                  ; 5B97 _ 8A. 4D, AF
        mov     byte ptr [rbp-0C9H], cl                 ; 5B9A _ 88. 8D, FFFFFF37
        test    cl, cl                                  ; 5BA0 _ 84. C9
        jz      Unnamed_1_598E                          ; 5BA2 _ 74, 2A
        mov     rcx, 800000000000000EH                  ; 5BA4 _ 48: B9, 800000000000000E
        cmp     rax, rcx                                ; 5BAE _ 48: 39. C8
        jnz     Unnamed_1_598E                          ; 5BB1 _ 75, 1B
?_304:  mov     rcx, qword ptr [rbp-0D8H]               ; 5BB3 _ 48: 8B. 8D, FFFFFF28
        call    _FreePool                               ; 5BBA _ E8, FFFFBB98
        mov     rdi, 8000000000000015H                  ; 5BBF _ 48: BF, 8000000000000015
        jmp     Unnamed_1_5C66                          ; 5BC9 _ E9, 000002D8

Unnamed_1_598E:
        test    rax, rax                                ; 5BCE _ 48: 85. C0
        js      ?_304                                   ; 5BD1 _ 78, E0
        cmp     byte ptr [rbp-0C9H], 0                  ; 5BD3 _ 80. BD, FFFFFF37, 00
        jnz     Unnamed_1_59D6                          ; 5BDA _ 75, 3A
        mov     rax, qword ptr [rbp-48H]                ; 5BDC _ 48: 8B. 45, B8
        lea     rdx, ptr [_gEfiCallerIdGuid]            ; 5BE0 _ 48: 8D. 15, 00003269(rel)
        mov     rcx, rax                                ; 5BE7 _ 48: 89. C1
        mov     r8d, 16                                 ; 5BEA _ 41: B8, 00000010
        mov     r9, qword ptr [rbp-0A8H]                ; 5BF0 _ 4C: 8B. 8D, FFFFFF58
        call    qword ptr [rax+8H]                      ; 5BF7 _ FF. 50, 08
        test    rax, rax                                ; 5BFA _ 48: 85. C0
        jns     Unnamed_1_59D6                          ; 5BFD _ 79, 17
        mov     rcx, qword ptr [rbp-0D8H]               ; 5BFF _ 48: 8B. 8D, FFFFFF28
        mov     rsi, rax                                ; 5C06 _ 48: 89. C6
        call    _FreePool                               ; 5C09 _ E8, FFFFBB49
        mov     rdi, rsi                                ; 5C0E _ 48: 89. F7
        jmp     Unnamed_1_5C66                          ; 5C11 _ E9, 00000290

Unnamed_1_59D6:
        mov     rdi, qword ptr [rbp-40H]                ; 5C16 _ 48: 8B. 7D, C0
        mov     rdx, qword ptr [rbp-0C0H]               ; 5C1A _ 48: 8B. 95, FFFFFF40
        add     rdx, 24                                 ; 5C21 _ 48: 83. C2, 18
        lea     rcx, ptr [rbp-68H]                      ; 5C25 _ 48: 8D. 4D, 98
        mov     r8d, 16                                 ; 5C29 _ 41: B8, 00000010
        mov     rsi, rax                                ; 5C2F _ 48: 89. C6
        call    _CopyMem                                ; 5C32 _ E8, FFFFA80D
        mov     r9, rdi                                 ; 5C37 _ 49: 89. F9
        mov     rax, rsi                                ; 5C3A _ 48: 89. F0
        mov     rcx, qword ptr [rbp-0E0H]               ; 5C3D _ 48: 8B. 8D, FFFFFF20
        mov     qword ptr [rbp-88H], rcx                ; 5C44 _ 48: 89. 8D, FFFFFF78
        mov     qword ptr [rbp-0B8H], 0                 ; 5C4B _ 48: C7. 85, FFFFFF48, 00000000
        mov     rdx, qword ptr [rbp+30H]                ; 5C56 _ 48: 8B. 55, 30
        mov     r8, qword ptr [rbp-0B0H]                ; 5C5A _ 4C: 8B. 85, FFFFFF50
        jmp     ?_310                                   ; 5C61 _ E9, 00000207

Unnamed_1_5A26:
        mov     edi, dword ptr [r8+4H]                  ; 5C66 _ 41: 8B. 78, 04
        mov     qword ptr [rbp-0C0H], rdi               ; 5C6A _ 48: 89. BD, FFFFFF40
        test    rdi, rdi                                ; 5C71 _ 48: 85. FF
        je      Unnamed_1_5C7D                          ; 5C74 _ 0F 84, 00000243
        mov     r15, rdi                                ; 5C7A _ 49: 89. FF
        not     r15                                     ; 5C7D _ 49: F7. D7
        mov     r10, r9                                 ; 5C80 _ 4D: 89. CA
        neg     r10                                     ; 5C83 _ 49: F7. DA
        dec     r9                                      ; 5C86 _ 49: FF. C9
        xor     r11d, r11d                              ; 5C89 _ 45: 31. DB
        jmp     ?_305                                   ; 5C8C _ EB, 45

Unnamed_1_5A4E:
        mov     ebx, dword ptr [r8]                     ; 5C8E _ 41: 8B. 18
        test    ebx, ebx                                ; 5C91 _ 85. DB
        jnz     Unnamed_1_5A26                          ; 5C93 _ 75, D1
        jmp     Unnamed_1_5C7D                          ; 5C95 _ E9, 00000223

Unnamed_1_5A5A:
        lea     rdx, ptr [rbx+r10]                      ; 5C9A _ 4A: 8D. 14 13
        lea     rcx, ptr [rdx+rcx+1H]                   ; 5C9E _ 48: 8D. 4C 0A, 01
        mov     qword ptr [rbp-88H], rcx                ; 5CA3 _ 48: 89. 8D, FFFFFF78
        mov     rcx, r9                                 ; 5CAA _ 4C: 89. C9
        sub     rcx, rbx                                ; 5CAD _ 48: 29. D9
        mov     rdx, rcx                                ; 5CB0 _ 48: 89. CA
        sub     rdx, rsi                                ; 5CB3 _ 48: 29. F2
        add     qword ptr [rbp-98H], rdx                ; 5CB6 _ 48: 01. 95, FFFFFF68
        mov     ebx, dword ptr [r8]                     ; 5CBD _ 41: 8B. 18
        mov     rdx, rcx                                ; 5CC0 _ 48: 89. CA
        mov     rdi, qword ptr [rbp-0C0H]               ; 5CC3 _ 48: 8B. BD, FFFFFF40
Unnamed_1_5A8A:
        sub     r10, rdi                                ; 5CCA _ 49: 29. FA
        add     r9, rdi                                 ; 5CCD _ 49: 01. F9
        inc     r11                                     ; 5CD0 _ 49: FF. C3
?_305:  mov     rcx, qword ptr [rbp-0B8H]               ; 5CD3 _ 48: 8B. 8D, FFFFFF48
        lea     r12, ptr [rcx+r11]                      ; 5CDA _ 4E: 8D. 24 19
        lea     rsi, ptr [r9+1H]                        ; 5CDE _ 49: 8D. 71, 01
        mov     ecx, ebx                                ; 5CE2 _ 89. D9
        cmp     r11, rcx                                ; 5CE4 _ 49: 39. CB
        jnc     ?_309                                   ; 5CE7 _ 0F 83, 0000016D
        cmp     rdx, rsi                                ; 5CED _ 48: 39. F2
        jc      Unnamed_1_5A8A                          ; 5CF0 _ 72, D8
        lea     rcx, ptr [rdi+r9+1H]                    ; 5CF2 _ 4A: 8D. 4C 0F, 01
        cmp     rdx, rcx                                ; 5CF7 _ 48: 39. CA
        jnc     Unnamed_1_5A8A                          ; 5CFA _ 73, CE
        mov     qword ptr [rbp-0C8H], rsi               ; 5CFC _ 48: 89. B5, FFFFFF38
        mov     qword ptr [rbp-0A8H], r11               ; 5D03 _ 4C: 89. 9D, FFFFFF58
        mov     rdi, r9                                 ; 5D0A _ 4C: 89. CF
        sub     rdi, rdx                                ; 5D0D _ 48: 29. D7
        sub     rdi, qword ptr [rbp-88H]                ; 5D10 _ 48: 2B. BD, FFFFFF78
        cmp     rdi, r15                                ; 5D17 _ 4C: 39. FF
        mov     rcx, r15                                ; 5D1A _ 4C: 89. F9
        cmova   rcx, rdi                                ; 5D1D _ 48: 0F 47. CF
        mov     r13, r9                                 ; 5D21 _ 4D: 89. CD
        mov     qword ptr [rbp-90H], r9                 ; 5D24 _ 4C: 89. 8D, FFFFFF70
        sub     r13, rcx                                ; 5D2B _ 49: 29. CD
        sub     r13, rdx                                ; 5D2E _ 49: 29. D5
        lea     r14, ptr [rdx+r10]                      ; 5D31 _ 4E: 8D. 34 12
        mov     qword ptr [rbp-0A0H], r10               ; 5D35 _ 4C: 89. 95, FFFFFF60
        mov     rsi, rdx                                ; 5D3C _ 48: 89. D6
        cmp     byte ptr [rbp-0C9H], 0                  ; 5D3F _ 80. BD, FFFFFF37, 00
        jz      ?_307                                   ; 5D46 _ 74, 22
        mov     rcx, qword ptr [rbp-70H]                ; 5D48 _ 48: 8B. 4D, 90
        cmp     r12, rcx                                ; 5D4C _ 49: 39. CC
        jnz     ?_306                                   ; 5D4F _ 75, 14
        cmp     r14, qword ptr [rbp-78H]                ; 5D51 _ 4C: 3B. 75, 88
        jne     Unnamed_1_5C7D                          ; 5D55 _ 0F 85, 00000162
        cmp     r13, qword ptr [rbp-80H]                ; 5D5B _ 4C: 3B. 6D, 80
        jne     Unnamed_1_5C7D                          ; 5D5F _ 0F 85, 00000158
?_306:  cmp     r12, rcx                                ; 5D65 _ 49: 39. CC
        jc      ?_308                                   ; 5D68 _ 72, 79
?_307:  call    _DebugPrintEnabled                      ; 5D6A _ E8, FFFFA4E0
        test    al, al                                  ; 5D6F _ 84. C0
        jz      Unnamed_1_5B69                          ; 5D71 _ 74, 36
        mov     ecx, 2147483648                         ; 5D73 _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 5D78 _ E8, FFFFA4D5
        test    al, al                                  ; 5D7D _ 84. C0
        jz      Unnamed_1_5B69                          ; 5D7F _ 74, 28
        cmp     rdi, r15                                ; 5D81 _ 4C: 39. FF
        mov     rax, r15                                ; 5D84 _ 4C: 89. F8
        cmova   rax, rdi                                ; 5D87 _ 48: 0F 47. C7
        mov     r9, qword ptr [rbp-90H]                 ; 5D8B _ 4C: 8B. 8D, FFFFFF70
        sub     r9, rax                                 ; 5D92 _ 49: 29. C1
        mov     ecx, 2147483648                         ; 5D95 _ B9, 80000000
        lea     rdx, ptr [?_424]                        ; 5D9A _ 48: 8D. 15, 00001B48(rel)
        mov     r8, rsi                                 ; 5DA1 _ 49: 89. F0
        call    _DebugPrint                             ; 5DA4 _ E8, FFFFA497
Unnamed_1_5B69:
        mov     rax, qword ptr [rbp-48H]                ; 5DA9 _ 48: 8B. 45, B8
        mov     rcx, qword ptr [rbp-98H]                ; 5DAD _ 48: 8B. 8D, FFFFFF68
        mov     qword ptr [rsp+30H], rcx                ; 5DB4 _ 48: 89. 4C 24, 30
        mov     rcx, qword ptr [rbp+40H]                ; 5DB9 _ 48: 8B. 4D, 40
        mov     qword ptr [rsp+28H], rcx                ; 5DBD _ 48: 89. 4C 24, 28
        lea     rcx, ptr [rbp-68H]                      ; 5DC2 _ 48: 8D. 4D, 98
        mov     qword ptr [rsp+20H], rcx                ; 5DC6 _ 48: 89. 4C 24, 20
        mov     rcx, rax                                ; 5DCB _ 48: 89. C1
        mov     rdx, r12                                ; 5DCE _ 4C: 89. E2
        mov     r8, r14                                 ; 5DD1 _ 4D: 89. F0
        mov     r9, r13                                 ; 5DD4 _ 4D: 89. E9
        call    qword ptr [rax+10H]                     ; 5DD7 _ FF. 50, 10
        test    rax, rax                                ; 5DDA _ 48: 85. C0
        js      Unnamed_1_5C7D                          ; 5DDD _ 0F 88, 000000DA
?_308:  cmp     rdi, r15                                ; 5DE3 _ 4C: 39. FF
        mov     rbx, r15                                ; 5DE6 _ 4C: 89. FB
        cmova   rbx, rdi                                ; 5DE9 _ 48: 0F 47. DF
        mov     rdx, qword ptr [rbp-88H]                ; 5DED _ 48: 8B. 95, FFFFFF78
        lea     rcx, ptr [rsi+rdx]                      ; 5DF4 _ 48: 8D. 0C 16
        cmp     r13, rdx                                ; 5DF8 _ 49: 39. D5
        mov     r8, qword ptr [rbp-0B0H]                ; 5DFB _ 4C: 8B. 85, FFFFFF50
        mov     r9, qword ptr [rbp-90H]                 ; 5E02 _ 4C: 8B. 8D, FFFFFF70
        mov     r10, qword ptr [rbp-0A0H]               ; 5E09 _ 4C: 8B. 95, FFFFFF60
        mov     r11, qword ptr [rbp-0A8H]               ; 5E10 _ 4C: 8B. 9D, FFFFFF58
        jne     Unnamed_1_5A5A                          ; 5E17 _ 0F 85, FFFFFE7D
        cmp     rdi, r15                                ; 5E1D _ 4C: 39. FF
        cmova   r15, rdi                                ; 5E20 _ 4C: 0F 47. FF
        mov     rdx, r9                                 ; 5E24 _ 4C: 89. CA
        sub     rdx, r15                                ; 5E27 _ 4C: 29. FA
        add     rcx, r15                                ; 5E2A _ 4C: 01. F9
        lea     rcx, ptr [r10+rcx+1H]                   ; 5E2D _ 49: 8D. 4C 0A, 01
        mov     qword ptr [rbp-88H], rcx                ; 5E32 _ 48: 89. 8D, FFFFFF78
        neg     r15                                     ; 5E39 _ 49: F7. DF
        sub     r15, rsi                                ; 5E3C _ 49: 29. F7
        mov     rcx, qword ptr [rbp-98H]                ; 5E3F _ 48: 8B. 8D, FFFFFF68
        add     rcx, r15                                ; 5E46 _ 4C: 01. F9
        add     rcx, r9                                 ; 5E49 _ 4C: 01. C9
        mov     qword ptr [rbp-98H], rcx                ; 5E4C _ 48: 89. 8D, FFFFFF68
        mov     rsi, qword ptr [rbp-0C8H]               ; 5E53 _ 48: 8B. B5, FFFFFF38
?_309:  test    rax, rax                                ; 5E5A _ 48: 85. C0
        js      Unnamed_1_5C7D                          ; 5E5D _ 78, 5E
        add     r8, 8                                   ; 5E5F _ 49: 83. C0, 08
        mov     r9, rsi                                 ; 5E63 _ 49: 89. F1
        mov     qword ptr [rbp-0B8H], r12               ; 5E66 _ 4C: 89. A5, FFFFFF48
?_310:  mov     qword ptr [rbp-0B0H], r8                ; 5E6D _ 4C: 89. 85, FFFFFF50
        cmp     qword ptr [rbp-88H], 0                  ; 5E74 _ 48: 83. BD, FFFFFF78, 00
        jne     Unnamed_1_5A4E                          ; 5E7C _ 0F 85, FFFFFE0C
        xor     esi, esi                                ; 5E82 _ 31. F6
?_311:  mov     rcx, qword ptr [rbp-0D8H]               ; 5E84 _ 48: 8B. 8D, FFFFFF28
        call    _FreePool                               ; 5E8B _ E8, FFFFB8C7
        mov     rcx, qword ptr [rbp-0E0H]               ; 5E90 _ 48: 8B. 8D, FFFFFF20
        sub     rcx, rsi                                ; 5E97 _ 48: 29. F1
        mov     rax, qword ptr [rbp-0E8H]               ; 5E9A _ 48: 8B. 85, FFFFFF18
        mov     qword ptr [rax], rcx                    ; 5EA1 _ 48: 89. 08
        xor     edi, edi                                ; 5EA4 _ 31. FF
Unnamed_1_5C66:
        mov     rax, rdi                                ; 5EA6 _ 48: 89. F8
        add     rsp, 248                                ; 5EA9 _ 48: 81. C4, 000000F8
        pop     rbx                                     ; 5EB0 _ 5B
        pop     rdi                                     ; 5EB1 _ 5F
        pop     rsi                                     ; 5EB2 _ 5E
        pop     r12                                     ; 5EB3 _ 41: 5C
        pop     r13                                     ; 5EB5 _ 41: 5D
        pop     r14                                     ; 5EB7 _ 41: 5E
        pop     r15                                     ; 5EB9 _ 41: 5F
        pop     rbp                                     ; 5EBB _ 5D
        ret                                             ; 5EBC _ C3
_FaultTolerantUpdateOnPartFv ENDP

Unnamed_1_5C7D LABEL NEAR
        mov     rsi, qword ptr [rbp-88H]                ; 5EBD _ 48: 8B. B5, FFFFFF78
        jmp     ?_311                                   ; 5EC4 _ EB, BE

_NonFaultTolerantUpdateOnPartFv PROC
        push    rbp                                     ; 5EC6 _ 55
        mov     rbp, rsp                                ; 5EC7 _ 48: 89. E5
        push    r15                                     ; 5ECA _ 41: 57
        push    r14                                     ; 5ECC _ 41: 56
        push    r13                                     ; 5ECE _ 41: 55
        push    r12                                     ; 5ED0 _ 41: 54
        push    rsi                                     ; 5ED2 _ 56
        push    rdi                                     ; 5ED3 _ 57
        push    rbx                                     ; 5ED4 _ 53
        sub     rsp, 120                                ; 5ED5 _ 48: 83. EC, 78
        mov     rbx, r9                                 ; 5ED9 _ 4C: 89. CB
        mov     qword ptr [rbp-78H], r8                 ; 5EDC _ 4C: 89. 45, 88
        mov     r14, rdx                                ; 5EE0 _ 49: 89. D6
        mov     rsi, rcx                                ; 5EE3 _ 48: 89. CE
        lea     rdx, ptr [rbp-40H]                      ; 5EE6 _ 48: 8D. 55, C0
        mov     rax, qword ptr [rbp+30H]                ; 5EEA _ 48: 8B. 45, 30
        mov     rcx, rax                                ; 5EEE _ 48: 89. C1
        call    qword ptr [rax+10H]                     ; 5EF1 _ FF. 50, 10
        test    rax, rax                                ; 5EF4 _ 48: 85. C0
        js      Unnamed_1_5E7C                          ; 5EF7 _ 0F 88, 000001BF
        mov     rdi, rax                                ; 5EFD _ 48: 89. C7
        mov     rax, 8000000000000002H                  ; 5F00 _ 48: B8, 8000000000000002
        mov     rdx, qword ptr [rbp-40H]                ; 5F0A _ 48: 8B. 55, C0
        cmp     rdx, rbx                                ; 5F0E _ 48: 39. DA
        ja      Unnamed_1_5E7C                          ; 5F11 _ 0F 87, 000001A5
        mov     rcx, qword ptr [rdx+20H]                ; 5F17 _ 48: 8B. 4A, 20
        add     rcx, rdx                                ; 5F1B _ 48: 01. D1
        mov     rax, 8000000000000002H                  ; 5F1E _ 48: B8, 8000000000000002
        cmp     rcx, rbx                                ; 5F28 _ 48: 39. D9
        jc      Unnamed_1_5E7C                          ; 5F2B _ 0F 82, 0000018B
        movzx   ecx, word ptr [rdx+30H]                 ; 5F31 _ 0F B7. 4A, 30
        call    _AllocateCopyPool                       ; 5F35 _ E8, FFFFB80A
        mov     rcx, rax                                ; 5F3A _ 48: 89. C1
        mov     rax, 8000000000000009H                  ; 5F3D _ 48: B8, 8000000000000009
        test    rcx, rcx                                ; 5F47 _ 48: 85. C9
        je      Unnamed_1_5E7C                          ; 5F4A _ 0F 84, 0000016C
        lea     r8, ptr [rcx+38H]                       ; 5F50 _ 4C: 8D. 41, 38
        mov     qword ptr [rbp-70H], rcx                ; 5F54 _ 48: 89. 4D, 90
        mov     rdx, r14                                ; 5F58 _ 4C: 89. F2
        mov     qword ptr [rbp-80H], r14                ; 5F5B _ 4C: 89. 75, 80
        mov     qword ptr [rbp-68H], 0                  ; 5F5F _ 48: C7. 45, 98, 00000000
        mov     rax, rdi                                ; 5F67 _ 48: 89. F8
        jmp     ?_315                                   ; 5F6A _ E9, 0000010E

Unnamed_1_5D2F:
        mov     rdx, rcx                                ; 5F6F _ 48: 89. CA
        mov     r8, qword ptr [rbp-60H]                 ; 5F72 _ 4C: 8B. 45, A0
        jmp     ?_314                                   ; 5F76 _ E9, 000000FA

Unnamed_1_5D3B:
        mov     qword ptr [rbp-48H], rsi                ; 5F7B _ 48: 89. 75, B8
        mov     r9d, dword ptr [r8]                     ; 5F7F _ 45: 8B. 08
        test    r9d, r9d                                ; 5F82 _ 45: 85. C9
        je      Unnamed_1_5E4F                          ; 5F85 _ 0F 84, 00000104
        mov     r14d, dword ptr [r8+4H]                 ; 5F8B _ 45: 8B. 70, 04
        test    r14, r14                                ; 5F8F _ 4D: 85. F6
        je      Unnamed_1_5E4F                          ; 5F92 _ 0F 84, 000000F7
        xor     edi, edi                                ; 5F98 _ 31. FF
        jmp     ?_312                                   ; 5F9A _ EB, 2E

Unnamed_1_5D5C:
        mov     rcx, r13                                ; 5F9C _ 4C: 89. E9
        sub     rcx, r12                                ; 5F9F _ 4C: 29. E1
        add     rsi, r12                                ; 5FA2 _ 4C: 01. E6
        add     rbx, r12                                ; 5FA5 _ 4C: 01. E3
        cmp     r13, r12                                ; 5FA8 _ 4D: 39. E5
        mov     rdi, qword ptr [rbp-50H]                ; 5FAB _ 48: 8B. 7D, B0
        jz      Unnamed_1_5D2F                          ; 5FAF _ 74, BE
        mov     qword ptr [rbp-48H], rsi                ; 5FB1 _ 48: 89. 75, B8
        mov     r8, qword ptr [rbp-60H]                 ; 5FB5 _ 4C: 8B. 45, A0
        mov     r9d, dword ptr [r8]                     ; 5FB9 _ 45: 8B. 08
        mov     rdx, rcx                                ; 5FBC _ 48: 89. CA
        mov     rsi, qword ptr [rbp-58H]                ; 5FBF _ 48: 8B. 75, A8
Unnamed_1_5D83:
        mov     qword ptr [rbp-40H], rsi                ; 5FC3 _ 48: 89. 75, C0
        inc     rdi                                     ; 5FC7 _ 48: FF. C7
?_312:  mov     rcx, qword ptr [rbp-68H]                ; 5FCA _ 48: 8B. 4D, 98
        lea     r15, ptr [rcx+rdi]                      ; 5FCE _ 4C: 8D. 3C 39
        mov     ecx, r9d                                ; 5FD2 _ 44: 89. C9
        cmp     rdi, rcx                                ; 5FD5 _ 48: 39. CF
        jnc     ?_313                                   ; 5FD8 _ 0F 83, 0000008E
        mov     rcx, qword ptr [rbp-40H]                ; 5FDE _ 48: 8B. 4D, C0
        lea     rsi, ptr [rcx+r14]                      ; 5FE2 _ 4A: 8D. 34 31
        cmp     rbx, rcx                                ; 5FE6 _ 48: 39. CB
        jc      Unnamed_1_5D83                          ; 5FE9 _ 72, D8
        cmp     rbx, rsi                                ; 5FEB _ 48: 39. F3
        jnc     Unnamed_1_5D83                          ; 5FEE _ 73, D3
        mov     qword ptr [rbp-58H], rsi                ; 5FF0 _ 48: 89. 75, A8
        mov     qword ptr [rbp-50H], rdi                ; 5FF4 _ 48: 89. 7D, B0
        mov     rdi, rbx                                ; 5FF8 _ 48: 89. DF
        sub     rdi, rcx                                ; 5FFB _ 48: 29. CF
        mov     r12, r14                                ; 5FFE _ 4D: 89. F4
        sub     r12, rdi                                ; 6001 _ 49: 29. FC
        lea     rax, ptr [rdi+rdx]                      ; 6004 _ 48: 8D. 04 17
        cmp     rax, r14                                ; 6008 _ 4C: 39. F0
        cmovbe  r12, rdx                                ; 600B _ 4C: 0F 46. E2
        mov     r13, rdx                                ; 600F _ 49: 89. D5
        call    _DebugPrintEnabled                      ; 6012 _ E8, FFFFA238
        test    al, al                                  ; 6017 _ 84. C0
        jz      Unnamed_1_5E01                          ; 6019 _ 74, 26
        mov     ecx, 2147483648                         ; 601B _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 6020 _ E8, FFFFA22D
        test    al, al                                  ; 6025 _ 84. C0
        jz      Unnamed_1_5E01                          ; 6027 _ 74, 18
        lea     r9, ptr [r12+rbx]                       ; 6029 _ 4D: 8D. 0C 1C
        mov     ecx, 2147483648                         ; 602D _ B9, 80000000
        lea     rdx, ptr [?_424]                        ; 6032 _ 48: 8D. 15, 000018B0(rel)
        mov     r8, rbx                                 ; 6039 _ 49: 89. D8
        call    _DebugPrint                             ; 603C _ E8, FFFFA1FF
Unnamed_1_5E01:
        mov     rsi, qword ptr [rbp-48H]                ; 6041 _ 48: 8B. 75, B8
        mov     qword ptr [rsp+28H], rsi                ; 6045 _ 48: 89. 74 24, 28
        mov     qword ptr [rsp+20H], r14                ; 604A _ 4C: 89. 74 24, 20
        mov     rcx, qword ptr [rbp+30H]                ; 604F _ 48: 8B. 4D, 30
        mov     rdx, r15                                ; 6053 _ 4C: 89. FA
        mov     r8, rdi                                 ; 6056 _ 49: 89. F8
        mov     r9, r12                                 ; 6059 _ 4D: 89. E1
        call    _UpdateBufferInOneBlock                 ; 605C _ E8, FFFFF079
        test    rax, rax                                ; 6061 _ 48: 85. C0
        jns     Unnamed_1_5D5C                          ; 6064 _ 0F 89, FFFFFF32
        jmp     ?_316                                   ; 606A _ EB, 41

?_313:  test    rax, rax                                ; 606C _ 48: 85. C0
        mov     rsi, qword ptr [rbp-48H]                ; 606F _ 48: 8B. 75, B8
        js      Unnamed_1_5E4F                          ; 6073 _ 78, 1A
?_314:  add     r8, 8                                   ; 6075 _ 49: 83. C0, 08
        mov     qword ptr [rbp-68H], r15                ; 6079 _ 4C: 89. 7D, 98
?_315:  mov     qword ptr [rbp-60H], r8                 ; 607D _ 4C: 89. 45, A0
        test    rdx, rdx                                ; 6081 _ 48: 85. D2
        jne     Unnamed_1_5D3B                          ; 6084 _ 0F 85, FFFFFEF1
        xor     eax, eax                                ; 608A _ 31. C0
        mov     rdx, rax                                ; 608C _ 48: 89. C2
Unnamed_1_5E4F:
        mov     rcx, qword ptr [rbp-70H]                ; 608F _ 48: 8B. 4D, 90
        mov     rsi, rdx                                ; 6093 _ 48: 89. D6
        call    _FreePool                               ; 6096 _ E8, FFFFB6BC
        mov     rcx, qword ptr [rbp-80H]                ; 609B _ 48: 8B. 4D, 80
        sub     rcx, rsi                                ; 609F _ 48: 29. F1
        mov     rax, qword ptr [rbp-78H]                ; 60A2 _ 48: 8B. 45, 88
        mov     qword ptr [rax], rcx                    ; 60A6 _ 48: 89. 08
        xor     eax, eax                                ; 60A9 _ 31. C0
        jmp     Unnamed_1_5E7C                          ; 60AB _ EB, 0F

?_316:  mov     rcx, qword ptr [rbp-70H]                ; 60AD _ 48: 8B. 4D, 90
        mov     rsi, rax                                ; 60B1 _ 48: 89. C6
        call    _FreePool                               ; 60B4 _ E8, FFFFB69E
        mov     rax, rsi                                ; 60B9 _ 48: 89. F0
Unnamed_1_5E7C:
        add     rsp, 120                                ; 60BC _ 48: 83. C4, 78
        pop     rbx                                     ; 60C0 _ 5B
        pop     rdi                                     ; 60C1 _ 5F
        pop     rsi                                     ; 60C2 _ 5E
        pop     r12                                     ; 60C3 _ 41: 5C
        pop     r13                                     ; 60C5 _ 41: 5D
        pop     r14                                     ; 60C7 _ 41: 5E
        pop     r15                                     ; 60C9 _ 41: 5F
        pop     rbp                                     ; 60CB _ 5D
        ret                                             ; 60CC _ C3
_NonFaultTolerantUpdateOnPartFv ENDP

_ProcessLibraryConstructorList PROC
        push    rbp                                     ; 60CD _ 55
        mov     rbp, rsp                                ; 60CE _ 48: 89. E5
        push    rsi                                     ; 60D1 _ 56
        push    rdi                                     ; 60D2 _ 57
        push    rbx                                     ; 60D3 _ 53
        sub     rsp, 40                                 ; 60D4 _ 48: 83. EC, 28
        mov     rsi, rdx                                ; 60D8 _ 48: 89. D6
        mov     rdi, rcx                                ; 60DB _ 48: 89. CF
        call    _UefiBootServicesTableLibConstructor    ; 60DE _ E8, FFFFB285
        mov     rbx, rax                                ; 60E3 _ 48: 89. C3
        call    _DebugAssertEnabled                     ; 60E6 _ E8, FFFFA161
        test    al, al                                  ; 60EB _ 84. C0
        jz      Unnamed_1_5EF7                          ; 60ED _ 74, 48
        test    rbx, rbx                                ; 60EF _ 48: 85. DB
        jns     Unnamed_1_5EF7                          ; 60F2 _ 79, 43
        call    _DebugPrintEnabled                      ; 60F4 _ E8, FFFFA156
        test    al, al                                  ; 60F9 _ 84. C0
        jz      Unnamed_1_5EDF                          ; 60FB _ 74, 22
        mov     ecx, 2147483648                         ; 60FD _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 6102 _ E8, FFFFA14B
        test    al, al                                  ; 6107 _ 84. C0
        jz      Unnamed_1_5EDF                          ; 6109 _ 74, 14
        lea     rdx, ptr [?_317]                        ; 610B _ 48: 8D. 15, 000001BB(rel)
        mov     ecx, 2147483648                         ; 6112 _ B9, 80000000
        mov     r8, rbx                                 ; 6117 _ 49: 89. D8
        call    _DebugPrint                             ; 611A _ E8, FFFFA121
Unnamed_1_5EDF:
        lea     rcx, ptr [?_425]                        ; 611F _ 48: 8D. 0D, 000017EA(rel)
        lea     r8, ptr [?_318]                         ; 6126 _ 4C: 8D. 05, 000001C1(rel)
        mov     edx, 222                                ; 612D _ BA, 000000DE
        call    _DebugAssert                            ; 6132 _ E8, FFFFA114
Unnamed_1_5EF7:
        mov     rcx, rdi                                ; 6137 _ 48: 89. F9
        mov     rdx, rsi                                ; 613A _ 48: 89. F2
        call    _UefiRuntimeServicesTableLibConstructor ; 613D _ E8, FFFFCAFE
        mov     rbx, rax                                ; 6142 _ 48: 89. C3
        call    _DebugAssertEnabled                     ; 6145 _ E8, FFFFA102
        test    al, al                                  ; 614A _ 84. C0
        jz      Unnamed_1_5F56                          ; 614C _ 74, 48
        test    rbx, rbx                                ; 614E _ 48: 85. DB
        jns     Unnamed_1_5F56                          ; 6151 _ 79, 43
        call    _DebugPrintEnabled                      ; 6153 _ E8, FFFFA0F7
        test    al, al                                  ; 6158 _ 84. C0
        jz      Unnamed_1_5F3E                          ; 615A _ 74, 22
        mov     ecx, 2147483648                         ; 615C _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 6161 _ E8, FFFFA0EC
        test    al, al                                  ; 6166 _ 84. C0
        jz      Unnamed_1_5F3E                          ; 6168 _ 74, 14
        lea     rdx, ptr [?_317]                        ; 616A _ 48: 8D. 15, 0000015C(rel)
        mov     ecx, 2147483648                         ; 6171 _ B9, 80000000
        mov     r8, rbx                                 ; 6176 _ 49: 89. D8
        call    _DebugPrint                             ; 6179 _ E8, FFFFA0C2
Unnamed_1_5F3E:
        lea     rcx, ptr [?_425]                        ; 617E _ 48: 8D. 0D, 0000178B(rel)
        lea     r8, ptr [?_318]                         ; 6185 _ 4C: 8D. 05, 00000162(rel)
        mov     edx, 225                                ; 618C _ BA, 000000E1
        call    _DebugAssert                            ; 6191 _ E8, FFFFA0B5
Unnamed_1_5F56:
        mov     rcx, rdi                                ; 6196 _ 48: 89. F9
        mov     rdx, rsi                                ; 6199 _ 48: 89. F2
        call    _UefiHiiServicesLibConstructor          ; 619C _ E8, FFFFCAE7
        mov     rbx, rax                                ; 61A1 _ 48: 89. C3
        call    _DebugAssertEnabled                     ; 61A4 _ E8, FFFFA0A3
        test    al, al                                  ; 61A9 _ 84. C0
        jz      Unnamed_1_5FB5                          ; 61AB _ 74, 48
        test    rbx, rbx                                ; 61AD _ 48: 85. DB
        jns     Unnamed_1_5FB5                          ; 61B0 _ 79, 43
        call    _DebugPrintEnabled                      ; 61B2 _ E8, FFFFA098
        test    al, al                                  ; 61B7 _ 84. C0
        jz      Unnamed_1_5F9D                          ; 61B9 _ 74, 22
        mov     ecx, 2147483648                         ; 61BB _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 61C0 _ E8, FFFFA08D
        test    al, al                                  ; 61C5 _ 84. C0
        jz      Unnamed_1_5F9D                          ; 61C7 _ 74, 14
        lea     rdx, ptr [?_317]                        ; 61C9 _ 48: 8D. 15, 000000FD(rel)
        mov     ecx, 2147483648                         ; 61D0 _ B9, 80000000
        mov     r8, rbx                                 ; 61D5 _ 49: 89. D8
        call    _DebugPrint                             ; 61D8 _ E8, FFFFA063
Unnamed_1_5F9D:
        lea     rcx, ptr [?_425]                        ; 61DD _ 48: 8D. 0D, 0000172C(rel)
        lea     r8, ptr [?_318]                         ; 61E4 _ 4C: 8D. 05, 00000103(rel)
        mov     edx, 228                                ; 61EB _ BA, 000000E4
        call    _DebugAssert                            ; 61F0 _ E8, FFFFA056
Unnamed_1_5FB5:
        mov     rcx, rdi                                ; 61F5 _ 48: 89. F9
        mov     rdx, rsi                                ; 61F8 _ 48: 89. F2
        call    _UefiLibConstructor                     ; 61FB _ E8, FFFFCDCC
        mov     rbx, rax                                ; 6200 _ 48: 89. C3
        call    _DebugAssertEnabled                     ; 6203 _ E8, FFFFA044
        test    al, al                                  ; 6208 _ 84. C0
        jz      Unnamed_1_6014                          ; 620A _ 74, 48
        test    rbx, rbx                                ; 620C _ 48: 85. DB
        jns     Unnamed_1_6014                          ; 620F _ 79, 43
        call    _DebugPrintEnabled                      ; 6211 _ E8, FFFFA039
        test    al, al                                  ; 6216 _ 84. C0
        jz      Unnamed_1_5FFC                          ; 6218 _ 74, 22
        mov     ecx, 2147483648                         ; 621A _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 621F _ E8, FFFFA02E
        test    al, al                                  ; 6224 _ 84. C0
        jz      Unnamed_1_5FFC                          ; 6226 _ 74, 14
        lea     rdx, ptr [?_317]                        ; 6228 _ 48: 8D. 15, 0000009E(rel)
        mov     ecx, 2147483648                         ; 622F _ B9, 80000000
        mov     r8, rbx                                 ; 6234 _ 49: 89. D8
        call    _DebugPrint                             ; 6237 _ E8, FFFFA004
Unnamed_1_5FFC:
        lea     rcx, ptr [?_425]                        ; 623C _ 48: 8D. 0D, 000016CD(rel)
        lea     r8, ptr [?_318]                         ; 6243 _ 4C: 8D. 05, 000000A4(rel)
        mov     edx, 231                                ; 624A _ BA, 000000E7
        call    _DebugAssert                            ; 624F _ E8, FFFF9FF7
Unnamed_1_6014:
        mov     rcx, rdi                                ; 6254 _ 48: 89. F9
        mov     rdx, rsi                                ; 6257 _ 48: 89. F2
        call    _DxeServicesTableLibConstructor         ; 625A _ E8, FFFFD482
        mov     rsi, rax                                ; 625F _ 48: 89. C6
        call    _DebugAssertEnabled                     ; 6262 _ E8, FFFF9FE5
        test    al, al                                  ; 6267 _ 84. C0
        jz      Unnamed_1_607B                          ; 6269 _ 74, 50
        test    rsi, rsi                                ; 626B _ 48: 85. F6
        jns     Unnamed_1_607B                          ; 626E _ 79, 4B
        call    _DebugPrintEnabled                      ; 6270 _ E8, FFFF9FDA
        test    al, al                                  ; 6275 _ 84. C0
        jz      Unnamed_1_605B                          ; 6277 _ 74, 22
        mov     ecx, 2147483648                         ; 6279 _ B9, 80000000
        call    _DebugPrintLevelEnabled                 ; 627E _ E8, FFFF9FCF
        test    al, al                                  ; 6283 _ 84. C0
        jz      Unnamed_1_605B                          ; 6285 _ 74, 14
        lea     rdx, ptr [?_317]                        ; 6287 _ 48: 8D. 15, 0000003F(rel)
        mov     ecx, 2147483648                         ; 628E _ B9, 80000000
        mov     r8, rsi                                 ; 6293 _ 49: 89. F0
        call    _DebugPrint                             ; 6296 _ E8, FFFF9FA5
Unnamed_1_605B:
        lea     rcx, ptr [?_425]                        ; 629B _ 48: 8D. 0D, 0000166E(rel)
        lea     r8, ptr [?_318]                         ; 62A2 _ 4C: 8D. 05, 00000045(rel)
        mov     edx, 234                                ; 62A9 _ BA, 000000EA
        add     rsp, 40                                 ; 62AE _ 48: 83. C4, 28
        pop     rbx                                     ; 62B2 _ 5B
        pop     rdi                                     ; 62B3 _ 5F
        pop     rsi                                     ; 62B4 _ 5E
        pop     rbp                                     ; 62B5 _ 5D
        jmp     _DebugAssert                            ; 62B6 _ E9, FFFF9F90
_ProcessLibraryConstructorList ENDP

Unnamed_1_607B LABEL NEAR
        add     rsp, 40                                 ; 62BB _ 48: 83. C4, 28
        pop     rbx                                     ; 62BF _ 5B
        pop     rdi                                     ; 62C0 _ 5F
        pop     rsi                                     ; 62C1 _ 5E
        pop     rbp                                     ; 62C2 _ 5D
        ret                                             ; 62C3 _ C3

_ProcessLibraryDestructorList PROC
        ret                                             ; 62C4 _ C3
_ProcessLibraryDestructorList ENDP

_ProcessModuleEntryPointList PROC
        jmp     _InitializeUpdateDriver                 ; 62C5 _ E9, FFFFDD46
_ProcessModuleEntryPointList ENDP

_ProcessModuleUnloadList PROC
        xor     eax, eax                                ; 62CA _ 31. C0
        ret                                             ; 62CC _ C3
_ProcessModuleUnloadList ENDP

__TEXT.__text ENDS

__TEXT.__cstring SEGMENT BYTE 'DATA'                    ; section number 2

?_317   label byte
        db 0AH, 41H, 53H, 53H, 45H, 52H, 54H, 5FH       ; 62CD _ .ASSERT_
        db 45H, 46H, 49H, 5FH, 45H, 52H, 52H, 4FH       ; 62D5 _ EFI_ERRO
        db 52H, 20H, 28H, 53H, 74H, 61H, 74H, 75H       ; 62DD _ R (Statu
        db 73H, 20H, 3DH, 20H, 25H, 72H, 29H, 0AH       ; 62E5 _ s = %r).
        db 00H                                          ; 62ED _ .

?_318   label byte
        db 21H, 45H, 46H, 49H, 5FH, 45H, 52H, 52H       ; 62EE _ !EFI_ERR
        db 4FH, 52H, 20H, 28H, 53H, 74H, 61H, 74H       ; 62F6 _ OR (Stat
        db 75H, 73H, 29H, 00H                           ; 62FE _ us).

?_319   label byte
        db 42H, 75H, 66H, 66H, 65H, 72H, 20H, 21H       ; 6302 _ Buffer !
        db 3DH, 20H, 28H, 28H, 76H, 6FH, 69H, 64H       ; 630A _ = ((void
        db 20H, 2AH, 29H, 20H, 30H, 29H, 00H            ; 6312 _  *) 0).

?_320   label byte
        db 28H, 4CH, 65H, 6EH, 67H, 74H, 68H, 20H       ; 6319 _ (Length 
        db 2DH, 20H, 31H, 29H, 20H, 3CH, 3DH, 20H       ; 6321 _ - 1) <= 
        db 28H, 30H, 78H, 46H, 46H, 46H, 46H, 46H       ; 6329 _ (0xFFFFF
        db 46H, 46H, 46H, 46H, 46H, 46H, 46H, 46H       ; 6331 _ FFFFFFFF
        db 46H, 46H, 46H, 55H, 4CH, 4CH, 20H, 2DH       ; 6339 _ FFFULL -
        db 20H, 28H, 55H, 49H, 4EH, 54H, 4EH, 29H       ; 6341 _  (UINTN)
        db 42H, 75H, 66H, 66H, 65H, 72H, 29H, 00H       ; 6349 _ Buffer).

?_321   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 6351 _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 6359 _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 6361 _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 6369 _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 6371 _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 6379 _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 6381 _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 6389 _ g/Librar
        db 79H, 2FH, 42H, 61H, 73H, 65H, 4DH, 65H       ; 6391 _ y/BaseMe
        db 6DH, 6FH, 72H, 79H, 4CH, 69H, 62H, 2FH       ; 6399 _ moryLib/
        db 5AH, 65H, 72H, 6FH, 4DH, 65H, 6DH, 57H       ; 63A1 _ ZeroMemW
        db 72H, 61H, 70H, 70H, 65H, 72H, 2EH, 63H       ; 63A9 _ rapper.c
        db 00H                                          ; 63B1 _ .

?_322   label byte
        db 21H, 28H, 42H, 75H, 66H, 66H, 65H, 72H       ; 63B2 _ !(Buffer
        db 20H, 3DH, 3DH, 20H, 28H, 28H, 76H, 6FH       ; 63BA _  == ((vo
        db 69H, 64H, 20H, 2AH, 29H, 20H, 30H, 29H       ; 63C2 _ id *) 0)
        db 20H, 26H, 26H, 20H, 4CH, 65H, 6EH, 67H       ; 63CA _  && Leng
        db 74H, 68H, 20H, 3EH, 20H, 30H, 29H, 00H       ; 63D2 _ th > 0).

?_323   label byte
        db 4CH, 65H, 6EH, 67H, 74H, 68H, 20H, 3CH       ; 63DA _ Length <
        db 3DH, 20H, 28H, 30H, 78H, 46H, 46H, 46H       ; 63E2 _ = (0xFFF
        db 46H, 46H, 46H, 46H, 46H, 46H, 46H, 46H       ; 63EA _ FFFFFFFF
        db 46H, 46H, 46H, 46H, 46H, 55H, 4CH, 4CH       ; 63F2 _ FFFFFULL
        db 20H, 2DH, 20H, 28H, 55H, 49H, 4EH, 54H       ; 63FA _  - (UINT
        db 4EH, 29H, 42H, 75H, 66H, 66H, 65H, 72H       ; 6402 _ N)Buffer
        db 20H, 2BH, 20H, 31H, 29H, 00H                 ; 640A _  + 1).

?_324   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 6410 _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 6418 _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 6420 _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 6428 _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 6430 _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 6438 _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 6440 _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 6448 _ g/Librar
        db 79H, 2FH, 42H, 61H, 73H, 65H, 4DH, 65H       ; 6450 _ y/BaseMe
        db 6DH, 6FH, 72H, 79H, 4CH, 69H, 62H, 2FH       ; 6458 _ moryLib/
        db 43H, 6FH, 6DH, 70H, 61H, 72H, 65H, 4DH       ; 6460 _ CompareM
        db 65H, 6DH, 57H, 72H, 61H, 70H, 70H, 65H       ; 6468 _ emWrappe
        db 72H, 2EH, 63H, 00H                           ; 6470 _ r.c.

?_325   label byte
        db 44H, 65H, 73H, 74H, 69H, 6EH, 61H, 74H       ; 6474 _ Destinat
        db 69H, 6FH, 6EH, 42H, 75H, 66H, 66H, 65H       ; 647C _ ionBuffe
        db 72H, 20H, 21H, 3DH, 20H, 28H, 28H, 76H       ; 6484 _ r != ((v
        db 6FH, 69H, 64H, 20H, 2AH, 29H, 20H, 30H       ; 648C _ oid *) 0
        db 29H, 00H                                     ; 6494 _ ).

?_326   label byte
        db 53H, 6FH, 75H, 72H, 63H, 65H, 42H, 75H       ; 6496 _ SourceBu
        db 66H, 66H, 65H, 72H, 20H, 21H, 3DH, 20H       ; 649E _ ffer != 
        db 28H, 28H, 76H, 6FH, 69H, 64H, 20H, 2AH       ; 64A6 _ ((void *
        db 29H, 20H, 30H, 29H, 00H                      ; 64AE _ ) 0).

?_327   label byte
        db 28H, 4CH, 65H, 6EH, 67H, 74H, 68H, 20H       ; 64B3 _ (Length 
        db 2DH, 20H, 31H, 29H, 20H, 3CH, 3DH, 20H       ; 64BB _ - 1) <= 
        db 28H, 30H, 78H, 46H, 46H, 46H, 46H, 46H       ; 64C3 _ (0xFFFFF
        db 46H, 46H, 46H, 46H, 46H, 46H, 46H, 46H       ; 64CB _ FFFFFFFF
        db 46H, 46H, 46H, 55H, 4CH, 4CH, 20H, 2DH       ; 64D3 _ FFFULL -
        db 20H, 28H, 55H, 49H, 4EH, 54H, 4EH, 29H       ; 64DB _  (UINTN)
        db 44H, 65H, 73H, 74H, 69H, 6EH, 61H, 74H       ; 64E3 _ Destinat
        db 69H, 6FH, 6EH, 42H, 75H, 66H, 66H, 65H       ; 64EB _ ionBuffe
        db 72H, 29H, 00H                                ; 64F3 _ r).

?_328   label byte
        db 28H, 4CH, 65H, 6EH, 67H, 74H, 68H, 20H       ; 64F6 _ (Length 
        db 2DH, 20H, 31H, 29H, 20H, 3CH, 3DH, 20H       ; 64FE _ - 1) <= 
        db 28H, 30H, 78H, 46H, 46H, 46H, 46H, 46H       ; 6506 _ (0xFFFFF
        db 46H, 46H, 46H, 46H, 46H, 46H, 46H, 46H       ; 650E _ FFFFFFFF
        db 46H, 46H, 46H, 55H, 4CH, 4CH, 20H, 2DH       ; 6516 _ FFFULL -
        db 20H, 28H, 55H, 49H, 4EH, 54H, 4EH, 29H       ; 651E _  (UINTN)
        db 53H, 6FH, 75H, 72H, 63H, 65H, 42H, 75H       ; 6526 _ SourceBu
        db 66H, 66H, 65H, 72H, 29H, 00H                 ; 652E _ ffer).

?_329   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 6534 _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 653C _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 6544 _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 654C _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 6554 _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 655C _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 6564 _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 656C _ g/Librar
        db 79H, 2FH, 42H, 61H, 73H, 65H, 4DH, 65H       ; 6574 _ y/BaseMe
        db 6DH, 6FH, 72H, 79H, 4CH, 69H, 62H, 2FH       ; 657C _ moryLib/
        db 53H, 65H, 74H, 4DH, 65H, 6DH, 57H, 72H       ; 6584 _ SetMemWr
        db 61H, 70H, 70H, 65H, 72H, 2EH, 63H, 00H       ; 658C _ apper.c.

?_330   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 6594 _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 659C _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 65A4 _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 65AC _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 65B4 _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 65BC _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 65C4 _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 65CC _ g/Librar
        db 79H, 2FH, 42H, 61H, 73H, 65H, 4DH, 65H       ; 65D4 _ y/BaseMe
        db 6DH, 6FH, 72H, 79H, 4CH, 69H, 62H, 2FH       ; 65DC _ moryLib/
        db 43H, 6FH, 70H, 79H, 4DH, 65H, 6DH, 57H       ; 65E4 _ CopyMemW
        db 72H, 61H, 70H, 70H, 65H, 72H, 2EH, 63H       ; 65EC _ rapper.c
        db 00H                                          ; 65F4 _ .

?_331   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 65F5 _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 65FD _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 6605 _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 660D _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 6615 _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 661D _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 6625 _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 662D _ g/Librar
        db 79H, 2FH, 42H, 61H, 73H, 65H, 4CH, 69H       ; 6635 _ y/BaseLi
        db 62H, 2FH, 53H, 65H, 74H, 4AH, 75H, 6DH       ; 663D _ b/SetJum
        db 70H, 2EH, 63H, 00H                           ; 6645 _ p.c.

?_332   label byte
        db 4AH, 75H, 6DH, 70H, 42H, 75H, 66H, 66H       ; 6649 _ JumpBuff
        db 65H, 72H, 20H, 21H, 3DH, 20H, 28H, 28H       ; 6651 _ er != ((
        db 76H, 6FH, 69H, 64H, 20H, 2AH, 29H, 20H       ; 6659 _ void *) 
        db 30H, 29H, 00H                                ; 6661 _ 0).

?_333   label byte
        db 28H, 28H, 55H, 49H, 4EH, 54H, 4EH, 29H       ; 6664 _ ((UINTN)
        db 4AH, 75H, 6DH, 70H, 42H, 75H, 66H, 66H       ; 666C _ JumpBuff
        db 65H, 72H, 20H, 26H, 20H, 28H, 38H, 20H       ; 6674 _ er & (8 
        db 2DH, 20H, 31H, 29H, 29H, 20H, 3DH, 3DH       ; 667C _ - 1)) ==
        db 20H, 30H, 00H                                ; 6684 _  0.

?_334   label byte
        db 44H, 69H, 76H, 69H, 73H, 6FH, 72H, 20H       ; 6687 _ Divisor 
        db 21H, 3DH, 20H, 30H, 00H                      ; 668F _ != 0.

?_335   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 6694 _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 669C _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 66A4 _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 66AC _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 66B4 _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 66BC _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 66C4 _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 66CC _ g/Librar
        db 79H, 2FH, 42H, 61H, 73H, 65H, 4CH, 69H       ; 66D4 _ y/BaseLi
        db 62H, 2FH, 44H, 69H, 76H, 55H, 36H, 34H       ; 66DC _ b/DivU64
        db 78H, 33H, 32H, 52H, 65H, 6DH, 61H, 69H       ; 66E4 _ x32Remai
        db 6EH, 64H, 65H, 72H, 2EH, 63H, 00H            ; 66EC _ nder.c.

?_336   label byte
        db 4EH, 6FH, 64H, 65H, 20H, 21H, 3DH, 20H       ; 66F3 _ Node != 
        db 28H, 28H, 76H, 6FH, 69H, 64H, 20H, 2AH       ; 66FB _ ((void *
        db 29H, 20H, 30H, 29H, 00H                      ; 6703 _ ) 0).

?_337   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 6708 _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 6710 _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 6718 _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 6720 _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 6728 _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 6730 _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 6738 _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 6740 _ g/Librar
        db 79H, 2FH, 42H, 61H, 73H, 65H, 4CH, 69H       ; 6748 _ y/BaseLi
        db 62H, 2FH, 53H, 61H, 66H, 65H, 53H, 74H       ; 6750 _ b/SafeSt
        db 72H, 69H, 6EH, 67H, 2EH, 63H, 00H            ; 6758 _ ring.c.

?_338   label byte
        db 28H, 28H, 55H, 49H, 4EH, 54H, 4EH, 29H       ; 675F _ ((UINTN)
        db 20H, 53H, 74H, 72H, 69H, 6EH, 67H, 20H       ; 6767 _  String 
        db 26H, 20H, 30H, 78H, 30H, 30H, 30H, 30H       ; 676F _ & 0x0000
        db 30H, 30H, 30H, 31H, 29H, 20H, 3DH, 3DH       ; 6777 _ 0001) ==
        db 20H, 30H, 00H                                ; 677F _  0.

?_339   label byte
        db 28H, 44H, 65H, 73H, 74H, 69H, 6EH, 61H       ; 6782 _ (Destina
        db 74H, 69H, 6FH, 6EH, 20H, 21H, 3DH, 20H       ; 678A _ tion != 
        db 28H, 28H, 76H, 6FH, 69H, 64H, 20H, 2AH       ; 6792 _ ((void *
        db 29H, 20H, 30H, 29H, 29H, 00H                 ; 679A _ ) 0)).

?_340   label byte
        db 28H, 53H, 6FH, 75H, 72H, 63H, 65H, 20H       ; 67A0 _ (Source 
        db 21H, 3DH, 20H, 28H, 28H, 76H, 6FH, 69H       ; 67A8 _ != ((voi
        db 64H, 20H, 2AH, 29H, 20H, 30H, 29H, 29H       ; 67B0 _ d *) 0))
        db 00H                                          ; 67B8 _ .

?_341   label byte
        db 28H, 44H, 65H, 73H, 74H, 4DH, 61H, 78H       ; 67B9 _ (DestMax
        db 20H, 21H, 3DH, 20H, 30H, 29H, 00H            ; 67C1 _  != 0).

?_342   label byte
        db 28H, 44H, 65H, 73H, 74H, 4DH, 61H, 78H       ; 67C8 _ (DestMax
        db 20H, 3EH, 20H, 53H, 6FH, 75H, 72H, 63H       ; 67D0 _  > Sourc
        db 65H, 4CH, 65H, 6EH, 29H, 00H                 ; 67D8 _ eLen).

?_343   label byte
        db 28H, 44H, 65H, 73H, 74H, 4DH, 61H, 78H       ; 67DE _ (DestMax
        db 20H, 3CH, 3DH, 20H, 28H, 5FH, 67H, 50H       ; 67E6 _  <= (_gP
        db 63H, 64H, 5FH, 46H, 69H, 78H, 65H, 64H       ; 67EE _ cd_Fixed
        db 41H, 74H, 42H, 75H, 69H, 6CH, 64H, 5FH       ; 67F6 _ AtBuild_
        db 50H, 63H, 64H, 4DH, 61H, 78H, 69H, 6DH       ; 67FE _ PcdMaxim
        db 75H, 6DH, 41H, 73H, 63H, 69H, 69H, 53H       ; 6806 _ umAsciiS
        db 74H, 72H, 69H, 6EH, 67H, 4CH, 65H, 6EH       ; 680E _ tringLen
        db 67H, 74H, 68H, 29H, 29H, 00H                 ; 6816 _ gth)).

?_344   label byte
        db 49H, 6EH, 74H, 65H, 72H, 6EH, 61H, 6CH       ; 681C _ Internal
        db 53H, 61H, 66H, 65H, 53H, 74H, 72H, 69H       ; 6824 _ SafeStri
        db 6EH, 67H, 4EH, 6FH, 41H, 73H, 63H, 69H       ; 682C _ ngNoAsci
        db 69H, 53H, 74H, 72H, 4FH, 76H, 65H, 72H       ; 6834 _ iStrOver
        db 6CH, 61H, 70H, 20H, 28H, 44H, 65H, 73H       ; 683C _ lap (Des
        db 74H, 69H, 6EH, 61H, 74H, 69H, 6FH, 6EH       ; 6844 _ tination
        db 2CH, 20H, 44H, 65H, 73H, 74H, 4DH, 61H       ; 684C _ , DestMa
        db 78H, 2CH, 20H, 28H, 43H, 48H, 41H, 52H       ; 6854 _ x, (CHAR
        db 38H, 20H, 2AH, 29H, 53H, 6FH, 75H, 72H       ; 685C _ 8 *)Sour
        db 63H, 65H, 2CH, 20H, 53H, 6FH, 75H, 72H       ; 6864 _ ce, Sour
        db 63H, 65H, 4CH, 65H, 6EH, 20H, 2BH, 20H       ; 686C _ ceLen + 
        db 31H, 29H, 00H                                ; 6874 _ 1).

?_345   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 6877 _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 687F _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 6887 _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 688F _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 6897 _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 689F _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 68A7 _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 68AF _ g/Librar
        db 79H, 2FH, 42H, 61H, 73H, 65H, 4CH, 69H       ; 68B7 _ y/BaseLi
        db 62H, 2FH, 53H, 74H, 72H, 69H, 6EH, 67H       ; 68BF _ b/String
        db 2EH, 63H, 00H                                ; 68C7 _ .c.

?_346   label byte
        db 53H, 74H, 72H, 69H, 6EH, 67H, 20H, 21H       ; 68CA _ String !
        db 3DH, 20H, 28H, 28H, 76H, 6FH, 69H, 64H       ; 68D2 _ = ((void
        db 20H, 2AH, 29H, 20H, 30H, 29H, 00H            ; 68DA _  *) 0).

?_347   label byte
        db 4CH, 65H, 6EH, 67H, 74H, 68H, 20H, 3CH       ; 68E1 _ Length <
        db 20H, 5FH, 67H, 50H, 63H, 64H, 5FH, 46H       ; 68E9 _  _gPcd_F
        db 69H, 78H, 65H, 64H, 41H, 74H, 42H, 75H       ; 68F1 _ ixedAtBu
        db 69H, 6CH, 64H, 5FH, 50H, 63H, 64H, 4DH       ; 68F9 _ ild_PcdM
        db 61H, 78H, 69H, 6DH, 75H, 6DH, 55H, 6EH       ; 6901 _ aximumUn
        db 69H, 63H, 6FH, 64H, 65H, 53H, 74H, 72H       ; 6909 _ icodeStr
        db 69H, 6EH, 67H, 4CH, 65H, 6EH, 67H, 74H       ; 6911 _ ingLengt
        db 68H, 00H                                     ; 6919 _ h.

?_348   label byte
        db 52H, 65H, 73H, 75H, 6CH, 74H, 20H, 3CH       ; 691B _ Result <
        db 3DH, 20H, 28H, 28H, 28H, 28H, 55H, 49H       ; 6923 _ = ((((UI
        db 4EH, 54H, 4EH, 29H, 20H, 7EH, 30H, 29H       ; 692B _ NTN) ~0)
        db 20H, 2DH, 20H, 49H, 6EH, 74H, 65H, 72H       ; 6933 _  - Inter
        db 6EH, 61H, 6CH, 48H, 65H, 78H, 43H, 68H       ; 693B _ nalHexCh
        db 61H, 72H, 54H, 6FH, 55H, 69H, 6EH, 74H       ; 6943 _ arToUint
        db 6EH, 20H, 28H, 2AH, 53H, 74H, 72H, 69H       ; 694B _ n (*Stri
        db 6EH, 67H, 29H, 29H, 20H, 3EH, 3EH, 20H       ; 6953 _ ng)) >> 
        db 34H, 29H, 00H                                ; 695B _ 4).

?_349   label byte
        db 4CH, 65H, 6EH, 67H, 74H, 68H, 20H, 3CH       ; 695E _ Length <
        db 3DH, 20H, 5FH, 67H, 50H, 63H, 64H, 5FH       ; 6966 _ = _gPcd_
        db 46H, 69H, 78H, 65H, 64H, 41H, 74H, 42H       ; 696E _ FixedAtB
        db 75H, 69H, 6CH, 64H, 5FH, 50H, 63H, 64H       ; 6976 _ uild_Pcd
        db 4DH, 61H, 78H, 69H, 6DH, 75H, 6DH, 41H       ; 697E _ MaximumA
        db 73H, 63H, 69H, 69H, 53H, 74H, 72H, 69H       ; 6986 _ sciiStri
        db 6EH, 67H, 4CH, 65H, 6EH, 67H, 74H, 68H       ; 698E _ ngLength
        db 00H                                          ; 6996 _ .

?_350   label byte
        db 4CH, 65H, 6EH, 67H, 74H, 68H, 20H, 3CH       ; 6997 _ Length <
        db 20H, 5FH, 67H, 50H, 63H, 64H, 5FH, 46H       ; 699F _  _gPcd_F
        db 69H, 78H, 65H, 64H, 41H, 74H, 42H, 75H       ; 69A7 _ ixedAtBu
        db 69H, 6CH, 64H, 5FH, 50H, 63H, 64H, 4DH       ; 69AF _ ild_PcdM
        db 61H, 78H, 69H, 6DH, 75H, 6DH, 41H, 73H       ; 69B7 _ aximumAs
        db 63H, 69H, 69H, 53H, 74H, 72H, 69H, 6EH       ; 69BF _ ciiStrin
        db 67H, 4CH, 65H, 6EH, 67H, 74H, 68H, 00H       ; 69C7 _ gLength.

?_351   label byte
        db 41H, 73H, 63H, 69H, 69H, 53H, 74H, 72H       ; 69CF _ AsciiStr
        db 53H, 69H, 7AH, 65H, 20H, 28H, 46H, 69H       ; 69D7 _ Size (Fi
        db 72H, 73H, 74H, 53H, 74H, 72H, 69H, 6EH       ; 69DF _ rstStrin
        db 67H, 29H, 00H                                ; 69E7 _ g).

?_352   label byte
        db 41H, 73H, 63H, 69H, 69H, 53H, 74H, 72H       ; 69EA _ AsciiStr
        db 53H, 69H, 7AH, 65H, 20H, 28H, 53H, 65H       ; 69F2 _ Size (Se
        db 63H, 6FH, 6EH, 64H, 53H, 74H, 72H, 69H       ; 69FA _ condStri
        db 6EH, 67H, 29H, 00H                           ; 6A02 _ ng).

?_353   label byte
        db 41H, 73H, 63H, 69H, 69H, 53H, 74H, 72H       ; 6A06 _ AsciiStr
        db 53H, 69H, 7AH, 65H, 20H, 28H, 53H, 74H       ; 6A0E _ Size (St
        db 72H, 69H, 6EH, 67H, 29H, 20H, 21H, 3DH       ; 6A16 _ ring) !=
        db 20H, 30H, 00H                                ; 6A1E _  0.

?_354   label byte
        db 2AH, 28H, 53H, 74H, 72H, 69H, 6EH, 67H       ; 6A21 _ *(String
        db 20H, 2DH, 20H, 31H, 29H, 20H, 3DH, 3DH       ; 6A29 _  - 1) ==
        db 20H, 27H, 30H, 27H, 00H                      ; 6A31 _  '0'.

?_355   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 6A36 _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 6A3E _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 6A46 _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 6A4E _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 6A56 _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 6A5E _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 6A66 _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 6A6E _ g/Librar
        db 79H, 2FH, 42H, 61H, 73H, 65H, 4CH, 69H       ; 6A76 _ y/BaseLi
        db 62H, 2FH, 55H, 6EH, 61H, 6CH, 69H, 67H       ; 6A7E _ b/Unalig
        db 6EH, 65H, 64H, 2EH, 63H, 00H                 ; 6A86 _ ned.c.

?_356   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 6A8C _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 6A94 _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 6A9C _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 6AA4 _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 6AAC _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 6AB4 _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 6ABC _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 6AC4 _ g/Librar
        db 79H, 2FH, 55H, 65H, 66H, 69H, 42H, 6FH       ; 6ACC _ y/UefiBo
        db 6FH, 74H, 53H, 65H, 72H, 76H, 69H, 63H       ; 6AD4 _ otServic
        db 65H, 73H, 54H, 61H, 62H, 6CH, 65H, 4CH       ; 6ADC _ esTableL
        db 69H, 62H, 2FH, 55H, 65H, 66H, 69H, 42H       ; 6AE4 _ ib/UefiB
        db 6FH, 6FH, 74H, 53H, 65H, 72H, 76H, 69H       ; 6AEC _ ootServi
        db 63H, 65H, 73H, 54H, 61H, 62H, 6CH, 65H       ; 6AF4 _ cesTable
        db 4CH, 69H, 62H, 2EH, 63H, 00H                 ; 6AFC _ Lib.c.

?_357   label byte
        db 67H, 49H, 6DH, 61H, 67H, 65H, 48H, 61H       ; 6B02 _ gImageHa
        db 6EH, 64H, 6CH, 65H, 20H, 21H, 3DH, 20H       ; 6B0A _ ndle != 
        db 28H, 28H, 76H, 6FH, 69H, 64H, 20H, 2AH       ; 6B12 _ ((void *
        db 29H, 20H, 30H, 29H, 00H                      ; 6B1A _ ) 0).

?_358   label byte
        db 67H, 53H, 54H, 20H, 21H, 3DH, 20H, 28H       ; 6B1F _ gST != (
        db 28H, 76H, 6FH, 69H, 64H, 20H, 2AH, 29H       ; 6B27 _ (void *)
        db 20H, 30H, 29H, 00H                           ; 6B2F _  0).

?_359   label byte
        db 67H, 42H, 53H, 20H, 21H, 3DH, 20H, 28H       ; 6B33 _ gBS != (
        db 28H, 76H, 6FH, 69H, 64H, 20H, 2AH, 29H       ; 6B3B _ (void *)
        db 20H, 30H, 29H, 00H                           ; 6B43 _  0).

?_360   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 6B47 _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 6B4F _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 6B57 _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 6B5F _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 6B67 _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 6B6F _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 6B77 _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 6B7F _ g/Librar
        db 79H, 2FH, 55H, 65H, 66H, 69H, 4DH, 65H       ; 6B87 _ y/UefiMe
        db 6DH, 6FH, 72H, 79H, 41H, 6CH, 6CH, 6FH       ; 6B8F _ moryAllo
        db 63H, 61H, 74H, 69H, 6FH, 6EH, 4CH, 69H       ; 6B97 _ cationLi
        db 62H, 2FH, 4DH, 65H, 6DH, 6FH, 72H, 79H       ; 6B9F _ b/Memory
        db 41H, 6CH, 6CH, 6FH, 63H, 61H, 74H, 69H       ; 6BA7 _ Allocati
        db 6FH, 6EH, 4CH, 69H, 62H, 2EH, 63H, 00H       ; 6BAF _ onLib.c.

?_361   label byte
        db 28H, 41H, 6CH, 69H, 67H, 6EH, 6DH, 65H       ; 6BB7 _ (Alignme
        db 6EH, 74H, 20H, 26H, 20H, 28H, 41H, 6CH       ; 6BBF _ nt & (Al
        db 69H, 67H, 6EH, 6DH, 65H, 6EH, 74H, 20H       ; 6BC7 _ ignment 
        db 2DH, 20H, 31H, 29H, 29H, 20H, 3DH, 3DH       ; 6BCF _ - 1)) ==
        db 20H, 30H, 00H                                ; 6BD7 _  0.

?_362   label byte
        db 52H, 65H, 61H, 6CH, 50H, 61H, 67H, 65H       ; 6BDA _ RealPage
        db 73H, 20H, 3EH, 20H, 50H, 61H, 67H, 65H       ; 6BE2 _ s > Page
        db 73H, 00H                                     ; 6BEA _ s.

?_363   label byte
        db 41H, 6CH, 6CH, 6FH, 63H, 61H, 74H, 69H       ; 6BEC _ Allocati
        db 6FH, 6EH, 53H, 69H, 7AH, 65H, 20H, 3CH       ; 6BF4 _ onSize <
        db 3DH, 20H, 28H, 30H, 78H, 46H, 46H, 46H       ; 6BFC _ = (0xFFF
        db 46H, 46H, 46H, 46H, 46H, 46H, 46H, 46H       ; 6C04 _ FFFFFFFF
        db 46H, 46H, 46H, 46H, 46H, 55H, 4CH, 4CH       ; 6C0C _ FFFFFULL
        db 20H, 2DH, 20H, 28H, 55H, 49H, 4EH, 54H       ; 6C14 _  - (UINT
        db 4EH, 29H, 20H, 42H, 75H, 66H, 66H, 65H       ; 6C1C _ N) Buffe
        db 72H, 20H, 2BH, 20H, 31H, 29H, 00H, 53H       ; 6C24 _ r + 1).S
        db 75H, 63H, 63H, 65H, 73H, 73H, 00H, 57H       ; 6C2C _ uccess.W
        db 61H, 72H, 6EH, 69H, 6EH, 67H, 20H, 55H       ; 6C34 _ arning U
        db 6EH, 6BH, 6EH, 6FH, 77H, 6EH, 20H, 47H       ; 6C3C _ nknown G
        db 6CH, 79H, 70H, 68H, 00H, 57H, 61H, 72H       ; 6C44 _ lyph.War
        db 6EH, 69H, 6EH, 67H, 20H, 44H, 65H, 6CH       ; 6C4C _ ning Del
        db 65H, 74H, 65H, 20H, 46H, 61H, 69H, 6CH       ; 6C54 _ ete Fail
        db 75H, 72H, 65H, 00H, 57H, 61H, 72H, 6EH       ; 6C5C _ ure.Warn
        db 69H, 6EH, 67H, 20H, 57H, 72H, 69H, 74H       ; 6C64 _ ing Writ
        db 65H, 20H, 46H, 61H, 69H, 6CH, 75H, 72H       ; 6C6C _ e Failur
        db 65H, 00H, 57H, 61H, 72H, 6EH, 69H, 6EH       ; 6C74 _ e.Warnin
        db 67H, 20H, 42H, 75H, 66H, 66H, 65H, 72H       ; 6C7C _ g Buffer
        db 20H, 54H, 6FH, 6FH, 20H, 53H, 6DH, 61H       ; 6C84 _  Too Sma
        db 6CH, 6CH, 00H, 57H, 61H, 72H, 6EH, 69H       ; 6C8C _ ll.Warni
        db 6EH, 67H, 20H, 53H, 74H, 61H, 6CH, 65H       ; 6C94 _ ng Stale
        db 20H, 44H, 61H, 74H, 61H, 00H, 4CH, 6FH       ; 6C9C _  Data.Lo
        db 61H, 64H, 20H, 45H, 72H, 72H, 6FH, 72H       ; 6CA4 _ ad Error
        db 00H, 49H, 6EH, 76H, 61H, 6CH, 69H, 64H       ; 6CAC _ .Invalid
        db 20H, 50H, 61H, 72H, 61H, 6DH, 65H, 74H       ; 6CB4 _  Paramet
        db 65H, 72H, 00H, 55H, 6EH, 73H, 75H, 70H       ; 6CBC _ er.Unsup
        db 70H, 6FH, 72H, 74H, 65H, 64H, 00H, 42H       ; 6CC4 _ ported.B
        db 61H, 64H, 20H, 42H, 75H, 66H, 66H, 65H       ; 6CCC _ ad Buffe
        db 72H, 20H, 53H, 69H, 7AH, 65H, 00H, 42H       ; 6CD4 _ r Size.B
        db 75H, 66H, 66H, 65H, 72H, 20H, 54H, 6FH       ; 6CDC _ uffer To
        db 6FH, 20H, 53H, 6DH, 61H, 6CH, 6CH, 00H       ; 6CE4 _ o Small.
        db 4EH, 6FH, 74H, 20H, 52H, 65H, 61H, 64H       ; 6CEC _ Not Read
        db 79H, 00H, 44H, 65H, 76H, 69H, 63H, 65H       ; 6CF4 _ y.Device
        db 20H, 45H, 72H, 72H, 6FH, 72H, 00H, 57H       ; 6CFC _  Error.W
        db 72H, 69H, 74H, 65H, 20H, 50H, 72H, 6FH       ; 6D04 _ rite Pro
        db 74H, 65H, 63H, 74H, 65H, 64H, 00H, 4FH       ; 6D0C _ tected.O
        db 75H, 74H, 20H, 6FH, 66H, 20H, 52H, 65H       ; 6D14 _ ut of Re
        db 73H, 6FH, 75H, 72H, 63H, 65H, 73H, 00H       ; 6D1C _ sources.
        db 56H, 6FH, 6CH, 75H, 6DH, 65H, 20H, 43H       ; 6D24 _ Volume C
        db 6FH, 72H, 72H, 75H, 70H, 74H, 00H, 56H       ; 6D2C _ orrupt.V
        db 6FH, 6CH, 75H, 6DH, 65H, 20H, 46H, 75H       ; 6D34 _ olume Fu
        db 6CH, 6CH, 00H, 4EH, 6FH, 20H, 4DH, 65H       ; 6D3C _ ll.No Me
        db 64H, 69H, 61H, 00H, 4DH, 65H, 64H, 69H       ; 6D44 _ dia.Medi
        db 61H, 20H, 63H, 68H, 61H, 6EH, 67H, 65H       ; 6D4C _ a change
        db 64H, 00H, 4EH, 6FH, 74H, 20H, 46H, 6FH       ; 6D54 _ d.Not Fo
        db 75H, 6EH, 64H, 00H, 41H, 63H, 63H, 65H       ; 6D5C _ und.Acce
        db 73H, 73H, 20H, 44H, 65H, 6EH, 69H, 65H       ; 6D64 _ ss Denie
        db 64H, 00H, 4EH, 6FH, 20H, 52H, 65H, 73H       ; 6D6C _ d.No Res
        db 70H, 6FH, 6EH, 73H, 65H, 00H, 4EH, 6FH       ; 6D74 _ ponse.No
        db 20H, 6DH, 61H, 70H, 70H, 69H, 6EH, 67H       ; 6D7C _  mapping
        db 00H, 54H, 69H, 6DH, 65H, 20H, 6FH, 75H       ; 6D84 _ .Time ou
        db 74H, 00H, 4EH, 6FH, 74H, 20H, 73H, 74H       ; 6D8C _ t.Not st
        db 61H, 72H, 74H, 65H, 64H, 00H, 41H, 6CH       ; 6D94 _ arted.Al
        db 72H, 65H, 61H, 64H, 79H, 20H, 73H, 74H       ; 6D9C _ ready st
        db 61H, 72H, 74H, 65H, 64H, 00H, 41H, 62H       ; 6DA4 _ arted.Ab
        db 6FH, 72H, 74H, 65H, 64H, 00H, 49H, 43H       ; 6DAC _ orted.IC
        db 4DH, 50H, 20H, 45H, 72H, 72H, 6FH, 72H       ; 6DB4 _ MP Error
        db 00H, 54H, 46H, 54H, 50H, 20H, 45H, 72H       ; 6DBC _ .TFTP Er
        db 72H, 6FH, 72H, 00H, 50H, 72H, 6FH, 74H       ; 6DC4 _ ror.Prot
        db 6FH, 63H, 6FH, 6CH, 20H, 45H, 72H, 72H       ; 6DCC _ ocol Err
        db 6FH, 72H, 00H, 49H, 6EH, 63H, 6FH, 6DH       ; 6DD4 _ or.Incom
        db 70H, 61H, 74H, 69H, 62H, 6CH, 65H, 20H       ; 6DDC _ patible 
        db 56H, 65H, 72H, 73H, 69H, 6FH, 6EH, 00H       ; 6DE4 _ Version.
        db 53H, 65H, 63H, 75H, 72H, 69H, 74H, 79H       ; 6DEC _ Security
        db 20H, 56H, 69H, 6FH, 6CH, 61H, 74H, 69H       ; 6DF4 _  Violati
        db 6FH, 6EH, 00H, 43H, 52H, 43H, 20H, 45H       ; 6DFC _ on.CRC E
        db 72H, 72H, 6FH, 72H, 00H, 45H, 6EH, 64H       ; 6E04 _ rror.End
        db 20H, 6FH, 66H, 20H, 4DH, 65H, 64H, 69H       ; 6E0C _  of Medi
        db 61H, 00H, 52H, 65H, 73H, 65H, 72H, 76H       ; 6E14 _ a.Reserv
        db 65H, 64H, 20H, 28H, 32H, 39H, 29H, 00H       ; 6E1C _ ed (29).
        db 52H, 65H, 73H, 65H, 72H, 76H, 65H, 64H       ; 6E24 _ Reserved
        db 20H, 28H, 33H, 30H, 29H, 00H, 45H, 6EH       ; 6E2C _  (30).En
        db 64H, 20H, 6FH, 66H, 20H, 46H, 69H, 6CH       ; 6E34 _ d of Fil
        db 65H, 00H, 49H, 6EH, 76H, 61H, 6CH, 69H       ; 6E3C _ e.Invali
        db 64H, 20H, 4CH, 61H, 6EH, 67H, 75H, 61H       ; 6E44 _ d Langua
        db 67H, 65H, 00H, 43H, 6FH, 6DH, 70H, 72H       ; 6E4C _ ge.Compr
        db 6FH, 6DH, 69H, 73H, 65H, 64H, 20H, 44H       ; 6E54 _ omised D
        db 61H, 74H, 61H, 00H                           ; 6E5C _ ata.

?_364   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 6E60 _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 6E68 _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 6E70 _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 6E78 _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 6E80 _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 6E88 _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 6E90 _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 6E98 _ g/Librar
        db 79H, 2FH, 42H, 61H, 73H, 65H, 50H, 72H       ; 6EA0 _ y/BasePr
        db 69H, 6EH, 74H, 4CH, 69H, 62H, 2FH, 50H       ; 6EA8 _ intLib/P
        db 72H, 69H, 6EH, 74H, 4CH, 69H, 62H, 49H       ; 6EB0 _ rintLibI
        db 6EH, 74H, 65H, 72H, 6EH, 61H, 6CH, 2EH       ; 6EB8 _ nternal.
        db 63H, 00H                                     ; 6EC0 _ c.

?_365   label byte
        db 53H, 74H, 72H, 53H, 69H, 7AH, 65H, 20H       ; 6EC2 _ StrSize 
        db 28H, 28H, 43H, 48H, 41H, 52H, 31H, 36H       ; 6ECA _ ((CHAR16
        db 20H, 2AH, 29H, 20H, 46H, 6FH, 72H, 6DH       ; 6ED2 _  *) Form
        db 61H, 74H, 29H, 20H, 21H, 3DH, 20H, 30H       ; 6EDA _ at) != 0
        db 00H                                          ; 6EE2 _ .

?_366   label byte
        db 41H, 73H, 63H, 69H, 69H, 53H, 74H, 72H       ; 6EE3 _ AsciiStr
        db 53H, 69H, 7AH, 65H, 20H, 28H, 46H, 6FH       ; 6EEB _ Size (Fo
        db 72H, 6DH, 61H, 74H, 29H, 20H, 21H, 3DH       ; 6EF3 _ rmat) !=
        db 20H, 30H, 00H                                ; 6EFB _  0.

?_367   label byte
        db 3CH, 6EH, 75H, 6CH, 6CH, 20H, 73H, 74H       ; 6EFE _ <null st
        db 72H, 69H, 6EH, 67H, 3EH, 00H                 ; 6F06 _ ring>.

?_368   label byte
        db 3CH, 6EH, 75H, 6CH, 6CH, 20H, 67H, 75H       ; 6F0C _ <null gu
        db 69H, 64H, 3EH, 00H                           ; 6F14 _ id>.

?_369   label byte
        db 25H, 30H, 38H, 78H, 2DH, 25H, 30H, 34H       ; 6F18 _ %08x-%04
        db 78H, 2DH, 25H, 30H, 34H, 78H, 2DH, 25H       ; 6F20 _ x-%04x-%
        db 30H, 32H, 78H, 25H, 30H, 32H, 78H, 2DH       ; 6F28 _ 02x%02x-
        db 25H, 30H, 32H, 78H, 25H, 30H, 32H, 78H       ; 6F30 _ %02x%02x
        db 25H, 30H, 32H, 78H, 25H, 30H, 32H, 78H       ; 6F38 _ %02x%02x
        db 25H, 30H, 32H, 78H, 25H, 30H, 32H, 78H       ; 6F40 _ %02x%02x
        db 00H                                          ; 6F48 _ .

?_370   label byte
        db 3CH, 6EH, 75H, 6CH, 6CH, 20H, 74H, 69H       ; 6F49 _ <null ti
        db 6DH, 65H, 3EH, 00H                           ; 6F51 _ me>.

?_371   label byte
        db 25H, 30H, 32H, 64H, 2FH, 25H, 30H, 32H       ; 6F55 _ %02d/%02
        db 64H, 2FH, 25H, 30H, 34H, 64H, 20H, 20H       ; 6F5D _ d/%04d  
        db 25H, 30H, 32H, 64H, 3AH, 25H, 30H, 32H       ; 6F65 _ %02d:%02
        db 64H, 00H                                     ; 6F6D _ d.

?_372   label byte
        db 25H, 30H, 38H, 58H, 00H                      ; 6F6F _ %08X.

?_373   label byte
        db 0DH, 0AH, 00H                                ; 6F74 _ ...

?_374   label byte
        db 0DH, 00H                                     ; 6F77 _ ..

?_375   label byte
        db 28H, 28H, 28H, 46H, 6CH, 61H, 67H, 73H       ; 6F79 _ (((Flags
        db 20H, 26H, 20H, 30H, 78H, 30H, 30H, 30H       ; 6F81 _  & 0x000
        db 30H, 30H, 30H, 34H, 30H, 29H, 20H, 3DH       ; 6F89 _ 00040) =
        db 3DH, 20H, 30H, 29H, 29H, 20H, 7CH, 7CH       ; 6F91 _ = 0)) ||
        db 20H, 28H, 53H, 74H, 72H, 53H, 69H, 7AH       ; 6F99 _  (StrSiz
        db 65H, 20H, 28H, 28H, 43H, 48H, 41H, 52H       ; 6FA1 _ e ((CHAR
        db 31H, 36H, 20H, 2AH, 29H, 20H, 4FH, 72H       ; 6FA9 _ 16 *) Or
        db 69H, 67H, 69H, 6EH, 61H, 6CH, 42H, 75H       ; 6FB1 _ iginalBu
        db 66H, 66H, 65H, 72H, 29H, 20H, 21H, 3DH       ; 6FB9 _ ffer) !=
        db 20H, 30H, 29H, 00H                           ; 6FC1 _  0).

?_376   label byte
        db 28H, 28H, 28H, 46H, 6CH, 61H, 67H, 73H       ; 6FC5 _ (((Flags
        db 20H, 26H, 20H, 30H, 78H, 30H, 30H, 30H       ; 6FCD _  & 0x000
        db 30H, 30H, 30H, 34H, 30H, 29H, 20H, 21H       ; 6FD5 _ 00040) !
        db 3DH, 20H, 30H, 29H, 29H, 20H, 7CH, 7CH       ; 6FDD _ = 0)) ||
        db 20H, 28H, 41H, 73H, 63H, 69H, 69H, 53H       ; 6FE5 _  (AsciiS
        db 74H, 72H, 53H, 69H, 7AH, 65H, 20H, 28H       ; 6FED _ trSize (
        db 4FH, 72H, 69H, 67H, 69H, 6EH, 61H, 6CH       ; 6FF5 _ Original
        db 42H, 75H, 66H, 66H, 65H, 72H, 29H, 20H       ; 6FFD _ Buffer) 
        db 21H, 3DH, 20H, 30H, 29H, 00H                 ; 7005 _ != 0).

?_377   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 700B _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 7013 _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 701B _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 7023 _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 702B _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 7033 _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 703B _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 7043 _ g/Librar
        db 79H, 2FH, 42H, 61H, 73H, 65H, 50H, 72H       ; 704B _ y/BasePr
        db 69H, 6EH, 74H, 4CH, 69H, 62H, 2FH, 50H       ; 7053 _ intLib/P
        db 72H, 69H, 6EH, 74H, 4CH, 69H, 62H, 2EH       ; 705B _ rintLib.
        db 63H, 00H                                     ; 7063 _ c.

?_378   label byte
        db 28H, 28H, 28H, 55H, 49H, 4EH, 54H, 4EH       ; 7065 _ (((UINTN
        db 29H, 20H, 28H, 53H, 74H, 61H, 72H, 74H       ; 706D _ ) (Start
        db 4FH, 66H, 42H, 75H, 66H, 66H, 65H, 72H       ; 7075 _ OfBuffer
        db 29H, 29H, 20H, 26H, 20H, 30H, 78H, 30H       ; 707D _ )) & 0x0
        db 31H, 29H, 20H, 3DH, 3DH, 20H, 30H, 00H       ; 7085 _ 1) == 0.

?_379   label byte
        db 28H, 28H, 28H, 55H, 49H, 4EH, 54H, 4EH       ; 708D _ (((UINTN
        db 29H, 20H, 28H, 46H, 6FH, 72H, 6DH, 61H       ; 7095 _ ) (Forma
        db 74H, 53H, 74H, 72H, 69H, 6EH, 67H, 29H       ; 709D _ tString)
        db 29H, 20H, 26H, 20H, 30H, 78H, 30H, 31H       ; 70A5 _ ) & 0x01
        db 29H, 20H, 3DH, 3DH, 20H, 30H, 00H            ; 70AD _ ) == 0.

?_380   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 70B4 _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 70BC _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 70C4 _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 70CC _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 70D4 _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 70DC _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 70E4 _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 70EC _ g/Librar
        db 79H, 2FH, 55H, 65H, 66H, 69H, 44H, 65H       ; 70F4 _ y/UefiDe
        db 76H, 69H, 63H, 65H, 50H, 61H, 74H, 68H       ; 70FC _ vicePath
        db 4CH, 69H, 62H, 2FH, 44H, 65H, 76H, 69H       ; 7104 _ Lib/Devi
        db 63H, 65H, 50H, 61H, 74H, 68H, 55H, 74H       ; 710C _ cePathUt
        db 69H, 6CH, 69H, 74H, 69H, 65H, 73H, 2EH       ; 7114 _ ilities.
        db 63H, 00H                                     ; 711C _ c.

?_381   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 711E _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 7126 _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 712E _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 7136 _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 713E _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 7146 _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 714E _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 7156 _ g/Librar
        db 79H, 2FH, 55H, 65H, 66H, 69H, 52H, 75H       ; 715E _ y/UefiRu
        db 6EH, 74H, 69H, 6DH, 65H, 53H, 65H, 72H       ; 7166 _ ntimeSer
        db 76H, 69H, 63H, 65H, 73H, 54H, 61H, 62H       ; 716E _ vicesTab
        db 6CH, 65H, 4CH, 69H, 62H, 2FH, 55H, 65H       ; 7176 _ leLib/Ue
        db 66H, 69H, 52H, 75H, 6EH, 74H, 69H, 6DH       ; 717E _ fiRuntim
        db 65H, 53H, 65H, 72H, 76H, 69H, 63H, 65H       ; 7186 _ eService
        db 73H, 54H, 61H, 62H, 6CH, 65H, 4CH, 69H       ; 718E _ sTableLi
        db 62H, 2EH, 63H, 00H                           ; 7196 _ b.c.

?_382   label byte
        db 67H, 52H, 54H, 20H, 21H, 3DH, 20H, 28H       ; 719A _ gRT != (
        db 28H, 76H, 6FH, 69H, 64H, 20H, 2AH, 29H       ; 71A2 _ (void *)
        db 20H, 30H, 29H, 00H                           ; 71AA _  0).

?_383   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 71AE _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 71B6 _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 71BE _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 71C6 _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 71CE _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 71D6 _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 4DH, 6FH       ; 71DE _ er/MdeMo
        db 64H, 75H, 6CH, 65H, 50H, 6BH, 67H, 2FH       ; 71E6 _ dulePkg/
        db 4CH, 69H, 62H, 72H, 61H, 72H, 79H, 2FH       ; 71EE _ Library/
        db 55H, 65H, 66H, 69H, 48H, 69H, 69H, 53H       ; 71F6 _ UefiHiiS
        db 65H, 72H, 76H, 69H, 63H, 65H, 73H, 4CH       ; 71FE _ ervicesL
        db 69H, 62H, 2FH, 55H, 65H, 66H, 69H, 48H       ; 7206 _ ib/UefiH
        db 69H, 69H, 53H, 65H, 72H, 76H, 69H, 63H       ; 720E _ iiServic
        db 65H, 73H, 4CH, 69H, 62H, 2EH, 63H, 00H       ; 7216 _ esLib.c.

?_384   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 721E _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 7226 _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 722E _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 7236 _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 723E _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 7246 _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 724E _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 7256 _ g/Librar
        db 79H, 2FH, 55H, 65H, 66H, 69H, 4CH, 69H       ; 725E _ y/UefiLi
        db 62H, 2FH, 55H, 65H, 66H, 69H, 4CH, 69H       ; 7266 _ b/UefiLi
        db 62H, 50H, 72H, 69H, 6EH, 74H, 2EH, 63H       ; 726E _ bPrint.c
        db 00H                                          ; 7276 _ .

?_385   label byte
        db 46H, 6FH, 72H, 6DH, 61H, 74H, 20H, 21H       ; 7277 _ Format !
        db 3DH, 20H, 28H, 28H, 76H, 6FH, 69H, 64H       ; 727F _ = ((void
        db 20H, 2AH, 29H, 20H, 30H, 29H, 00H            ; 7287 _  *) 0).

?_386   label byte
        db 28H, 28H, 55H, 49H, 4EH, 54H, 4EH, 29H       ; 728E _ ((UINTN)
        db 20H, 46H, 6FH, 72H, 6DH, 61H, 74H, 20H       ; 7296 _  Format 
        db 26H, 20H, 30H, 78H, 30H, 30H, 30H, 30H       ; 729E _ & 0x0000
        db 30H, 30H, 30H, 31H, 29H, 20H, 3DH, 3DH       ; 72A6 _ 0001) ==
        db 20H, 30H, 00H                                ; 72AE _  0.

?_387   label byte
        db 43H, 6FH, 6EH, 73H, 6FH, 6CH, 65H, 20H       ; 72B1 _ Console 
        db 21H, 3DH, 20H, 28H, 28H, 76H, 6FH, 69H       ; 72B9 _ != ((voi
        db 64H, 20H, 2AH, 29H, 20H, 30H, 29H, 00H       ; 72C1 _ d *) 0).

?_388   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 72C9 _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 72D1 _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 72D9 _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 72E1 _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 72E9 _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 72F1 _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 72F9 _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 7301 _ g/Librar
        db 79H, 2FH, 55H, 65H, 66H, 69H, 4CH, 69H       ; 7309 _ y/UefiLi
        db 62H, 2FH, 55H, 65H, 66H, 69H, 4EH, 6FH       ; 7311 _ b/UefiNo
        db 74H, 54H, 69H, 61H, 6EH, 6FH, 2EH, 63H       ; 7319 _ tTiano.c
        db 00H                                          ; 7321 _ .

?_389   label byte
        db 46H, 76H, 44H, 65H, 76H, 69H, 63H, 65H       ; 7322 _ FvDevice
        db 50H, 61H, 74H, 68H, 4EH, 6FH, 64H, 65H       ; 732A _ PathNode
        db 20H, 21H, 3DH, 20H, 28H, 28H, 76H, 6FH       ; 7332 _  != ((vo
        db 69H, 64H, 20H, 2AH, 29H, 20H, 30H, 29H       ; 733A _ id *) 0)
        db 00H                                          ; 7342 _ .

?_390   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 7343 _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 734B _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 7353 _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 735B _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 7363 _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 736B _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 7373 _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 737B _ g/Librar
        db 79H, 2FH, 55H, 65H, 66H, 69H, 4CH, 69H       ; 7383 _ y/UefiLi
        db 62H, 2FH, 55H, 65H, 66H, 69H, 4CH, 69H       ; 738B _ b/UefiLi
        db 62H, 2EH, 63H, 00H                           ; 7393 _ b.c.

?_391   label byte
        db 54H, 61H, 62H, 6CH, 65H, 47H, 75H, 69H       ; 7397 _ TableGui
        db 64H, 20H, 21H, 3DH, 20H, 28H, 28H, 76H       ; 739F _ d != ((v
        db 6FH, 69H, 64H, 20H, 2AH, 29H, 20H, 30H       ; 73A7 _ oid *) 0
        db 29H, 00H                                     ; 73AF _ ).

?_392   label byte
        db 54H, 61H, 62H, 6CH, 65H, 20H, 21H, 3DH       ; 73B1 _ Table !=
        db 20H, 28H, 28H, 76H, 6FH, 69H, 64H, 20H       ; 73B9 _  ((void 
        db 2AH, 29H, 20H, 30H, 29H, 00H                 ; 73C1 _ *) 0).

?_393   label byte
        db 4EH, 61H, 6DH, 65H, 20H, 21H, 3DH, 20H       ; 73C7 _ Name != 
        db 28H, 28H, 76H, 6FH, 69H, 64H, 20H, 2AH       ; 73CF _ ((void *
        db 29H, 20H, 30H, 29H, 20H, 26H, 26H, 20H       ; 73D7 _ ) 0) && 
        db 47H, 75H, 69H, 64H, 20H, 21H, 3DH, 20H       ; 73DF _ Guid != 
        db 28H, 28H, 76H, 6FH, 69H, 64H, 20H, 2AH       ; 73E7 _ ((void *
        db 29H, 20H, 30H, 29H, 20H, 26H, 26H, 20H       ; 73EF _ ) 0) && 
        db 56H, 61H, 6CH, 75H, 65H, 20H, 21H, 3DH       ; 73F7 _ Value !=
        db 20H, 28H, 28H, 76H, 6FH, 69H, 64H, 20H       ; 73FF _  ((void 
        db 2AH, 29H, 20H, 30H, 29H, 00H                 ; 7407 _ *) 0).

?_394   label byte
        db 2AH, 56H, 61H, 6CH, 75H, 65H, 20H, 21H       ; 740D _ *Value !
        db 3DH, 20H, 28H, 28H, 76H, 6FH, 69H, 64H       ; 7415 _ = ((void
        db 20H, 2AH, 29H, 20H, 30H, 29H, 00H            ; 741D _  *) 0).

?_395   label byte
        db 53H, 75H, 70H, 70H, 6FH, 72H, 74H, 65H       ; 7424 _ Supporte
        db 64H, 4CH, 61H, 6EH, 67H, 75H, 61H, 67H       ; 742C _ dLanguag
        db 65H, 73H, 20H, 21H, 3DH, 20H, 28H, 28H       ; 7434 _ es != ((
        db 76H, 6FH, 69H, 64H, 20H, 2AH, 29H, 20H       ; 743C _ void *) 
        db 30H, 29H, 00H                                ; 7444 _ 0).

?_396   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 7447 _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 744F _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 7457 _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 745F _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 7467 _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 746F _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 4DH, 6FH       ; 7477 _ er/MdeMo
        db 64H, 75H, 6CH, 65H, 50H, 6BH, 67H, 2FH       ; 747F _ dulePkg/
        db 4CH, 69H, 62H, 72H, 61H, 72H, 79H, 2FH       ; 7487 _ Library/
        db 55H, 65H, 66H, 69H, 48H, 69H, 69H, 4CH       ; 748F _ UefiHiiL
        db 69H, 62H, 2FH, 48H, 69H, 69H, 4CH, 69H       ; 7497 _ ib/HiiLi
        db 62H, 2EH, 63H, 00H                           ; 749F _ b.c.

?_397   label byte
        db 50H, 61H, 63H, 6BH, 61H, 67H, 65H, 4CH       ; 74A3 _ PackageL
        db 69H, 73H, 74H, 47H, 75H, 69H, 64H, 20H       ; 74AB _ istGuid 
        db 21H, 3DH, 20H, 28H, 28H, 76H, 6FH, 69H       ; 74B3 _ != ((voi
        db 64H, 20H, 2AH, 29H, 20H, 30H, 29H, 00H       ; 74BB _ d *) 0).

?_398   label byte
        db 48H, 69H, 69H, 48H, 61H, 6EH, 64H, 6CH       ; 74C3 _ HiiHandl
        db 65H, 20H, 21H, 3DH, 20H, 28H, 28H, 76H       ; 74CB _ e != ((v
        db 6FH, 69H, 64H, 20H, 2AH, 29H, 20H, 30H       ; 74D3 _ oid *) 0
        db 29H, 00H                                     ; 74DB _ ).

?_399   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 74DD _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 74E5 _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 74ED _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 74F5 _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 74FD _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 7505 _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 4DH, 6FH       ; 750D _ er/MdeMo
        db 64H, 75H, 6CH, 65H, 50H, 6BH, 67H, 2FH       ; 7515 _ dulePkg/
        db 4CH, 69H, 62H, 72H, 61H, 72H, 79H, 2FH       ; 751D _ Library/
        db 55H, 65H, 66H, 69H, 48H, 69H, 69H, 4CH       ; 7525 _ UefiHiiL
        db 69H, 62H, 2FH, 48H, 69H, 69H, 53H, 74H       ; 752D _ ib/HiiSt
        db 72H, 69H, 6EH, 67H, 2EH, 63H, 00H            ; 7535 _ ring.c.

?_400   label byte
        db 53H, 74H, 72H, 69H, 6EH, 67H, 49H, 64H       ; 753C _ StringId
        db 20H, 21H, 3DH, 20H, 30H, 00H                 ; 7544 _  != 0.

?_401   label byte
        db 00H                                          ; 754A _ .

?_402   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 754B _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 7553 _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 755B _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 7563 _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 756B _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 7573 _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 4DH, 6FH       ; 757B _ er/MdeMo
        db 64H, 75H, 6CH, 65H, 50H, 6BH, 67H, 2FH       ; 7583 _ dulePkg/
        db 4CH, 69H, 62H, 72H, 61H, 72H, 79H, 2FH       ; 758B _ Library/
        db 55H, 65H, 66H, 69H, 48H, 69H, 69H, 4CH       ; 7593 _ UefiHiiL
        db 69H, 62H, 2FH, 48H, 69H, 69H, 4CH, 61H       ; 759B _ ib/HiiLa
        db 6EH, 67H, 75H, 61H, 67H, 65H, 2EH, 63H       ; 75A3 _ nguage.c
        db 00H                                          ; 75AB _ .

?_403   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 75AC _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 75B4 _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 75BC _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 75C4 _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 75CC _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 75D4 _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 75DC _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 75E4 _ g/Librar
        db 79H, 2FH, 44H, 78H, 65H, 53H, 65H, 72H       ; 75EC _ y/DxeSer
        db 76H, 69H, 63H, 65H, 73H, 54H, 61H, 62H       ; 75F4 _ vicesTab
        db 6CH, 65H, 4CH, 69H, 62H, 2FH, 44H, 78H       ; 75FC _ leLib/Dx
        db 65H, 53H, 65H, 72H, 76H, 69H, 63H, 65H       ; 7604 _ eService
        db 73H, 54H, 61H, 62H, 6CH, 65H, 4CH, 69H       ; 760C _ sTableLi
        db 62H, 2EH, 63H, 00H                           ; 7614 _ b.c.

?_404   label byte
        db 67H, 44H, 53H, 20H, 21H, 3DH, 20H, 28H       ; 7618 _ gDS != (
        db 28H, 76H, 6FH, 69H, 64H, 20H, 2AH, 29H       ; 7620 _ (void *)
        db 20H, 30H, 29H, 00H                           ; 7628 _  0).

?_405   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 762C _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 7634 _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 763C _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 7644 _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 764C _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 7654 _ dk2-mast
        db 65H, 72H, 2FH, 4DH, 64H, 65H, 50H, 6BH       ; 765C _ er/MdePk
        db 67H, 2FH, 4CH, 69H, 62H, 72H, 61H, 72H       ; 7664 _ g/Librar
        db 79H, 2FH, 55H, 65H, 66H, 69H, 44H, 72H       ; 766C _ y/UefiDr
        db 69H, 76H, 65H, 72H, 45H, 6EH, 74H, 72H       ; 7674 _ iverEntr
        db 79H, 50H, 6FH, 69H, 6EH, 74H, 2FH, 44H       ; 767C _ yPoint/D
        db 72H, 69H, 76H, 65H, 72H, 45H, 6EH, 74H       ; 7684 _ riverEnt
        db 72H, 79H, 50H, 6FH, 69H, 6EH, 74H, 2EH       ; 768C _ ryPoint.
        db 63H, 00H                                     ; 7694 _ c.

?_406   label byte
        db 55H, 70H, 64H, 61H, 74H, 65H, 44H, 72H       ; 7696 _ UpdateDr
        db 69H, 76H, 65H, 72H, 3AH, 20H, 44H, 61H       ; 769E _ iver: Da
        db 74H, 61H, 20H, 66H, 69H, 6CH, 65H, 20H       ; 76A6 _ ta file 
        db 73H, 68H, 6FH, 75H, 6CH, 64H, 20H, 62H       ; 76AE _ should b
        db 65H, 20H, 6FH, 66H, 20H, 54H, 59H, 50H       ; 76B6 _ e of TYP
        db 45H, 20H, 45H, 46H, 49H, 5FH, 46H, 56H       ; 76BE _ E EFI_FV
        db 5FH, 46H, 49H, 4CH, 45H, 54H, 59H, 50H       ; 76C6 _ _FILETYP
        db 45H, 5FH, 46H, 49H, 52H, 4DH, 57H, 41H       ; 76CE _ E_FIRMWA
        db 52H, 45H, 5FH, 56H, 4FH, 4CH, 55H, 4DH       ; 76D6 _ RE_VOLUM
        db 45H, 5FH, 49H, 4DH, 41H, 47H, 45H, 0AH       ; 76DE _ E_IMAGE.
        db 00H                                          ; 76E6 _ .

?_407   label byte
        db 55H, 70H, 64H, 61H, 74H, 65H, 44H, 72H       ; 76E7 _ UpdateDr
        db 69H, 76H, 65H, 72H, 3AH, 20H, 44H, 61H       ; 76EF _ iver: Da
        db 74H, 61H, 20H, 66H, 69H, 6CH, 65H, 20H       ; 76F7 _ ta file 
        db 73H, 68H, 6FH, 75H, 6CH, 64H, 20H, 62H       ; 76FF _ should b
        db 65H, 20H, 73H, 65H, 63H, 74H, 69H, 6FH       ; 7707 _ e sectio
        db 6EH, 65H, 64H, 20H, 77H, 69H, 74H, 68H       ; 770F _ ned with
        db 20H, 54H, 59H, 50H, 45H, 20H, 45H, 46H       ; 7717 _  TYPE EF
        db 49H, 5FH, 53H, 45H, 43H, 54H, 49H, 4FH       ; 771F _ I_SECTIO
        db 4EH, 5FH, 46H, 49H, 52H, 4DH, 57H, 41H       ; 7727 _ N_FIRMWA
        db 52H, 45H, 5FH, 56H, 4FH, 4CH, 55H, 4DH       ; 772F _ RE_VOLUM
        db 45H, 5FH, 49H, 4DH, 41H, 47H, 45H, 0AH       ; 7737 _ E_IMAGE.
        db 00H                                          ; 773F _ .

?_408   label byte
        db 55H, 70H, 64H, 61H, 74H, 65H, 44H, 72H       ; 7740 _ UpdateDr
        db 69H, 76H, 65H, 72H, 3AH, 20H, 44H, 61H       ; 7748 _ iver: Da
        db 74H, 61H, 20H, 66H, 69H, 6CH, 65H, 20H       ; 7750 _ ta file 
        db 73H, 68H, 6FH, 75H, 6CH, 64H, 20H, 6FH       ; 7758 _ should o
        db 66H, 20H, 54H, 59H, 50H, 45H, 20H, 45H       ; 7760 _ f TYPE E
        db 46H, 49H, 5FH, 46H, 56H, 5FH, 46H, 49H       ; 7768 _ FI_FV_FI
        db 4CH, 45H, 54H, 59H, 50H, 45H, 5FH, 52H       ; 7770 _ LETYPE_R
        db 41H, 57H, 0AH, 00H                           ; 7778 _ AW..

?_409   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 777C _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 7784 _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 778C _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 7794 _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 779C _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 77A4 _ dk2-mast
        db 65H, 72H, 2FH, 49H, 6EH, 74H, 65H, 6CH       ; 77AC _ er/Intel
        db 46H, 72H, 61H, 6DH, 65H, 77H, 6FH, 72H       ; 77B4 _ Framewor
        db 6BH, 4DH, 6FH, 64H, 75H, 6CH, 65H, 50H       ; 77BC _ kModuleP
        db 6BH, 67H, 2FH, 55H, 6EH, 69H, 76H, 65H       ; 77C4 _ kg/Unive
        db 72H, 73H, 61H, 6CH, 2FH, 46H, 69H, 72H       ; 77CC _ rsal/Fir
        db 6DH, 77H, 61H, 72H, 65H, 56H, 6FH, 6CH       ; 77D4 _ mwareVol
        db 75H, 6DH, 65H, 2FH, 55H, 70H, 64H, 61H       ; 77DC _ ume/Upda
        db 74H, 65H, 44H, 72H, 69H, 76H, 65H, 72H       ; 77E4 _ teDriver
        db 44H, 78H, 65H, 2FH, 55H, 70H, 64H, 61H       ; 77EC _ Dxe/Upda
        db 74H, 65H, 44H, 69H, 73H, 70H, 61H, 74H       ; 77F4 _ teDispat
        db 63H, 68H, 65H, 72H, 2EH, 63H, 00H            ; 77FC _ cher.c.

?_410   label byte
        db 67H, 48H, 69H, 69H, 48H, 61H, 6EH, 64H       ; 7803 _ gHiiHand
        db 6CH, 65H, 20H, 21H, 3DH, 20H, 28H, 28H       ; 780B _ le != ((
        db 76H, 6FH, 69H, 64H, 20H, 2AH, 29H, 20H       ; 7813 _ void *) 
        db 30H, 29H, 00H                                ; 781B _ 0).

?_411   label byte
        db 43H, 6FH, 6EH, 66H, 69H, 67H, 44H, 61H       ; 781E _ ConfigDa
        db 74H, 61H, 20H, 21H, 3DH, 20H, 28H, 28H       ; 7826 _ ta != ((
        db 76H, 6FH, 69H, 64H, 20H, 2AH, 29H, 20H       ; 782E _ void *) 
        db 30H, 29H, 00H                                ; 7836 _ 0).

?_412   label byte
        db 48H, 65H, 61H, 64H, 00H                      ; 7839 _ Head.

?_413   label byte
        db 4EH, 75H, 6DH, 4FH, 66H, 55H, 70H, 64H       ; 783E _ NumOfUpd
        db 61H, 74H, 65H, 00H                           ; 7846 _ ate.

?_414   label byte
        db 55H, 70H, 64H, 61H, 74H, 65H, 00H            ; 784A _ Update.

?_415   label byte
        db 55H, 70H, 64H, 61H, 74H, 65H, 54H, 79H       ; 7851 _ UpdateTy
        db 70H, 65H, 00H                                ; 7859 _ pe.

?_416   label byte
        db 46H, 76H, 42H, 61H, 73H, 65H, 41H, 64H       ; 785C _ FvBaseAd
        db 64H, 72H, 65H, 73H, 73H, 00H                 ; 7864 _ dress.

?_417   label byte
        db 46H, 69H, 6CH, 65H, 47H, 75H, 69H, 64H       ; 786A _ FileGuid
        db 00H                                          ; 7872 _ .

?_418   label byte
        db 46H, 61H, 75H, 6CH, 74H, 54H, 6FH, 6CH       ; 7873 _ FaultTol
        db 65H, 72H, 61H, 6EH, 74H, 00H                 ; 787B _ erant.

?_419   label byte
        db 54H, 52H, 55H, 45H, 00H                      ; 7881 _ TRUE.

?_420   label byte
        db 46H, 41H, 4CH, 53H, 45H, 00H                 ; 7886 _ FALSE.

?_421   label byte
        db 4CH, 65H, 6EH, 67H, 74H, 68H, 00H            ; 788C _ Length.

?_422   label byte
        db 55H, 70H, 64H, 61H, 74H, 65H, 44H, 72H       ; 7893 _ UpdateDr
        db 69H, 76H, 65H, 72H, 3AH, 20H, 75H, 70H       ; 789B _ iver: up
        db 64H, 61H, 74H, 69H, 6EH, 67H, 20H, 77H       ; 78A3 _ dating w
        db 68H, 6FH, 6CH, 65H, 20H, 46H, 56H, 20H       ; 78AB _ hole FV 
        db 66H, 72H, 6FH, 6DH, 20H, 25H, 30H, 38H       ; 78B3 _ from %08
        db 4CH, 58H, 20H, 74H, 6FH, 20H, 25H, 30H       ; 78BB _ LX to %0
        db 38H, 4CH, 58H, 0AH, 00H                      ; 78C3 _ 8LX..

?_423   label byte
        db 55H, 70H, 64H, 61H, 74H, 65H, 44H, 72H       ; 78C8 _ UpdateDr
        db 69H, 76H, 65H, 72H, 3AH, 20H, 75H, 70H       ; 78D0 _ iver: up
        db 64H, 61H, 74H, 69H, 6EH, 67H, 20H, 66H       ; 78D8 _ dating f
        db 69H, 6CH, 65H, 3AH, 20H, 25H, 67H, 0AH       ; 78E0 _ ile: %g.
        db 00H                                          ; 78E8 _ .

?_424   label byte
        db 55H, 70H, 64H, 61H, 74H, 65H, 20H, 46H       ; 78E9 _ Update F
        db 6CH, 61H, 73H, 68H, 20H, 61H, 72H, 65H       ; 78F1 _ lash are
        db 61H, 20H, 66H, 72H, 6FH, 6DH, 20H, 25H       ; 78F9 _ a from %
        db 30H, 38H, 4CH, 58H, 20H, 74H, 6FH, 20H       ; 7901 _ 08LX to 
        db 25H, 30H, 38H, 4CH, 58H, 0AH, 00H            ; 7909 _ %08LX..

?_425   label byte
        db 2FH, 55H, 73H, 65H, 72H, 73H, 2FH, 6AH       ; 7910 _ /Users/j
        db 6AH, 68H, 2FH, 44H, 65H, 73H, 6BH, 74H       ; 7918 _ jh/Deskt
        db 6FH, 70H, 2FH, 4AH, 4AH, 48H, 2FH, 4DH       ; 7920 _ op/JJH/M
        db 61H, 63H, 5FH, 53H, 65H, 63H, 75H, 72H       ; 7928 _ ac_Secur
        db 69H, 74H, 79H, 5FH, 53H, 34H, 2FH, 65H       ; 7930 _ ity_S4/e
        db 64H, 6BH, 32H, 2DH, 6DH, 61H, 73H, 74H       ; 7938 _ dk2-mast
        db 65H, 72H, 2FH, 42H, 75H, 69H, 6CH, 64H       ; 7940 _ er/Build
        db 2FH, 49H, 6EH, 74H, 65H, 6CH, 46H, 72H       ; 7948 _ /IntelFr
        db 61H, 6DH, 65H, 77H, 6FH, 72H, 6BH, 4DH       ; 7950 _ ameworkM
        db 6FH, 64H, 75H, 6CH, 65H, 41H, 6CH, 6CH       ; 7958 _ oduleAll
        db 2FH, 44H, 45H, 42H, 55H, 47H, 5FH, 58H       ; 7960 _ /DEBUG_X
        db 43H, 4FH, 44H, 45H, 35H, 2FH, 58H, 36H       ; 7968 _ CODE5/X6
        db 34H, 2FH, 49H, 6EH, 74H, 65H, 6CH, 46H       ; 7970 _ 4/IntelF
        db 72H, 61H, 6DH, 65H, 77H, 6FH, 72H, 6BH       ; 7978 _ ramework
        db 4DH, 6FH, 64H, 75H, 6CH, 65H, 50H, 6BH       ; 7980 _ ModulePk
        db 67H, 2FH, 55H, 6EH, 69H, 76H, 65H, 72H       ; 7988 _ g/Univer
        db 73H, 61H, 6CH, 2FH, 46H, 69H, 72H, 6DH       ; 7990 _ sal/Firm
        db 77H, 61H, 72H, 65H, 56H, 6FH, 6CH, 75H       ; 7998 _ wareVolu
        db 6DH, 65H, 2FH, 55H, 70H, 64H, 61H, 74H       ; 79A0 _ me/Updat
        db 65H, 44H, 72H, 69H, 76H, 65H, 72H, 44H       ; 79A8 _ eDriverD
        db 78H, 65H, 2FH, 55H, 70H, 64H, 61H, 74H       ; 79B0 _ xe/Updat
        db 65H, 44H, 72H, 69H, 76H, 65H, 72H, 44H       ; 79B8 _ eDriverD
        db 78H, 65H, 2FH, 44H, 45H, 42H, 55H, 47H       ; 79C0 _ xe/DEBUG
        db 2FH, 41H, 75H, 74H, 6FH, 47H, 65H, 6EH       ; 79C8 _ /AutoGen
        db 2EH, 63H, 00H                                ; 79D0 _ .c.

__TEXT.__cstring ENDS

__TEXT.__const SEGMENT PARA 'DATA'                      ; section number 3

_mHexStr label byte
        db 30H, 31H, 32H, 33H, 34H, 35H, 36H, 37H       ; 79E0 _ 01234567
        db 38H, 39H, 41H, 42H, 43H, 44H, 45H, 46H       ; 79E8 _ 89ABCDEF

_mEndOfPakageList label byte
        db 04H, 00H, 00H, 0DFH                          ; 79F0 _ ....

__gPcd_FixedAtBuild_PcdMaximumAsciiStringLength label dword
        dd 000F4240H                                    ; 79F4 _ 1000000 

__gPcd_FixedAtBuild_PcdMaximumUnicodeStringLength label dword
        dd 000F4240H                                    ; 79F8 _ 1000000 

__gPcd_FixedAtBuild_PcdUefiLibMaxPrintBufferSize label dword
        dd 00000140H                                    ; 79FC _ 320 

__gUefiDriverRevision label dword
        dd 00000000H                                    ; 7A00 _ 0 

__gDriverUnloadImageCount label byte
        db 00H                                          ; 7A04 _ .

__TEXT.__const ENDS

__TEXT.__ustring SEGMENT WORD 'DATA'                    ; section number 4

?_426   label byte
        db 50H, 00H, 6CH, 00H, 61H, 00H, 74H, 00H       ; 7A06 _ P.l.a.t.
        db 66H, 00H, 6FH, 00H, 72H, 00H, 6DH, 00H       ; 7A0E _ f.o.r.m.
        db 4CH, 00H, 61H, 00H, 6EH, 00H, 67H, 00H       ; 7A16 _ L.a.n.g.
        db 00H, 00H                                     ; 7A1E _ ..

__TEXT.__ustring ENDS

__TEXT.__eh_frame SEGMENT ALIGN(8) 'DATA'               ; section number 5

        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7A20 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 7A28 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 7A30 _ ........
        db 1CH, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 7A38 _ ........
        db 00H, 88H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 7A40 _ ........
        db 0BH, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7A48 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7A50 _ ........
        db 1CH, 00H, 00H, 00H, 3CH, 00H, 00H, 00H       ; 7A58 _ ....<...
        db 0EBH, 87H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 7A60 _ ........
        db 01H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7A68 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7A70 _ ........
        db 1CH, 00H, 00H, 00H, 5CH, 00H, 00H, 00H       ; 7A78 _ ....\...
        db 0CCH, 87H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 7A80 _ ........
        db 03H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7A88 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7A90 _ ........
        db 1CH, 00H, 00H, 00H, 7CH, 00H, 00H, 00H       ; 7A98 _ ....|...
        db 0AFH, 87H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 7AA0 _ ........
        db 03H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7AA8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7AB0 _ ........
        db 1CH, 00H, 00H, 00H, 9CH, 00H, 00H, 00H       ; 7AB8 _ ........
        db 92H, 87H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 7AC0 _ ........
        db 03H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7AC8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7AD0 _ ........
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7AD8 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 7AE0 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 7AE8 _ ........
        db 1CH, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 7AF0 _ ........
        db 5DH, 87H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 7AF8 _ ].......
        db 17H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7B00 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7B08 _ ........
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7B10 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 7B18 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 7B20 _ ........
        db 24H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 7B28 _ $.......
        db 3CH, 87H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 7B30 _ <.......
        db 79H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7B38 _ y.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 7B40 _ .A....C.
        db 06H, 46H, 85H, 04H, 84H, 03H, 00H, 00H       ; 7B48 _ .F......
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7B50 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 7B58 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 7B60 _ ........
        db 24H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 7B68 _ $.......
        db 75H, 87H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 7B70 _ u.......
        db 0F3H, 00H, 00H, 00H, 00H, 00H, 00H, 00H      ; 7B78 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 7B80 _ .A....C.
        db 06H, 47H, 83H, 05H, 85H, 04H, 84H, 03H       ; 7B88 _ .G......
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7B90 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 7B98 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 7BA0 _ ........
        db 24H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 7BA8 _ $.......
        db 28H, 88H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 7BB0 _ (.......
        db 6CH, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7BB8 _ l.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 7BC0 _ .A....C.
        db 06H, 47H, 83H, 05H, 85H, 04H, 84H, 03H       ; 7BC8 _ .G......
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7BD0 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 7BD8 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 7BE0 _ ........
        db 24H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 7BE8 _ $.......
        db 54H, 88H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 7BF0 _ T.......
        db 0A0H, 00H, 00H, 00H, 00H, 00H, 00H, 00H      ; 7BF8 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 7C00 _ .A....C.
        db 06H, 47H, 83H, 05H, 85H, 04H, 84H, 03H       ; 7C08 _ .G......
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7C10 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 7C18 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 7C20 _ ........
        db 1CH, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 7C28 _ ........
        db 0B4H, 88H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 7C30 _ ........
        db 08H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7C38 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7C40 _ ........
        db 1CH, 00H, 00H, 00H, 3CH, 00H, 00H, 00H       ; 7C48 _ ....<...
        db 9CH, 88H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 7C50 _ ........
        db 2EH, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7C58 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7C60 _ ........
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7C68 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 7C70 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 7C78 _ ........
        db 24H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 7C80 _ $.......
        db 92H, 88H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 7C88 _ ........
        db 43H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7C90 _ C.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 7C98 _ .A....C.
        db 06H, 46H, 85H, 04H, 84H, 03H, 00H, 00H       ; 7CA0 _ .F......
        db 24H, 00H, 00H, 00H, 44H, 00H, 00H, 00H       ; 7CA8 _ $...D...
        db 0ADH, 88H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 7CB0 _ ........
        db 53H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7CB8 _ S.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 7CC0 _ .A....C.
        db 06H, 47H, 83H, 05H, 85H, 04H, 84H, 03H       ; 7CC8 _ .G......
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7CD0 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 7CD8 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 7CE0 _ ........
        db 1CH, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 7CE8 _ ........
        db 0C0H, 88H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 7CF0 _ ........
        db 39H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7CF8 _ 9.......
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7D00 _ ........
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7D08 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 7D10 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 7D18 _ ........
        db 24H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 7D20 _ $.......
        db 0C1H, 88H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 7D28 _ ........
        db 66H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7D30 _ f.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 7D38 _ .A....C.
        db 06H, 45H, 84H, 03H, 00H, 00H, 00H, 00H       ; 7D40 _ .E......
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7D48 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 7D50 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 7D58 _ ........
        db 24H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 7D60 _ $.......
        db 0E7H, 88H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 7D68 _ ........
        db 4DH, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7D70 _ M.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 7D78 _ .A....C.
        db 06H, 47H, 83H, 05H, 85H, 04H, 84H, 03H       ; 7D80 _ .G......
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7D88 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 7D90 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 7D98 _ ........
        db 2CH, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 7DA0 _ ,.......
        db 0F4H, 88H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 7DA8 _ ........
        db 0E5H, 01H, 00H, 00H, 00H, 00H, 00H, 00H      ; 7DB0 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 7DB8 _ .A....C.
        db 06H, 49H, 83H, 06H, 85H, 05H, 84H, 04H       ; 7DC0 _ .I......
        db 8EH, 03H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7DC8 _ ........
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7DD0 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 7DD8 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 7DE0 _ ........
        db 2CH, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 7DE8 _ ,.......
        db 91H, 8AH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 7DF0 _ ........
        db 0BBH, 00H, 00H, 00H, 00H, 00H, 00H, 00H      ; 7DF8 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 7E00 _ .A....C.
        db 06H, 4BH, 83H, 07H, 85H, 06H, 84H, 05H       ; 7E08 _ .K......
        db 8EH, 04H, 8FH, 03H, 00H, 00H, 00H, 00H       ; 7E10 _ ........
        db 24H, 00H, 00H, 00H, 4CH, 00H, 00H, 00H       ; 7E18 _ $...L...
        db 1CH, 8BH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 7E20 _ ........
        db 18H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7E28 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 7E30 _ .A....C.
        db 06H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7E38 _ ........
        db 24H, 00H, 00H, 00H, 74H, 00H, 00H, 00H       ; 7E40 _ $...t...
        db 0CH, 8BH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 7E48 _ ........
        db 16H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7E50 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 7E58 _ .A....C.
        db 06H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7E60 _ ........
        db 2CH, 00H, 00H, 00H, 9CH, 00H, 00H, 00H       ; 7E68 _ ,.......
        db 0FAH, 8AH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 7E70 _ ........
        db 92H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7E78 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 7E80 _ .A....C.
        db 06H, 4BH, 83H, 07H, 85H, 06H, 84H, 05H       ; 7E88 _ .K......
        db 8EH, 04H, 8FH, 03H, 00H, 00H, 00H, 00H       ; 7E90 _ ........
        db 24H, 00H, 00H, 00H, 0CCH, 00H, 00H, 00H      ; 7E98 _ $.......
        db 5CH, 8BH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 7EA0 _ \.......
        db 92H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7EA8 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 7EB0 _ .A....C.
        db 06H, 46H, 85H, 04H, 84H, 03H, 00H, 00H       ; 7EB8 _ .F......
        db 24H, 00H, 00H, 00H, 0F4H, 00H, 00H, 00H      ; 7EC0 _ $.......
        db 0C6H, 8BH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 7EC8 _ ........
        db 0E1H, 00H, 00H, 00H, 00H, 00H, 00H, 00H      ; 7ED0 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 7ED8 _ .A....C.
        db 06H, 46H, 85H, 04H, 84H, 03H, 00H, 00H       ; 7EE0 _ .F......
        db 2CH, 00H, 00H, 00H, 1CH, 01H, 00H, 00H       ; 7EE8 _ ,.......
        db 7FH, 8CH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 7EF0 _ ........
        db 0DFH, 00H, 00H, 00H, 00H, 00H, 00H, 00H      ; 7EF8 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 7F00 _ .A....C.
        db 06H, 49H, 83H, 06H, 85H, 05H, 84H, 04H       ; 7F08 _ .I......
        db 8EH, 03H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7F10 _ ........
        db 2CH, 00H, 00H, 00H, 4CH, 01H, 00H, 00H       ; 7F18 _ ,...L...
        db 2EH, 8DH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 7F20 _ ........
        db 0B5H, 01H, 00H, 00H, 00H, 00H, 00H, 00H      ; 7F28 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 7F30 _ .A....C.
        db 06H, 4DH, 83H, 08H, 85H, 07H, 84H, 06H       ; 7F38 _ .M......
        db 8CH, 05H, 8EH, 04H, 8FH, 03H, 00H, 00H       ; 7F40 _ ........
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7F48 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 7F50 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 7F58 _ ........
        db 1CH, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 7F60 _ ........
        db 0A4H, 90H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 7F68 _ ........
        db 1CH, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7F70 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7F78 _ ........
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7F80 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 7F88 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 7F90 _ ........
        db 24H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 7F98 _ $.......
        db 88H, 90H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 7FA0 _ ........
        db 3CH, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7FA8 _ <.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 7FB0 _ .A....C.
        db 06H, 45H, 84H, 03H, 00H, 00H, 00H, 00H       ; 7FB8 _ .E......
        db 24H, 00H, 00H, 00H, 44H, 00H, 00H, 00H       ; 7FC0 _ $...D...
        db 9CH, 90H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 7FC8 _ ........
        db 3BH, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7FD0 _ ;.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 7FD8 _ .A....C.
        db 06H, 45H, 84H, 03H, 00H, 00H, 00H, 00H       ; 7FE0 _ .E......
        db 24H, 00H, 00H, 00H, 6CH, 00H, 00H, 00H       ; 7FE8 _ $...l...
        db 0AFH, 90H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 7FF0 _ ........
        db 3CH, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 7FF8 _ <.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8000 _ .A....C.
        db 06H, 45H, 84H, 03H, 00H, 00H, 00H, 00H       ; 8008 _ .E......
        db 24H, 00H, 00H, 00H, 94H, 00H, 00H, 00H       ; 8010 _ $.......
        db 0C3H, 90H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8018 _ ........
        db 44H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8020 _ D.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8028 _ .A....C.
        db 06H, 46H, 85H, 04H, 84H, 03H, 00H, 00H       ; 8030 _ .F......
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8038 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 8040 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 8048 _ ........
        db 24H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8050 _ $.......
        db 10H, 93H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 8058 _ ........
        db 0B5H, 00H, 00H, 00H, 00H, 00H, 00H, 00H      ; 8060 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8068 _ .A....C.
        db 06H, 45H, 84H, 03H, 00H, 00H, 00H, 00H       ; 8070 _ .E......
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8078 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 8080 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 8088 _ ........
        db 2CH, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8090 _ ,.......
        db 85H, 93H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 8098 _ ........
        db 0FEH, 01H, 00H, 00H, 00H, 00H, 00H, 00H      ; 80A0 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 80A8 _ .A....C.
        db 06H, 4BH, 83H, 07H, 85H, 06H, 84H, 05H       ; 80B0 _ .K......
        db 8EH, 04H, 8FH, 03H, 00H, 00H, 00H, 00H       ; 80B8 _ ........
        db 1CH, 00H, 00H, 00H, 4CH, 00H, 00H, 00H       ; 80C0 _ ....L...
        db 53H, 95H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 80C8 _ S.......
        db 13H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 80D0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 80D8 _ ........
        db 24H, 00H, 00H, 00H, 6CH, 00H, 00H, 00H       ; 80E0 _ $...l...
        db 46H, 95H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 80E8 _ F.......
        db 31H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 80F0 _ 1.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 80F8 _ .A....C.
        db 06H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8100 _ ........
        db 1CH, 00H, 00H, 00H, 94H, 00H, 00H, 00H       ; 8108 _ ........
        db 4FH, 95H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 8110 _ O.......
        db 10H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8118 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8120 _ ........
        db 24H, 00H, 00H, 00H, 0B4H, 00H, 00H, 00H      ; 8128 _ $.......
        db 3FH, 95H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 8130 _ ?.......
        db 30H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8138 _ 0.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8140 _ .A....C.
        db 06H, 45H, 84H, 03H, 00H, 00H, 00H, 00H       ; 8148 _ .E......
        db 1CH, 00H, 00H, 00H, 0DCH, 00H, 00H, 00H      ; 8150 _ ........
        db 47H, 95H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 8158 _ G.......
        db 10H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8160 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8168 _ ........
        db 24H, 00H, 00H, 00H, 0FCH, 00H, 00H, 00H      ; 8170 _ $.......
        db 37H, 95H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 8178 _ 7.......
        db 95H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8180 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8188 _ .A....C.
        db 06H, 47H, 83H, 05H, 85H, 04H, 84H, 03H       ; 8190 _ .G......
        db 1CH, 00H, 00H, 00H, 24H, 01H, 00H, 00H       ; 8198 _ ....$...
        db 0A4H, 95H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 81A0 _ ........
        db 13H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 81A8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 81B0 _ ........
        db 24H, 00H, 00H, 00H, 44H, 01H, 00H, 00H       ; 81B8 _ $...D...
        db 97H, 95H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 81C0 _ ........
        db 74H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 81C8 _ t.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 81D0 _ .A....C.
        db 06H, 45H, 84H, 03H, 00H, 00H, 00H, 00H       ; 81D8 _ .E......
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 81E0 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 81E8 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 81F0 _ ........
        db 2CH, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 81F8 _ ,.......
        db 0CCH, 95H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8200 _ ........
        db 50H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8208 _ P.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8210 _ .A....C.
        db 06H, 49H, 83H, 06H, 85H, 05H, 84H, 04H       ; 8218 _ .I......
        db 8EH, 03H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8220 _ ........
        db 2CH, 00H, 00H, 00H, 4CH, 00H, 00H, 00H       ; 8228 _ ,...L...
        db 0ECH, 95H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8230 _ ........
        db 12H, 11H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8238 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8240 _ .A....C.
        db 06H, 52H, 83H, 09H, 85H, 08H, 84H, 07H       ; 8248 _ .R......
        db 8CH, 06H, 8DH, 05H, 8EH, 04H, 8FH, 03H       ; 8250 _ ........
        db 24H, 00H, 00H, 00H, 7CH, 00H, 00H, 00H       ; 8258 _ $...|...
        db 78H, 0A7H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8260 _ x.......
        db 2DH, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8268 _ -.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8270 _ .A....C.
        db 06H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8278 _ ........
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8280 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 8288 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 8290 _ ........
        db 2CH, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8298 _ ,.......
        db 65H, 0A7H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 82A0 _ e.......
        db 96H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 82A8 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 82B0 _ .A....C.
        db 06H, 49H, 83H, 06H, 85H, 05H, 84H, 04H       ; 82B8 _ .I......
        db 8EH, 03H, 00H, 00H, 00H, 00H, 00H, 00H       ; 82C0 _ ........
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 82C8 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 82D0 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 82D8 _ ........
        db 24H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 82E0 _ $.......
        db 0B3H, 0A7H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 82E8 _ ........
        db 57H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 82F0 _ W.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 82F8 _ .A....C.
        db 06H, 45H, 84H, 03H, 00H, 00H, 00H, 00H       ; 8300 _ .E......
        db 24H, 00H, 00H, 00H, 44H, 00H, 00H, 00H       ; 8308 _ $...D...
        db 0E2H, 0A7H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8310 _ ........
        db 48H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8318 _ H.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8320 _ .A....C.
        db 06H, 45H, 84H, 03H, 00H, 00H, 00H, 00H       ; 8328 _ .E......
        db 24H, 00H, 00H, 00H, 6CH, 00H, 00H, 00H       ; 8330 _ $...l...
        db 02H, 0A8H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8338 _ ........
        db 44H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8340 _ D.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8348 _ .A....C.
        db 06H, 45H, 84H, 03H, 00H, 00H, 00H, 00H       ; 8350 _ .E......
        db 24H, 00H, 00H, 00H, 94H, 00H, 00H, 00H       ; 8358 _ $.......
        db 1EH, 0A8H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8360 _ ........
        db 3CH, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8368 _ <.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8370 _ .A....C.
        db 06H, 45H, 84H, 03H, 00H, 00H, 00H, 00H       ; 8378 _ .E......
        db 24H, 00H, 00H, 00H, 0BCH, 00H, 00H, 00H      ; 8380 _ $.......
        db 32H, 0A8H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8388 _ 2.......
        db 3DH, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8390 _ =.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8398 _ .A....C.
        db 06H, 45H, 84H, 03H, 00H, 00H, 00H, 00H       ; 83A0 _ .E......
        db 24H, 00H, 00H, 00H, 0E4H, 00H, 00H, 00H      ; 83A8 _ $.......
        db 47H, 0A8H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 83B0 _ G.......
        db 49H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 83B8 _ I.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 83C0 _ .A....C.
        db 06H, 45H, 84H, 03H, 00H, 00H, 00H, 00H       ; 83C8 _ .E......
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 83D0 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 83D8 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 83E0 _ ........
        db 24H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 83E8 _ $.......
        db 50H, 0A8H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 83F0 _ P.......
        db 48H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 83F8 _ H.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8400 _ .A....C.
        db 06H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8408 _ ........
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8410 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 8418 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 8420 _ ........
        db 24H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8428 _ $.......
        db 58H, 0A8H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8430 _ X.......
        db 9FH, 01H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8438 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8440 _ .A....C.
        db 06H, 45H, 84H, 03H, 00H, 00H, 00H, 00H       ; 8448 _ .E......
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8450 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 8458 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 8460 _ ........
        db 2CH, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8468 _ ,.......
        db 0B7H, 0A9H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8470 _ ........
        db 0FH, 01H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8478 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8480 _ .A....C.
        db 06H, 4BH, 83H, 07H, 85H, 06H, 84H, 05H       ; 8488 _ .K......
        db 8EH, 04H, 8FH, 03H, 00H, 00H, 00H, 00H       ; 8490 _ ........
        db 24H, 00H, 00H, 00H, 4CH, 00H, 00H, 00H       ; 8498 _ $...L...
        db 96H, 0AAH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 84A0 _ ........
        db 36H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 84A8 _ 6.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 84B0 _ .A....C.
        db 06H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 84B8 _ ........
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 84C0 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 84C8 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 84D0 _ ........
        db 24H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 84D8 _ $.......
        db 8CH, 0AAH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 84E0 _ ........
        db 60H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 84E8 _ `.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 84F0 _ .A....C.
        db 06H, 45H, 84H, 03H, 00H, 00H, 00H, 00H       ; 84F8 _ .E......
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8500 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 8508 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 8510 _ ........
        db 1CH, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8518 _ ........
        db 0ACH, 0AAH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8520 _ ........
        db 03H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8528 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8530 _ ........
        db 2CH, 00H, 00H, 00H, 3CH, 00H, 00H, 00H       ; 8538 _ ,...<...
        db 8FH, 0AAH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8540 _ ........
        db 0C7H, 00H, 00H, 00H, 00H, 00H, 00H, 00H      ; 8548 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8550 _ .A....C.
        db 06H, 4DH, 83H, 08H, 85H, 07H, 84H, 06H       ; 8558 _ .M......
        db 8CH, 05H, 8EH, 04H, 8FH, 03H, 00H, 00H       ; 8560 _ ........
        db 2CH, 00H, 00H, 00H, 6CH, 00H, 00H, 00H       ; 8568 _ ,...l...
        db 26H, 0ABH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8570 _ &.......
        db 32H, 01H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8578 _ 2.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8580 _ .A....C.
        db 06H, 4BH, 83H, 07H, 85H, 06H, 84H, 05H       ; 8588 _ .K......
        db 8EH, 04H, 8FH, 03H, 00H, 00H, 00H, 00H       ; 8590 _ ........
        db 1CH, 00H, 00H, 00H, 9CH, 00H, 00H, 00H       ; 8598 _ ........
        db 28H, 0ACH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 85A0 _ (.......
        db 15H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 85A8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 85B0 _ ........
        db 2CH, 00H, 00H, 00H, 0BCH, 00H, 00H, 00H      ; 85B8 _ ,.......
        db 1DH, 0ACH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 85C0 _ ........
        db 4DH, 01H, 00H, 00H, 00H, 00H, 00H, 00H       ; 85C8 _ M.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 85D0 _ .A....C.
        db 06H, 4DH, 83H, 08H, 85H, 07H, 84H, 06H       ; 85D8 _ .M......
        db 8CH, 05H, 8EH, 04H, 8FH, 03H, 00H, 00H       ; 85E0 _ ........
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 85E8 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 85F0 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 85F8 _ ........
        db 2CH, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8600 _ ,.......
        db 24H, 0ADH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8608 _ $.......
        db 52H, 01H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8610 _ R.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8618 _ .A....C.
        db 06H, 4DH, 83H, 08H, 85H, 07H, 84H, 06H       ; 8620 _ .M......
        db 8CH, 05H, 8EH, 04H, 8FH, 03H, 00H, 00H       ; 8628 _ ........
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8630 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 8638 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 8640 _ ........
        db 2CH, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8648 _ ,.......
        db 2EH, 0AEH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8650 _ ........
        db 0B6H, 01H, 00H, 00H, 00H, 00H, 00H, 00H      ; 8658 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8660 _ .A....C.
        db 06H, 4FH, 83H, 09H, 85H, 08H, 84H, 07H       ; 8668 _ .O......
        db 8CH, 06H, 8DH, 05H, 8EH, 04H, 8FH, 03H       ; 8670 _ ........
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8678 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 8680 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 8688 _ ........
        db 24H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8690 _ $.......
        db 9CH, 0AFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8698 _ ........
        db 0ADH, 00H, 00H, 00H, 00H, 00H, 00H, 00H      ; 86A0 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 86A8 _ .A....C.
        db 06H, 46H, 85H, 04H, 84H, 03H, 00H, 00H       ; 86B0 _ .F......
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 86B8 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 86C0 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 86C8 _ ........
        db 24H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 86D0 _ $.......
        db 09H, 0B0H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 86D8 _ ........
        db 0A7H, 00H, 00H, 00H, 00H, 00H, 00H, 00H      ; 86E0 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 86E8 _ .A....C.
        db 06H, 45H, 84H, 03H, 00H, 00H, 00H, 00H       ; 86F0 _ .E......
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 86F8 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 8700 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 8708 _ ........
        db 24H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8710 _ $.......
        db 70H, 0B0H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8718 _ p.......
        db 34H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8720 _ 4.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8728 _ .A....C.
        db 06H, 46H, 85H, 04H, 84H, 03H, 00H, 00H       ; 8730 _ .F......
        db 24H, 00H, 00H, 00H, 44H, 00H, 00H, 00H       ; 8738 _ $...D...
        db 7CH, 0B0H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8740 _ |.......
        db 0EAH, 00H, 00H, 00H, 00H, 00H, 00H, 00H      ; 8748 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8750 _ .A....C.
        db 06H, 47H, 83H, 05H, 85H, 04H, 84H, 03H       ; 8758 _ .G......
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8760 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 8768 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 8770 _ ........
        db 2CH, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8778 _ ,.......
        db 26H, 0B1H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8780 _ &.......
        db 0E9H, 01H, 00H, 00H, 00H, 00H, 00H, 00H      ; 8788 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8790 _ .A....C.
        db 06H, 4FH, 83H, 09H, 85H, 08H, 84H, 07H       ; 8798 _ .O......
        db 8CH, 06H, 8DH, 05H, 8EH, 04H, 8FH, 03H       ; 87A0 _ ........
        db 2CH, 00H, 00H, 00H, 4CH, 00H, 00H, 00H       ; 87A8 _ ,...L...
        db 0DFH, 0B2H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 87B0 _ ........
        db 78H, 02H, 00H, 00H, 00H, 00H, 00H, 00H       ; 87B8 _ x.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 87C0 _ .A....C.
        db 06H, 4FH, 83H, 09H, 85H, 08H, 84H, 07H       ; 87C8 _ .O......
        db 8CH, 06H, 8DH, 05H, 8EH, 04H, 8FH, 03H       ; 87D0 _ ........
        db 2CH, 00H, 00H, 00H, 7CH, 00H, 00H, 00H       ; 87D8 _ ,...|...
        db 27H, 0B5H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 87E0 _ '.......
        db 3CH, 02H, 00H, 00H, 00H, 00H, 00H, 00H       ; 87E8 _ <.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 87F0 _ .A....C.
        db 06H, 4FH, 83H, 09H, 85H, 08H, 84H, 07H       ; 87F8 _ .O......
        db 8CH, 06H, 8DH, 05H, 8EH, 04H, 8FH, 03H       ; 8800 _ ........
        db 2CH, 00H, 00H, 00H, 0ACH, 00H, 00H, 00H      ; 8808 _ ,.......
        db 33H, 0B7H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8810 _ 3.......
        db 0CDH, 00H, 00H, 00H, 00H, 00H, 00H, 00H      ; 8818 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8820 _ .A....C.
        db 06H, 49H, 83H, 06H, 85H, 05H, 84H, 04H       ; 8828 _ .I......
        db 8EH, 03H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8830 _ ........
        db 2CH, 00H, 00H, 00H, 0DCH, 00H, 00H, 00H      ; 8838 _ ,.......
        db 0D0H, 0B7H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8840 _ ........
        db 08H, 04H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8848 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8850 _ .A....C.
        db 06H, 4CH, 83H, 06H, 85H, 05H, 84H, 04H       ; 8858 _ .L......
        db 8EH, 03H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8860 _ ........
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8868 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 8870 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 8878 _ ........
        db 2CH, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8880 _ ,.......
        db 90H, 0BBH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8888 _ ........
        db 8CH, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8890 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8898 _ .A....C.
        db 06H, 49H, 83H, 06H, 85H, 05H, 84H, 04H       ; 88A0 _ .I......
        db 8EH, 03H, 00H, 00H, 00H, 00H, 00H, 00H       ; 88A8 _ ........
        db 1CH, 00H, 00H, 00H, 4CH, 00H, 00H, 00H       ; 88B0 _ ....L...
        db 0ECH, 0BBH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 88B8 _ ........
        db 9CH, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 88C0 _ ........
        db 00H, 41H, 0EH, 10H, 84H, 02H, 00H, 00H       ; 88C8 _ .A......
        db 2CH, 00H, 00H, 00H, 6CH, 00H, 00H, 00H       ; 88D0 _ ,...l...
        db 68H, 0BCH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 88D8 _ h.......
        db 83H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 88E0 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 88E8 _ .A....C.
        db 06H, 49H, 83H, 06H, 85H, 05H, 84H, 04H       ; 88F0 _ .I......
        db 8EH, 03H, 00H, 00H, 00H, 00H, 00H, 00H       ; 88F8 _ ........
        db 2CH, 00H, 00H, 00H, 9CH, 00H, 00H, 00H       ; 8900 _ ,.......
        db 0BBH, 0BCH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8908 _ ........
        db 0D2H, 00H, 00H, 00H, 00H, 00H, 00H, 00H      ; 8910 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8918 _ .A....C.
        db 06H, 49H, 83H, 06H, 85H, 05H, 84H, 04H       ; 8920 _ .I......
        db 8EH, 03H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8928 _ ........
        db 2CH, 00H, 00H, 00H, 0CCH, 00H, 00H, 00H      ; 8930 _ ,.......
        db 5DH, 0BDH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8938 _ ].......
        db 93H, 01H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8940 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8948 _ .A....C.
        db 06H, 4FH, 83H, 09H, 85H, 08H, 84H, 07H       ; 8950 _ .O......
        db 8CH, 06H, 8DH, 05H, 8EH, 04H, 8FH, 03H       ; 8958 _ ........
        db 24H, 00H, 00H, 00H, 0FCH, 00H, 00H, 00H      ; 8960 _ $.......
        db 0C0H, 0BEH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8968 _ ........
        db 84H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8970 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8978 _ .A....C.
        db 06H, 47H, 83H, 05H, 85H, 04H, 84H, 03H       ; 8980 _ .G......
        db 2CH, 00H, 00H, 00H, 24H, 01H, 00H, 00H       ; 8988 _ ,...$...
        db 1CH, 0BFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8990 _ ........
        db 6FH, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8998 _ o.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 89A0 _ .A....C.
        db 06H, 49H, 83H, 06H, 85H, 05H, 84H, 04H       ; 89A8 _ .I......
        db 8EH, 03H, 00H, 00H, 00H, 00H, 00H, 00H       ; 89B0 _ ........
        db 1CH, 00H, 00H, 00H, 54H, 01H, 00H, 00H       ; 89B8 _ ....T...
        db 5BH, 0BFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 89C0 _ [.......
        db 73H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 89C8 _ s.......
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 89D0 _ ........
        db 2CH, 00H, 00H, 00H, 74H, 01H, 00H, 00H       ; 89D8 _ ,...t...
        db 0AEH, 0BFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 89E0 _ ........
        db 8DH, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 89E8 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 89F0 _ .A....C.
        db 06H, 49H, 83H, 06H, 85H, 05H, 84H, 04H       ; 89F8 _ .I......
        db 8EH, 03H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8A00 _ ........
        db 2CH, 00H, 00H, 00H, 0A4H, 01H, 00H, 00H      ; 8A08 _ ,.......
        db 0BH, 0C0H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8A10 _ ........
        db 5EH, 01H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8A18 _ ^.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8A20 _ .A....C.
        db 06H, 4BH, 83H, 07H, 85H, 06H, 84H, 05H       ; 8A28 _ .K......
        db 8EH, 04H, 8FH, 03H, 00H, 00H, 00H, 00H       ; 8A30 _ ........
        db 2CH, 00H, 00H, 00H, 0D4H, 01H, 00H, 00H      ; 8A38 _ ,.......
        db 39H, 0C1H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8A40 _ 9.......
        db 59H, 01H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8A48 _ Y.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8A50 _ .A....C.
        db 06H, 4FH, 83H, 09H, 85H, 08H, 84H, 07H       ; 8A58 _ .O......
        db 8CH, 06H, 8DH, 05H, 8EH, 04H, 8FH, 03H       ; 8A60 _ ........
        db 2CH, 00H, 00H, 00H, 04H, 02H, 00H, 00H       ; 8A68 _ ,.......
        db 62H, 0C2H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8A70 _ b.......
        db 0A0H, 03H, 00H, 00H, 00H, 00H, 00H, 00H      ; 8A78 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8A80 _ .A....C.
        db 06H, 52H, 83H, 09H, 85H, 08H, 84H, 07H       ; 8A88 _ .R......
        db 8CH, 06H, 8DH, 05H, 8EH, 04H, 8FH, 03H       ; 8A90 _ ........
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8A98 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 8AA0 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 8AA8 _ ........
        db 2CH, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8AB0 _ ,.......
        db 0BAH, 0C5H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8AB8 _ ........
        db 68H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8AC0 _ h.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8AC8 _ .A....C.
        db 06H, 49H, 83H, 06H, 85H, 05H, 84H, 04H       ; 8AD0 _ .I......
        db 8EH, 03H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8AD8 _ ........
        db 2CH, 00H, 00H, 00H, 4CH, 00H, 00H, 00H       ; 8AE0 _ ,...L...
        db 0F2H, 0C5H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8AE8 _ ........
        db 0CAH, 00H, 00H, 00H, 00H, 00H, 00H, 00H      ; 8AF0 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8AF8 _ .A....C.
        db 06H, 4FH, 83H, 09H, 85H, 08H, 84H, 07H       ; 8B00 _ .O......
        db 8CH, 06H, 8DH, 05H, 8EH, 04H, 8FH, 03H       ; 8B08 _ ........
        db 2CH, 00H, 00H, 00H, 7CH, 00H, 00H, 00H       ; 8B10 _ ,...|...
        db 8CH, 0C6H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8B18 _ ........
        db 0C6H, 01H, 00H, 00H, 00H, 00H, 00H, 00H      ; 8B20 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8B28 _ .A....C.
        db 06H, 4FH, 83H, 09H, 85H, 08H, 84H, 07H       ; 8B30 _ .O......
        db 8CH, 06H, 8DH, 05H, 8EH, 04H, 8FH, 03H       ; 8B38 _ ........
        db 2CH, 00H, 00H, 00H, 0ACH, 00H, 00H, 00H      ; 8B40 _ ,.......
        db 22H, 0C8H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8B48 _ ".......
        db 65H, 02H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8B50 _ e.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8B58 _ .A....C.
        db 06H, 52H, 83H, 09H, 85H, 08H, 84H, 07H       ; 8B60 _ .R......
        db 8CH, 06H, 8DH, 05H, 8EH, 04H, 8FH, 03H       ; 8B68 _ ........
        db 2CH, 00H, 00H, 00H, 0DCH, 00H, 00H, 00H      ; 8B70 _ ,.......
        db 57H, 0CAH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8B78 _ W.......
        db 9AH, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8B80 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8B88 _ .A....C.
        db 06H, 4DH, 83H, 08H, 85H, 07H, 84H, 06H       ; 8B90 _ .M......
        db 8CH, 05H, 8EH, 04H, 8FH, 03H, 00H, 00H       ; 8B98 _ ........
        db 2CH, 00H, 00H, 00H, 0CH, 01H, 00H, 00H       ; 8BA0 _ ,.......
        db 0C1H, 0CAH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8BA8 _ ........
        db 6CH, 01H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8BB0 _ l.......
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8BB8 _ .A....C.
        db 06H, 4DH, 83H, 08H, 85H, 07H, 84H, 06H       ; 8BC0 _ .M......
        db 8CH, 05H, 8EH, 04H, 8FH, 03H, 00H, 00H       ; 8BC8 _ ........
        db 2CH, 00H, 00H, 00H, 3CH, 01H, 00H, 00H       ; 8BD0 _ ,...<...
        db 0FDH, 0CBH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8BD8 _ ........
        db 05H, 01H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8BE0 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8BE8 _ .A....C.
        db 06H, 49H, 83H, 06H, 85H, 05H, 84H, 04H       ; 8BF0 _ .I......
        db 8EH, 03H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8BF8 _ ........
        db 2CH, 00H, 00H, 00H, 6CH, 01H, 00H, 00H       ; 8C00 _ ,...l...
        db 0D2H, 0CCH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8C08 _ ........
        db 0ECH, 05H, 00H, 00H, 00H, 00H, 00H, 00H      ; 8C10 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8C18 _ .A....C.
        db 06H, 52H, 83H, 09H, 85H, 08H, 84H, 07H       ; 8C20 _ .R......
        db 8CH, 06H, 8DH, 05H, 8EH, 04H, 8FH, 03H       ; 8C28 _ ........
        db 2CH, 00H, 00H, 00H, 9CH, 01H, 00H, 00H       ; 8C30 _ ,.......
        db 8EH, 0D2H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8C38 _ ........
        db 07H, 02H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8C40 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8C48 _ .A....C.
        db 06H, 4FH, 83H, 09H, 85H, 08H, 84H, 07H       ; 8C50 _ .O......
        db 8CH, 06H, 8DH, 05H, 8EH, 04H, 8FH, 03H       ; 8C58 _ ........
        db 14H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8C60 _ ........
        db 01H, 7AH, 52H, 00H, 01H, 78H, 10H, 01H       ; 8C68 _ .zR..x..
        db 10H, 0CH, 07H, 08H, 90H, 01H, 00H, 00H       ; 8C70 _ ........
        db 24H, 00H, 00H, 00H, 1CH, 00H, 00H, 00H       ; 8C78 _ $.......
        db 4DH, 0D4H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8C80 _ M.......
        db 0F7H, 01H, 00H, 00H, 00H, 00H, 00H, 00H      ; 8C88 _ ........
        db 00H, 41H, 0EH, 10H, 86H, 02H, 43H, 0DH       ; 8C90 _ .A....C.
        db 06H, 47H, 83H, 05H, 85H, 04H, 84H, 03H       ; 8C98 _ .G......
        db 1CH, 00H, 00H, 00H, 44H, 00H, 00H, 00H       ; 8CA0 _ ....D...
        db 1CH, 0D6H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8CA8 _ ........
        db 01H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8CB0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8CB8 _ ........
        db 1CH, 00H, 00H, 00H, 64H, 00H, 00H, 00H       ; 8CC0 _ ....d...
        db 0FDH, 0D5H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8CC8 _ ........
        db 05H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8CD0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8CD8 _ ........
        db 1CH, 00H, 00H, 00H, 84H, 00H, 00H, 00H       ; 8CE0 _ ........
        db 0E2H, 0D5H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH; 8CE8 _ ........
        db 03H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8CF0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8CF8 _ ........

__TEXT.__eh_frame ENDS

__DATA.__const SEGMENT PARA 'DATA'                      ; section number 6

_mStatusString label byte
        db 2BH, 6CH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8D00 _ +l......
        db 33H, 6CH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8D08 _ 3l......
        db 49H, 6CH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8D10 _ Il......
        db 60H, 6CH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8D18 _ `l......
        db 76H, 6CH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8D20 _ vl......
        db 8FH, 6CH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8D28 _ .l......
        db 0A2H, 6CH, 00H, 00H, 00H, 00H, 00H, 00H      ; 8D30 _ .l......
        db 0ADH, 6CH, 00H, 00H, 00H, 00H, 00H, 00H      ; 8D38 _ .l......
        db 0BFH, 6CH, 00H, 00H, 00H, 00H, 00H, 00H      ; 8D40 _ .l......
        db 0CBH, 6CH, 00H, 00H, 00H, 00H, 00H, 00H      ; 8D48 _ .l......
        db 0DBH, 6CH, 00H, 00H, 00H, 00H, 00H, 00H      ; 8D50 _ .l......
        db 0ECH, 6CH, 00H, 00H, 00H, 00H, 00H, 00H      ; 8D58 _ .l......
        db 0F6H, 6CH, 00H, 00H, 00H, 00H, 00H, 00H      ; 8D60 _ .l......
        db 03H, 6DH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8D68 _ .m......
        db 13H, 6DH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8D70 _ .m......
        db 24H, 6DH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8D78 _ $m......
        db 33H, 6DH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8D80 _ 3m......
        db 3FH, 6DH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8D88 _ ?m......
        db 48H, 6DH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8D90 _ Hm......
        db 56H, 6DH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8D98 _ Vm......
        db 60H, 6DH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8DA0 _ `m......
        db 6EH, 6DH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8DA8 _ nm......
        db 7AH, 6DH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8DB0 _ zm......
        db 85H, 6DH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8DB8 _ .m......
        db 8EH, 6DH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8DC0 _ .m......
        db 9AH, 6DH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8DC8 _ .m......
        db 0AAH, 6DH, 00H, 00H, 00H, 00H, 00H, 00H      ; 8DD0 _ .m......
        db 0B2H, 6DH, 00H, 00H, 00H, 00H, 00H, 00H      ; 8DD8 _ .m......
        db 0BDH, 6DH, 00H, 00H, 00H, 00H, 00H, 00H      ; 8DE0 _ .m......
        db 0C8H, 6DH, 00H, 00H, 00H, 00H, 00H, 00H      ; 8DE8 _ .m......
        db 0D7H, 6DH, 00H, 00H, 00H, 00H, 00H, 00H      ; 8DF0 _ .m......
        db 0ECH, 6DH, 00H, 00H, 00H, 00H, 00H, 00H      ; 8DF8 _ .m......
        db 0FFH, 6DH, 00H, 00H, 00H, 00H, 00H, 00H      ; 8E00 _ .m......
        db 09H, 6EH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8E08 _ .n......
        db 16H, 6EH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8E10 _ .n......
        db 24H, 6EH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8E18 _ $n......
        db 32H, 6EH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8E20 _ 2n......
        db 3EH, 6EH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8E28 _ >n......
        db 4FH, 6EH, 00H, 00H, 00H, 00H, 00H, 00H       ; 8E30 _ On......

__DATA.__const ENDS

__DATA.__data SEGMENT PARA 'DATA'                       ; section number 7

_m16Size label byte
        db 30H, 01H                                     ; 8E40 _ 0.

_mThunk16Attr label byte
        db 22H, 00H                                     ; 8E42 _ ".

_m16Gdt label byte
        db 10H, 01H                                     ; 8E44 _ ..

_m16GdtrBase label byte
        db 0B0H, 00H                                    ; 8E46 _ ..

_mTransition label byte
        db 0A8H, 00H, 00H, 00H, 00H, 00H, 00H, 00H      ; 8E48 _ ........

_gEfiCallerIdGuid label byte
        db 69H, 0FCH, 84H, 0EH, 0CCH, 29H, 6DH, 4CH     ; 8E50 _ i....)mL
        db 92H, 0ACH, 6DH, 47H, 69H, 21H, 85H, 0FH      ; 8E58 _ ..mGi!..
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8E60 _ ........

_gEfiConfigFileNameGuid label byte
        db 9BH, 0D5H, 0B8H, 98H, 0BAH, 0E8H, 0EEH, 48H  ; 8E68 _ .......H
        db 98H, 0DDH, 0C2H, 95H, 39H, 2FH, 1EH, 0DBH    ; 8E70 _ ....9/..

_gEfiUpdateDataFileGuid label byte
        db 0EEH, 0A2H, 3FH, 28H, 2CH, 53H, 4DH, 48H     ; 8E78 _ ..?(,SMH
        db 93H, 83H, 9FH, 93H, 0B3H, 6FH, 0BH, 7EH      ; 8E80 _ .....o.~

_gEfiGlobalVariableGuid label byte
        db 61H, 0DFH, 0E4H, 8BH, 0CAH, 93H, 0D2H, 11H   ; 8E88 _ a.......
        db 0AAH, 0DH, 00H, 0E0H, 98H, 03H, 2BH, 8CH     ; 8E90 _ ......+.

_gEfiDxeServicesTableGuid label byte
        db 0BAH, 34H, 0ADH, 05H, 02H, 6FH, 14H, 42H     ; 8E98 _ .4...o.B
        db 95H, 2EH, 4DH, 0A0H, 39H, 8EH, 2BH, 0B9H     ; 8EA0 _ ..M.9.+.

_gEfiFaultTolerantWriteProtocolGuid label byte
        db 82H, 9EH, 0BDH, 3EH, 78H, 2CH, 0E6H, 4DH     ; 8EA8 _ ...>x,.M
        db 97H, 86H, 8DH, 4BH, 0FCH, 0B7H, 0C8H, 81H    ; 8EB0 _ ...K....

_gEfiFirmwareVolume2ProtocolGuid label byte
        db 0B6H, 73H, 0EH, 22H, 0DBH, 6BH, 13H, 44H     ; 8EB8 _ .s.".k.D
        db 84H, 05H, 0B9H, 74H, 0B1H, 08H, 61H, 9AH     ; 8EC0 _ ...t..a.

_gEfiFirmwareVolumeBlockProtocolGuid label byte
        db 0A9H, 4FH, 64H, 8FH, 50H, 0E8H, 0B1H, 4DH    ; 8EC8 _ .Od.P..M
        db 9CH, 0E2H, 0BH, 44H, 69H, 8EH, 8DH, 0A4H     ; 8ED0 _ ...Di...

_gEfiLoadedImageProtocolGuid label byte
        db 0A1H, 31H, 1BH, 5BH, 62H, 95H, 0D2H, 11H     ; 8ED8 _ .1.[b...
        db 8EH, 3FH, 00H, 0A0H, 0C9H, 69H, 72H, 3BH     ; 8EE0 _ .?...ir;

_gEfiHiiFontProtocolGuid label byte
        db 75H, 47H, 0CAH, 0E9H, 57H, 86H, 0FCH, 47H    ; 8EE8 _ uG..W..G
        db 97H, 0E7H, 7EH, 0D6H, 5AH, 08H, 43H, 24H     ; 8EF0 _ ..~.Z.C$

_gEfiHiiStringProtocolGuid label byte
        db 74H, 69H, 0D9H, 0FH, 0AAH, 23H, 0DCH, 4CH    ; 8EF8 _ ti...#.L
        db 0B9H, 0CBH, 98H, 0D1H, 77H, 50H, 32H, 2AH    ; 8F00 _ ....wP2*

_gEfiHiiImageProtocolGuid label byte
        db 6AH, 40H, 0A6H, 31H, 0DFH, 6BH, 46H, 4EH     ; 8F08 _ j@.1.kFN
        db 0B2H, 0A2H, 0EBH, 0AAH, 89H, 0C4H, 09H, 20H  ; 8F10 _ ....... 

_gEfiHiiDatabaseProtocolGuid label byte
        db 72H, 0C1H, 9FH, 0EFH, 0B2H, 0A1H, 93H, 46H   ; 8F18 _ r......F
        db 0B3H, 27H, 6DH, 32H, 0FCH, 41H, 60H, 42H     ; 8F20 _ .'m2.A`B

_gEfiHiiConfigRoutingProtocolGuid label byte
        db 0D7H, 72H, 7EH, 58H, 50H, 0CCH, 79H, 4FH     ; 8F28 _ .r~XP.yO
        db 82H, 09H, 0CAH, 29H, 1FH, 0C1H, 0A1H, 0FH    ; 8F30 _ ...)....
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8F38 _ ........

_UpdateDriverDxeStrings label byte
        db 0F2H, 01H, 00H, 00H, 0EEH, 01H, 00H, 04H     ; 8F40 _ ........
        db 34H, 00H, 00H, 00H, 34H, 00H, 00H, 00H       ; 8F48 _ 4...4...
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8F50 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8F58 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8F60 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 8F68 _ ........
        db 01H, 00H, 65H, 6EH, 2DH, 55H, 53H, 00H       ; 8F70 _ ..en-US.
        db 14H, 45H, 00H, 6EH, 00H, 67H, 00H, 6CH       ; 8F78 _ .E.n.g.l
        db 00H, 69H, 00H, 73H, 00H, 68H, 00H, 00H       ; 8F80 _ .i.s.h..
        db 00H, 14H, 55H, 00H, 70H, 00H, 64H, 00H       ; 8F88 _ ..U.p.d.
        db 61H, 00H, 74H, 00H, 65H, 00H, 20H, 00H       ; 8F90 _ a.t.e. .
        db 64H, 00H, 72H, 00H, 69H, 00H, 76H, 00H       ; 8F98 _ d.r.i.v.
        db 65H, 00H, 72H, 00H, 20H, 00H, 6CH, 00H       ; 8FA0 _ e.r. .l.
        db 6FH, 00H, 61H, 00H, 64H, 00H, 65H, 00H       ; 8FA8 _ o.a.d.e.
        db 64H, 00H, 2CH, 00H, 20H, 00H, 70H, 00H       ; 8FB0 _ d.,. .p.
        db 72H, 00H, 6FH, 00H, 63H, 00H, 65H, 00H       ; 8FB8 _ r.o.c.e.
        db 73H, 00H, 73H, 00H, 69H, 00H, 6EH, 00H       ; 8FC0 _ s.s.i.n.
        db 67H, 00H, 20H, 00H, 75H, 00H, 70H, 00H       ; 8FC8 _ g. .u.p.
        db 64H, 00H, 61H, 00H, 74H, 00H, 65H, 00H       ; 8FD0 _ d.a.t.e.
        db 20H, 00H, 69H, 00H, 6DH, 00H, 61H, 00H       ; 8FD8 _  .i.m.a.
        db 67H, 00H, 65H, 00H, 0DH, 00H, 0AH, 00H       ; 8FE0 _ g.e.....
        db 0DH, 00H, 00H, 00H, 14H, 44H, 00H, 6FH       ; 8FE8 _ .....D.o
        db 00H, 6EH, 00H, 65H, 00H, 0DH, 00H, 0AH       ; 8FF0 _ .n.e....
        db 00H, 0DH, 00H, 00H, 00H, 14H, 55H, 00H       ; 8FF8 _ ......U.
        db 70H, 00H, 64H, 00H, 61H, 00H, 74H, 00H       ; 9000 _ p.d.a.t.
        db 69H, 00H, 6EH, 00H, 67H, 00H, 20H, 00H       ; 9008 _ i.n.g. .
        db 66H, 00H, 6CH, 00H, 61H, 00H, 73H, 00H       ; 9010 _ f.l.a.s.
        db 68H, 00H, 20H, 00H, 61H, 00H, 72H, 00H       ; 9018 _ h. .a.r.
        db 65H, 00H, 61H, 00H, 20H, 00H, 66H, 00H       ; 9020 _ e.a. .f.
        db 72H, 00H, 6FH, 00H, 6DH, 00H, 20H, 00H       ; 9028 _ r.o.m. .
        db 25H, 00H, 30H, 00H, 38H, 00H, 4CH, 00H       ; 9030 _ %.0.8.L.
        db 58H, 00H, 20H, 00H, 74H, 00H, 6FH, 00H       ; 9038 _ X. .t.o.
        db 20H, 00H, 25H, 00H, 30H, 00H, 38H, 00H       ; 9040 _  .%.0.8.
        db 4CH, 00H, 58H, 00H, 20H, 00H, 2EH, 00H       ; 9048 _ L.X. ...
        db 2EH, 00H, 2EH, 00H, 0DH, 00H, 0AH, 00H       ; 9050 _ ........
        db 0DH, 00H, 00H, 00H, 14H, 41H, 00H, 62H       ; 9058 _ .....A.b
        db 00H, 6FH, 00H, 72H, 00H, 74H, 00H, 65H       ; 9060 _ .o.r.t.e
        db 00H, 64H, 00H, 0DH, 00H, 0AH, 00H, 0DH       ; 9068 _ .d......
        db 00H, 00H, 00H, 14H, 55H, 00H, 70H, 00H       ; 9070 _ ....U.p.
        db 64H, 00H, 61H, 00H, 74H, 00H, 65H, 00H       ; 9078 _ d.a.t.e.
        db 20H, 00H, 66H, 00H, 69H, 00H, 72H, 00H       ; 9080 _  .f.i.r.
        db 6DH, 00H, 77H, 00H, 61H, 00H, 72H, 00H       ; 9088 _ m.w.a.r.
        db 65H, 00H, 20H, 00H, 76H, 00H, 6FH, 00H       ; 9090 _ e. .v.o.
        db 6CH, 00H, 75H, 00H, 6DH, 00H, 65H, 00H       ; 9098 _ l.u.m.e.
        db 20H, 00H, 66H, 00H, 69H, 00H, 6CH, 00H       ; 90A0 _  .f.i.l.
        db 65H, 00H, 20H, 00H, 25H, 00H, 67H, 00H       ; 90A8 _ e. .%.g.
        db 20H, 00H, 2EH, 00H, 2EH, 00H, 0DH, 00H       ; 90B0 _  .......
        db 0AH, 00H, 0DH, 00H, 00H, 00H, 14H, 55H       ; 90B8 _ .......U
        db 00H, 70H, 00H, 64H, 00H, 61H, 00H, 74H       ; 90C0 _ .p.d.a.t
        db 00H, 69H, 00H, 6EH, 00H, 67H, 00H, 20H       ; 90C8 _ .i.n.g. 
        db 00H, 77H, 00H, 68H, 00H, 6FH, 00H, 6CH       ; 90D0 _ .w.h.o.l
        db 00H, 65H, 00H, 20H, 00H, 66H, 00H, 69H       ; 90D8 _ .e. .f.i
        db 00H, 72H, 00H, 6DH, 00H, 77H, 00H, 61H       ; 90E0 _ .r.m.w.a
        db 00H, 72H, 00H, 65H, 00H, 20H, 00H, 76H       ; 90E8 _ .r.e. .v
        db 00H, 6FH, 00H, 6CH, 00H, 75H, 00H, 6DH       ; 90F0 _ .o.l.u.m
        db 00H, 65H, 00H, 20H, 00H, 66H, 00H, 72H       ; 90F8 _ .e. .f.r
        db 00H, 6FH, 00H, 6DH, 00H, 20H, 00H, 25H       ; 9100 _ .o.m. .%
        db 00H, 30H, 00H, 38H, 00H, 4CH, 00H, 58H       ; 9108 _ .0.8.L.X
        db 00H, 20H, 00H, 74H, 00H, 6FH, 00H, 20H       ; 9110 _ . .t.o. 
        db 00H, 25H, 00H, 30H, 00H, 38H, 00H, 4CH       ; 9118 _ .%.0.8.L
        db 00H, 58H, 00H, 20H, 00H, 2EH, 00H, 2EH       ; 9120 _ .X. ....
        db 00H, 0DH, 00H, 0AH, 00H, 0DH, 00H, 00H       ; 9128 _ ........
        db 00H, 00H                                     ; 9130 _ ..

__DATA.__data ENDS

__DATA.__common SEGMENT ALIGN(8) 'BSS'                  ; section number 8

_gImageHandle label qword
        dq      ?                                       ; 9138

_gST    label qword
        dq      ?                                       ; 9140

_gBS    label qword
        dq      ?                                       ; 9148

_gRT    label qword
        dq      ?                                       ; 9150

_gHiiFont label byte
        db      8 dup (?)                               ; 9158

_gHiiString label qword
        dq      ?                                       ; 9160

_gHiiImage label byte
        db      8 dup (?)                               ; 9168

_gHiiDatabase label qword
        dq      ?                                       ; 9170

_gHiiConfigRouting label byte
        db      8 dup (?)                               ; 9178

_gDS    label qword
        dq      ?                                       ; 9180

_gHiiHandle label qword
        dq      ?                                       ; 9188

__DATA.__common ENDS

END